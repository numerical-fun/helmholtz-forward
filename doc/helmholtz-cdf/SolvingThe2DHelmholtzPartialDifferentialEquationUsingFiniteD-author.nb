(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1878391,      36593]
NotebookOptionsPosition[   1874098,      36463]
NotebookOutlinePosition[   1875771,      36515]
CellTagsIndexPosition[   1875419,      36503]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Solving the 2D Helmholtz Partial Differential Equation Using Finite \
Differences\
\>", "DemoTitle",
 CellChangeTimes->{{3.5392498587315917`*^9, 3.5392498669121304`*^9}, {
  3.540152665751742*^9, 3.5401526708534184`*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"evaluateForceCommon", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Unevaluated", "[", 
       RowBox[{
        RowBox[{"#3", 
         RowBox[{"#1", "^", "#6"}]}], "+", " ", 
        RowBox[{"#4", " ", 
         RowBox[{"#2", "^", "#7"}]}]}], "]"}], "/.", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"0.0", "^", "0.0"}], "]"}], "\[RuleDelayed]", "0.0"}]}], 
     "&"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"padIt1", "[", 
     RowBox[{
      RowBox[{"v_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{
           RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], "&"}], ")"}]}], ",", 
      "f_List"}], "]"}], ":=", 
    RowBox[{"AccountingForm", "[", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"N", "@", "v"}], "]"}], " ", ",", "f", ",", 
      RowBox[{"NumberSigns", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<-\>\"", ",", "\"\<+\>\""}], "}"}]}], ",", 
      RowBox[{"NumberPadding", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
      RowBox[{"SignPadding", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"padIt2", "[", 
     RowBox[{
      RowBox[{"v_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{
           RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], "&"}], ")"}]}], ",", 
      "f_List"}], "]"}], ":=", 
    RowBox[{"AccountingForm", "[", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"N", "@", "v"}], "]"}], " ", ",", "f", ",", 
      RowBox[{"NumberSigns", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"NumberPadding", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
      RowBox[{"SignPadding", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"returns", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "rows"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "columns"}]}], "}"}], " ", "in", " ", 
    "a", " ", "list"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSolutionDomainDimensions", "[", 
     RowBox[{"hx_", ",", "hy_", ",", "Lx_", ",", "Ly_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Ly", "/", "hy"}], "+", "1"}], ",", 
      RowBox[{
       RowBox[{"Lx", "/", "hx"}], "+", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeGridCommon", "[", 
     RowBox[{"hx_", ",", "hy_", ",", "Lx_", ",", "Ly_", ",", "centerGrid_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "nx", ",", "ny", ",", "grid"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ny", " ", "is", " ", "number", " ", "of", " ", "rows"}], ",",
         " ", 
        RowBox[{"nx", " ", "is", " ", "number", " ", "of", " ", "columns"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ny", ",", "nx"}], "}"}], "=", 
        RowBox[{"getSolutionDomainDimensions", "[", 
         RowBox[{"hx", ",", "hy", ",", "Lx", ",", "Ly"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$icfrom", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{"ny", "/", "2"}], "]"}]}], ",", 
           RowBox[{"$icto", "=", 
            RowBox[{"-", 
             RowBox[{"Floor", "[", 
              RowBox[{"ny", "/", "2"}], "]"}]}]}], ",", 
           RowBox[{"$jcfrom", "=", 
            RowBox[{"-", 
             RowBox[{"Floor", "[", 
              RowBox[{"nx", "/", "2"}], "]"}]}]}], ",", 
           RowBox[{"$jcto", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{"nx", "/", "2"}], "]"}]}], ",", 
           RowBox[{"$ifrom", "=", 
            RowBox[{"ny", "-", "1"}]}], ",", 
           RowBox[{"$jto", "=", 
            RowBox[{"nx", "-", "1"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"grid", "=", 
          RowBox[{"If", "[", 
           RowBox[{"centerGrid", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"j", "*", "hx"}], ",", 
                RowBox[{"i", "*", "hy"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "$icfrom", ",", "$icto", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "$jcfrom", ",", "$jcto"}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"j", "*", "hx"}], ",", 
                RowBox[{"i", "*", "hy"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "$ifrom", ",", "0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "0", ",", "$jto"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"N", "@", "grid"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"forceTermUsedFormatCommon", "[", 
     RowBox[{
     "forceTermSelection_", ",", "a_", ",", "b_", ",", "c_", ",", "stdy_", 
      ",", "stdx_", ",", "x0_", ",", "y0_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "forceTermUsed", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", 
         RowBox[{"forceTermUsed", "=", "a"}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"HoldForm", "[", 
           RowBox[{"a", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"-", " ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    RowBox[{"(", "stdx", ")"}], "^", "2"}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", 
                   RowBox[{
                    RowBox[{"(", "stdy", ")"}], "^", "2"}]}], ")"}]}]}], 
               ")"}]}], " ", "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"HoldForm", "[", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", " ", "Pi", " ", "x"}], "]"}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"c", " ", "Pi", " ", "y"}], "]"}]}], ")"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "5"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"HoldForm", "[", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", " ", "Pi", " ", "x"}], "]"}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"c", " ", "Pi", " ", "y"}], "]"}]}], ")"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "forceTermUsed"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"forceTermExpressionCommon", "[", 
     RowBox[{
     "forceTermSelection_", ",", "a_", ",", "b_", ",", "c_", ",", "stdy_", 
      ",", "stdx_", ",", "x0_", ",", "y0_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "forceTermUsed", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", 
         RowBox[{"forceTermUsed", "=", "a"}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"a", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", " ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   RowBox[{"(", "stdx", ")"}], "^", "2"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", 
                  RowBox[{
                   RowBox[{"(", "stdy", ")"}], "^", "2"}]}], ")"}]}]}], 
              ")"}]}], " ", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"b", " ", "Pi", " ", "x"}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"c", " ", "Pi", " ", "y"}], "]"}]}], ")"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "5"}], ",", 
         RowBox[{"forceTermUsed", "=", 
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"b", " ", "Pi", " ", "x"}], "]"}], "*", 
             RowBox[{"Sin", "[", 
              RowBox[{"c", " ", "Pi", " ", "y"}], "]"}]}], ")"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "forceTermUsed"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"setCornerNodeCommon", "[", 
     RowBox[{"$u_", ",", "i_", ",", "j_", ",", "nx_", ",", "ny_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", "=", "$u"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], "&&", 
          RowBox[{"j", "\[Equal]", "1"}]}], ",", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "1"}], " ", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], "&&", 
          RowBox[{"j", "\[Equal]", "nx"}]}], ",", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "nx"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", 
               RowBox[{"nx", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "nx"}], " ", "\[RightDoubleBracket]"}]}], 
            "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "ny"}], "&&", 
          RowBox[{"j", "\[Equal]", "1"}]}], ",", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"ny", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"ny", "-", "1"}], ",", "1"}], " ", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"ny", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "ny"}], "&&", 
          RowBox[{"j", "\[Equal]", "nx"}]}], ",", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"ny", ",", "nx"}], "\[RightDoubleBracket]"}], "=", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{"ny", ",", 
               RowBox[{"nx", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"u", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"ny", "-", "1"}], ",", "nx"}], " ", 
              "\[RightDoubleBracket]"}]}], "}"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "u"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeScrolledPane", "[", 
     RowBox[{
      RowBox[{"mat_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumberQ"}], "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"nRow_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
      RowBox[{"nCol_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"Grid", "[", 
         RowBox[{"mat", ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{".4", ",", ".4"}], "}"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        RowBox[{"Text", "@", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"N", "@", "t"}], "]"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "5"}], "}"}], ",", 
             RowBox[{"NumberSigns", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<-\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
             RowBox[{"NumberPadding", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
             RowBox[{"SignPadding", "->", "True"}]}], "]"}], ",", 
           RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pane", "[", 
        RowBox[{"t", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"nCol", ",", "nRow"}], "}"}]}], ",", 
         RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeScrolledPane", "[", 
     RowBox[{
      RowBox[{"lst_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"nRow_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
      RowBox[{"nCol_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "lst", "}"}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{".4", ",", ".4"}], "}"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        RowBox[{"Text", "@", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"AccountingForm", "[", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"N", "@", "t"}], "]"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "5"}], "}"}], ",", 
             RowBox[{"NumberSigns", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<-\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
             RowBox[{"NumberPadding", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
             RowBox[{"SignPadding", "->", "True"}]}], "]"}], ",", 
           RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pane", "[", 
        RowBox[{"t", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"nCol", ",", "nRow"}], "}"}]}], ",", 
         RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"process", "[", 
     RowBox[{
     "$u_", ",", "$forceGrid_", ",", "$grid_", ",", "$AA_", ",", 
      "$rightHandVector_", ",", "$finalDisplayImage_", ",", "event_", ",", 
      "hx_", ",", "hy_", ",", "Lx_", ",", "Ly_", ",", "centerGrid_", ",", 
      "addFaceGrids_", ",", "plotPerformanceGoal_", ",", "kValue_", ",", "a_",
       ",", "b_", ",", "c_", ",", "x0_", ",", "y0_", ",", "stdx_", ",", 
      "stdy_", ",", "forceTermSelection_", ",", "plotToShow_", ",", 
      "northBCtype_", ",", "northbc_", ",", "northBCconstantValue_", ",", 
      "westBCtype_", ",", "westbc_", ",", "westBCconstantValue_", ",", 
      "eastBCtype_", ",", "eastbc_", ",", "eastBCconstantValue_", ",", 
      "southBCtype_", ",", "southbc_", ",", "southBCconstantValue_", ",", 
      "zAxisScale_", ",", "angle_", ",", "gstatusMessage_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "=", "$u"}], ",", 
        RowBox[{"AA", "=", "$AA"}], ",", 
        RowBox[{"forceGrid", "=", "$forceGrid"}], ",", 
        RowBox[{"grid", "=", "$grid"}], ",", 
        RowBox[{"rightHandVector", "=", "$rightHandVector"}], ",", 
        RowBox[{"finalDisplayImage", "=", "$finalDisplayImage"}]}], "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{"event", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<reset\>\"", ",", "\"\<run_button\>\""}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "grid", ",", "forceGrid", ",", "u", ",", "AA", ",", 
             "rightHandVector"}], "}"}], "=", 
           RowBox[{"initializeSystem", "[", 
            RowBox[{
            "hx", ",", "hy", ",", "Lx", ",", "Ly", ",", "centerGrid", ",", 
             "forceTermSelection", ",", "a", ",", "b", ",", "c", ",", "x0", 
             ",", "stdx", ",", "y0", ",", "stdy", ",", "northBCtype", ",", 
             "northbc", ",", "northBCconstantValue", ",", "westBCtype", ",", 
             "westbc", ",", "westBCconstantValue", ",", "\[IndentingNewLine]",
              "eastBCtype", ",", "eastbc", ",", "eastBCconstantValue", ",", 
             "southBCtype", ",", "southbc", ",", "southBCconstantValue", ",", 
             "kValue", ",", "angle"}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"event", "\[Equal]", "\"\<run_button\>\""}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringMatchQ", "[", 
             RowBox[{"event", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<reset\>\"", ",", "\"\<reset\>\"", ",", 
                "\"\<k_changed\>\""}], "}"}]}], "]"}], "&&", 
            RowBox[{"(", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{"plotToShow", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<system matrix information\>\"", ",", 
                 "\"\<solution data\>\""}], "}"}]}], "]"}], ")"}]}], ")"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"u", "=", 
           RowBox[{"solve", "[", 
            RowBox[{
            "u", ",", "AA", ",", "rightHandVector", ",", "northBCtype", ",", 
             "westBCtype", ",", "eastBCtype", ",", "southBCtype"}], "]"}]}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"finalDisplayImage", "=", 
        RowBox[{"makeFinalPlot", "[", 
         RowBox[{
         "u", ",", "AA", ",", "Lx", ",", "Ly", ",", "grid", ",", "plotToShow",
           ",", "plotPerformanceGoal", ",", "addFaceGrids", ",", 
          "zAxisScale"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gstatusMessage", "=", "\"\<ready..\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "finalDisplayImage", ",", "u", ",", "forceGrid", ",", "grid", ",", 
         "AA", ",", "rightHandVector"}], "}"}]}]}], " ", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "main", " ", "function", " ", "where", " ", "the", " ", 
    "matrix", " ", "A", " ", "and", " ", "the", " ", "RHS", " ", "vector", 
    " ", "b", " ", "are", " ", "generated"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeSystemMatrixAndRightHandSide", "[", 
     RowBox[{
     "u_", ",", "h_", ",", "kValue_", ",", "northBCtype_", ",", "westBCtype_",
       ",", "eastBCtype_", ",", "southBCtype_", ",", "forceGrid_", ",", 
      "angle_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"AA", ",", "k1", ",", "k2", ",", "i", ",", "j", ",", 
        RowBox[{"n", "=", "0"}], ",", "eqs", ",", "vars", ",", "uu", ",", "U",
         ",", "An", ",", "b", ",", "keepList", ",", "nRow", ",", "nCol", ",", 
        "sin1", ",", "sin2", ",", "omega", ",", "sum", ",", "prod"}], "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sum", "=", 
        RowBox[{"2.0", "*", 
         RowBox[{"h", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"prod", "=", 
        RowBox[{"1.0", "*", 
         RowBox[{"h", "^", "4"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"omega", "=", 
        RowBox[{
         RowBox[{"4.0", " ", 
          RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "kValue", "]"}], " ", "h"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sqrt", "[", "kValue", "]"}], " ", "h"}], ")"}], "^", 
          "2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k1", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", "kValue", "]"}], "  ", 
         RowBox[{"Cos", "[", "angle", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k2", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", "kValue", "]"}], "  ", 
         RowBox[{"Cos", "[", "angle", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sin1", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"2.", " ", "I", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"k1", " ", "h"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sin2", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"2.", " ", "I", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"k2", " ", "h"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nRow", ",", "nCol"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"uu", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"nRow", ",", "nCol"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$nRow", "=", "nRow"}], ",", 
           RowBox[{"$nCol", "=", "nCol"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eqs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"$nRow", "*", "$nCol"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"vars", "=", "eqs"}]}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", "nRow"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "nCol"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"do", " ", "corner", " ", "points", " ", "first"}], " ",
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], "&&", 
                  RowBox[{"j", "\[Equal]", "1"}]}], "||", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "nRow"}], "&&", 
                  RowBox[{"j", "\[Equal]", "1"}]}], "||", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], "&&", 
                  RowBox[{"j", "\[Equal]", "nCol"}]}], "||", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "nRow"}], "&&", 
                  RowBox[{"j", "\[Equal]", "nCol"}]}]}], ")"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"eqs", ",", "vars"}], "}"}], "=", 
                 RowBox[{"processCornersCommon", "[", 
                  RowBox[{
                  "u", ",", "eqs", ",", "n", ",", "U", ",", "i", ",", "j", 
                   ",", "vars", ",", "northBCtype", ",", "westBCtype", ",", 
                   "southBCtype", ",", "eastBCtype", ",", "nRow", ",", 
                   "nCol"}], "]"}]}], "\[IndentingNewLine]", ")"}], ",", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"completed", " ", "corner", " ", "nodes"}], ",", " ", 
                 RowBox[{
                 "now", " ", "check", " ", "if", " ", "node", " ", "on", " ", 
                  "edge"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "nRow"}], "||", 
                    RowBox[{"j", "\[Equal]", "1"}], "||", 
                    RowBox[{"j", "\[Equal]", "nCol"}]}], ")"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "   ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"sin1", "*", " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "+", "2"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", "0"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"i", "\[Equal]", "nRow"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"sin1", "*", " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "-", "2"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", "0"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}], ",", 
                    RowBox[{"j", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "    ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"sin2", "*", " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
                    "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "+", "2"}]}], "\[RightDoubleBracket]"}]}], 
                    "\[Equal]", "0"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}]}], "]"}], ",", 
                    RowBox[{"j", "\[Equal]", "nCol"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"sin2", "*", " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}]}], 
                    "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "2"}]}], "\[RightDoubleBracket]"}]}], 
                    "\[Equal]", "0"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}]}], "\[IndentingNewLine]", "]"}], 
                   "\[IndentingNewLine]", ")"}], ",", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"was", " ", "not", " ", "edge"}], ",", " ", 
                    RowBox[{"so", " ", "must", " ", "be", " ", "internal"}]}],
                    "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "eqs", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"omega", "*", " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"kValue", "*", "h"}], ")"}], "^", "2"}], " ", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"h", "^", "2"}], "*", 
                    RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], 
                    "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", 
                   ")"}]}], "\[IndentingNewLine]", "]"}], 
                "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"vars", "=", 
        RowBox[{"Flatten", "@", "U"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AA", "=", 
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{"eqs", ",", "vars"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"keepList", "=", 
        RowBox[{"obtainListOfRowsToKeep", "[", 
         RowBox[{
         "nRow", ",", "nCol", ",", "northBCtype", ",", "southBCtype", ",", 
          "westBCtype", ",", "eastBCtype"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"An", "=", 
        RowBox[{
         RowBox[{"AA", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", 
         RowBox[{"keepList", ",", "keepList"}], "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{
          "AA", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "keepList", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"An", ",", "b"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solve", "[", 
     RowBox[{
     "$u_", ",", "AA_", ",", "rightHandVector_", ",", "northBCtype_", ",", 
      "westBCtype_", ",", "eastBCtype_", ",", "southBCtype_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "=", "$u"}], ",", "nRow", ",", "nCol", ",", "x", ",", 
        "loc", ",", "mask"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nRow", ",", "nCol"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"AA", ",", "rightHandVector"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mask", "=", 
        RowBox[{"setUnknownsMask", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nRow", ",", "nCol"}], "}"}], ",", "northBCtype", ",", 
          "westBCtype", ",", "eastBCtype", ",", "southBCtype"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"loc", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"mask", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"u", "=", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"u", ",", 
              RowBox[{"#1", "\[Rule]", "#2"}]}], " ", "]"}]}], ")"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"loc", ",", "x"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Re", "@", "u"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"setUnknownsMask", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nRow_", ",", "nCol_"}], "}"}], ",", "northBCtype_", ",", 
      "westBCtype_", ",", "eastBCtype_", ",", "southBCtype_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "mask", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "there", " ", "are", " ", "7", " ", "cases", " ", "to", " ", "check",
           " ", 
          RowBox[{"for", ".", " ", "Let"}], " ", "T"}], "=", 
         RowBox[{"top", " ", "edge"}]}], ",", " ", 
        RowBox[{"R", "=", 
         RowBox[{"right", " ", "edge"}]}], ",", " ", 
        RowBox[{"L", "=", 
         RowBox[{
          RowBox[{"left", " ", "edge", " ", "B"}], "=", 
          RowBox[{"bottom", " ", "edge"}]}]}], ",", " ", 
        RowBox[{
        "then", " ", "we", " ", "need", " ", "to", " ", "check", " ", "for", 
         " ", "one", " ", "of", " ", "these", " ", 
         RowBox[{"cases", ":", " ", 
          RowBox[{
          "no", " ", "Nuemman", " ", "on", " ", "any", " ", "edge"}]}]}], ",",
         " ", 
        RowBox[{"{", "LTRB", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"TL", ",", "TR", ",", "TB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"TLR", ",", "TBR", ",", "TBL"}], "}"}], ",", 
        RowBox[{"{", "LB", "}"}], ",", 
        RowBox[{
         RowBox[{"{", "LR", "}"}], " ", 
         RowBox[{"{", "LBR", "}"}], " ", 
         RowBox[{
          RowBox[{"{", "BR", "}"}], ".", "  ", "mask"}], " ", "is", " ", 
         "used", " ", "to", " ", "tell", " ", "location", " ", "of", " ", 
         "unknowns", " ", "in", " ", "the", " ", "solution", " ", 
         RowBox[{"grid", ".", " ", "This"}], " ", "is", " ", "needed", " ", 
         "since", " ", "now", " ", "we", " ", "have", " ", "Sommerfeld", " ", 
         "BC", " ", "and", " ", "so", " ", "nodes", " ", "on", " ", "the", 
         " ", "edge", " ", "can", " ", "be", " ", "part", " ", "of", " ", 
         "the", " ", "unknowns", " ", "and", " ", "we", " ", "need", " ", 
         "later", " ", "to", " ", "find", " ", "the", " ", "location", " ", 
         "of", " ", "the", " ", "unknowns"}]}], "*)"}], "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mask", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "nRow", "}"}], ",", 
          RowBox[{"{", "nCol", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "now", " ", "do", " ", "the", " ", "checks", " ", "for", " ", 
           RowBox[{"{", 
            RowBox[{"TL", ",", "TR", ",", "TB"}], "}"}], " ", "case"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", "All"}], "\[RightDoubleBracket]"}], 
          "=", "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], ",", "All"}], "\[RightDoubleBracket]"}], 
          "=", "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], "&&", 
          RowBox[{"southBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
         RowBox[{
          RowBox[{"mask", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", "1"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "mask"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processCornersCommon", "[", 
     RowBox[{
     "u_", ",", "$eqs_", ",", "n_", ",", "U_", ",", "i_", ",", "j_", ",", 
      "$vars_", ",", "northBCtype_", ",", "westBCtype_", ",", "southBCtype_", 
      ",", "eastBCtype_", ",", "nRow_", ",", "nCol_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vars", "=", "$vars"}], ",", 
        RowBox[{"eqs", "=", "$eqs"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "vars", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "=", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], "&&", 
          RowBox[{"j", "\[Equal]", "1"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"top", " ", "left"}], "-", 
           RowBox[{"top", " ", "corner"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "||", 
             RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
               RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{"Mean", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                  "}"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{"u", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "True",
             ",", 
            RowBox[{"(*", 
             RowBox[{
             "both", " ", "edgs", " ", "are", " ", "not", " ", "Dirichlet"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
             "=", 
             RowBox[{
              RowBox[{
               RowBox[{"U", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], "]"}]}], "\[Equal]", "0"}]}]}], "\[IndentingNewLine]",
            "]"}], "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "nRow"}], "&&", 
          RowBox[{"j", "\[Equal]", "1"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"bottom", " ", "left", " ", "corner"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "||", 
             RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
               RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"U", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"u", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "\[Equal]", 
                "0"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{"u", "\[LeftDoubleBracket]", 
                 RowBox[{"nRow", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "True",
             ",", 
            RowBox[{"(*", 
             RowBox[{
             "both", " ", "edgs", " ", "are", " ", "not", " ", "Dirichlet"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
             "=", 
             RowBox[{
              RowBox[{
               RowBox[{"U", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "1"}], 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "\[Equal]", 
              "0.0"}]}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ")"}], ",", " ", 
         RowBox[{"(*", 
          RowBox[{"top", " ", "right", " ", "corner"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], "&&", 
          RowBox[{"j", "\[Equal]", "nCol"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "||", 
             RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
               RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"U", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "j"}], "\[RightDoubleBracket]"}]}], 
                   "}"}], "]"}]}], "\[Equal]", "0.0"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{"u", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "nCol"}], "\[RightDoubleBracket]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "True",
             ",", 
            RowBox[{"(*", 
             RowBox[{
             "both", " ", "edgs", " ", "are", " ", "not", " ", "Dirichlet"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
              "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
              "=", 
              RowBox[{
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{"Mean", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "j"}], "\[RightDoubleBracket]"}]}], 
                  "}"}], "]"}]}], "\[Equal]", "0.0"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "nRow"}], "&&", 
          RowBox[{"j", "\[Equal]", "nCol"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "both", " ", "edgs", " ", "are", " ", "not", " ", "Dirichlet"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "||", 
             RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], "&&", 
               RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"U", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"U", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "\[Equal]", 
                "0.0"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
               "=", 
               RowBox[{
                RowBox[{"U", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{"u", "\[LeftDoubleBracket]", 
                 RowBox[{"nRow", ",", "nCol"}], 
                 "\[RightDoubleBracket]"}]}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", "True", ",", 
            RowBox[{"(*", 
             RowBox[{"both", " ", "edgs", " ", "are", " ", "nuemman"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "eqs", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
             "=", 
             RowBox[{
              RowBox[{
               RowBox[{"U", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"U", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j"}], 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "\[Equal]", 
              "0.0"}]}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"eqs", ",", "vars"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initializeSystem", "[", 
     RowBox[{
     "hx_", ",", "hy_", ",", "Lx_", ",", "Ly_", ",", "centerGrid_", ",", 
      "forceTermSelection_", ",", "a_", ",", "b_", ",", "c_", ",", "x0_", ",",
       "stdx_", ",", "y0_", ",", "stdy_", ",", "northBCtype_", ",", 
      "northbc_", ",", "northBCconstantValue_", ",", "westBCtype_", ",", 
      "westbc_", ",", "westBCconstantValue_", ",", "eastBCtype_", ",", 
      "eastbc_", ",", "eastBCconstantValue_", ",", "southBCtype_", ",", 
      "southbc_", ",", "southBCconstantValue_", ",", "kValue_", ",", 
      "angle_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nCol", ",", "nRow", ",", "grid", ",", "forceGrid", ",", "u", ",", 
        "AA", ",", "rightHandVector"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"grid", " ", "contains", " ", "the", " ", 
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], " ", "physical", " ", "coordinates", 
        " ", "of", " ", "each", " ", "grid", " ", "point"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nRow", ",", "nCol"}], "}"}], "=", 
        RowBox[{"getSolutionDomainDimensions", "[", 
         RowBox[{"hx", ",", "hy", ",", "Lx", ",", "Ly"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$nRow", "=", "nRow"}], ",", 
           RowBox[{"$nCol", "=", "nCol"}]}], "}"}], ",", 
         RowBox[{"u", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0.", ",", 
            RowBox[{"{", "$nRow", "}"}], ",", 
            RowBox[{"{", "$nCol", "}"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"grid", "=", 
        RowBox[{"makeGridCommon", "[", 
         RowBox[{"hx", ",", "hy", ",", "Lx", ",", "Ly", ",", "centerGrid"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "evaluate", " ", "the", " ", "source", " ", "function", " ", "at", 
          " ", "each", " ", "physical", " ", "coordiate"}], ",", " ", 
         RowBox[{"using", " ", "the", " ", "selected", " ", "term"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"forceGrid", "=", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"$nRow", "=", "nRow"}], ",", 
              RowBox[{"$nCol", "=", "nCol"}]}], "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", "$nRow", "}"}], ",", 
              RowBox[{"{", "$nCol", "}"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"forceTermSelection", "\[Equal]", "2"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"evaluateForceCommon", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ",", "a", ",", "b", ",", "c"}], "]"}], "&"}], " ", ",", "grid",
             ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", " ", 
               RowBox[{"Exp", "[", "  ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "x0"}], ")"}], "^", "2"}],
                   "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"stdx", "^", "2"}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", "y0"}], ")"}], "^", "2"}],
                   "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"stdy", "^", "2"}]}], ")"}]}]}], " ", "]"}]}], 
              ")"}], "&"}], " ", ",", "grid", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"b", " ", "\[Pi]", " ", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", "+", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"c", " ", "\[Pi]", " ", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], ")"}], 
             "&"}], " ", ",", "grid", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"forceTermSelection", "\[Equal]", "5"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"b", " ", "\[Pi]", " ", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", "*", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"c", " ", "\[Pi]", " ", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], ")"}], 
             "&"}], " ", ",", "grid", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"forceGrid", "=", 
        RowBox[{"Re", "[", "forceGrid", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"setBoundaryConditions", "[", 
         RowBox[{
         "u", ",", "grid", ",", "northBCtype", ",", "northbc", ",", 
          "northBCconstantValue", ",", "westBCtype", ",", "westbc", ",", 
          "westBCconstantValue", ",", "eastBCtype", ",", "eastbc", ",", 
          "eastBCconstantValue", ",", "southBCtype", ",", "southbc", ",", 
          "southBCconstantValue"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"AA", ",", "rightHandVector"}], "}"}], "=", 
        RowBox[{"makeSystemMatrixAndRightHandSide", "[", 
         RowBox[{
         "u", ",", "hx", ",", "kValue", ",", "northBCtype", ",", "westBCtype",
           ",", "eastBCtype", ",", "southBCtype", ",", "forceGrid", ",", 
          "angle"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "grid", ",", "forceGrid", ",", "u", ",", "AA", ",", 
         "rightHandVector"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"setBoundaryConditions", "[", 
     RowBox[{
     "$u_", ",", "grid_", ",", "northBCtype_", ",", "northbc_", ",", 
      "northBCconstantValue_", ",", "westBCtype_", ",", "westbc_", ",", 
      "westBCconstantValue_", ",", "eastBCtype_", ",", "eastbc_", ",", 
      "eastBCconstantValue_", ",", "southBCtype_", ",", "southbc_", ",", 
      "southBCconstantValue_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "=", "$u"}], ",", "nRow", ",", "nCol", ",", "i", ",", 
        "j"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nRow", ",", "nCol"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", 
            RowBox[{"2", ";;", 
             RowBox[{"nCol", "-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"northBCconstantValue", "*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"northbc", "[", 
              RowBox[{"grid", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "j", ",", "1"}], "\[RightDoubleBracket]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "2", ",", 
               RowBox[{"nCol", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"nRow", "-", "1"}]}], ",", "1"}], 
           "\[RightDoubleBracket]"}], "=", 
          RowBox[{"westBCconstantValue", "*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"westbc", "[", 
              RowBox[{"grid", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", 
               RowBox[{"nRow", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"nRow", "-", "1"}]}], ",", "nCol"}], 
           "\[RightDoubleBracket]"}], "=", 
          RowBox[{"eastBCconstantValue", "*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"eastbc", "[", 
              RowBox[{"grid", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "nCol", ",", "2"}], 
               "\[RightDoubleBracket]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", 
               RowBox[{"nRow", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "\[LeftDoubleBracket]", 
           RowBox[{"nRow", ",", 
            RowBox[{"2", ";;", 
             RowBox[{"nCol", "-", "1"}]}]}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"southBCconstantValue", "*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"southbc", "[", 
              RowBox[{"grid", "\[LeftDoubleBracket]", 
               RowBox[{"nRow", ",", "j", ",", "1"}], 
               "\[RightDoubleBracket]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "2", ",", 
               RowBox[{"nCol", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"corner", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"setCornerNodeCommon", "[", 
         RowBox[{"u", ",", "1", ",", "1", ",", "nCol", ",", "nRow"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"setCornerNodeCommon", "[", 
         RowBox[{"u", ",", "1", ",", "nCol", ",", "nCol", ",", "nRow"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"setCornerNodeCommon", "[", 
         RowBox[{"u", ",", "nRow", ",", "1", ",", "nCol", ",", "nRow"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"setCornerNodeCommon", "[", 
         RowBox[{"u", ",", "nRow", ",", "nCol", ",", "nCol", ",", "nRow"}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeFinalPlot", "[", 
     RowBox[{
     "u_", ",", "AA_", ",", "Lx_", ",", "Ly_", ",", "grid_", ",", 
      "plotToShow_", ",", "plotPerformanceGoal_", ",", "addFaceGrids_", ",", 
      "zAxisScale_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "tmp", ",", "finalDisplayImage", ",", "nRow", ",", "nCol", ",", "plot",
         ",", "n", ",", "dim", ",", "cond"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nRow", ",", "nCol"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tmp", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"grid", ",", "u"}], "}"}], ",", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tmp", "=", 
        RowBox[{"Chop", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"tmp", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"plotToShow", "\[Equal]", "\"\<solution and density\>\""}], 
          "||", 
          RowBox[{
          "plotToShow", "\[Equal]", "\"\<solution and contour\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"plot", "=", 
          RowBox[{"Item", "@", 
           RowBox[{"ListPlot3D", "[", 
            RowBox[{"tmp", ",", "\[IndentingNewLine]", 
             RowBox[{"PerformanceGoal", "\[Rule]", "plotPerformanceGoal"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"ImagePadding", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"20", ",", "15"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"15", ",", "1"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"zAxisScale", "\[Equal]", "True"}], ",", 
               RowBox[{"BoxRatios", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Lx", ",", "Ly", ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{"{", 
                    RowBox[{"Lx", ",", "Ly"}], "}"}], "]"}]}], "}"}]}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Text", "@", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<x\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                ",", 
                RowBox[{"Text", "@", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<y\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"TicksStyle", "\[Rule]", "9"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"addFaceGrids", ",", 
               RowBox[{"FaceGrids", "\[Rule]", "All"}], ",", 
               RowBox[{"FaceGrids", "\[Rule]", "None"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"ContentSizeW", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"ContentSizeH", "-", "10"}], ")"}], "/", "2"}]}], 
               " ", "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plotToShow", "==", "\"\<solution and density\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"finalDisplayImage", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "plot", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Item", "@", 
                RowBox[{"ListDensityPlot", "[", 
                 RowBox[{"tmp", ",", "\[IndentingNewLine]", 
                  RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"ContentSizeW", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ContentSizeH", "-", "10"}], ")"}], "/", "2"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"ImagePadding", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"20", ",", "15"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "1"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{
                  "PerformanceGoal", "\[Rule]", "plotPerformanceGoal"}]}], 
                 "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
               "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"plotToShow", "==", "\"\<solution and contour\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"finalDisplayImage", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Item", "@", "plot"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"Item", "@", 
                RowBox[{"ListContourPlot", "[", 
                 RowBox[{"tmp", ",", 
                  RowBox[{"Contours", "\[Rule]", "10"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"ContentSizeW", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ContentSizeH", "-", "10"}], ")"}], "/", "2"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"ImagePadding", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"20", ",", "15"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "1"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{
                  "PerformanceGoal", "\[Rule]", "plotPerformanceGoal"}]}], 
                 "]"}]}], "\[IndentingNewLine]", "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"plotToShow", "==", "\"\<solution data\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"finalDisplayImage", "=", 
          RowBox[{"makeScrolledPane", "[", 
           RowBox[{
            RowBox[{"Normal", "@", "u"}], ",", 
            RowBox[{"ContentSizeH", "-", "40"}], ",", "ContentSizeW"}], 
           "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"plotToShow", "==", "\"\<system matrix information\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "if", " ", "size", " ", "of", " ", "A", " ", "is", " ", "too", 
             " ", "large"}], ",", " ", 
            RowBox[{
            "display", " ", "part", " ", "of", " ", "it", " ", "only"}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"cond", "=", 
            RowBox[{
             RowBox[{"LUDecomposition", "[", "AA", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"dim", "=", 
            RowBox[{"Dimensions", "[", "AA", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"n", "=", 
            RowBox[{"Min", "[", 
             RowBox[{"30", ",", 
              RowBox[{"First", "@", "dim"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"finalDisplayImage", "=", 
            RowBox[{"Grid", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<condition number = \>\"", ",", "cond"}], 
                    "}"}], "]"}]}], ",", "12"}], "]"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<matrix size = \>\"", ",", "dim"}], "}"}], 
                    "]"}]}], ",", "12"}], "]"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Text", "[", "\"\<eigenvalues\>\"", "]"}], ",", 
                  "12"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"makeScrolledPane", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "@", 
                   RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Eigenvalues", "[", 
                    RowBox[{
                    RowBox[{"Normal", "@", "AA"}], ",", "n"}], "]"}], ",", 
                    "1"}], "]"}]}], ",", "45", ",", 
                  RowBox[{"ContentSizeW", "-", "20"}]}], "]"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Text", "[", "\"\<A matrix\>\"", "]"}], ",", "12"}],
                  "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"makeScrolledPane", "[", 
                 RowBox[{
                  RowBox[{"Normal", "@", 
                   RowBox[{"AA", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"1", ";;", "n"}], ",", 
                    RowBox[{"1", ";;", "n"}]}], "\[RightDoubleBracket]"}]}], 
                  ",", 
                  RowBox[{"ContentSizeH", "-", "140"}], ",", "ContentSizeW"}],
                  "]"}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "finalDisplayImage"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"obtainListOfRowsToKeep", "[", 
     RowBox[{
     "nRow_", ",", "nCol_", ",", "northBCtype_", ",", "southBCtype_", ",", 
      "westBCtype_", ",", "eastBCtype_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rowsToRemove", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"northBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"rowsToRemove", ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "nCol"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"southBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"rowsToRemove", ",", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"nRow", "-", "1"}], ")"}], "*", "nCol"}], "+", "1"}],
               ",", 
              RowBox[{"nRow", "*", "nCol"}]}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"rowsToRemove", ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"nRow", "*", "nCol"}], ",", "nCol"}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"rowsToRemove", ",", 
            RowBox[{"Range", "[", 
             RowBox[{"nCol", ",", 
              RowBox[{"nRow", "*", "nCol"}], ",", "nCol"}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"nRow", "*", "nCol"}], "]"}], ",", 
         RowBox[{"Flatten", "[", "rowsToRemove", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Thanks", " ", "to", " ", 
    RowBox[{"Heike", " ", "@", "SO"}], "  ", "for", " ", "this", " ", 
    "function", " ", "for", " ", "making", " ", "grid", " ", "line"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"myGrid", "[", 
     RowBox[{"tab_", ",", "opts___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"divlocal", ",", "divglobal", ",", "pos"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "extract", " ", "option", " ", "value", " ", "of", " ", "Dividers", 
        " ", "from", " ", "opts", " ", "to", " ", "divglobal"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"default", " ", "value", " ", "is", " ", 
        RowBox[{"{", 
         RowBox[{"False", ",", "False"}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"divglobal", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dividers", "/.", 
           RowBox[{"{", "opts", "}"}]}], ")"}], "/.", 
         RowBox[{"Dividers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "False"}], "}"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "transform", " ", "divglobal", " ", "so", " ", "that", " ", "it", " ",
          "is", " ", "in", " ", "the", " ", "form", " ", 
         RowBox[{"{", 
          RowBox[{"colspecs", ",", "rowspecs"}], "}"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "divglobal", "]"}], "=!=", "List"}], ",", 
         RowBox[{"divglobal", "=", 
          RowBox[{"{", 
           RowBox[{"divglobal", ",", "divglobal"}], "}"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "divglobal", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"divglobal", ",", "False"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "positions", " ", "of", " ", "dividers", " ", 
         "between", " ", "rows", " ", "from", " ", "tab"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"pos", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"tab", ",", 
          RowBox[{"Dividers", "\[Rule]", "_"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Build", " ", "list", " ", "of", " ", "rules", " ", "for", " ", 
         "divider", " ", "specifications", " ", "between", " ", "rows"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"divlocal", "=", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "\[Rule]", 
             "Dividers"}], "/.", 
            RowBox[{"tab", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "&"}], ",", 
          RowBox[{"Flatten", "[", "pos", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Final", " ", "settings", " ", "for", " ", "dividers", " ", "are", 
         " ", 
         RowBox[{"{", 
          RowBox[{"colspecs", ",", 
           RowBox[{"{", 
            RowBox[{"rowspecs", ",", "divlocal"}], "}"}]}], "}"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"divglobal", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"divglobal", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "divlocal"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"tab", ",", "pos"}], "]"}], ",", 
         RowBox[{"Dividers", "\[Rule]", "divglobal"}], ",", "opts"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", "indices__", "]"}], "[", "f_", "]"}], "[", 
       "vars__", "]"}], ",", "TraditionalForm"}], "]"}], ":=", 
    RowBox[{"SubscriptBox", "[", 
     RowBox[{
      RowBox[{"MakeBoxes", "[", 
       RowBox[{"f", ",", "TraditionalForm"}], "]"}], ",", 
      RowBox[{"RowBox", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"dummyhead", "[", 
             RowBox[{
              RowBox[{"{", "vars", "}"}], ",", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"{", "indices", "}"}], ",", "1"}], "]"}]}], "]"}], 
            "]"}], "/.", 
           RowBox[{"dummyhead", "\[Rule]", "Table"}]}], "]"}]}], "]"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ContentSizeW", "=", "260"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentSizeH", "=", "405"}], " ", ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.537053136536213*^9, 3.537053141034284*^9}, 
   3.5370532778826613`*^9, 3.53705374588809*^9, 3.537057799857379*^9, {
   3.53706803848302*^9, 3.537068041414892*^9}, {3.537070409164558*^9, 
   3.53707041201492*^9}, {3.537414525532287*^9, 3.537414526800948*^9}, {
   3.5374145713151007`*^9, 3.5374145913791485`*^9}, 3.539249182301196*^9, 
   3.5392494166269517`*^9, {3.5392504085984163`*^9, 3.5392504104216475`*^9}, {
   3.539250507738005*^9, 3.5392506100524974`*^9}, {3.5392506652500067`*^9, 
   3.539250679735346*^9}, {3.5392507165615225`*^9, 3.5392508418089266`*^9}, {
   3.539252742357766*^9, 3.539252746730321*^9}, {3.539252812917226*^9, 
   3.5392528175058084`*^9}, 3.5392623937223334`*^9, 3.5392627230731554`*^9, {
   3.539262917648864*^9, 3.5392629214428453`*^9}, {3.539294606570797*^9, 
   3.539294656455867*^9}, {3.5392950463144245`*^9, 3.539295079439471*^9}, {
   3.539295123254532*^9, 3.539295170999599*^9}, {3.5392952279996786`*^9, 
   3.539295251129711*^9}, 3.53929529991978*^9, 3.5392953384448338`*^9, {
   3.539295398094917*^9, 3.539295437439972*^9}, {3.539295486955041*^9, 
   3.539295525960096*^9}, 3.539295559815143*^9, 3.5392955952501926`*^9, {
   3.539300983996286*^9, 3.539300989433597*^9}, 3.5393178248050365`*^9, {
   3.5393178645890884`*^9, 3.539317867879006*^9}, {3.539317923549075*^9, 
   3.5393179269540076`*^9}, {3.539317971271635*^9, 3.539318007644754*^9}, 
   3.539318045771596*^9, {3.539318167785589*^9, 3.5393181684891787`*^9}, {
   3.539318199875664*^9, 3.539318223947721*^9}, {3.5393182615564966`*^9, 
   3.5393182690814524`*^9}, {3.5393183013480496`*^9, 3.5393183052055397`*^9}, 
   3.539318405131728*^9, {3.5393184913311744`*^9, 3.5393185363868957`*^9}, {
   3.5393185975886674`*^9, 3.5393186090496225`*^9}, 3.5393186644996643`*^9, 
   3.5393186960681725`*^9, 3.539323626334237*^9, 3.539324087652817*^9, 
   3.5393241202924614`*^9, {3.5393241939503155`*^9, 3.539324194028825*^9}, {
   3.53932584939653*^9, 3.5393258849655466`*^9}, {3.5393275939045544`*^9, 
   3.5393276219881206`*^9}, {3.53932765340411*^9, 3.5393277885592723`*^9}, {
   3.5393281734421463`*^9, 3.5393282855608835`*^9}, {3.539328343011179*^9, 
   3.539328361716054*^9}, {3.539329663292333*^9, 3.5393296817841816`*^9}, {
   3.5393298569859295`*^9, 3.5393300040191*^9}, {3.539330208939622*^9, 
   3.53933030736462*^9}, {3.539330392440423*^9, 3.539330402085648*^9}, {
   3.539330454880352*^9, 3.5393305426254945`*^9}, {3.5393305893609295`*^9, 
   3.539330631702306*^9}, {3.53933072001902*^9, 3.539330721222173*^9}, 
   3.539330827491168*^9, {3.539383421859804*^9, 3.5393834979359646`*^9}, {
   3.5393835302555685`*^9, 3.539383863283358*^9}, {3.539383894533326*^9, 
   3.539383895859995*^9}, {3.5393849401050973`*^9, 3.5393850226130743`*^9}, 
   3.539385257506402*^9, {3.5393853625407395`*^9, 3.53938574282603*^9}, {
   3.5393857883228073`*^9, 3.539385882040208*^9}, 3.5393861823768454`*^9, {
   3.5394875113129864`*^9, 3.539487519102976*^9}, {3.5394876034421854`*^9, 
   3.5394876100685267`*^9}, {3.539487668772981*^9, 3.539487671213291*^9}, 
   3.5394877118124466`*^9, 3.5394878158301554`*^9, {3.539487874190566*^9, 
   3.5394878880538263`*^9}, 3.539488380493358*^9, {3.539840424620285*^9, 
   3.539840536077938*^9}, {3.5398406037530317`*^9, 3.539840620546664*^9}, {
   3.540100160263406*^9, 3.540100174143669*^9}},
 CellID->645220723]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"gtick", ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "finalDisplayImage", ",", "u", ",", "forceGrid", ",", "grid", ",", 
       "systemMatrix", ",", "rightHandVector"}], "}"}], " ", "=", " ", 
     RowBox[{"process", "[", 
      RowBox[{
      "u", ",", "forceGrid", ",", "grid", ",", "systemMatrix", ",", 
       "rightHandVector", ",", "finalDisplayImage", ",", "event", ",", "h", 
       ",", "h", ",", "lenX", ",", "lenY", ",", "centerGrid", ",", 
       "addFaceGrids", ",", "plotPerformanceGoal", ",", "kValue", ",", "a", 
       ",", "b", ",", "c", ",", "x0", ",", "y0", ",", "stdx", ",", "stdy", 
       ",", "forceTermSelection", ",", "plotToShow", ",", "northBCtype", ",", 
       "northbc", ",", "northBCconstantValue", ",", "westBCtype", ",", 
       "westbc", ",", "westBCconstantValue", ",", "eastBCtype", ",", "eastbc",
        ",", "eastBCconstantValue", ",", "southBCtype", ",", "southbc", ",", 
       "southBCconstantValue", ",", "zAxisScale", ",", "angle", ",", 
       RowBox[{"Unevaluated", "@", "gstatusMessage"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"FinishDynamic", "[", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Framed", "[", 
     RowBox[{"finalDisplayImage", " ", ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], "]"}]}], ",", 
      RowBox[{"ImageMargins", "\[Rule]", "0"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "@", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"plotOptions", "=", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"PopupMenu", "[", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"plotToShow", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"plotToShow", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<plot_changed\>\""}]}], " ", 
                    ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<solution and contour\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solution + contour\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<solution and density\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solution + density\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<solution data\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solution data\>\"", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<system matrix information\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<system matrix\>\"", ",", "11"}], "]"}]}]}], 
                   "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "->", "All"}], ",", 
                  RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"plotPerformanceGoal", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"plotPerformanceGoal", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<plot_changed\>\""}]}], " ", 
                    ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Speed\>\"", "->", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<speed\>\"", ",", "11"}], "]"}]}]}], ",", 
                    RowBox[{"\"\<Quality\>\"", "->", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<quality\>\"", ",", "11"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], "\[IndentingNewLine]", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<plot\>\"", ",", "11"}], "]"}], "}"}]}], 
                  "\[IndentingNewLine]", "}"}], "]"}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"addFaceGrids", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"addFaceGrids", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<plot_changed\>\""}]}], " ", 
                    ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    "]"}], "\[IndentingNewLine]", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<face\>\"", ",", "\"\<grids\>\""}], "}"}], 
                    "]"}], ",", "11"}], "]"}], "}"}]}], "\[IndentingNewLine]",
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"zAxisScale", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"zAxisScale", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<plot_changed\>\""}]}], " ", 
                    ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    "]"}], "\[IndentingNewLine]", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<zoom\>\"", ",", "\"\<scale\>\""}], "}"}], 
                    "]"}], ",", "11"}], "]"}], "}"}]}], "\[IndentingNewLine]",
                   "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{".7", ",", ".4"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", "All", "}"}]}], ",", 
             RowBox[{"FrameStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
               "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "\[IndentingNewLine]",
           "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", " ", "TOP"}]}], " ", 
           RowBox[{
            RowBox[{"ROW", "        ", "--"}], "--"}]}], "-"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"topRow", "=", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solve\>\"", ",", "12"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<run_button\>\""}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", 
                    RowBox[{"{", 
                    RowBox[{"50", ",", "28"}], "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<reset\>\"", ",", "12"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", 
                    RowBox[{"{", 
                    RowBox[{"50", ",", "28"}], "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                   "}"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", ".2"}], "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<k\>\"", ",", "Italic", ",", "11"}], "]"}], 
                    ",", 
                    RowBox[{"Spacer", "[", "3", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"kValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"kValue", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<k_changed\>\""}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0", ",", "100.", ",", "1."}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{"kValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "0"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\[Theta]\>\"", ",", "11"}], "]"}], ",", 
                    RowBox[{"Spacer", "[", "3", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"angle", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"angle", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<k_changed\>\""}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", " ", "Pi"}], ",", 
                    RowBox[{"Pi", "/", "100"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"180.", "/", "Pi"}], "*", "angle"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], ",", 
                    "Degree"}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<test case\>\"", ",", "12"}], "]"}]}], ",", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"testCase", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"testCase", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"testCase", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"angle", "=", "0."}], ";", 
                    RowBox[{"zAxisScale", "=", "False"}], ";", 
                    RowBox[{"centerGrid", "=", "True"}], ";", 
                    RowBox[{"addFaceGrids", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"plotPerformanceGoal", "=", "\"\<Quality\>\""}], 
                    ";", 
                    RowBox[{"h", "=", 
                    RowBox[{"1", "/", "4"}]}], ";", 
                    RowBox[{"lenX", "=", "1"}], ";", 
                    RowBox[{"lenY", "=", "1"}], ";", 
                    RowBox[{"kValue", "=", "5"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"a", "=", "1."}], ";", 
                    RowBox[{"b", "=", "0."}], ";", 
                    RowBox[{"c", "=", "0."}], ";", 
                    RowBox[{"x0", "=", "0."}], ";", 
                    RowBox[{"y0", "=", "0."}], ";", 
                    RowBox[{"stdx", "=", "0.3"}], ";", 
                    RowBox[{"stdy", "=", "0.3"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"forceTermSelection", "=", "1"}], ";", 
                    RowBox[{
                    "plotToShow", "=", "\"\<solution and contour\>\""}], ";", 
                    RowBox[{"northBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"northbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"northBCconstantValue", "=", "0."}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"westbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"westBCconstantValue", "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"eastBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"eastbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"eastBCconstantValue", "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"southBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"southbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"southBCconstantValue", "=", "0"}]}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                    RowBox[{"testCase", "\[Equal]", "2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"angle", "=", "0."}], ";", 
                    RowBox[{"zAxisScale", "=", "False"}], ";", 
                    RowBox[{"centerGrid", "=", "True"}], ";", 
                    RowBox[{"addFaceGrids", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"plotPerformanceGoal", "=", "\"\<Quality\>\""}], 
                    ";", 
                    RowBox[{"h", "=", 
                    RowBox[{"1", "/", "12"}]}], ";", 
                    RowBox[{"lenX", "=", "2"}], ";", 
                    RowBox[{"lenY", "=", "2"}], ";", 
                    RowBox[{"kValue", "=", "16"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"a", "=", "1."}], ";", 
                    RowBox[{"y0", "=", "0."}], ";", 
                    RowBox[{"x0", "=", "0."}], ";", 
                    RowBox[{"stdx", "=", "0.3"}], ";", 
                    RowBox[{"stdy", "=", "0.3"}], ";", 
                    RowBox[{"forceTermSelection", "=", "3"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "plotToShow", "=", "\"\<solution and contour\>\""}], ";", 
                    RowBox[{"northBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"northbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"northBCconstantValue", "=", "0."}], ";", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"westbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"westBCconstantValue", "=", "0"}], ";", 
                    RowBox[{"eastBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"eastbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"eastBCconstantValue", "=", "0"}], ";", 
                    RowBox[{"southBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"southbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"southBCconstantValue", "=", "0"}]}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                    RowBox[{"testCase", "\[Equal]", "3"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"angle", "=", 
                    RowBox[{"109", "Degree"}]}], ";", 
                    RowBox[{"zAxisScale", "=", "False"}], ";", 
                    RowBox[{"centerGrid", "=", "True"}], ";", 
                    RowBox[{"addFaceGrids", "=", "True"}], ";", 
                    RowBox[{"plotPerformanceGoal", "=", "\"\<Quality\>\""}], 
                    ";", 
                    RowBox[{"h", "=", 
                    RowBox[{"1", "/", "12"}]}], ";", 
                    RowBox[{"lenX", "=", "2"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"lenY", "=", "2"}], ";", 
                    RowBox[{"kValue", "=", "52"}], ";", 
                    RowBox[{"a", "=", "1."}], ";", 
                    RowBox[{"y0", "=", "0."}], ";", 
                    RowBox[{"x0", "=", "0."}], ";", 
                    RowBox[{"stdx", "=", "0.3"}], ";", 
                    RowBox[{"stdy", "=", "0.3"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"forceTermSelection", "=", "3"}], ";", 
                    RowBox[{"plotToShow", "=", 
                    "\"\<solution and contour\>\""}], ";", 
                    RowBox[{"northBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"northbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"northBCconstantValue", "=", "0."}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"westbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"westBCconstantValue", "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"eastBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"eastbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"eastBCconstantValue", "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"southBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"southbc", "=", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], "&"}]}], ";", 
                    RowBox[{"southBCconstantValue", "=", "0"}]}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                    RowBox[{"testCase", "\[Equal]", "4"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"angle", "=", 
                    RowBox[{"208", "Degree"}]}], ";", 
                    RowBox[{"zAxisScale", "=", "False"}], ";", 
                    RowBox[{"centerGrid", "=", "True"}], ";", 
                    RowBox[{"addFaceGrids", "=", "False"}], ";", 
                    RowBox[{"plotPerformanceGoal", "=", "\"\<Quality\>\""}], 
                    ";", 
                    RowBox[{"h", "=", 
                    RowBox[{"1", "/", "16"}]}], ";", 
                    RowBox[{"lenX", "=", "2"}], ";", 
                    RowBox[{"lenY", "=", "2"}], ";", 
                    RowBox[{"kValue", "=", "7"}], ";", 
                    RowBox[{"a", "=", "1."}], ";", 
                    RowBox[{"y0", "=", "0."}], ";", 
                    RowBox[{"x0", "=", "0."}], ";", 
                    RowBox[{"stdx", "=", "0.3"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"stdy", "=", "0.3"}], ";", 
                    RowBox[{"forceTermSelection", "=", "3"}], ";", 
                    RowBox[{
                    "plotToShow", "=", "\"\<solution and contour\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"northBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"northbc", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}]}],
                     ";", 
                    RowBox[{"northBCconstantValue", "=", "1."}], ";", 
                    RowBox[{"westBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"eastBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"southBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"southbc", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}]}], ";", 
                    RowBox[{"southBCconstantValue", "=", "1."}]}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                    RowBox[{"testCase", "\[Equal]", "5"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"angle", "=", 
                    RowBox[{"208", "Degree"}]}], ";", 
                    RowBox[{"zAxisScale", "=", "False"}], ";", 
                    RowBox[{"centerGrid", "=", "True"}], ";", 
                    RowBox[{"addFaceGrids", "=", "False"}], ";", 
                    RowBox[{"plotPerformanceGoal", "=", "\"\<Quality\>\""}], 
                    ";", 
                    RowBox[{"h", "=", 
                    RowBox[{"1", "/", "16"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"lenX", "=", "2"}], ";", 
                    RowBox[{"lenY", "=", "2"}], ";", 
                    RowBox[{"kValue", "=", "7"}], ";", 
                    RowBox[{"a", "=", "1."}], ";", 
                    RowBox[{"y0", "=", "0."}], ";", 
                    RowBox[{"x0", "=", "0."}], ";", 
                    RowBox[{"stdx", "=", "0.3"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"stdy", "=", "0.3"}], ";", 
                    RowBox[{"forceTermSelection", "=", "3"}], ";", 
                    RowBox[{
                    "plotToShow", "=", "\"\<solution and contour\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"northBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    RowBox[{"eastBCtype", "=", "\"\<Sommerfeld\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"westbc", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}]}],
                     ";", 
                    RowBox[{"westBCconstantValue", "=", "1."}], ";", 
                    RowBox[{"southBCtype", "=", "\"\<Dirichlet\>\""}], ";", 
                    RowBox[{"southbc", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}]}], ";", 
                    RowBox[{"southBCconstantValue", "=", "1."}]}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<1\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<2\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<3\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"4", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<4\>\"", ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"5", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<5\>\"", ",", "11"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "All"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<-\>\"", ",", 
                    RowBox[{
                    RowBox[{"(", "\"\<\[Del]\>\"", ")"}], "^", "2"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< - \>\"", ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<k\>\"", ",", "Italic"}], "]"}], "2"], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<, \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
                  RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{".5", ",", ".4"}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "All"}], "}"}]}], ",", 
                  RowBox[{"FrameStyle", "->", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
               "\[IndentingNewLine]", "}"}], "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{".2", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
            "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "\[IndentingNewLine]",
           "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"-", "--"}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"-", " ", 
           RowBox[{"geometry", "            ", "--"}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", "-"}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"geometryTerm", "=", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<grid\>\"", ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"h", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"h", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "11"}], "]"}]}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], ",", 
                    RowBox[{"1", "/", "6"}], ",", 
                    RowBox[{"1", "/", "8"}], ",", 
                    RowBox[{"1", "/", "10"}], ",", 
                    RowBox[{"1", "/", "12"}], ",", 
                    RowBox[{"1", "/", "14"}], ",", 
                    RowBox[{"1", "/", "16"}]}], "}"}]}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "1", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<center grid \>\"", ",", "12"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"centerGrid", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"centerGrid", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".2", ",", ".5"}], "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< length\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"lenX", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lenX", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "95", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< length\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"lenY", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lenY", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".6", ",", ".1"}], "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
                    "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".5"}], "}"}]}]}], 
                  "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
                "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCtype", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"northBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"southBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
                    RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"northBCtype", "=", "\"\<Dirichlet\>\""}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gtick", "+=", "del"}]}], "\[IndentingNewLine]", 
                    ")"}]}], "\[IndentingNewLine]", "]"}]}], "}"}], "&"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northbc", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"northbc", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "1.0", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "#", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a x\>\"", ",", "Italic", ",", "11"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "^", "2"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a \>\"", ",", "Italic"}], "]"}], ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "2"]}], 
                    "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(\[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}], 
                    "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(2 \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "->", "All"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"northBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"northBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"northBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"northBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"northBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".2", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "None"}]}], "]"}], ",", 
                    "SpanFromLeft"}], "\[IndentingNewLine]", "}"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                   RowBox[{"Frame", "\[Rule]", "None"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
                  "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
                "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Grid", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"southBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
                    RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gtick", "+=", "del"}]}], "\[IndentingNewLine]", 
                    ")"}]}], "\[IndentingNewLine]", "]"}]}], "}"}], "&"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westbc", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westbc", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "1.0", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "#", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a y\>\"", ",", "Italic", ",", "11"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "^", "2"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a \>\"", ",", "Italic"}], "]"}], ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], "2"]}], 
                    "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(\[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}], 
                    "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(2 \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "->", "All"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"westBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                    ",", "SpanFromLeft"}], "\[IndentingNewLine]", "}"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".1", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]",
                     "]"}], "\[IndentingNewLine]", "}"}]}], 
                   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}],
                  "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{"Grid", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", " ", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"southBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
                    RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"eastBCtype", "=", "\"\<Dirichlet\>\""}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gtick", "+=", "del"}]}], "\[IndentingNewLine]", 
                    ")"}]}], "\[IndentingNewLine]", "]"}]}], "}"}], "&"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], ",", "SpanFromLeft"}], "\[IndentingNewLine]", 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastbc", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastbc", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "1.0", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "#", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a y\>\"", ",", "Italic", ",", "11"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "^", "2"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a \>\"", ",", "Italic"}], "]"}], ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], "2"]}], 
                    "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(\[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}], 
                    "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(2 \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "->", "All"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"eastBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                    ",", "\[IndentingNewLine]", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".1", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]",
                     "]"}], ",", "\[IndentingNewLine]", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                   "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Grid", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCtype", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"southBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"northBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"southBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}],
                     "&&", 
                    RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
                    RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"southBCtype", "=", "\"\<Dirichlet\>\""}], 
                    "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gtick", "+=", "del"}]}], "\[IndentingNewLine]", 
                    ")"}]}], "\[IndentingNewLine]", "]"}]}], "}"}], "&"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southbc", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"southbc", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "1.0", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "#", ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a x\>\"", ",", "Italic", ",", "11"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "^", "2"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a \>\"", ",", "Italic"}], "]"}], ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "2"]}], 
                    "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Pi", " ", "#"}], "]"}], ")"}], "&"}], "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(\[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], ")"}], "&"}], 
                    "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos(2 \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "->", "All"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"southBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"southBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"southBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"southBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"southBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".2", ",", "0"}], "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
                    "}"}]}], "\[IndentingNewLine]", "}"}], 
                  "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"2", ",", ".3"}], "}"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
             RowBox[{"Frame", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
               "]"}]}]}], "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "\[IndentingNewLine]",
           "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"-", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"-", " ", 
           RowBox[{"source", "    ", "--"}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", "--"}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"sourceTerm", "=", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Item", "[", 
                  RowBox[{
                   RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"forceTermSelection", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", " ", 
                    "\"\< exp (\>\"", ",", "\[IndentingNewLine]", 
                    FractionBox[
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< - \>\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "\"\<0\>\""],
                     ")"}], "^", "2"}]}], "}"}], "]"}], 
                    RowBox[{
                    RowBox[{"(", 
                    SubscriptBox["\"\<2 \[Sigma]\>\"", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]], ")"}], "^", 
                    "2"}]], ",", "\"\< + \>\"", ",", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< - \>\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], "\"\<0\>\""],
                     ")"}], "^", "2"}]}], "}"}], "]"}], "/", 
                    RowBox[{
                    RowBox[{"(", 
                    SubscriptBox["\"\<2 \[Sigma]\>\"", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]], ")"}], "^", 
                    "2"}]}], ",", "\"\<)\>\""}], "}"}], "]"}], ",", "12"}], 
                    "]"}]}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"4", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< ( cos( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< ) + sin( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<c\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< ) )\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"5", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< cos( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< ) * sin( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<c\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< )\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"ContentSizeW", ",", 
                    RowBox[{"ContentSizeH", "-", "365"}]}], "}"}]}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",",
                    "\[IndentingNewLine]", 
                   RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", "Center", "}"}]}]}], "\[IndentingNewLine]", 
                  "]"}], ",", "SpanFromLeft"}], "\[IndentingNewLine]", "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Spacer", "[", "2", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Manipulator", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10."}], ",", "10.", ",", "0.1"}], "}"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "=", "0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "=", "1"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Spacer", "[", "2", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<b\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Manipulator", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10."}], ",", "10.", ",", "0.1"}], "}"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}], ",", 
                   RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"forceTermSelection", "\[Equal]", "2"}], "||", 
                    RowBox[{"forceTermSelection", "\[Equal]", "4"}], "||", 
                    RowBox[{"forceTermSelection", "\[Equal]", "5"}]}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Spacer", "[", "2", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<c\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Manipulator", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10."}], ",", "10.", ",", "0.1"}], "}"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}], ",", 
                   RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"forceTermSelection", "\[Equal]", "4"}], "||", 
                    RowBox[{"forceTermSelection", "\[Equal]", "5"}]}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Spacer", "[", "2", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "\"\<0\>\""],
                     "}"}], "]"}], ",", "12"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Manipulator", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"x0", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01"}], "}"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}], ",", 
                   RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"x0", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Spacer", "[", "2", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], "\"\<0\>\""],
                     "}"}], "]"}], ",", "12"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Manipulator", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"y0", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y0", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01"}], "}"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}], ",", 
                   RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"y0", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y0", "=", "0.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Button", "[", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "10"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y0", "=", "1.0"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Item", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    SubscriptBox[
                    RowBox[{"Style", "[", "\"\<\[Sigma]\>\"", "]"}], 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]], "}"}], 
                    "]"}], ",", "11"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"stdx", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"stdx", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "3", ",", "0.05"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"stdx", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "20", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    SubscriptBox[
                    RowBox[{"Style", "[", "\"\<\[Sigma]\>\"", "]"}], 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]], "}"}], 
                    "]"}], ",", "11"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"stdy", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"stdy", "=", "#"}], ";", 
                    RowBox[{"event", "=", "\"\<reset\>\""}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "3", ",", "0.05"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"stdy", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
                  "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
                "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "@", 
                    RowBox[{"forceTermExpressionCommon", "[", 
                    RowBox[{
                    "forceTermSelection", ",", "a", ",", "b", ",", "c", ",", 
                    "stdy", ",", "stdx", ",", "x0", ",", "y0", ",", "x", ",", 
                    "y"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Evaluate", "@", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"grid", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"grid", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"grid", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"grid", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "PerformanceGoal", "\[Rule]", "plotPerformanceGoal"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "25"}], "}"}]}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageMargins", "\[Rule]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotLabel", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<, \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\"", ",", 
                    RowBox[{"forceTermUsedFormatCommon", "[", 
                    RowBox[{"forceTermSelection", ",", "a", ",", "b", ",", 
                    "c", ",", "stdy", ",", "stdx", ",", "x0", ",", "y0", ",", 
                    "x", ",", "y"}], "]"}]}], "}"}], "]"}], ",", "11"}], 
                    "]"}]}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ContentSizeW", "+", "30"}], ",", 
                    RowBox[{"ContentSizeH", "-", "240"}]}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TicksStyle", "\[Rule]", "9"}]}], 
                    "\[IndentingNewLine]", "]"}], "}"}], "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Frame", "\[Rule]", "None"}]}], "]"}]}], ",", 
                 "SpanFromLeft"}], "\[IndentingNewLine]", "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{".3", ",", ".2"}], "}"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", "All"}], "}"}]}], ",", 
             RowBox[{"FrameStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
               "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "\[IndentingNewLine]",
           "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", "-"}]}]}]}]}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", " ", "LEVEL"}]}], " ", 
         RowBox[{
          RowBox[{"2", " ", "--"}], "--"}]}], "-"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", "-"}]}]}]}]}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"pde2", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"TabView", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<geometry/boundary conditions\>\"", ",", "11"}], 
                    "]"}], "\[Rule]", "geometryTerm"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<source\>\"", ",", "11"}], "]"}], "\[Rule]", 
                   "sourceTerm"}]}], "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"315", ",", "410"}], " ", "}"}]}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.1", ",", ".0"}], "}"}]}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", " ", "end"}]}], " ", "of", " ", "level", " ", 
           RowBox[{"2", " ", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"##", "&"}], "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Item", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"topRow", ",", "plotOptions"}], "}"}], 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{".2", ",", "0"}], "}"}]}], ",", 
              RowBox[{"Alignment", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Center", ",", "Top"}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], " ", 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", 
           RowBox[{"pde2", ",", 
            RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", "end"}]}]}]}]}]}], " ", "of", " ", "Manipulate", 
      " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"controls", " ", "--"}], "--"}], "--"}], "--"}], 
               "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}],
        "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gstatusMessage", ",", "\"\<reseting...\>\""}], "}"}], ",", 
     "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gtick", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"del", ",", "$MachineEpsilon"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testCase", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"angle", ",", "0."}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"systemMatrix", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rightHandVector", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zAxisScale", ",", "False"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"centerGrid", ",", "True"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"event", ",", "\"\<run_button\>\""}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"finalDisplayImage", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"addFaceGrids", ",", "False"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotPerformanceGoal", ",", "\"\<Quality\>\""}], "}"}], ",", 
     "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"1", "/", "4"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lenX", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lenY", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kValue", ",", "5.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y0", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stdx", ",", "0.3"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stdy", ",", "0.3"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"forceTermSelection", ",", "1"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotToShow", ",", "\"\<solution and contour\>\""}], "}"}], ",",
      "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"northBCtype", ",", "\"\<Sommerfeld\>\""}], "}"}], ",", 
     "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"northbc", ",", 
       RowBox[{
        RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"northBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"westBCtype", ",", "\"\<Dirichlet\>\""}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"westbc", ",", 
       RowBox[{
        RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"westBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eastBCtype", ",", "\"\<Dirichlet\>\""}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eastbc", ",", 
       RowBox[{
        RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eastBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"southBCtype", ",", "\"\<Sommerfeld\>\""}], "}"}], ",", 
     "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"southbc", ",", 
       RowBox[{
        RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"southBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"forceGrid", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "]"}]}], "}"}], ",", "None"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grid", ",", 
       RowBox[{"makeGridCommon", "[", 
        RowBox[{"0.25", ",", "0.25", ",", "1", ",", "1", ",", "True"}], 
        "]"}]}], "}"}], ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousInitialization", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Alignment", "->", "Center"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "gtick", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Paneled", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.5392494358638945`*^9, {3.5392504294190598`*^9, 3.539250449484108*^9}, {
   3.5392508657094617`*^9, 3.53925086617152*^9}, {3.5392509968811183`*^9, 
   3.5392511865252*^9}, {3.539251234143747*^9, 3.539251324741251*^9}, {
   3.5392516523278494`*^9, 3.5392516574224963`*^9}, {3.5392516969630175`*^9, 
   3.5392519404159317`*^9}, {3.5392519817501807`*^9, 
   3.5392521765274143`*^9}, {3.539252223826421*^9, 3.5392523852904243`*^9}, {
   3.539252423364259*^9, 3.539252475537384*^9}, {3.5392525102397904`*^9, 
   3.539252634282042*^9}, {3.5392526655420113`*^9, 3.5392526691474695`*^9}, {
   3.539252704788495*^9, 3.5392527288120456`*^9}, 3.5392527881575813`*^9, {
   3.539252843331088*^9, 3.5392529056415005`*^9}, {3.5392529536520967`*^9, 
   3.5392529760989475`*^9}, {3.53925304487068*^9, 3.539253092397215*^9}, {
   3.5392531388956194`*^9, 3.539253172176846*^9}, {3.539253208244926*^9, 
   3.539253209003022*^9}, {3.5392532446330466`*^9, 3.5392533571973405`*^9}, {
   3.5392533952676744`*^9, 3.539253573170766*^9}, {3.539253621975463*^9, 
   3.5392537216056147`*^9}, {3.5392539438293333`*^9, 
   3.5392539958689413`*^9}, {3.539254050328857*^9, 3.539254085725352*^9}, {
   3.5392541353491535`*^9, 3.5392541421760197`*^9}, {3.5392542083904285`*^9, 
   3.5392542854607153`*^9}, 3.5392543223438983`*^9, {3.539254420728892*^9, 
   3.539254422549623*^9}, {3.5392544666932287`*^9, 3.5392545278904996`*^9}, {
   3.539254590438442*^9, 3.5392546029990373`*^9}, {3.539254633167368*^9, 
   3.539254636898342*^9}, {3.539254672983424*^9, 3.5392547492696114`*^9}, 
   3.539254789871767*^9, {3.539254832091628*^9, 3.5392548507705*^9}, {
   3.539254923638253*^9, 3.539254926028057*^9}, {3.5392549651755276`*^9, 
   3.5392550438440175`*^9}, {3.5392551148710365`*^9, 3.539255165387952*^9}, {
   3.5392551964263926`*^9, 3.5392552247504897`*^9}, {3.5392552681970067`*^9, 
   3.5392552737227087`*^9}, 3.5392553075785074`*^9, {3.53925552235028*^9, 
   3.5392556273111086`*^9}, {3.5392556615274534`*^9, 3.539255674238067*^9}, {
   3.5392557070147295`*^9, 3.5392557074042788`*^9}, {3.5392558292337494`*^9, 
   3.539255842855979*^9}, {3.539255874965556*^9, 3.5392559278122673`*^9}, {
   3.5392559699546185`*^9, 3.539255973974629*^9}, {3.5392560115889053`*^9, 
   3.539256273115115*^9}, {3.5392563184853764`*^9, 3.5392563302413692`*^9}, {
   3.5392563610047755`*^9, 3.539256367833643*^9}, 3.539256414564077*^9, {
   3.5392564892415595`*^9, 3.5392566190450425`*^9}, {3.5392566541835046`*^9, 
   3.5392566636097016`*^9}, {3.539256696466874*^9, 3.5392567305997086`*^9}, {
   3.5392568604982033`*^9, 3.5392570340037355`*^9}, {3.53925706750449*^9, 
   3.5392571019843683`*^9}, {3.539257133745901*^9, 3.5392571489148273`*^9}, {
   3.539257180999902*^9, 3.53925719784004*^9}, {3.5392572712088566`*^9, 
   3.5392573112729445`*^9}, {3.5392575635169754`*^9, 
   3.5392575640780463`*^9}, {3.5392576217973757`*^9, 3.539257672963373*^9}, {
   3.5392577064116206`*^9, 3.539257738820236*^9}, {3.539257777006585*^9, 
   3.5392577955289373`*^9}, {3.53925783579755*^9, 3.539257862771476*^9}, {
   3.539258013825657*^9, 3.539258035079356*^9}, {3.5392581105344377`*^9, 
   3.539258220243369*^9}, {3.539258254869766*^9, 3.53925827994495*^9}, {
   3.539258317009657*^9, 3.5392583571907587`*^9}, {3.5392584246903305`*^9, 
   3.5392584358292446`*^9}, {3.5392584748176956`*^9, 3.539258478095612*^9}, {
   3.5392585299086914`*^9, 3.539258641825403*^9}, {3.5392586852609186`*^9, 
   3.539258703487733*^9}, {3.53925874842544*^9, 3.539258776235971*^9}, 
   3.5392588658903556`*^9, {3.539258984018856*^9, 3.5392589864416637`*^9}, {
   3.5392590251795826`*^9, 3.539259108751195*^9}, {3.5392591403707104`*^9, 
   3.539259176475795*^9}, {3.539259210411104*^9, 3.5392592203203626`*^9}, {
   3.5392592538986263`*^9, 3.5392592652005615`*^9}, {3.5392593097227154`*^9, 
   3.5392594467691183`*^9}, {3.5392594771474752`*^9, 
   3.5392594772494884`*^9}, {3.5392595866493807`*^9, 
   3.5392596518946657`*^9}, {3.539259694705102*^9, 3.5392597648390074`*^9}, {
   3.539259814396801*^9, 3.5392598647091894`*^9}, {3.5392599050748153`*^9, 
   3.539260035023817*^9}, {3.5392601163466434`*^9, 3.5392601192925177`*^9}, {
   3.539260191060631*^9, 3.539260195188155*^9}, {3.5392602269621897`*^9, 
   3.539260227619773*^9}, {3.5392602857366533`*^9, 3.5392603153814173`*^9}, {
   3.539260399872647*^9, 3.539260425502901*^9}, {3.539260464726882*^9, 
   3.5392605571591196`*^9}, {3.5392605976972675`*^9, 
   3.5392606270419936`*^9}, {3.539260774852263*^9, 3.539260797798177*^9}, {
   3.539260861656786*^9, 3.539260870870956*^9}, {3.539260915668144*^9, 
   3.5392610183981895`*^9}, {3.539261053305122*^9, 3.5392611085496373`*^9}, {
   3.53926114558134*^9, 3.5392611490352783`*^9}, {3.539261184088229*^9, 
   3.539261246627671*^9}, {3.5392612813565807`*^9, 3.539261282784262*^9}, 
   3.539261315584427*^9, 3.53926136687144*^9, 3.5392614118321495`*^9, {
   3.5392614452338905`*^9, 3.539261473327458*^9}, 3.5392615400094256`*^9, {
   3.53926158170522*^9, 3.5392616726722717`*^9}, {3.5392617425441446`*^9, 
   3.5392618475464783`*^9}, 3.539261886450418*^9, {3.5392619240791965`*^9, 
   3.5392619246932745`*^9}, {3.539261990296105*^9, 3.53926199080567*^9}, {
   3.5392620241389027`*^9, 3.5392621955421677`*^9}, {3.5392622314092226`*^9, 
   3.5392622949262877`*^9}, {3.539262335050383*^9, 3.5392623593564696`*^9}, {
   3.5392624568418484`*^9, 3.539262579974984*^9}, {3.5392626142078314`*^9, 
   3.5392626415603046`*^9}, {3.5392626729307885`*^9, 
   3.5392626741129384`*^9}, {3.539262773385044*^9, 3.5392628919300976`*^9}, {
   3.539263008408889*^9, 3.5392630085334044`*^9}, {3.5392945742607517`*^9, 
   3.5392945789357586`*^9}, {3.539301027795791*^9, 3.5393012933809814`*^9}, {
   3.539301334011306*^9, 3.539301553485859*^9}, {3.5393016130942683`*^9, 
   3.539301796437755*^9}, {3.539301843470445*^9, 3.5393019623742456`*^9}, {
   3.539302007287815*^9, 3.539302149619956*^9}, {3.5393021969026604`*^9, 
   3.539302208806341*^9}, {3.5393022426532774`*^9, 3.5393022481265903`*^9}, {
   3.5393023082850313`*^9, 3.539302416453218*^9}, {3.5393024752935834`*^9, 
   3.5393024980598855`*^9}, {3.5393025883270483`*^9, 3.539302610707329*^9}, {
   3.539302646118354*^9, 3.539302757790741*^9}, {3.539302909265405*^9, 
   3.539302954028966*^9}, {3.539302985556769*^9, 3.5393029856197724`*^9}, {
   3.539303016280526*^9, 3.5393030175095963`*^9}, {3.5393030512785277`*^9, 
   3.539303065278329*^9}, {3.53930310516761*^9, 3.539303158206644*^9}, {
   3.5393165118223085`*^9, 3.5393171180002837`*^9}, {3.5393172887464657`*^9, 
   3.539317295402311*^9}, {3.539317384200587*^9, 3.5393175351527553`*^9}, {
   3.539317578566268*^9, 3.53931762284139*^9}, {3.5393176868830223`*^9, 
   3.539317692554743*^9}, {3.5393183299321795`*^9, 3.5393183351218386`*^9}, {
   3.539319430800472*^9, 3.5393196047730637`*^9}, {3.539319641230193*^9, 
   3.539319668989718*^9}, {3.5393197257089205`*^9, 3.5393197682173185`*^9}, {
   3.5393198219766445`*^9, 3.539319826162176*^9}, {3.539319892095049*^9, 
   3.5393199998222284`*^9}, {3.539320084289954*^9, 3.539320097825673*^9}, {
   3.5393201567691584`*^9, 3.539320202074911*^9}, {3.539320237437402*^9, 
   3.539320370404786*^9}, {3.5393204011106853`*^9, 3.539320426856955*^9}, {
   3.539320475379116*^9, 3.539320520562854*^9}, {3.539320553739067*^9, 
   3.539320581051535*^9}, {3.539320730645031*^9, 3.5393207476646924`*^9}, {
   3.539320783780278*^9, 3.53932085655652*^9}, {3.5393209354270353`*^9, 
   3.539320979902683*^9}, {3.539321021910017*^9, 3.539321389050138*^9}, {
   3.5393214279600787`*^9, 3.5393215490579567`*^9}, {3.539321586520714*^9, 
   3.539321754066989*^9}, {3.5393217988636775`*^9, 3.5393218858412223`*^9}, {
   3.5393220241957912`*^9, 3.539322030226057*^9}, {3.5393221608191404`*^9, 
   3.539322254051979*^9}, {3.5393223058620586`*^9, 3.539322314942211*^9}, {
   3.5393226333776474`*^9, 3.539322651486947*^9}, {3.539322691246996*^9, 
   3.539322703389038*^9}, {3.539322740480748*^9, 3.5393228537426305`*^9}, {
   3.5393228852271285`*^9, 3.5393229279685555`*^9}, {3.5393229651197734`*^9, 
   3.5393230372374315`*^9}, {3.5393230806154394`*^9, 3.53932316991978*^9}, 
   3.539323221449323*^9, {3.5393232565937862`*^9, 3.539323275124139*^9}, {
   3.5393233501206627`*^9, 3.539323507912699*^9}, {3.5393235536290045`*^9, 
   3.5393235832482653`*^9}, {3.5393236804241056`*^9, 3.539323716910739*^9}, {
   3.5393241937867947`*^9, 3.539324213179257*^9}, {3.539324256762291*^9, 
   3.539324260256735*^9}, {3.5393259194874306`*^9, 3.5393259201010084`*^9}, 
   3.5393298539070387`*^9, {3.539330731322956*^9, 3.5393307328251467`*^9}, {
   3.539330902878741*^9, 3.539330917246565*^9}, {3.5393309543327746`*^9, 
   3.539330971659975*^9}, {3.5393310110619783`*^9, 3.5393312061117463`*^9}, 
   3.5393840041872506`*^9, {3.5393844945240154`*^9, 3.539384579572315*^9}, {
   3.539384620463008*^9, 3.5393846220842133`*^9}, {3.5393846610931673`*^9, 
   3.5393846614427114`*^9}, {3.539385915638974*^9, 3.5393859398050427`*^9}, {
   3.5393859717891045`*^9, 3.5393860163937683`*^9}, {3.539443934230274*^9, 
   3.539443989485086*^9}, {3.539444024389673*^9, 3.5394440490498877`*^9}, {
   3.5394868010062885`*^9, 3.539486801585862*^9}, 3.539486876365858*^9, 
   3.5394869273988385`*^9, {3.5394872006290345`*^9, 3.5394872492282057`*^9}, {
   3.5394873123817253`*^9, 3.539487347772219*^9}, {3.5394874271242957`*^9, 
   3.5394874451095796`*^9}, {3.5396792182171717`*^9, 3.53967927112239*^9}, 
   3.539840190433047*^9, {3.5398402816236267`*^9, 3.5398402866372633`*^9}, {
   3.5398403554605026`*^9, 3.5398403572527304`*^9}, {3.5398406410532684`*^9, 
   3.539840646241927*^9}, 3.5398407696646*^9, {3.539840918295974*^9, 
   3.539841099913536*^9}, {3.5401002192438955`*^9, 3.5401002231818953`*^9}, {
   3.540100272380143*^9, 3.54010027290921*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
    False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
    0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`event$$ = 
    "run_button", $CellContext`finalDisplayImage$$ = Grid[{{
       Item[
        Item[
         Graphics3D[
          GraphicsComplex[CompressedData["
1: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
cwtWxeaB/wFV0/PY
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwtlHtoyFEUx+/Pa4x5b8Y2YlZKeYu8Iswjr8gQG5ZXHkNmTCmlRJSISFEi
RZSSIlJERERERERERERE5PPtfP/4dO/v/s4995zvOfd2rV49vaZBSmkLNIR+
0BRGwFBoBqNgv+daq4IWMAlKPZ8GN2EslMNUyIXR8Mr7hsE++y+D114bDgeh
JUw2ms+BvZAH42AetIZq2GE/ircEcmAwbAfl0xd2QRPoDYehsc/aZvsS/5PN
QBgDzWEiHHK+E5yP7AfBbudbal/y2Qv22Kbce7R3JAyARtDTOSiXGc5f8Q+B
x9Dfts/suzs8cn761yJLaT1jnXwzX8q4BP7CQlgAifVihiL447X5cBTaQCd4
CH2sTxfXvAd8hErX9pNjHQ+fPSqnD65BpfdL525wxnXRv532Kd93rHFneGCt
dfZdr8nmuXMtc3yKcxlsgA4p+vKANZQ+v52f8jzmWlT5W9pOh1/2JTvp1Arm
wukUfSW9siy0kUb10A7WwAn7Kbad7GcqpyxstdYxi/g2Ki7mi12LtsxXMq6C
s5APtZCbxaj6zZYdLIcLjk0xNsnCh+Z5zCsYZ9lXe1gH571XPlpjsyLFebU+
a5P8ZbFPNt9T3MMp8MY6q7depLin6vdTzl05XLL+df7W+lo47nOl10UoSBFf
heeb/U82NSniKoStcCTFndJZNzzq7HOur3R8l+Id0Btx2Xvl40uKt0DxF2Wh
t2r1zWv69yNFP6r3rjjmeuegXBbBVWsoLe+l6D315Vf7kUYnU7xXmt9K0afq
12sp7p/u4c8Uvabz/qXoL/XZ2xT9K30LfE9Vk2L3g3J5kuIe6V5dT9HL8puf
Ra1Us6cp7pnsujhf6XM7xX1TTJ2zyEN+u2aRq+xy3D+q28sU75B0LsxCC8XU
zr2hur1P8X5J9/sp7qJ0+Q+uAIGY
                 "]], 
                Polygon[CompressedData["
1:eJxNlnfY0FMUx8/vbWu/7d6mbNmSMsrIKKEQsiozo4iyN0kZmdnRIGUXWRlF
pbSIIhIRJasiO9/Pc77v8/jj89z7+917zz333DNu634Dew4oiYi3REVxjrhe
3CCaFRHfqP1a3CnuEqPFI+JA8a4YJe4VK8SXoqXWXKv2OtGqSBnIulE0V/8X
tfuL/cTP5idxeOTYD2KtOET8KJaJT8UW4jPxkVgsdhMfe8+21h1dLhbXROqA
LszZTmzrteh6j9jLOs8U7URl8agYLBpqXSPRWOyj7x3FDuIr8aFozdnEB6JU
cwapvUDUVX+62k6is5ghautff7VniVrqVxa91T9eVFJ/V7X7es10n2u6177j
NTXFsZbFmorijEhZTUUTcYm+y4rUoY4417rxb6D6AyLnzlO7tdhKvO8zj/Zd
zvS/uaJF5FzOuEjs7LNzDyvtE/jGyeIw0U187/89RU37TEuxUAwXI8St4hax
k+X+KXqII8UfvvNOtgm+sKX3wffu9h1ylxUsbxexue8E/ZaKY7CbuE/0EleK
q0S9Iv1qied9Ik4U/cSp4lfreXPkvSz2P8ZOE7+J3cX2kT6Fb3URn4vl4gtx
kbhMXG4/Yk/2vlrUL9Kf9xRVxB3oXWScvK7+NHGo9bpfPOD+Up+Ff1XsbxeK
quqfHul7gzyGzJGRMbPM9usoOkTGD2O3izaeM8JnXmzbcge/izLfzbpIfz1B
rBe3+Q4X2TeeFc+I1WJNZDyuEHtHxgvx8514SDzsOV1Fda9lDrHV1muR9bTv
ZbVtutw6j/QZOtiGnO958ZztvlmR8ll3UqQ/Qjfvuca6fCsetE7/Rsbn2WKT
OMh7jvT9sDf+XcM6cK5VllEu6wD2tsymkbHe37LxAXzhisic8ldkPJ4v/han
RMYm/xjrHpkbetv2L/iMnK16kf5HXiCPjfIdtBKF7+YpMSkyR1QyyKvlsWaR
8dnD98s3i8eredxrJ0b6FTJKxFGR8cx438j4OlpU8LpxPkdR5Jzx7rN2k21b
6nl9fE7O/o9bbFHP+54nWhRZj96OzGPUEGpHC0P/zcg56IAu6Mh+fS13ks9b
5nvY5HOGdRpnPct1mOg15NGWjsny2KSWNY6M0bFiTGSMECvEKHFJDaOWHWF/
oMZRz8hb5MGDI+saeZs4JXariTMjY4v7Jp8Piaw7r6p9TUwRkyPrWhPn+wG2
54v2KXyroXhFXGp74k9lrmHMYQyZxAU5jVy2MdKW1OYmkTZF/w1igngyMr9v
9JnH+ozU7mo++3rrX1s8YVuQq7rbJuSzzpE5ndxOnV/ndRvMeq+dYJtSC2p4
v43W9THrMMb9pr4DxsjNdf2fGCGf14mMneNEgyLtiL2wO7mzvngpsq7NFu+J
OZHx317sIWZF1hf+3ySGRdZIamUXj1PH2nk+ctpYf+JrpeUij3w/NLKmUduq
RtYzfJZY6RPpy7Msq533mmMZQ60D9ZnaXWJ9hvn/XI9xxin/85UZtj/3xbuH
erxN5Btgntciu7llLIisF+hHHSTXzPBacg7vgvmet9As8NzhPhM+v9ZnpaYR
N7wreZdQK8nH5NTlthG2IifxdiAeiIupal92nzvjrqZaT3J/B+tBjODXvJF4
K9Uosl73sy8MsX/wjzHikFxBzljiOeTWwR5HBvm7rmXP914dfc4lXksOXOq9
ia1e1gF/I9+R/2v7PUZ9Jr+9YabZFozxDiWeyBfUFfIf/kk9L/W7jzcEb4cG
bnlLNIrMC7zDu9qm2LZ8zmT7wSrLJidRq2bbv9rbr8gX5Llp1u0/C8R26g==

                 "]]}]}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              
              Line[{34, 2, 38, 39, 40, 3, 41, 42, 43, 4, 44, 45, 46, 5, 157, 
               156, 155, 10, 169, 168, 167, 15, 184, 183, 182, 20, 193, 192, 
               191, 25, 133, 132, 131, 24, 130, 129, 128, 23, 127, 126, 125, 
               22, 124, 123, 122, 21, 176, 177, 178, 16, 173, 174, 175, 11, 
               158, 159, 160, 6, 140, 141, 142, 1, 32, 33, 34}]}, {
              
              Line[{142, 210, 211, 49, 136, 204, 205, 31, 139, 213, 214, 52, 
               151, 225, 226, 61, 157}], 
              
              Line[{10, 67, 66, 65, 9, 64, 63, 62, 8, 58, 57, 56, 7, 55, 54, 
               53, 6}], 
              
              Line[{155, 231, 230, 59, 149, 195, 194, 50, 137, 207, 206, 29, 
               134, 201, 200, 47, 140}], 
              
              Line[{160, 198, 199, 70, 145, 219, 220, 37, 148, 237, 238, 73, 
               154, 240, 241, 79, 169}], 
              
              Line[{15, 91, 90, 89, 14, 85, 84, 83, 13, 82, 81, 80, 12, 76, 
               75, 74, 11}], 
              
              Line[{167, 243, 242, 77, 152, 216, 215, 71, 146, 228, 227, 35, 
               143, 222, 221, 68, 158}], 
              
              Line[{175, 234, 235, 94, 163, 249, 250, 28, 166, 258, 259, 97, 
               172, 261, 262, 103, 184}], 
              
              Line[{16, 98, 99, 100, 17, 104, 105, 106, 18, 110, 111, 112, 19,
                113, 114, 115, 20}], 
              
              Line[{178, 267, 268, 118, 187, 270, 271, 88, 181, 282, 283, 121,
                190, 273, 274, 109, 193}], 
              
              Line[{182, 264, 263, 101, 170, 252, 251, 95, 164, 255, 254, 26, 
               161, 246, 245, 92, 173}], 
              
              Line[{191, 285, 284, 107, 188, 288, 287, 119, 179, 276, 275, 86,
                185, 279, 278, 116, 176}], 
              
              Line[{141, 209, 48, 202, 135, 203, 30, 208, 138, 212, 51, 196, 
               150, 224, 60, 232, 156}], 
              
              Line[{159, 197, 69, 223, 144, 218, 36, 229, 147, 236, 72, 217, 
               153, 239, 78, 244, 168}], 
              
              Line[{174, 233, 93, 247, 162, 248, 27, 256, 165, 257, 96, 253, 
               171, 260, 102, 265, 183}], 
              
              Line[{177, 266, 117, 280, 186, 269, 87, 277, 180, 281, 120, 289,
                189, 272, 108, 286, 192}]}, {
              
              Line[{2, 136, 135, 134, 7, 145, 144, 143, 12, 163, 162, 161, 17,
                187, 186, 185, 22}], 
              
              Line[{34, 49, 202, 201, 55, 70, 223, 222, 76, 94, 247, 246, 100,
                118, 280, 279, 124}], 
              
              Line[{3, 139, 138, 137, 8, 148, 147, 146, 13, 166, 165, 164, 18,
                181, 180, 179, 23}], 
              
              Line[{40, 31, 208, 207, 58, 37, 229, 228, 82, 28, 256, 255, 106,
                88, 277, 276, 127}], 
              
              Line[{4, 151, 150, 149, 9, 154, 153, 152, 14, 172, 171, 170, 19,
                190, 189, 188, 24}], 
              
              Line[{43, 52, 196, 195, 64, 73, 217, 216, 85, 97, 253, 252, 112,
                121, 289, 288, 130}], 
              
              Line[{46, 61, 232, 231, 67, 79, 244, 243, 91, 103, 265, 264, 
               115, 109, 286, 285, 133}], 
              
              Line[{122, 116, 266, 267, 98, 92, 233, 234, 74, 68, 197, 198, 
               53, 47, 209, 210, 32}], 
              
              Line[{125, 86, 269, 270, 104, 26, 248, 249, 80, 35, 218, 219, 
               56, 29, 203, 204, 38}], 
              
              Line[{128, 119, 281, 282, 110, 95, 257, 258, 83, 71, 236, 237, 
               62, 50, 212, 213, 41}], 
              
              Line[{131, 107, 272, 273, 113, 101, 260, 261, 89, 77, 239, 240, 
               65, 59, 224, 225, 44}], 
              
              Line[{33, 211, 48, 200, 54, 199, 69, 221, 75, 235, 93, 245, 99, 
               268, 117, 278, 123}], 
              
              Line[{39, 205, 30, 206, 57, 220, 36, 227, 81, 250, 27, 254, 105,
                271, 87, 275, 126}], 
              
              Line[{42, 214, 51, 194, 63, 238, 72, 215, 84, 259, 96, 251, 111,
                283, 120, 287, 129}], 
              
              Line[{45, 226, 60, 230, 66, 241, 78, 242, 90, 262, 102, 263, 
               114, 274, 108, 284, 132}]}, {}, {}}}, 
           VertexNormals -> CompressedData["
1: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
            "]], {Axes -> True, AxesLabel -> {
             Text[
              Style["x", Italic, 12]], 
             Text[
              Style["y", Italic, 12]], None}, BoxRatios -> {1, 1, 0.4}, 
           ImagePadding -> {{20, 15}, {15, 1}}, ImageSize -> {260, 
             Rational[395, 2]}, Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {All, All, All}, 
           PlotRangePadding -> {Automatic, Automatic, Automatic}, 
           SphericalRegion -> True, TicksStyle -> 9}]]]}, {
       Item[
        Graphics[
         GraphicsComplex[CompressedData["
1:eJx1Vn9MFVQUZswhf1AJSSZIM8woYESW2oQ6vmSitrECQRKLUARmIU6spIe4
JDdM5xJnuYSgcGCOEIjEGXDeQxEUiAciPyNtiAhuNTU2HGz92D3nNM6rt7Fv
33uXc88959zvfk9uzoje6uri4tL+998/aD43kBAMOhSXdfw7zOROiDPXORTn
jwP+G532QfV/iuuP3sfpHJzP/6DeR5/DqU4K9fdO+6pzOdUNb40e/f2nxddl
n8++LQipGb4GW04XWu49tQMZJ4p+u2wdPSf4TfWvy9entAgGVLx+O3JJGYaN
T7jWzh+CmyuOxp65dRYjnz8RuH71ACQ8sjfBz8eOMbtXRt/d2QsRH7/oMWy7
hIk4knW4qBuC74/VnUptw21uB78OauuUOmYsCrfGf94L8xa/YAla+m9dXpra
tan2gy7hGzvPfrjqXLdwa9lkfseDHuEFe1ZUJIT1C6+Pyb48mj0o/JdnG25m
NgwJL7ljq196ZweWTHpGl+7ugDn7OqcjrBWYXdRqC0lqgbjMieIj79Vj7Or9
z9WutUOXlz3J1t6Emwb2hO9NroGpd2ffXz7ShoHFF1NX9hyHOO/84cyqSol/
tc4y5mG1CZ/afv5GYmGLcFoPaj2o9cKpPsKpPsKpPsKpPsKpPsKpPsKpPno/
HBtoa+i+cl360TLrYMmaA0PSj9KQtXl1kYPSj/3xs9ND3fqlH8n7mt44ebFH
+rGqPHfZ47nd0g//HovvIUsXNAZHx/pZciHlyOlx9y8d8Nrbre4vx9vh6TNb
P3mivA+qq7ZfGPTulLl/5nB8QbZnt/Cvtr36vt9DvcLnRgZHNbgPCP900WMB
ibOG1L1xoO1U3Invsuwyj/M2hD2cVNkuuqHuD+TT/Tm+oHTneP4uiffKseqw
A3nVwt9M9rt9d9gu3CsnaUlR7hXhVeY8ggHmPIKF5jyCj5rzCNJ5BL8w+Uie
4SYf4RtMPsLnmHycdJPrwXnx95wXc86LOeel6i2c+1dY4J+1prtd+lc1HNXs
NtQs/WsKtHo3jdilf+b3Wumf4WWw2eiW4D2jW4LFRrcEO877v3NhkufHxcXX
wycv/6NrwtPe8qxMmu4TXlPh3hea87OTjlN90GHiwZ/lQa7LDhXBAhMPMkLT
Fq4b/wEoHph1dqB49H2LnjecHxWRfKk/TfZLyYlJ7gn8XnhIeuO6jOZG4YG+
CVsyH7Tq/OBHys/HxJN9Uk08UPGEB5t4wuk+It1HpPuIdB/l/Lyez6/qKZzP
z5z78YepH3I/0k39kPtB9UPuB9UPTxr9BtJv9DL6DaTfGG/0G0i/8arRb9ho
9BunjX7DQqPfqPQFlb6g0hdU+oJKXzge0LxzPKB553hA887x6Pdajke8TPpM
7yUq/UGlP6j0B5X+IL8npO/I7wnpO/J7QvqO/J6QviO/J6TvyO8J6Tvye0L6
zvmCyhdUvqDyFV49U4+knqo/wufO1CNUeqT9kXDyRzIPjDwPjDwPjDwPjDwP
jOSfgPwTkn8C8k9I/gnIPyH5JyD/hOSfgPwTKr+Eyi+h8kuo/BIqv4TKL6Hy
S6j8DSp/g8rfyDun6gtcX+V/UPkfVP4Hlf9B5X9Q+R9U/geV/0Hlf1D5H/wL
2ovGiQ==
          "], {{{
             EdgeForm[], 
             RGBColor[0.293416, 0.0574044, 0.529412], 
             GraphicsGroup[{
               
               Polygon[{{151, 23, 179}, {52, 3, 36}, {36, 3, 31}, {31, 3, 
                49}, {179, 23, 196}, {191, 23, 151}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4056961858009037, 0.25262932015915646`, 0.6872353840151724], 
             GraphicsGroup[{
               
               Polygon[{{126, 18, 152}, {44, 8, 80}, {89, 8, 77}, {69, 8, 
                89}, {152, 18, 116}, {77, 8, 44}, {116, 18, 136}, {136, 18, 
                163}}], 
               Polygon[{{32, 31, 49, 50}, {180, 179, 196, 197}}], 
               
               Polygon[{{163, 18, 151, 179, 180}, {53, 52, 36, 8, 69}, {80, 8,
                 36, 31, 32}, {192, 191, 151, 18, 126}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4792682270059452, 0.3805512305812604, 0.79064978816011], 
             GraphicsGroup[{
               Polygon[{{104, 13, 122}, {28, 13, 117}}], 
               
               Polygon[{{181, 180, 197, 198}, {193, 192, 126, 127}, {127, 126,
                 152, 153}, {137, 136, 163, 164}, {164, 163, 180, 181}, {81, 
                80, 32, 33}, {45, 44, 80, 81}, {54, 53, 69, 70}, {33, 32, 50, 
                51}, {70, 69, 89, 90}}], 
               
               Polygon[{{122, 13, 116, 136, 137}, {153, 152, 116, 13, 28}, {
                90, 89, 77, 13, 104}, {117, 13, 77, 44, 45}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5528402682109869, 0.5084731410033646, 0.894064192305048], 
             GraphicsGroup[{
               
               Polygon[{{26, 2, 62}, {184, 22, 172}, {156, 24, 199}, {62, 2, 
                37}, {70, 4, 54}, {127, 22, 193}, {55, 4, 78}, {194, 24, 
                156}}], 
               
               Polygon[{{154, 153, 28, 29}, {29, 28, 117, 118}, {138, 137, 
                164, 165}, {91, 90, 104, 105}, {82, 81, 33, 34}, {165, 164, 
                181, 182}, {105, 104, 122, 123}, {123, 122, 137, 138}, {118, 
                117, 45, 46}, {46, 45, 81, 82}}], 
               Polygon[{{34, 33, 51, 2, 26}, {78, 4, 70, 90, 91}, {182, 181, 
                198, 24, 194}, {172, 22, 127, 153, 154}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6098400582316799, 0.6015054711100566, 0.9105478371302148], 
             GraphicsGroup[{
               
               Polygon[{{47, 46, 82, 83}, {124, 123, 138, 139}, {183, 182, 
                194, 195}, {157, 156, 199, 200}, {63, 62, 37, 38}, {27, 26, 
                62, 63}, {83, 82, 34, 35}, {79, 78, 91, 92}, {119, 118, 46, 
                47}, {139, 138, 165, 166}, {166, 165, 182, 183}, {173, 172, 
                154, 155}, {155, 154, 29, 30}, {56, 55, 78, 79}, {195, 194, 
                156, 157}, {185, 184, 172, 173}, {106, 105, 123, 124}, {30, 
                29, 118, 119}, {92, 91, 105, 106}, {35, 34, 26, 27}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6639325324909702, 0.6884170258536815, 0.9117809789362288], 
             GraphicsGroup[{
               
               Polygon[{{30, 17, 155}, {155, 17, 173}, {35, 7, 83}, {106, 9, 
                92}, {27, 7, 35}, {195, 19, 183}, {146, 19, 167}, {76, 7, 
                99}, {174, 17, 141}, {94, 9, 93}, {183, 19, 166}, {121, 19, 
                146}, {84, 9, 94}, {92, 9, 79}, {141, 17, 111}, {99, 7, 71}}], 
               
               Polygon[{{125, 124, 139, 140}, {64, 63, 38, 39}, {120, 119, 47,
                 48}, {158, 157, 200, 201}}], 
               
               Polygon[{{111, 17, 30, 119, 120}, {140, 139, 166, 19, 121}, {
                186, 185, 173, 17, 174}, {167, 19, 195, 157, 158}, {57, 56, 
                79, 9, 84}, {93, 9, 106, 124, 125}, {48, 47, 83, 7, 76}, {71, 
                7, 27, 63, 64}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7180250067502605, 0.7753285805973064, 0.9130141207422429], 
             GraphicsGroup[{
               
               Polygon[{{140, 14, 125}, {120, 12, 111}, {112, 14, 128}, {125, 
                14, 93}, {132, 12, 107}, {48, 12, 120}, {121, 14, 140}, {76, 
                12, 48}}], 
               
               Polygon[{{58, 57, 84, 85}, {85, 84, 94, 95}, {72, 71, 64, 
                65}, {65, 64, 39, 40}, {187, 186, 174, 175}, {100, 99, 71, 
                72}, {147, 146, 167, 168}, {175, 174, 141, 142}, {168, 167, 
                158, 159}, {159, 158, 201, 202}}], 
               
               Polygon[{{128, 14, 121, 146, 147}, {142, 141, 111, 12, 132}, {
                107, 12, 76, 99, 100}, {95, 94, 93, 14, 112}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7711505038041686, 0.8498390275084724, 0.9102142699303378], 
             GraphicsGroup[{
               
               Polygon[{{169, 168, 159, 160}, {133, 132, 107, 108}, {59, 58, 
                85, 86}, {160, 159, 202, 203}, {73, 72, 65, 66}, {113, 112, 
                128, 129}, {108, 107, 100, 101}, {176, 175, 142, 143}, {66, 
                65, 40, 41}, {129, 128, 147, 148}, {96, 95, 112, 113}, {188, 
                187, 175, 176}, {148, 147, 168, 169}, {86, 85, 95, 96}, {143, 
                142, 132, 133}, {101, 100, 72, 73}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8197292170029775, 0.8660387339346232, 0.8884510499502413], 
             GraphicsGroup[{
               
               Polygon[{{87, 86, 96, 97}, {130, 129, 148, 149}, {102, 101, 73,
                 74}, {149, 148, 169, 170}, {161, 160, 203, 204}, {114, 113, 
                129, 130}, {67, 66, 41, 42}, {109, 108, 101, 102}, {177, 176, 
                143, 144}, {134, 133, 108, 109}, {74, 73, 66, 67}, {60, 59, 
                86, 87}, {189, 188, 176, 177}, {144, 143, 133, 134}, {97, 96, 
                113, 114}, {170, 169, 160, 161}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8683079302017864, 0.8822384403607739, 0.8666878299701448], 
             GraphicsGroup[{
               
               Polygon[{{61, 60, 87, 88}, {178, 177, 144, 145}, {98, 97, 114, 
                115}, {145, 144, 134, 135}, {88, 87, 97, 98}, {131, 130, 149, 
                150}, {150, 149, 170, 171}, {103, 102, 74, 75}, {135, 134, 
                109, 110}, {162, 161, 204, 205}, {190, 189, 177, 178}, {110, 
                109, 102, 103}, {68, 67, 42, 43}, {75, 74, 67, 68}, {171, 170,
                 161, 162}, {115, 114, 130, 131}}]}]}, {
             EdgeForm[], 
             RGBColor[0.941176, 0.906538, 0.834043], 
             GraphicsGroup[{
               Polygon[{{68, 6, 75}, {162, 20, 171}, {103, 11, 110}, {178, 21,
                 190}, {135, 16, 145}, {150, 15, 131}, {88, 5, 61}, {115, 10, 
                98}}], 
               
               Polygon[{{145, 16, 21, 178}, {43, 1, 6, 68}, {110, 11, 16, 
                135}, {171, 20, 15, 150}, {98, 10, 5, 88}, {131, 15, 10, 
                115}, {205, 25, 20, 162}, {75, 6, 11, 103}}]}]}}, {{}, 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{61, 88, 98, 115, 131, 150, 171, 162, 205}], 
              Line[{190, 178, 145, 135, 110, 103, 75, 68, 43}]}, -0.0082], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{42, 67, 74, 102, 109, 134, 144, 177, 189}], 
              Line[{60, 87, 97, 114, 130, 149, 170, 161, 204}]}, -0.0164], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{41, 66, 73, 101, 108, 133, 143, 176, 188}], 
              
              Line[{59, 86, 96, 113, 129, 148, 169, 160, 
               203}]}, -0.024600000000000004`], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{40, 65, 72, 100, 107, 132, 142, 175, 187}], 
              Line[{58, 85, 95, 112, 128, 147, 168, 159, 202}]}, -0.0328], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{39, 64, 71, 99, 76, 48, 120, 111, 141, 174, 186}], 
              
              Line[{57, 84, 94, 93, 125, 140, 121, 146, 167, 158, 
               201}]}, -0.041], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{38, 63, 27, 35, 83, 47, 119, 30, 155, 173, 185}], 
              Line[{56, 79, 92, 106, 124, 139, 166, 183, 195, 157, 
               200}]}, -0.04920000000000001], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{37, 62, 26, 34, 82, 46, 118, 29, 154, 172, 184}], 
              
              Line[{199, 156, 194, 182, 165, 138, 123, 105, 91, 78, 
               55}]}, -0.05740000000000001], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{54, 70, 90, 104, 122, 137, 164, 181, 198}], 
              Line[{193, 127, 153, 28, 117, 45, 81, 33, 51}]}, -0.0656], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{50, 32, 80, 44, 77, 89, 69, 53}], 
              Line[{192, 126, 152, 116, 136, 163, 180, 197}]}, -0.0738], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{49, 31, 36, 52}], 
              Line[{196, 179, 151, 191}]}, -0.082], {}, {}}}], {
         AspectRatio -> 1, Frame -> True, ImagePadding -> {{20, 15}, {20, 1}},
           ImageSize -> {260, 
            Rational[395, 2]}, PlotRange -> {{-0.5, 0.5}, {-0.5, 0.5}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}}]]}}, 
     Spacings -> {0, 0}], $CellContext`forceGrid$$ = {{1., 1., 1., 1., 1.}, {
    1., 1., 1., 1., 1.}, {1., 1., 1., 1., 1.}, {1., 1., 1., 1., 1.}, {1., 1., 
    1., 1., 1.}}, $CellContext`forceTermSelection$$ = 
    1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

    "], $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    0, $CellContext`h$$ = Rational[1, 4], $CellContext`kValue$$ = 
    5., $CellContext`lenX$$ = 1, $CellContext`lenY$$ = 
    1, $CellContext`northbc$$ = 1& , $CellContext`northBCconstantValue$$ = 
    0, $CellContext`northBCtype$$ = 
    "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
    "Quality", $CellContext`plotToShow$$ = 
    "solution and contour", $CellContext`rightHandVector$$ = SparseArray[
    Automatic, {15}, 0., {
     1, {{0, 9}, {{4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}}}, {0.0625, 
      0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 
      0.0625}}], $CellContext`southbc$$ = 
    1& , $CellContext`southBCconstantValue$$ = 0, $CellContext`southBCtype$$ =
     "Sommerfeld", $CellContext`stdx$$ = 0.3, $CellContext`stdy$$ = 
    0.3, $CellContext`systemMatrix$$ = SparseArray[
    Automatic, {15, 15}, 0, {
     1, {{0, 3, 6, 9, 13, 18, 22, 26, 31, 35, 39, 44, 48, 51, 54, 57}, {{1}, {
       4}, {7}, {2}, {5}, {8}, {3}, {6}, {9}, {1}, {4}, {5}, {7}, {2}, {4}, {
       5}, {6}, {8}, {3}, {5}, {6}, {9}, {4}, {7}, {8}, {10}, {5}, {7}, {8}, {
       9}, {11}, {6}, {8}, {9}, {12}, {7}, {10}, {11}, {13}, {8}, {10}, {
       11}, {12}, {14}, {9}, {11}, {12}, {15}, {7}, {10}, {13}, {8}, {11}, {
       14}, {9}, {12}, {15}}}, {
      1., Complex[0., -1.0607061697448554`], -1., 1., Complex[
       0., -1.0607061697448554`], -1., 1., Complex[
       0., -1.0607061697448554`], -1., -1., 
       2.4435507916125605`, -1., -1., -1., -1., 
       2.4435507916125605`, -1., -1., -1., -1., 2.4435507916125605`, -1., -1.,
        2.4435507916125605`, -1., -1., -1., -1., 
       2.4435507916125605`, -1., -1., -1., -1., 2.4435507916125605`, -1., -1.,
        2.4435507916125605`, -1., -1., -1., -1., 
       2.4435507916125605`, -1., -1., -1., -1., 2.4435507916125605`, -1., -1.,
        Complex[0., -1.0607061697448554`], 1., -1., Complex[
       0., -1.0607061697448554`], 1., -1., Complex[0., -1.0607061697448554`], 
       1.}}], $CellContext`testCase$$ = 
    1, $CellContext`u$$ = {{
     0., -0.05815489143234313, -0.0904142310650519, -0.05815489143234313, 
     0.}, {0, -0.043983701975560285`, -0.07441134270506723, \
-0.04398370197556028, 0}, {
     0, -0.03741017564302091, -0.06594626035574812, -0.03741017564302092, 
      0}, {0, -0.043983701975560285`, -0.07441134270506723, \
-0.043983701975560285`, 0}, {
     0., -0.05815489143234313, -0.0904142310650519, -0.05815489143234313, 
     0.}}, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
    0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Item[
            Grid[{{
               Grid[{{
                  Button[
                   Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}, {
                  Button[
                   Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
               Grid[{{
                  Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                  Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                  Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                  Text[
                   Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}, Alignment -> Center, 
             Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
           Item[
            Grid[{{
               PopupMenu[
                
                Dynamic[$CellContext`plotToShow$$, {$CellContext`plotToShow$$ = \
#; $CellContext`event$$ = "plot_changed", 
                  AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                "solution and contour" -> Style["solution + contour", 11], 
                 "solution and density" -> Style["solution + density", 11], 
                 "solution data" -> Style["solution data", 11], 
                 "system matrix information" -> Style["system matrix", 11]}, 
                ImageSize -> All, ContinuousAction -> False], 
               Grid[{{
                  RadioButtonBar[
                   
                   Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                  Style["plot", 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"face", "grids"}], 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
             Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
               Thickness[0.005], 
               GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
         Spacings -> {0.2, 0}, Alignment -> {Center, Top}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                  SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                   Alignment -> Center], SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}], 
             Style["source", 11] -> Item[
               Grid[{{
                  Item[
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                  SpanFromLeft}, {
                  Spacer[2], 
                  Text[
                   Style["a", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["b", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["c", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Item[
                   Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                    Alignment -> Center], SpanFromLeft}, {
                  Dynamic[
                   Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                Spacings -> {0.3, 0.2}, Alignment -> Left, 
                Frame -> {None, All}, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
         Center]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`testCase$$], 1}, 0}, {{
       Hold[$CellContext`angle$$], 0.}, 0}, {{
       Hold[$CellContext`systemMatrix$$], {}}, 0}, {{
       Hold[$CellContext`rightHandVector$$], {}}, 0}, {{
       Hold[$CellContext`zAxisScale$$], False}, 0}, {{
       Hold[$CellContext`centerGrid$$], True}, 0}, {{
       Hold[$CellContext`event$$], "run_button"}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`addFaceGrids$$], False}, 0}, {{
       Hold[$CellContext`plotPerformanceGoal$$], "Quality"}, 0}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 4]}, 0}, {{
       Hold[$CellContext`lenX$$], 1}, 0}, {{
       Hold[$CellContext`lenY$$], 1}, 0}, {{
       Hold[$CellContext`kValue$$], 5.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`c$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`y0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`stdy$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 1}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution and contour"}, 0}, {{
       Hold[$CellContext`northBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`northbc$$], 1& }, 0}, {{
       Hold[$CellContext`northBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`southBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`southbc$$], 1& }, 0}, {{
       Hold[$CellContext`southBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`forceGrid$$], {{-1, -1, -1, -1, -1}, {-1, -1, -1, \
-1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}}, 
      0}, {{
       Hold[$CellContext`grid$$], CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

       "]}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}}, Typeset`size$$ = {
    270., {201., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
        False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
        True, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = "Dirichlet", $CellContext`event$$ = 
        "run_button", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceGrid$$ = {{-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, \
-1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}, \
$CellContext`forceTermSelection$$ = 1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

         "], $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        Rational[1, 4], $CellContext`kValue$$ = 5., $CellContext`lenX$$ = 
        1, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
        1& , $CellContext`northBCconstantValue$$ = 
        0, $CellContext`northBCtype$$ = 
        "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
        "Quality", $CellContext`plotToShow$$ = 
        "solution and contour", $CellContext`rightHandVector$$ = {}, \
$CellContext`southbc$$ = 1& , $CellContext`southBCconstantValue$$ = 
        0, $CellContext`southBCtype$$ = "Sommerfeld", $CellContext`stdx$$ = 
        0.3, $CellContext`stdy$$ = 
        0.3, $CellContext`systemMatrix$$ = {}, $CellContext`testCase$$ = 
        1, $CellContext`u$$ = {}, $CellContext`westbc$$ = 
        1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
        0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; {$CellContext`finalDisplayImage$$, \
$CellContext`u$$, $CellContext`forceGrid$$, $CellContext`grid$$, \
$CellContext`systemMatrix$$, $CellContext`rightHandVector$$} = \
$CellContext`process[$CellContext`u$$, $CellContext`forceGrid$$, \
$CellContext`grid$$, $CellContext`systemMatrix$$, \
$CellContext`rightHandVector$$, $CellContext`finalDisplayImage$$, \
$CellContext`event$$, $CellContext`h$$, $CellContext`h$$, \
$CellContext`lenX$$, $CellContext`lenY$$, $CellContext`centerGrid$$, \
$CellContext`addFaceGrids$$, $CellContext`plotPerformanceGoal$$, \
$CellContext`kValue$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`x0$$, $CellContext`y0$$, $CellContext`stdx$$, \
$CellContext`stdy$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`northBCtype$$, \
$CellContext`northbc$$, $CellContext`northBCconstantValue$$, \
$CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, \
$CellContext`southBCtype$$, $CellContext`southbc$$, \
$CellContext`southBCconstantValue$$, $CellContext`zAxisScale$$, \
$CellContext`angle$$, 
          Unevaluated[$CellContext`gstatusMessage$$]]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray], ImageMargins -> 0]), "Specifications" :> {
        Item[
         Grid[{{
            Item[
             Grid[{{
                Grid[{{
                   Button[
                    Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}, {
                   Button[
                    Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
                Grid[{{
                   Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                   Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                   Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                   Text[
                    Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                 Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                 Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]]}}, Alignment -> Center, 
              Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
            Item[
             Grid[{{
                PopupMenu[
                 
                 Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; $CellContext`event$$ = "plot_changed", 
                   AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                 "solution and contour" -> Style["solution + contour", 11], 
                  "solution and density" -> Style["solution + density", 11], 
                  "solution data" -> Style["solution data", 11], 
                  "system matrix information" -> Style["system matrix", 11]}, 
                 ImageSize -> All, ContinuousAction -> False], 
                Grid[{{
                   RadioButtonBar[
                    
                    Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                   Style["plot", 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"face", "grids"}], 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
              Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
          Spacings -> {0.2, 0}, Alignment -> {Center, Top}], ControlPlacement -> 
         Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                   SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                    Alignment -> Center], SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(1.& 
                    ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                 Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                 FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}], 
              Style["source", 11] -> Item[
                Grid[{{
                   Item[
                    PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                   SpanFromLeft}, {
                   Spacer[2], 
                   Text[
                    Style["a", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["b", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["c", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Item[
                    Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                     Alignment -> Center], SpanFromLeft}, {
                   Dynamic[
                    Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                 Spacings -> {0.3, 0.2}, Alignment -> Left, 
                 Frame -> {None, All}, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
          Center], ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`testCase$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`angle$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`systemMatrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`rightHandVector$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`zAxisScale$$, False}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, True}, 0, ControlType -> 
         None}, {{$CellContext`event$$, "run_button"}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`addFaceGrids$$, False}, 0, ControlType -> 
         None}, {{$CellContext`plotPerformanceGoal$$, "Quality"}, 0, 
         ControlType -> None}, {{$CellContext`h$$, 
          Rational[1, 4]}, 0, ControlType -> None}, {{$CellContext`lenX$$, 1},
          0, ControlType -> None}, {{$CellContext`lenY$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 5.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`c$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`y0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`stdy$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution and contour"}, 0, 
         ControlType -> None}, {{$CellContext`northBCtype$$, "Sommerfeld"}, 0,
          ControlType -> None}, {{$CellContext`northbc$$, 1& }, 0, 
         ControlType -> None}, {{$CellContext`northBCconstantValue$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, 
         ControlType -> None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`southBCtype$$, "Sommerfeld"}, 0, ControlType -> 
         None}, {{$CellContext`southbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`southBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`forceGrid$$, {{-1, -1, -1, -1, -1}, {-1, -1, \
-1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, \
-1}}}, 0, ControlType -> None}, {{$CellContext`grid$$, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

          "]}, 0, ControlType -> None}, {{$CellContext`u$$, {}}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        ContinuousAction -> False, SynchronousInitialization -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{611., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`$forceGrid, 
          Blank[]], 
         Pattern[$CellContext`$grid, 
          Blank[]], 
         Pattern[$CellContext`$AA, 
          Blank[]], 
         Pattern[$CellContext`$rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`$finalDisplayImage, 
          Blank[]], 
         Pattern[$CellContext`event, 
          Blank[]], 
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`AA = \
$CellContext`$AA, $CellContext`forceGrid = $CellContext`$forceGrid, \
$CellContext`grid = $CellContext`$grid, $CellContext`rightHandVector = \
$CellContext`$rightHandVector, $CellContext`finalDisplayImage = \
$CellContext`$finalDisplayImage}, If[
           
           StringMatchQ[$CellContext`event, {
            "reset", 
             "run_button"}], {$CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`rightHandVector} = \
$CellContext`initializeSystem[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid, \
$CellContext`forceTermSelection, $CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`x0, $CellContext`stdx, $CellContext`y0, \
$CellContext`stdy, $CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue, $CellContext`kValue, \
$CellContext`angle]]; If[
           Or[$CellContext`event == "run_button", 
            And[
             
             StringMatchQ[$CellContext`event, {
              "reset", "reset", "k_changed"}], 
             
             StringMatchQ[$CellContext`plotToShow, {
              "system matrix information", 
               "solution data"}]]], $CellContext`u = \
$CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype]]; \
$CellContext`finalDisplayImage = $CellContext`makeFinalPlot[$CellContext`u, \
$CellContext`AA, $CellContext`Lx, $CellContext`Ly, $CellContext`grid, \
$CellContext`plotToShow, $CellContext`plotPerformanceGoal, \
$CellContext`addFaceGrids, $CellContext`zAxisScale]; \
$CellContext`gstatusMessage = 
          "ready.."; {$CellContext`finalDisplayImage, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`initializeSystem[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`nCol, $CellContext`nRow, $CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}, {$CellContext`nRow, $CellContext`nCol} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`u = 
           Table[0., {$CellContext`$nRow}, {$CellContext`$nCol}]]; \
$CellContext`grid = $CellContext`makeGridCommon[$CellContext`hx, \
$CellContext`hy, $CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid]; \
$CellContext`forceGrid = Which[$CellContext`forceTermSelection == 1, 
            
            With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, 
             
             Table[$CellContext`a, {$CellContext`$nRow}, \
{$CellContext`$nCol}]], $CellContext`forceTermSelection == 2, 
            Map[$CellContext`evaluateForceCommon[
              Part[#, 1], 
              
              Part[#, 2], $CellContext`a, $CellContext`b, $CellContext`c]& , \
$CellContext`grid, {2}], $CellContext`forceTermSelection == 3, 
            
            Map[$CellContext`a 
             Exp[(Part[#, 1] - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + (Part[#, 2] - $CellContext`y0)^2/(
                2 $CellContext`stdy^2)]& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 4, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] + 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 5, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}]]; $CellContext`forceGrid = 
          Re[$CellContext`forceGrid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue]; {$CellContext`AA, \
$CellContext`rightHandVector} = \
$CellContext`makeSystemMatrixAndRightHandSide[$CellContext`u, \
$CellContext`hx, $CellContext`kValue, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype, \
$CellContext`forceGrid, $CellContext`angle]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`getSolutionDomainDimensions[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]]] := {$CellContext`Ly/$CellContext`hy + 
         1, $CellContext`Lx/$CellContext`hx + 1}, $CellContext`makeGridCommon[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]]] := 
       Module[{$CellContext`i, $CellContext`j, $CellContext`nx, \
$CellContext`ny, $CellContext`grid}, {$CellContext`ny, $CellContext`nx} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$icfrom = 
            Floor[$CellContext`ny/2], $CellContext`$icto = -
             Floor[$CellContext`ny/2], $CellContext`$jcfrom = -
             Floor[$CellContext`nx/2], $CellContext`$jcto = 
            Floor[$CellContext`nx/2], $CellContext`$ifrom = $CellContext`ny - 
             1, $CellContext`$jto = $CellContext`nx - 1}, $CellContext`grid = 
           If[$CellContext`centerGrid, 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$icfrom, $CellContext`$icto, \
-1}, {$CellContext`j, $CellContext`$jcfrom, $CellContext`$jcto}], 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$ifrom, 
               0, -1}, {$CellContext`j, 0, $CellContext`$jto}]]]; 
         N[$CellContext`grid]], $CellContext`evaluateForceCommon = ReplaceAll[
         Unevaluated[#3 #^#6 + #4 #2^#7], HoldPattern[0.^0.] :> 
         0.]& , $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`i, $CellContext`j}, {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; 
         If[$CellContext`northBCtype == "Dirichlet", Part[$CellContext`u, 1, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`northBCconstantValue 
            Table[
              $CellContext`northbc[
               
               Part[$CellContext`grid, 1, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 1}]]; 
         If[$CellContext`westBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[2, $CellContext`nRow - 1], 
             1] = $CellContext`westBCconstantValue Table[
              $CellContext`westbc[
               Part[$CellContext`grid, $CellContext`i, 1, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`eastBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[
             2, $CellContext`nRow - 
              1], $CellContext`nCol] = $CellContext`eastBCconstantValue Table[
              $CellContext`eastbc[
               
               Part[$CellContext`grid, $CellContext`i, $CellContext`nCol, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           Part[$CellContext`u, $CellContext`nRow, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`southBCconstantValue 
            Table[
              $CellContext`southbc[
               
               Part[$CellContext`grid, $CellContext`nRow, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 
               1}]]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 1, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 
            1, $CellContext`nCol, $CellContext`nCol, $CellContext`nRow]; \
$CellContext`u = $CellContext`setCornerNodeCommon[$CellContext`u, \
$CellContext`nRow, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`nCol, $CellContext`nRow]], \
$CellContext`setCornerNodeCommon[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`nx, 
          Blank[]], 
         Pattern[$CellContext`ny, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Part[$CellContext`u, 1, 1] = Mean[{
              Part[$CellContext`u, 2, 1], 
              Part[$CellContext`u, 1, 2]}], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nx], 
           Part[$CellContext`u, 1, $CellContext`nx] = Mean[{
              Part[$CellContext`u, 1, $CellContext`nx - 1], 
              Part[$CellContext`u, 2, $CellContext`nx]}], 
           And[$CellContext`i == $CellContext`ny, $CellContext`j == 1], 
           Part[$CellContext`u, $CellContext`ny, 1] = Mean[{
              Part[$CellContext`u, $CellContext`ny - 1, 1], 
              Part[$CellContext`u, $CellContext`ny, 2]}], 
           
           And[$CellContext`i == $CellContext`ny, $CellContext`j == \
$CellContext`nx], Part[$CellContext`u, $CellContext`ny, $CellContext`nx] = 
           Mean[{
              Part[$CellContext`u, $CellContext`ny, $CellContext`nx - 1], 
              
              Part[$CellContext`u, $CellContext`ny - 
               1, $CellContext`nx]}]]; $CellContext`u], \
$CellContext`makeSystemMatrixAndRightHandSide[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`AA, $CellContext`k1, $CellContext`k2, \
$CellContext`i, $CellContext`j, $CellContext`n = 
          0, $CellContext`eqs, $CellContext`vars, $CellContext`uu, \
$CellContext`U, $CellContext`An, $CellContext`b, $CellContext`keepList, \
$CellContext`nRow, $CellContext`nCol, $CellContext`sin1, $CellContext`sin2, \
$CellContext`omega, $CellContext`sum, $CellContext`prod}, $CellContext`sum = 
          2. $CellContext`h^2; $CellContext`prod = 
          1. $CellContext`h^4; $CellContext`omega = 
          4. BesselJ[0, Sqrt[$CellContext`kValue] $CellContext`h] + (
             Sqrt[$CellContext`kValue] $CellContext`h)^2; $CellContext`k1 = 
          Sqrt[$CellContext`kValue] Cos[$CellContext`angle]; $CellContext`k2 = 
          Sqrt[$CellContext`kValue] 
           Cos[$CellContext`angle]; $CellContext`sin1 = 
          Simplify[(2. I) 
            Sin[$CellContext`k1 $CellContext`h]]; $CellContext`sin2 = 
          Simplify[(2. I) 
            Sin[$CellContext`k2 $CellContext`h]]; {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; $CellContext`U = 
          Array[$CellContext`uu[#, #2]& , {$CellContext`nRow, \
$CellContext`nCol}]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`eqs = 
            Table[0., {$CellContext`$nRow $CellContext`$nCol}]; \
$CellContext`vars = $CellContext`eqs]; 
         For[$CellContext`i = 1, $CellContext`i <= $CellContext`nRow, 
           Increment[$CellContext`i], 
           For[$CellContext`j = 1, $CellContext`j <= $CellContext`nCol, 
            Increment[$CellContext`j], Increment[$CellContext`n]; If[
              Or[
               And[$CellContext`i == 1, $CellContext`j == 1], 
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
               And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
               
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol]], {$CellContext`eqs, $CellContext`vars} = \
$CellContext`processCornersCommon[$CellContext`u, $CellContext`eqs, \
$CellContext`n, $CellContext`U, $CellContext`i, $CellContext`j, \
$CellContext`vars, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`southBCtype, $CellContext`eastBCtype, $CellContext`nRow, \
$CellContext`nCol], 
              If[
               
               Or[$CellContext`i == 
                1, $CellContext`i == $CellContext`nRow, $CellContext`j == 
                1, $CellContext`j == $CellContext`nCol], 
               Which[$CellContext`i == 1, 
                
                If[$CellContext`northBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i + 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`i == $CellContext`nRow, 
                
                If[$CellContext`southBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i - 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == 1, 
                
                If[$CellContext`westBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j + 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j + 2] == 0\
; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == $CellContext`nCol, 
                
                If[$CellContext`eastBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j - 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]]], 
               Part[$CellContext`vars, $CellContext`n] = 
                Part[$CellContext`U, $CellContext`i, $CellContext`j]; 
               Part[$CellContext`eqs, $CellContext`n] = -
                   Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i - 
                   1, $CellContext`j] + $CellContext`omega 
                   Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j + 
                   1] - ($CellContext`kValue $CellContext`h)^2 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == \
$CellContext`h^2 
                  Part[$CellContext`forceGrid, $CellContext`i, \
$CellContext`j]]]]]; $CellContext`vars = 
          Flatten[$CellContext`U]; $CellContext`AA = 
          CoefficientArrays[$CellContext`eqs, $CellContext`vars]; \
$CellContext`keepList = \
$CellContext`obtainListOfRowsToKeep[$CellContext`nRow, $CellContext`nCol, \
$CellContext`northBCtype, $CellContext`southBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype]; $CellContext`An = Part[
            
            Part[$CellContext`AA, 
             2], $CellContext`keepList, $CellContext`keepList]; \
$CellContext`b = -Part[
             Part[$CellContext`AA, 
              1], $CellContext`keepList]; {$CellContext`An, $CellContext`b}], \
$CellContext`processCornersCommon[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`$eqs, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`U, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`$vars, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]]] := 
       Module[{$CellContext`vars = $CellContext`$vars, $CellContext`eqs = \
$CellContext`$eqs}, 
         Part[$CellContext`vars, $CellContext`n] = 
          Part[$CellContext`U, $CellContext`i, $CellContext`j]; Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == Mean[{
                 Part[$CellContext`u, 1, 2], 
                 Part[$CellContext`u, 2, 1]}], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, 1, 2], 
                Part[$CellContext`U, 2, 1]}] == 0], 
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`u, $CellContext`i, 2], 
                 Part[$CellContext`u, $CellContext`i - 1, 1]}] == 0, 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, $CellContext`nRow, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, 2], 
                Part[$CellContext`U, $CellContext`i - 1, 1]}] == 0.], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0., 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, $CellContext`nCol]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0.; Null], 
           
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
              0., Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
              Part[$CellContext`u, $CellContext`nRow, $CellContext`nCol]], 
            True, Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
             0.]]; {$CellContext`eqs, $CellContext`vars}], \
$CellContext`obtainListOfRowsToKeep[
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := 
       Module[{$CellContext`rowsToRemove = {}}, 
         If[$CellContext`northBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[1, $CellContext`nCol]]; Null]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[($CellContext`nRow - 1) $CellContext`nCol + 
              1, $CellContext`nRow $CellContext`nCol]]; Null]; 
         If[$CellContext`westBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[
             1, $CellContext`nRow $CellContext`nCol, $CellContext`nCol]]; 
           Null]; If[$CellContext`eastBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[$CellContext`nCol, $CellContext`nRow $CellContext`nCol, \
$CellContext`nCol]]; Null]; Complement[
           Range[$CellContext`nRow $CellContext`nCol], 
           Flatten[$CellContext`rowsToRemove]]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`x, $CellContext`loc, $CellContext`mask}, \
{$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`x = 
          LinearSolve[$CellContext`AA, $CellContext`rightHandVector]; \
$CellContext`mask = $CellContext`setUnknownsMask[{$CellContext`nRow, \
$CellContext`nCol}, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype, $CellContext`southBCtype]; $CellContext`loc = 
          Position[$CellContext`mask, 1]; 
         MapThread[($CellContext`u = 
           ReplacePart[$CellContext`u, # -> #2])& , {$CellContext`loc, \
$CellContext`x}]; Re[$CellContext`u]], $CellContext`setUnknownsMask[{
          Pattern[$CellContext`nRow, 
           Blank[]], 
          Pattern[$CellContext`nCol, 
           Blank[]]}, 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`mask}, $CellContext`mask = 
          Table[0, {$CellContext`nRow}, {$CellContext`nCol}]; Which[
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`northBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -1]] = 1]; $CellContext`mask], $CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]]] := 
       Module[{$CellContext`tmp, $CellContext`finalDisplayImage, \
$CellContext`nRow, $CellContext`nCol, $CellContext`plot, $CellContext`n, \
$CellContext`dim, $CellContext`cond}, {$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`tmp = 
          MapThread[
           Append[#, #2]& , {$CellContext`grid, $CellContext`u}, 
            2]; $CellContext`tmp = Chop[
            Flatten[$CellContext`tmp, 1]]; If[
           
           Or[$CellContext`plotToShow == 
            "solution and density", $CellContext`plotToShow == 
            "solution and contour"], $CellContext`plot = Item[
             
             ListPlot3D[$CellContext`tmp, 
              PerformanceGoal -> $CellContext`plotPerformanceGoal, 
              ImagePadding -> {{20, 15}, {15, 1}}, PlotRange -> All, 
              If[$CellContext`zAxisScale == True, 
               BoxRatios -> {$CellContext`Lx, $CellContext`Ly, 
                 Min[{$CellContext`Lx, $CellContext`Ly}]}, {}], AxesLabel -> {
                Text[
                 Style["x", Italic, 12]], 
                Text[
                 Style["y", Italic, 12]], None}, TicksStyle -> 9, 
              SphericalRegion -> True, 
              
              If[$CellContext`addFaceGrids, FaceGrids -> All, FaceGrids -> 
               None], ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}]]]; 
         Which[$CellContext`plotToShow == 
           "solution and density", $CellContext`finalDisplayImage = 
           Grid[{{$CellContext`plot}, {
               Item[
                
                ListDensityPlot[$CellContext`tmp, PlotRange -> All, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution and contour", $CellContext`finalDisplayImage = Grid[{{
               Item[$CellContext`plot]}, {
               Item[
                
                ListContourPlot[$CellContext`tmp, Contours -> 10, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             40, $CellContext`ContentSizeW], $CellContext`plotToShow == 
           "system matrix information", $CellContext`cond = Part[
              LUDecomposition[$CellContext`AA], 3]; $CellContext`dim = 
            Dimensions[$CellContext`AA]; $CellContext`n = Min[30, 
              First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
            Grid[{{
                Style[
                 Text[
                  Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                Style[
                 Text[
                  Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                Style[
                 Text["eigenvalues"], 12]}, {
                $CellContext`makeScrolledPane[
                 Transpose[
                  Partition[
                   Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`n], 1]], 
                 45, $CellContext`ContentSizeW - 20]}, {
                Style[
                 Text["A matrix"], 12]}, {
                $CellContext`makeScrolledPane[
                 Normal[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`n], 
                   Span[1, $CellContext`n]]], $CellContext`ContentSizeH - 
                 140, $CellContext`ContentSizeW]}}]]; \
$CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       260, $CellContext`ContentSizeH = 405, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> True], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           2, $CellContext`forceTermUsed = $CellContext`a \
$CellContext`x^$CellContext`n0 + $CellContext`b \
$CellContext`y^$CellContext`n1, $CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 2, $CellContext`forceTermUsed = 
           
           HoldForm[$CellContext`a $CellContext`x^$CellContext`n0 + \
$CellContext`b $CellContext`y^$CellContext`n1], \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.53984020258309*^9, 3.539840288099449*^9, {3.5398406788210645`*^9, 
   3.539840690936103*^9}, {3.539840772642478*^9, 3.539840774568223*^9}, {
   3.539840807063349*^9, 3.53984087983959*^9}, {3.5398410649120913`*^9, 
   3.5398410672638903`*^9}, {3.539841106028813*^9, 3.539841146021891*^9}, {
   3.5401003093818417`*^9, 3.5401003389490967`*^9}},
 CellID->870091126]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell[TextData[{
 "This Demonstration implements a recently published algorithm for an \
improved finite difference scheme for solving the Helmholtz partial \
differential equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Del]", "2"], "u"}], "+", 
     RowBox[{
      SuperscriptBox["k", "2"], "u"}]}], "=", 
    RowBox[{"-", 
     RowBox[{"f", "(", 
      RowBox[{"x", ",", "y"}], ")"}]}]}], TraditionalForm]], "InlineMath"],
 " on a rectangle with uniform grid spacing. Dirichlet and Sommerfeld \
boundary conditions are supported. You can specify different source functions \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]], "InlineMath"],
 ". You can prescribe Sommerfeld boundary conditions on up to three edges of \
the rectangle at the same time. You can vary the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " value and the angle of incidence ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineMath"],
 ". The numerical scheme is converted to a standard system of linear \
equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "u"}], "=", "b"}], TraditionalForm]], "InlineMath"],
 " system, which can then be solved. You can view the generated matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath"],
 " and its eigenvalues as well as the solution data using the dropdown menu \
in the top row. "
}], "ManipulateCaption",
 CellChangeTimes->{
  3.539249597851964*^9, {3.539320840839024*^9, 3.5393208469222965`*^9}, {
   3.539325995336062*^9, 3.53932602823874*^9}, {3.539326059555217*^9, 
   3.5393263629422417`*^9}, {3.539326407336379*^9, 3.539326421862224*^9}, {
   3.5393265160786877`*^9, 3.5393265263674946`*^9}, {3.5393265567823563`*^9, 
   3.5393265626861067`*^9}, 3.539327568323806*^9, {3.539328056952354*^9, 
   3.53932805857456*^9}, {3.5393850582390985`*^9, 3.5393851256216545`*^9}, 
   3.5393852065579324`*^9, 3.5393864425188794`*^9, {3.5394443970355*^9, 
   3.539444440996298*^9}, {3.54550082737666*^9, 3.5455008284317656`*^9}, {
   3.5455029129105053`*^9, 3.545502948812727*^9}, {3.5455030211567183`*^9, 
   3.545503123499963*^9}, {3.5455904991105967`*^9, 3.545590518956546*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
    False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
    0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`event$$ = 
    "plot_changed", $CellContext`finalDisplayImage$$ = Grid[{{
       Item[
        Item[
         Graphics3D[
          GraphicsComplex[CompressedData["
1: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
eCEFtxF/0UkD5odGhWn2vyV+1Oad7KCOk/AtynMZxG87OLrHvaa4XzuJ3+PT
MjcrVvQjHHkSNTub9kwX82dM21rny/y41FzH0kSV9o9eRHwm6HnxvrHKfR3E
Y8RvKedO+7uN8FsvEo7ULpRvf+S3Wju726p4kx3wbzHFbgbx+G7etNCxIn8/
QnyQgtuIPyilS7Vf2ubrH/m/tz8sVbUO6sdGPLnqOAk/oDyXQfy9OvTzOdkz
iOyMfCsU3TqJJ1azs/nXKh5UfLGhu5P2a8mfIq5t/+Fh51od6HnxvtHKffPP
l5YRv/Rs0ucB6oPwyGGHDqUcRT07iH9zi24f7bvoY8FxI39/xW4G8SSmrFr+
ogXaDfVgFYUuuuI24v8+oU/Lg4OwT8lB/IPYebeKGHWchFuiXJ/LIP7QpX91
XN8jf/1B/ghFt07iCamk2tmcl2QRlZR146+1HQjH5/vjwPaUxeWwrwb9PUV8
V23v3h1+yO8gnhIXJ3n+Vh3PfTbCw1ufbFZkRSjZH/mG16n41o2K+eswzbti
NyOf/3qp4a065vsj4p0U3Eb8N4bWslTNwr4LB/Fb7zWpnOGP+7uNeN5Vx0l4
XorrcxnEv75lx/AiB7De7SR+y4jACfGXKM4knhjNziaeIFaU+znw5ahwDd8n
lrwd8e6pmtj/g3ozxDfKfSl/I462WrjueBPM29gIP9+zUtEzX5EdiD/CKzHc
p1Y9sgPy/6nYzSCeKu/W/W7wjXz9I95ZwW3E7xZw7M6Y6/n2x/9nn3Bsyca4
Mpr9E8RVdZyEl2jt+lwG9Jf8nvv91lytqMc/hijd0KfzxLudCEee9Zqd3eRn
v9c702e26qHbH04UyeieODff/njf1sp9HcQzrGSL9sd6Yl7IRvjj2XOib37T
Tbc/hOxwRtcuj3l4tMM+cWbT7S3+6/B6g3g8i2y8Pi8V92vUg5tbBwUn+0Oc
wuMg/h7afZEnTx0n4X2V5yL7Q2nN/sh/RLGbk3j2snZOgM/ZeTGgnDKPZH/o
oNkfeXbx+ofDmv6R3xjP6XAfOP1ddUv6B3de/zBU0z/+vx+09Qf5//RU/Q55
4nn9w9EgVf/4d7m2/iD/ZmXdIP1DHLvOJMMMbV2S6xhUVtYxWn/gGLv+JEME
v/5Dc239R/7TOeo6jPwp7PqTDHnX2PUfWmjrP/Inavsv8sX4qfsO8rTk139w
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
3Hit/06ITbwUey8UDg3S/NomhiS9iI8/Xtui+rVN7ImJvvSiWP7vPCDeKjO6
UfT+zppf20SJdfVjBs7CdcxKeOGcOrXGnGyF+ifctg8O+o3G91mSCR9d+Zvk
MvO7aH5tE5NmLuhYorL+eyM2YaypG1cnpjeu53S9+XvCTXDeCdfmXSBeuVTN
0xO+xOdNIHy9vK/q1zYRJcep+vUbPcjnknYg3EexQxrhrdeadlP92iYaSzur
fm0TR+S8qH5tE7OMr54GZuJ53E54pjLvmYR3kjpR/domfpK6Uv36zfxKHap+
bRObmvzqEXUT8xg5hH8pda76tU087276herXNnFa+pHq1zYRLP1O9Wub/B1X
zAPnEY7zi/VO85sh2i32aVjpTHvNrw3hNWRwm0XbIjS/NsTHbYsHX1+A7/vc
I3ziAd+n/dzx90lyCH/1ePGjdZERml8botH4rQ2+a99d82tD3PWdv+nGoM7a
fm2Iueti6v8yB+2fSfj+hL1BnaLyf08D8cPfbVmbPDtcXn+L8AP+SSv7tPXT
9mtDvLej6YMxMfrv4xkislWgZcWcbppfG+Lv8bGzvtmA8b+V8AbBzWfUrBio
+bUh4OLYYkm7db82ROKr78/2e9lT82tDHPI7ef+4ge/v48cQ95rFx8X4dbfg
eRLxof/+Dhj6Vx7h2rwLxCsr855AeFwD876qXxvishwn9usgXrz3R09q/a7/
Xp8hrrZxtUMa4SsnmHZT/doQy6WdVb82RG9lXm4R3jLAnEc574Q75Lyrfm2I
r7dNXzQgtovm14bYrugqm/CXig7vEJ6060HPDunYz5BDeLEnps5Vv35j/xzH
qpqP2mj7tSH2Kn6US3hNxe8eEj5Snd98fnV+cd6hKe/XUI33a0iU41H3awNs
d83xy+cl/C/p15i3RfyQtI/m13CP92v4UNpf3a8NWCznS84v4ad4v4Y83q8h
gPdrCOP9Guy8X0M16ddYp0cc9a/5NcTzfg01G7F+DTekX2t6AF9VD8Qzkvd3
0PRAPC8Wsf4Owby/wwU5fnUfN+CEXMekfQh/wvs7+PL+DoN4f4cyvL9DD97f
4byiB/J32C33Bc3fYTDv71CnrqlPdR83oJfcp8zv5O/wUup/gOrvYJH7oObv
cFP6l+bXMIH3a5rHAYpf2+BuSdd4jOJwqMnH4TCcj8Mhpicbh8NOPg6HUTKe
Uf3aBtbtbBwOl/k4HHrycTjY+Tgclsj4TYvD4TQfh0MIH4dDAXE4/HmXjcMh
jY/DYRQfh0MLPg6HrTIOV/06f77iFL+2yd+1o/iNcE0PxDNEOZdRfA4T+Pgc
LHx8Dgl8fA7Wu2x8DlY+Poe6fHwOG/n4HMbKc5bUA+E/8/E5BPPxORzn43Pw
2M7G55BU1TxXmt8pPofmfHwOU8PY+ByeSv+KU/zaJn83jM5ZhGvzKL87oP0Y
1/wJ5c1gFJ83A9/GbN4MMD8gn4vwVD5vBudl/kH1awcYfN4MnCXZvBns4vNm
UITPm8HtPDZvBnf4vBl8UYvNm8H3Z9i8Gdz1YfNmUEzml1S/dkAKnzeDSvXY
vBk0DzPzZqpfO8BxUMm3EE9vNd9CuKYH4ok65ZpHpXwa/Mrn0yCSz6fByXlm
nlDah/ByVdh8GiTx+TS4U4vNp8FePp8Gh/l8GmTx+TSYxOfTILwkm0+DRXw+
DdbJPLD5nfJp8BmfTwN/mWfW8mnwg8ynqX7tAC0vSrg2j/K7E44o9Q6qc8Es
vs4FFfk6FxTn61zQhK9zQTRf54KTfJ0LuvJ1Lrgzm61zQdUwts4FEYZZH9Hq
XLCIr3PB7nfZOhfEDGTrXHCdr3NBO1kPUv3aCR35Ohc84+tc8Lla5xKIu8s6
l+rXTvm7Q1QfIVzTA/EsU+qeVP+C63z9C07x9S8YVMGs60n7EF6Nr3+BWwRb
/4KSfP0LXvH1Lyh60qxjSj0QfoCvf4Gdr39BNF//grCebP0LThZh619wM4Kt
f8Edvv4FT8qy9S+YI/1RzmO+3eTn/wB/d4Yg
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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

                 "]], 
                Polygon[CompressedData["
1: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
TqRHpRjrh+AI+NopyvYG66jrU7TdDKwIP4+2l4BB2oCkN0yh+41pbQDvCA4r
wqbumcdrrEGZ3AK+N3i0iBjXXin0jbagc+7cq3PUPcaBvgLbkn6hCJmrvbJN
Ct/kbrA1fM8UtuZDWZ5+XIXfYp2hKeS1a6vNo+2zFXgO/nxuv2UK+0A74YMq
7BN11SX+5hT7R1/lLrCH812FD3JctmfcU+6tb3P7lVP4q/qtd1cxPmW9MY0R
Kdb/sSLmYO8s//WtteFPTOEvNy0jJjs2hX1vbK/M5UvUcYaM9yrfR6aIDb+Z
51P5qG+iDhidQt84N/rcu8KPShE7nQ/GuT58a9E68iwbD5YsI4Y4LusT+1Lm
+r0pdcSuWlXh/62UwlfdF3R1beuQLcYAjQX2Ju/wIvZEL397FT6SeX3yfGoX
OOfag8pmZb0++GPw6VX4aPpDPSjvliK2cQZYC75GCt/lALC6a03dqVXkWdY9
RduDc32/pw8/Pu9PZY2y3jPzXB3nSVmsz6nv+V4dsSfPmP6n/qq2nDrhSfjT
dchObXBtcfene2t23n/qSnXPcrn+1Dp846WqsNdtL1c+Kifdn+5t96R7U3/b
uVb+zcjnu20V8tHxGr/Q1lUnzapD76h/OuS0861NajykL98b7B5Rd4L14YM8
00X4KKbbpIhdbAjawpcFmxThEy8Hv6wKn1D/cZkUutZYUtssb2xjW33GdvCL
qoiD+M3WpFulkB3rgyVSxFu0zeq83u1TfNs+7ds61h0Mlsz7S1tXnaYe7ELe
GMpOzvtPeaQtqM+hP7IqOBV+GlgNPqsKO/GCLK/WBUcU4bP3zeXG6J0j52pg
Ct/OOXKuVgH7w6fk8225c6nPvR78ySp88CNJD0gBuX30h/cD5xThY/TP/bs2
5vXL7fVBJuTvXV3HvcN72X/1vkfdqUw0/qw8MIbfLtuPng/3+kFgzRT+qrFJ
YxjGMqaliI8YJ9kOzEkRi9KnNb7xRQpf83p1dIp4gb6/8+F9xacpbNmHtPFT
6Ifunq2sX8yz7OHcfobzW0aM7Mmc1rfVB3/CsdQRtzR+6X3LU2C3MmJ6xh+M
QRuLdg6NZ7iennXXwLVwTV3b0/P59/7Gb52vDQofV8cdg7/J36a8cq8oo5XV
xl+MJR7mmFPEB4wVHZHHt0MdMVvzjBc8kqKuMdxHc9rY2g65vf0ZZzHeMo/0
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
Z5lvOnzvZDzUOyjtEWOZ/wM3we1k
                 "]]}]}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0bkuRGEAhuGx7/tg6ChoUFAoUdCMSmXf92WGEIMgUepoqFwADYk7IBGu
wTRcgCW2oPGcRPHMmy+TzPn/OTXj8Z5YSigU2iNoKqs+0jSdDNbsTM0im3U7
R3PJI2HnawGFbNpFWkwJW3aplhFm2y7XCirZsSNaRTO1HhzVyeA7ovaRnnMb
nMd+0J/gNx36xG7QToa5sRN6wCnP9pXe807EpQo8s442OuxeXWGZb5ePa4wl
vuxFXWCeT3tOZ5nh3Z7WKSZ5syd0nDFe7VEdYZgXe0gHGeDJ7tc+2mlynnot
5MN5M+ykXnNG0n0OdYMRLu0ubSTMvv3rv3nkjlH7Qo/ZpdWe0m5agndmV/+/
/z/rjDYu
               "]]}, {
              
              Line[{1038, 1037, 1019, 639, 1020, 1021, 1022, 1023, 1024, 643, 
               1025, 1026, 1027, 1028, 1029, 647, 1030, 1031, 1032, 1033, 
               1034, 651, 1035, 1018, 1036, 1039, 1040, 656, 1041, 1042, 1043,
                1044, 1045, 660, 1046, 1047, 1048, 1049, 1050, 664, 1051, 
               1052, 1053, 1054, 1055, 668, 1056, 1057, 1058}], 
              
              Line[{76, 77, 670, 78, 79, 80, 673, 81, 82, 83, 674, 84, 85, 86,
                677, 87, 88, 89, 678, 90, 91, 92, 681, 93, 94, 95, 682, 96, 
               97, 98, 685, 99, 100}], 
              
              Line[{1079, 1078, 1060, 687, 1061, 1062, 1063, 1064, 1065, 691, 
               1066, 1067, 1068, 1069, 1070, 695, 1071, 1072, 1073, 1074, 
               1075, 699, 1076, 1059, 1077, 1080, 1081, 704, 1082, 1083, 1084,
                1085, 1086, 708, 1087, 1088, 1089, 1090, 1091, 712, 1092, 
               1093, 1094, 1095, 1096, 716, 1097, 1098, 1099}], 
              
              Line[{151, 152, 718, 153, 154, 155, 721, 156, 157, 158, 722, 
               159, 160, 161, 725, 162, 163, 164, 726, 165, 166, 167, 729, 
               168, 169, 170, 730, 171, 172, 173, 733, 174, 175}], 
              
              Line[{1120, 1119, 1101, 735, 1102, 1103, 1104, 1105, 1106, 739, 
               1107, 1108, 1109, 1110, 1111, 743, 1112, 1113, 1114, 1115, 
               1116, 747, 1117, 1100, 1118, 1121, 1122, 752, 1123, 1124, 1125,
                1126, 1127, 756, 1128, 1129, 1130, 1131, 1132, 760, 1133, 
               1134, 1135, 1136, 1137, 764, 1138, 1139, 1140}], 
              
              Line[{226, 227, 766, 228, 229, 230, 769, 231, 232, 233, 770, 
               234, 235, 236, 773, 237, 238, 239, 774, 240, 241, 242, 777, 
               243, 244, 245, 778, 246, 247, 248, 781, 249, 250}], 
              
              Line[{1161, 1160, 1142, 783, 1143, 1144, 1145, 1146, 1147, 787, 
               1148, 1149, 1150, 1151, 1152, 791, 1153, 1154, 1155, 1156, 
               1157, 795, 1158, 1141, 1159, 1162, 1163, 800, 1164, 1165, 1166,
                1167, 1168, 804, 1169, 1170, 1171, 1172, 1173, 808, 1174, 
               1175, 1176, 1177, 1178, 812, 1179, 1180, 1181}], 
              
              Line[{301, 302, 814, 303, 304, 305, 817, 306, 307, 308, 818, 
               309, 310, 311, 821, 312, 313, 314, 822, 315, 316, 317, 825, 
               318, 319, 320, 826, 321, 322, 323, 829, 324, 325}], 
              
              Line[{1203, 1202, 1183, 831, 1184, 1185, 1186, 1187, 1188, 835, 
               1189, 1190, 1191, 1192, 1193, 839, 1194, 1195, 1196, 1197, 
               1198, 843, 1199, 1182, 1200, 1204, 1205, 848, 1206, 1207, 1208,
                1209, 1210, 852, 1211, 1212, 1213, 1214, 1215, 856, 1216, 
               1217, 1218, 1219, 1220, 860, 1201, 1221, 1222}], 
              Line[{376, 377, 862, 378, 379, 380, 865, 381, 382, 383, 866, 
               384, 385, 386, 869, 387, 388, 389, 870, 390, 391, 392, 873, 
               393, 394, 395, 874, 396, 397, 398, 877, 399, 400}], 
              
              Line[{1244, 1243, 1224, 879, 1225, 1226, 1227, 1228, 1229, 883, 
               1230, 1231, 1232, 1233, 1234, 887, 1235, 1236, 1237, 1238, 
               1239, 891, 1240, 1223, 1241, 1245, 1246, 896, 1247, 1248, 1249,
                1250, 1251, 900, 1252, 1253, 1254, 1255, 1256, 904, 1257, 
               1258, 1259, 1260, 1261, 908, 1242, 1262, 1263}], 
              
              Line[{451, 452, 910, 453, 454, 455, 913, 456, 457, 458, 914, 
               459, 460, 461, 917, 462, 463, 464, 918, 465, 466, 467, 921, 
               468, 469, 470, 922, 471, 472, 473, 925, 474, 475}], 
              
              Line[{1285, 1284, 1265, 927, 1266, 1267, 1268, 1269, 1270, 931, 
               1271, 1272, 1273, 1274, 1275, 935, 1276, 1277, 1278, 1279, 
               1280, 939, 1281, 1264, 1282, 1286, 1287, 944, 1288, 1289, 1290,
                1291, 1292, 948, 1293, 1294, 1295, 1296, 1297, 952, 1298, 
               1299, 1300, 1301, 1302, 956, 1283, 1303, 1304}], 
              
              Line[{526, 527, 958, 528, 529, 530, 961, 531, 532, 533, 962, 
               534, 535, 536, 965, 537, 538, 539, 966, 540, 541, 542, 969, 
               543, 544, 545, 970, 546, 547, 548, 973, 549, 550}], 
              
              Line[{1326, 1325, 1306, 975, 1307, 1308, 1309, 1310, 1311, 979, 
               1312, 1313, 1314, 1315, 1316, 983, 1317, 1318, 1319, 1320, 
               1321, 987, 1322, 1305, 1323, 1327, 1328, 992, 1329, 1330, 1331,
                1332, 1333, 996, 1334, 1335, 1336, 1337, 1338, 1000, 1339, 
               1340, 1341, 1342, 1343, 1004, 1344, 1324, 1345}]}, {
              
              Line[{627, 626, 638, 639, 654, 655, 670, 671, 686, 687, 702, 
               703, 718, 719, 734, 735, 750, 751, 766, 767, 782, 783, 798, 
               799, 814, 815, 830, 831, 846, 847, 862, 863, 878, 879, 894, 
               895, 910, 911, 926, 927, 942, 943, 958, 959, 974, 975, 990, 
               991, 1006}], 
              
              Line[{4, 29, 1022, 54, 79, 104, 1063, 129, 154, 179, 1104, 204, 
               229, 254, 1145, 279, 304, 329, 1186, 354, 379, 404, 1227, 429, 
               454, 479, 1268, 504, 529, 554, 1309, 579, 604}], 
              
              Line[{628, 629, 641, 643, 657, 659, 673, 675, 689, 691, 705, 
               707, 721, 723, 737, 739, 753, 755, 769, 771, 785, 787, 801, 
               803, 817, 819, 833, 835, 849, 851, 865, 867, 881, 883, 897, 
               899, 913, 915, 929, 931, 945, 947, 961, 963, 977, 979, 993, 
               995, 1008}], 
              
              Line[{7, 32, 1027, 57, 82, 107, 1068, 132, 157, 182, 1109, 207, 
               232, 257, 1150, 282, 307, 332, 1191, 357, 382, 407, 1232, 432, 
               457, 482, 1273, 507, 532, 557, 1314, 582, 607}], 
              
              Line[{630, 632, 642, 647, 658, 663, 674, 679, 690, 695, 706, 
               711, 722, 727, 738, 743, 754, 759, 770, 775, 786, 791, 802, 
               807, 818, 823, 834, 839, 850, 855, 866, 871, 882, 887, 898, 
               903, 914, 919, 930, 935, 946, 951, 962, 967, 978, 983, 994, 
               999, 1009}], 
              
              Line[{10, 35, 1032, 60, 85, 110, 1073, 135, 160, 185, 1114, 210,
                235, 260, 1155, 285, 310, 335, 1196, 360, 385, 410, 1237, 435,
                460, 485, 1278, 510, 535, 560, 1319, 585, 610}], 
              
              Line[{631, 635, 645, 651, 661, 667, 677, 683, 693, 699, 709, 
               715, 725, 731, 741, 747, 757, 763, 773, 779, 789, 795, 805, 
               811, 821, 827, 837, 843, 853, 859, 869, 875, 885, 891, 901, 
               907, 917, 923, 933, 939, 949, 955, 965, 971, 981, 987, 997, 
               1003, 1011}], 
              
              Line[{13, 38, 1036, 63, 88, 113, 1077, 138, 163, 188, 1118, 213,
                238, 263, 1159, 288, 313, 338, 1200, 363, 388, 413, 1241, 438,
                463, 488, 1282, 513, 538, 563, 1323, 588, 613}], 
              
              Line[{633, 640, 646, 656, 662, 672, 678, 688, 694, 704, 710, 
               720, 726, 736, 742, 752, 758, 768, 774, 784, 790, 800, 806, 
               816, 822, 832, 838, 848, 854, 864, 870, 880, 886, 896, 902, 
               912, 918, 928, 934, 944, 950, 960, 966, 976, 982, 992, 998, 
               1007, 1012}], 
              
              Line[{16, 41, 1043, 66, 91, 116, 1084, 141, 166, 191, 1125, 216,
                241, 266, 1166, 291, 316, 341, 1208, 366, 391, 416, 1249, 441,
                466, 491, 1290, 516, 541, 566, 1331, 591, 616}], 
              Line[{634, 644, 649, 660, 665, 676, 681, 692, 697, 708, 713, 
               724, 729, 740, 745, 756, 761, 772, 777, 788, 793, 804, 809, 
               820, 825, 836, 841, 852, 857, 868, 873, 884, 889, 900, 905, 
               916, 921, 932, 937, 948, 953, 964, 969, 980, 985, 996, 1001, 
               1010, 1014}], 
              
              Line[{19, 44, 1048, 69, 94, 119, 1089, 144, 169, 194, 1130, 219,
                244, 269, 1171, 294, 319, 344, 1213, 369, 394, 419, 1254, 444,
                469, 494, 1295, 519, 544, 569, 1336, 594, 619}], 
              
              Line[{636, 648, 650, 664, 666, 680, 682, 696, 698, 712, 714, 
               728, 730, 744, 746, 760, 762, 776, 778, 792, 794, 808, 810, 
               824, 826, 840, 842, 856, 858, 872, 874, 888, 890, 904, 906, 
               920, 922, 936, 938, 952, 954, 968, 970, 984, 986, 1000, 1002, 
               1013, 1015}], 
              
              Line[{22, 47, 1053, 72, 97, 122, 1094, 147, 172, 197, 1135, 222,
                247, 272, 1176, 297, 322, 347, 1218, 372, 397, 422, 1259, 447,
                472, 497, 1300, 522, 547, 572, 1341, 597, 622}], 
              
              Line[{637, 652, 653, 668, 669, 684, 685, 700, 701, 716, 717, 
               732, 733, 748, 749, 764, 765, 780, 781, 796, 797, 812, 813, 
               828, 829, 844, 845, 860, 861, 876, 877, 892, 893, 908, 909, 
               924, 925, 940, 941, 956, 957, 972, 973, 988, 989, 1004, 1005, 
               1016, 1017}]}, {}, {}}}, VertexNormals -> CompressedData["
1:eJxUu3c8l+/7/y9KaCkpbaKivYvS0aCprEIRiVKR3TAiM4SMUtKSUUYlUdI4
aJAkZGTvzdNTU5T6el/H+frcfr/3P6/3rVu3q+t5Xud5nMfxeNwfMgettA4J
CggIbBgmICA0+N+lUUdONP3jgwD7X5pCckvngD3kbx1t/eZuPcidni0W8KAD
5EOiNuFPW9AbL+sZfbUcjn4wE8/T5kGPn5SgUbUlpIW8N1AcwscjSnu2pR7M
B6+59XwUjwS1DWMPiw3+3xtLrtxInvcYUna+Ltgn7QSen/pW+H2ox/ytLdfl
L3eApKzE5XdrfUCv59/ngaeNUAJTJeSWtgP/07g7syRPwSxpt9KNzZ9gw8v9
KtbB3dBwX0FVySgE5p0XWuZ2io+/C/8Jpilko8aj6uSfT4Nh+eHdvBUKfHys
/S08z/cDiPt03N8iewfWvzYch/f5EJmeeciiLRMP3c5VPqzjB9+GbvINkquE
nS2eb8/2d6FPYOwc/WxXiA729k5rzIGalh2qnjp8NO6wPPm7zAGWaN4w5mfU
oLBZ5DIR8S7ct0H4dpemI6jT87EtjZ6fH0nPP9TNF7nWegkaa4/kyH7jg8gj
e7HfZ+Ohpm6uhGAfH2peVBgrC0XjoY/1q0QNzoN+ZVio/4FOCLIp0RRzq4Py
vuo9yUp3YKhqKd/MsAObs7ucbkk3wHrd0sb5Tu5gmBOyq+1HOV49WyJ2FXjg
9u31rLV5DhDZk7q1dyMPRDUfq35rKQebr+lGW5tPwJLSp1qvf/LBL/JbnqLS
XdR3fjnO7aQVyHYfr74SEYOvgw4GqP3iQ+zNfHXf7Z7Q/bSoMsCoBUWXTy/n
1bVAc4uYzr+VJrBlTsWUv5/rQDFvxx2JFZ1wK8HgvOQ9Z9DLmRE9NbUKh1T8
3Nd9pQuGeLhO5F/0hd9aujOHDq5//rRT8euHvQI7iUNRWt89YEXBRvtJZd2w
y2L17Kxhhbj/RfOx1cf9wSquzmfI1Q68st/riu67epyjALdX+56D23UX/qjv
5aOP7fT0j/dyYP2fbTl6vFPgem2+8Nr+tyjQOn78GS8+GAfsOLXWOAB8ExVm
eI3nQ1yO/DCFEx9Bb+fvKQ+FnUB8XrzSEc0iXDtpcZexUzeOX3zlsN+XKFhv
uudU3p1u3JR4YFuZ9iescXCd+8M3CHrmRq6d1PoWXUx318x04oN/TrDDwvMJ
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
xvl+htFZb5UbNnah2fO2UU9vfwKLyMTOzIx6UGzGu2o3O2B4mqGvGd8dRr/e
WmKg2oA3DX1WzFftANAf46m4yRluxH4u/lncgckTtPPmm9WjacYPQdOjkTDn
kciQXctqYbd5tMqbrk68EmI+v3XddVB/Vaha5lQOgduGnjy9l4fKJtO9348M
gsZvO+yCcupBvPOBckdoBz4ufrZXJCMSLEJv1u5cNjiPz4m6ETvvAywr0nvr
9uMGlC56FFz6b7A/K/lpZjKiEg9mHTicGXIeBII39VyqbMLd8/Pnf9jUhoWp
pdvlzvnBMkuvmKcOzfBR5bVF6uPWwSMg+3JfzmB/dXuW7Jq5dRA1c1eZbHgn
eJ/ZPmr1pltwZXFiY9e7dgzVVJw86evgfuhJdFRP84edG9Rfmy0qh+mfjevF
V/JAxyo4+Fb1M+itqBWp9+Th5o3nAoZfK0O3ynH31sVFQmXq2vk1oXxYpxTs
2Hz9DXg2NUmNWhYMFRv2uors7YBtqS21EnMacKTrt1+OH4KgN9zS0vg0H5J+
+R30KMtCd+PoLvfht6BdJ61v/anBOv/XdJx/81tMbpAeVfP8AYSc/TV50eD6
7hDoG7V4Qy14D6n+a/LaCzxzdw5ohleA50B0QesYHn55C1UWB+Ng56Wlp0VH
8qBHa6fAsZIKfHMqaehPtSAYKd5ztif1BqzZczFj89JIfLlwYnvS4FzqP9A7
1yisA16+1Jnb+WHw+2Z5yxyeGQSHyxMElx7kofqdQLn9GuVoq2tTLnv0ImzJ
dGm/u7gFe4YUj5Qf0QptNzSip8VdgdFvpfoP3HkHKVE7Uyea8GH6odxdsunX
4fL76fEuDk/his4/n7gSPvjkVF+YknARduUnCGbq1OJO2YriyJJOVA6z2hFW
cB8WZPSF1RXyoSZG1L3wezo0H9bcuUTLB0qiVFPyo9tw6q7XTkJHm2DqlWXC
C9s9oT3gwJaX7XzYdOR+l0VYMih1WWo8sPeF1VVhs3jGfPj+QNbEo+0dNra7
fsLVoaCRqV41XeMl5JvKfa57w0fblOiJ8fahMOvoycMqp66hh9c0P9/BvtWs
VdHZ29INBJ8d9mwu6UDhWOfDWyzrYfR1Y7F/o+wg+vny3yZu9ag7XT3uqGcH
zNEovH5u30sI8Hg4ZyC/FaQOrp1XZNQMbycYbDj03hMMNo02rQ7owlEptkKv
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
            "]], {Axes -> True, AxesLabel -> {
             Text[
              Style["x", Italic, 12]], 
             Text[
              Style["y", Italic, 12]], None}, BoxRatios -> {1, 1, 0.4}, 
           ImagePadding -> {{20, 15}, {15, 1}}, ImageSize -> {260, 
             Rational[395, 2]}, Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {All, All, All}, 
           PlotRangePadding -> {Automatic, Automatic, Automatic}, 
           SphericalRegion -> True, TicksStyle -> 9}]]]}, {
       Item[
        Graphics[
         GraphicsComplex[CompressedData["
1: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
6Xn8O4XT8zj+Qc8DpT4n4aZ5W2xCGyZI8Qy0YfHMIYpn4L0inlGDA4uPMuh7
8vul0Pfk+At9T46LaLxAOd9j0fRx96SN3nFSvAi3WbzYguJFOMvixbMUL8IO
Fi9WoXgRlijiRQ3sYfEom5/8eWk0PznOpPnJsZbmJ8cFND85Dk6Z9LbS5Ahs
2utmS0u3WDCIqDHv0MhIXNN2gWeqYxysDAz+VNU4Cl/oNxs393g8+D3Zc/ho
p2isXyMhTbUrAercHty8ZrMYXPr3tPWC9Ymw8PK3h3a1Y/HZhwlVshYlQQXS
T/48KV5wuBh8++7zOBg1ddKXxnEasLvtUtD7bjIsW3K8x7bcbIgMNZj/JSoV
jmx+bZXyKwfqF5+Offpd8odakNYLzD7x+zP7xDGzTxwz+8Qxs4/yfCL7KIxn
EPqZxPXc1S4J5j7xHzHsrhaWN+rSq2t56b55UI2tx5g959cze84xs+ccv97b
d4F+t0DUBBj0rHEhEdyjvvaYEu2PM3O36d9engA9Rmz42+K9L4bqpf4dPSge
/qq+Xbow8CkONR6So6kVJ/kj+fuSPxLe3xMrT7DtsjMpATY6XpzVa0UBDD1y
rJp35zQeT5wyWvei5pREHk/0Zutdf/Kf8nwj/8mxC/lvMFnRovbW7CSIJP/N
/j0VTMlfy7+X/DXHIds6VHk51wMXGo2fvOh3BIxsdP5iYowbrjytNvQeEAWf
Vj2ZMC3mMm4q2lJS2yaaP0+6XnqehKV4ompe31HJq+V44sHVoAn66niw1Dny
vF7RI1gV62WSZP5vvEdkOp7RfQCxzz1CbvZNhEEHH3r/7XADBt+4Y7rRIAF+
ni3vGX/FEa7bXY8Y/jcOUj2z9IZ3lfI9sVA0a30V54bFHEv7Bfc8KjVwvRID
SVG9NmirFPD+y/oOW76FF+DaLTZez2pEgnnUNr3Jz/KxWqVHhysYR/N4pxkb
r2iaH5DH5ocXzQ+wZPOjH80PCGfzQyejdH6AND8O5o5ul+8qnxsOdGgUe9Q/
l+M/Y3P2dkmRz3lL8VCbTHg36J+dqLNyUvDtTdm83+LEmldNb+aha/P0Y/3N
YmFFcceo7MZ5GJ822TWsdwzsn5iV6n4sF6tdDfGZ3zgarjy4krv1rxYHzx0c
/flPJDytPfOzyXotrm3xMO9wllyX78L0a7l68+fpgXJdxvHagfvHHc3k2GNQ
rYaDJ2dxHLd85o3uTeS6AWYfcLt1pZCXA2S8v+fuY2+nRUG/A93tbTfI9z/h
ZNzb+blcl/PSe+P64jQNbj5Sv4nh8H+/5/qO/V+csvHT4wqf6/pFweiT++1/
L8jB9emfwisMiOTx1jVmz96SPYWWzJ42I3sK1syeriV7Cq+YPX1B9hT0mT2t
T/YUrJg9XUr2FJ4zezrFadUanVnp/H3PJWSP9uybJn8PvXktreqkctxwbOK3
5oXJHE/fbREZHSLylWgwc/vhL2AVzXFErtmqN54RUO5mpz4hP+O5vFODzuMm
eqtxxa4pDWsY/ft+7+/1rN0/E+2CzUYfM46BHWE9Gr/zykSP2mNtagyMhpW3
HumcMMrC6Okjbh0bHAWz9htpzTyz8MvVwUk1hkbC2PnP3tXqo0F9bb/qx4fL
fBmTmf9cePVQ594z5TrPs3E2Ab6zIzkOqrl8+qgFURx/NplZ+G5JNMftto/d
O5PnC+U6nzXXF3qMXxcDsccHNvvd9S3vz//abtHA5Rlou7jy8bQ9sh+9xuKJ
sENR4xP+rXtseu/4sud7IjxfOd14ZNc0WNZIN7M4PgHumae0eVg9FWb8PPDO
8kk8XO4zv06LvGQYk17d9/XZOLDTz/59NCQJjANPuhlZ/9OfTZnxf14E8udX
Ot9s0ok3ARwPX/HgLLgixza3Wx+c98iH4/u5F7bsfuHFcc9tu+BM/0ccb5zi
frTy1jscH3o4315r68TxvdoXa9atn46TSxZ9KMyPgFu1Rr+P1EnD6e+f1ur2
NxJca36MOVWYgpYfanReXTcanGpcfTopKRnnfZw3+n7bGLhUffylOsFJuOjT
44VFxrFSvAqXWLzaleJVuM/i1W70fnyc19L7cbyf3o9jKZ5zejYj7nWDGFhC
34v369L34ngQfS+ON9D3ku9H34vj4CcLTxzISsR182sN6HkiBixvOn9b+EYN
T81GvA8+Gwth6z75rXmbCRcztTvSz8fDkEGj928LzYKdNnbVvtonQiHNH36/
JTRfOT5P85XjVzRfOf5C85VjNl85jjq3abzPggjci2lVHT/EwCjzjnpN90Zi
7YpdRvaPigbvaikx269F4cVxW2wTPKKgW5CdQ2pgNLY/+cpn86lIcNk1bM6Q
rBh8FFvva8N1Mp9MVbYeax1UbHByRA6873NE9aZnIry6Uarv/PlSvBbU4EPB
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
OrfDLYo3HGxqvD6/Xea5czgVd/SFdaSMbzuZFVlFyTjQqo7BgmgZp/SJGTkz
Rsaf/5xfZx4rzEc1ptl11N8S/k9PKgzqmar/mvdXdg4rbvckjOP1IweMrLNK
hcdg5VA950BoSfEiDGXxYm2KF6E5ixf/ULwIv1i8WEjxIiSxeHHKtRFxLW4E
8vtfGzZh/qZzARxn4b0Eh6rI8Z5f/kWjtN7yfO0fU+HTqycc0/xS4aZFsy+P
Dffi+P3OzQ3mVXsJY2P0n7xL9ODyre6umgB/3DheNHfybL9Tlziu4dh117eL
2zmu/fR4f7/0dGy8sfkayzhPuJm+Nn1Z9XR8Gncq3qP9Mxhaecr+ev3ScJpx
xaGVt/hCQrd+nf0WpOInBxs3yzcIa6cZRC6zS8HXvzdWSTweAFV3/t5UzzsZ
7e8/8N1rFAgu11VN/TRJuGxu7tpu6S/5uRp3tj7oT+/P19k16P05Hk/vz/En
h9L353gcfW+OHel7cxxN35vj9fS9Odaj781xPfWyO5W/JWC7l5HTapcEQJ++
YV5Jl+MwPKZPutVmb1hldjpo6m81WGZ99C/n9Ar6n0u/pH8kE+z+dmheMzoE
KqZ02ZDcMAv8DeZs06/0FiJbbR1/5VoWfOh7JqF1/zC4sjy41fweGmgzKaRv
95XvYAzNT/58HZqfHDP9wYjhJRMaffGF86Q/vP886Y+MSX84Pkf6w/FZ0h8Z
k/5wvLzr33tX50fgvh/Tvjc4/RLWT5i1xrR1JK73dtrkWysQtq3y7PE9KxLn
bs37uOBoAOw7rvfh+o0onDCgz7qqVf75t3srHlksi8aNn36mzK36HM6Hvdrw
t2MMmm84EX9X1xuuFhoa3c2Pwc6fWkV9/yl9dw2UO0Tr/+ZJpfZI/h4s3k6z
ru+bfI2vi9BnkX9eZXtvqEH2kcv7kH3k2IrsI8eNyT5yHEL2keMk59rt/psV
jBFVLu6baB4IRouW+PePeY0bRpnkrY3zh9Ptns/SNwvFHlWSr7Z55gtF2nqf
vwSHo83eriuWBnnxeN+N7b/Evjq07visPLi91qbJUQyHjg+Gvs1Jy4WfdWbs
+RQRCjsufGszfGEujH/UL3e2+g1E7nLfeSlHC5emNDIP/hgCbZctS/iyQgsF
n7886VExmO/nLnE7Z+0/wxv8yN/x9zckf8cx83ccM38n6w/5O47vkb/j2Hbg
F48+xwKRtaCz/L3dy/8CkLVQrmtivNs0P2Qt6B56dyrk8zNkLZTPDBqvPeuJ
rAW31T/rrU0ugHGL7X9Y6f+LD5feDjqeng85Y6YEZHR4A5vnzdx8JzMP9nXR
OzSj/ys4SvEEf59VFL9wPILiF3l8KX7hmMUvHAdR/CLMLx2dafC+k+5SyW4U
gifbb5Xi30IWz0rxr54ynoVeLJ49RfGkPB4UT3LsTvEkx0MpnuTYLGjzrc8G
D/DZm8W6Vi0uwJaZ8f7lxrtgr0nRuW5z3eDkk+R5/Qr24960/svDLzyE7RQP
8+tnUzzM8RCKhzluQfEwx+bNZ5fU2FiInS6f6Vp38hOwHt/o+OCvhWhSaXG9
C4v+xcc2kR1XbynCOWuMvjfZ5AfPrh99deVnEQ4q2LsmYkQApESNXPhuRzGG
OK1UnzYNBFtab0Antt6wo/UGZLL1Rj9ab4AZW2+MofUG3GHrDel96P08+ftI
WHofCUvvI2HpfSTcrfvM3Brt5Ovzig+/+bqwgOMb7t531M75HC9Yl38sLF3m
KTvx3MTWOb4Ard63Nfm88gTkzY2xs+1agDen1V5musMFRukuujx3bz5+7NFg
138t7oGL68c7QxLz0Gl/zfGeqkeQfHhv25ez5PsNf191ul9BLse3Zpw89HSn
jPX8G3o/1JPx5vaX8++6yDx2aXatm93sI2Mp/t5xvdKu2vo3YQPTU6n9tIz0
VGpzu5CeSm3eQdJT3qpJT6VWmifDmb0xLKnzpuItmecwu/eK+YZDcjh2enB5
5ZAjeWi1f0elFkZrIfjD7fqqtnm459cXtHA4CUV9n/ruDsjFWxfM/Jq1vQwN
tgQtaj07F5c1njxnQ4IrDPKNqhH0TYu/snemzmx+Bxb8TX+85KwWx8yaer/F
Q3c4PLzQskoPLdYdlr+qbuwjiHza39lTJ5M/v3+3PxM8lsrY6dqLH3fDZVyl
8cGbbn2zOF5jN36K6yUZx5fXK+dUXv590zPWHTzr/xbuGgWn5DYI4PH+N6U/
ghqLyR/dHDlxSeDoDH59y5IA2+TXGvy7s+R7aw8PiE58XpzzOwd1lvass8e/
B5xJ0izcmJ7O5U0P7HcYWlXGFXu1fVe9dxrHfqkvK8Rbpsrz4/CiAS4HUjju
3rfC2lXuyRxrVdeuGyfJPLpLyL/DYebf15B/h83Mv9uQf4fFzL/vJv8OU5h/
P0L+HfYz/36a/DssYP79Ivl3AIV//xf/j6D4ZUxM4dc9GQn8fSIGZaTlnIvj
eM76yjsnVclE30ZrvJsvewiPVNMPLrPJxLbj4tNDw+9BlYluJ3dpMzFqUcQ4
y7AbMPv5N4fzM7Lwz5/TK+IvXIWHncdeuxeShTP67B/25ewpqOzocPelsQYP
TfDxcTu5EmJSrC50Oyzzbm+ZvXPfnAuRHDdLO7XO7noUxy/mXJ/j9yha/n7p
T8cXBcQI+qfGxdei4j+7uoMBxY/Qm8WPQyl+BN1Yih/DjUJjroYG8+uT5+Zc
/tHwrTxeh3SXTp0fznH42Lobbw0M5DjxUWDfAav9OQ4emFdwbpgPx6m1J6z2
uiHz7lei+B4GsfjeieJ7iGHx/QCK72Eli+9jKL6Hio4U36+m+B7esfi+CsX3
cFEZ38NSIb5vvFixXoGWu2i9crdk+/QJ3vf5+w07VOdGx7ouHM/YZR/VyG0/
xyMjPyff/6cfVo5dgvRiHsOh1Z6Wn6ql46banUPa7faAt9U3pvY3SsMKVSef
32J5F2rd6jNn1/xUbPpx4qXrT67DpFGf0l4eS8Fl3g4m1wyvwNnMR3OrPf23
PrE7Y/4z9iTE21qrJmYmoXHDFVmOFithC70fSM9vTe/HcR96P47jTQMOjRmu
gqq+cy86LPWCCydDqjh8yYCKhaFhtfa/4Pv95U/QevQNjSe/PpLGk2N3Gk+O
/Wg8ObYdu2p0+48JeL1uXG8jm4vQVXdWrVaX4vCL8/B1rQa4w2uaX1w+lOYX
x+9ofnGs38ll1uEfanhuXid2XIwXXKmq72Q4KxOKTf11akZ6Q5vc45pnzzLB
cOyaLu/CnsPtkPKdLRpnwe1Wte+OWewPPdy2rM2zyYJAp+yAW5kB4HWw2HNP
QhakNPeLr7YgEAYvXfzTwFgDny+dK1yhkva3NLCV7T+8IX3k77OG9JHj+qSP
HD8jfeR4Dukjx/+19mj0YWMEaoNPfjm24xE4ba38ecicSLwdu1r30dMHoImc
HXV0VBTubeLbyHSTG3Tq+PhBQrdotJxftaumtzOssa12vG2jGFxhdm/fL/UZ
GE32it8/iewVx9J6ZN6NwT0mPLsBp0uWRbZx0ED/7h/6Rlp7wdMD/61dmJEN
fdcGNsxM+mc/yd7z603I3nP8p2epvef4Kdl7jteRvee4M9l7jrPI3nN8yGzK
267dgrFkwfTlrtc8wPiNVZdm119jq/gpZkdX3IKckbuP12gaiq8jPp+52OIq
nA+4UPTzdDg6Zu9tOCziABSTP+P3q7t1d4nBqDwoPu2+smFgICwNn97U8GUu
jMyq2rS7TwD4tuo2pv3wXOi34tX5E0sQ6m6usKGrvxayam757D/NB5a9Tbra
e4gWTrl3nvJhlBfPJ1iz/cNo8uf8eQPIn3PsTP6cY+bP5flD/pzjOPLnHF8t
HFi/beMgbJD86FhL/TkwDc7csn0QgD8e6M253u0yGLSK3fH0qC8a1rkzM2vw
XTgUtNdtzVNPbKVppzvww2NoSvEPv5+K4h+OZ2+Ld3OoWwgbC2dfWzLuJXTv
fqS+V/kCeO7bwSKllj/oZg6yjfmUB9X1c8q53pDOZf1bX7D9aBYv8vuxeJHj
2xQvclyH4kWOt1C8KL8fxYscT6L4GnqzeH8DxdcwnsX7Fyi+hoUs3vem+BoG
s3g/leJreM3i/S4UX/P7aym+5vg6xdccz6f4usz7SFh6HwlL7yNh6X0kLL2P
hKX1g23NRjvspz/m64clriMv1BvlztcPDpu0C5otd+PrB+p34usHwiehHvGS
8vYF8ZLy9hDxkvL29IiRbv3vyTy7w5f3a9mtTRHHH+w62re6KGPnx030GtUt
5tg8qeah6odlfGc4/LodUMDxnGznxRHf8znWO1Lh3eeeMl5jfWz+wqaF2GFU
La+g448wZXRQ6+u9ClA/+tapm7vccGzTP5rsMfkY0Hu11cHgM3iF9AHGMX2Y
SPoA3dxJH3RIH2Ay04cFpA8whulD2O5JG94dlHmea0z+5aJtImPTNjcjy7nn
cnz08ySdJiYyfvvqV7c+CTJvdzX7m7MnrJTxuOUWx5b8X7ze0nqnwo3S9Q7u
qexs3Mcmm/eHnjesePxPDsctPSyqtZ3y730On7Po4PwQx+zVqV8uNRd39aky
tE7EPVw79X6z1MW5+GeaJily9g20b2/Z/lmRFn982JffJv4y+n+v2vPcZi0W
r9k53FRzHLVvvQas+9/75H3/cM+sBj6ZN3HO6ytB0C5hzxDd2QvAeeAZzdeQ
19Dd4evQI+HOcKxh/Mp2H8Ng9Z7y3V0GevxbX5jM/JQl8/g/mT+yWfCYTI7P
46gMh7sy3thszPWVelkcT902djlskHGfxHFd6ybIuH4/0/dZA2Ve+gkPO+xv
NCAbf19Z8WOk/SVs7vTwVoNVOTh8Wp6Lrp87Pydx/yb5r8mRk+1rnYqAlZ22
Vos23ANVH14bPiA3Es61HNjJ9cwVwNMfCxYPi4Yf5y4t7V79Nmy0HnHhlEMM
xITVnD1qyUPI2T5puOXydP78b0Pdbu+9mcZx1Yp/697RpHJs8HrqtqjWMu50
/G7m9/kpHA+cVN7U0CmZ4/ENZj0ekyb/PyG3rastSV+ayHG//ustih7Ec7xn
yoVyj1Rq9M2fsqlzhW14xPJr50GDM/H3wPMde1icxtOLpk8LcsjEGoMvbJya
eRkvrvSyNfuSiTVbhM4b7O2K1zY0uhNvkYVnr4ZWithzG+9u3xw770EW1jy5
ZJpHW3d8vC/+b251DZpHLLn1o+ojLG/bYHzfmYngdVsnfldtd3hWN2P5hpvx
0Cp/tuu3ky5g4NYl2sBG/n+AniVPtK17LpLjGbWtu1Z7GMXx1+Hnk8q9ixbm
vxpn0HoDTRIdB+Qekv+fp3IFxu1ObQzh2O9PXJ3+C95yvK3Oxt8qs3COa9Xb
Y7istxpX2uvVGHbRAwdTvA2jWby9m+JtmMbi7SCKt+F1FYq3q1C8DdkfKN42
pXgbKrF4+wTF2zCMxdvRFG+Dqh7F22NnPe5R0Fh+/8CYwKxTPgEcb71yo+ca
b1+OV58JcvD+Lf8/Y2cS14952ua+rB85EwapRzhx7Os2evd8fWuOTdh6YhH9
PjzI1hPr6PfhG7ae+EW/D2uy9URDWk+gOVtPzKXfh9J64jT9PpTWEz1oPYGt
6PtCbYfS7wuT6H35vmMvel+Oz9L7csy+D8e+9H04nkPfh+MR9H04LkfzEe/T
fERPmo/4J690PnJenUqutH7dR/oClgWl+gLHSF/AYFCpvsBZ0hdoSvoCl0hf
QI/0BVxJX+A06QswfYFqpC/A9AXGkb4Am7/8fX/ml85fjh/S/OV4Gc1fjuuS
PsnypE8cW5A+cfyB9En+fmTv8E3nUnuHDcjeoZlhqb3Dt2Tv0PJ8qb3DPWTv
sEp4qb3DUWRfoRXZV2hI9hWqkn2F62Sf+POMyT5xTH8RuIHWD6gi+8n735P9
5FiX7CfH9ch+ctyG7CfHfcl+cjya7CfHXuS/cD75L3Qn/4XLyH+hG/kvvE7+
C1uRP4Va5E9hHPlTuEL+FNaTPwXD6aX+FBzJn8Loj6X+FF6QP4ULa0v9KeST
PwUd5x//86eQQP5Rfj/yjxwz/8gx848cTyH/yHFv8o/yfCH/yLG0HqhB8Q9O
Z+uBD7QewOZsPdCY4h+0Y+uBphT/oLR+Gcn2X9dS/AUdKf6CVIq/oDXFXzCO
4i/IofgLtlD8wt/nBcUvHJ+heBJWn/jpU//7fmDxJFzbMdyycbIDsHgSQhxG
dI2xdAUWT4Lfp8V3m4TeARZPQlL7l+c8LntI8Rq/f02K1zieQPEax8cpXuM4
jOI1+XqK1zg2pXiN49sUv8r6RvErx3UofpXHV3leCV3ZeaUEyh+gETuvxPIH
eDaGziu5U/4Ape8l3U/6XhKWvpeEpe8lYel7SViK58fS90cpnj9L3x+leP4F
fX+U4nlv+v4oxfOJ9P3ZvlYhptN6D6tRvgeGvi3N9+BYyvfAfMr3YHPK98Ap
yvfgJGV+BDco8yN4QZkfQW9lfgRTlfkR7KLMj6BWmR/Ba8r8CM5V5kdwLq13
cSetd5Gtd9GX1rv4V1263sVPjUrXu5ikzIfgMGU+BN2U+RCsrcyH4CZlPgSF
fIikj7iV9hP4+mYq028ztr7pT+sb/GlI65s5TL9nsfWNOdNvId+BWmW+A+vQ
fggW0X4ILqH9EBxO+yHoQ/sh2IX2Q1CP9kMwhvZDcDHth+A22g9BIZ+BQj4D
hXwGCvkMFPIZKOQz8AjtB0EB7Qdhb9oPgl60H4SptB8EjSNL94PwAO0HwaWc
0v0gvl6YSesFvK/Md+A52v/CGbT/hb60/4UmtP+Fp5T5DhynzHegrjLfgT7K
fAdaK/Md2EWZ78AsZb6DtRpU034jTqf9QfhB+4N4ifYHIYz2BzGD9gfhBu0P
YjvaH4RdtD+IK2h/ENxpfxBBmc/AEGU+AxvS/irepf1VvEz7q6im/VVk+6uo
T/uryPZX8Sbtr2JP2l/FF7S/imx/FVNpfxWH0P4qfqP9VYxW5jfQRpnfwObK
/Aa+VOY3cLkyvyHFhxhF56nQhvafoVu90v1n7ET7z6DrUrr/jK+V+Q2MV+Y3
UKPMb2AI7Z/jBZ/S/XM8RvvnmFxQun+O0cr8B6Yq8x8Yrsx/oFqZ/2DzVYVn
6fwUx992luYjENh6ZzJbD+xh6515bD0grXeS2HpAWu98pPUOSusdfbYekNY7
49l6QFrvlNB6B+8r8x84QJn/wIbK/AfWZOezWlL+Bq+z81lI+RsczM5nzaH8
Dcax81m/6XwWsvwNhlP+Biux81mXKX+DV9n5rFWUv8FlyvwH1lHmPzB7pyL/
wdcP89l6NEiZ38BQZX4D3ZT5DfRS5jewBjt/pU/5s3/6TeevHtL5K4xU5jcw
TpnfwBRlfoN9x1i8RuencDblF+EF5RfxIeUXwYjyi1iZ8ougpfwiWlJ+Efr8
Lc0vogflF8Ge8otYkfKLoJpYml/Ed8p8Bm5U5jOwiTKfgf7KfAYuUeYzcJny
PBZK57HWUb4Wt7PzWHMoX4v72Xms8ZSvxRPsPNZayteiPTuPNZbytejCzmO1
onwtDlLmOzBUme+Q7D+qKf/N8Us6j4W1Kd8Ne3aV5rvxFeW7QSe6NN+Nx5X5
DxylzH/gX2X+A4X8B65V5j+wozL/gRnK/AdaUv4ePSh/jwHKfAabH0F4nM43
oDOdX4BGdH4BQ+j8Aqyl8wtYTOcXwJHOLyA7vwAL6PwCsvML8JXOLyA7vwCj
6PwCsvMLoEfnF/j6oZDWDxihzH9gP2X+A68o8x9YUZn/wJXK/AfGKPMfuI+d
55LaCuw8l9RWYee5eMvOc0ltZXaeS2obKvMhqFbmQ9COzs/Aczo/g7l0fgYC
6fwMmtD5GdDvWXp+Bq/S+Rl4Qudn0ILlB1bTfj5uZPmBGbSfj/YsP7CP9vPR
h+UHqN8J01h+gPBJvg9kTee9MFGZb8GhynyLFI9yrKfMt+BmZb4F05X5Fine
h7qGFO93UuZLMFuZL0EXZb4E5yjzJViO6iXwPNVL4Oc2pfUSeIbqJdD1Wmm9
BJ6kegn+/aTrNyrzK/z7SdhHmV/h30/C0vqD5Y/4+oPlj/j6g+WP+PqD5Y/4
+oPlj9CGnRfrxdZ7W9l5sUK23qvEzotNYeu9RbTeg4dsvbdVWQ+Clsp6EBys
rAdBoR6Er8f20Hm/f+tHRT0ItlLWg6CHsh4EhyrrQfAunW9ESzrfiKfpfCO+
p/ONyM434gE634hb2Tkt1uI3dk6LtVjAzmmxFnPZOS3WYjY7p8VaXKWs78AR
yvoO1FfWd2CRsr4DA5X1HXhCWc+B8XSeFR/SeVbsROdZUadu6XlW3EnnWdGM
zrMiO8+KF+k8K7LzrJhL51ml+4IRs78pdP4Wwun8Lfah87ewic7f4jE6fwuD
6PwtZtH5WzhO52/RV1n/gUL9B+5V1n+gUP+B45T1HyjUfzD7ocXrdL6Xr4eK
lf4Q8pg/XMrOWx1k/nstO2+1gfnvrey81Xzmv/ey81ZmzH8fY+etNjH/zc5T
wyTmv9l5amDnqbG2sl4EfZX1IrhcWS+CDZX1IvhSWS/C10+fqD4b05T1ImhF
5+HRgs7DYz86D48H6Dw8VqDz8OhN5+GRnYfHIjoPj+w8PLam8/BSvAYhLF5j
8SBI8WBPdp7qJYsHhXoSdFTWk+BFZT0JXlLWk+AlZT0JXlbWk6CRsn4EdZX1
I1iVna/qyeJzF3a+KpzF5wPZ+aoVLD6XzldVofNVuIqdr4pm8XlFdr7KmcXn
V9j5qrUsPp+hrC/Bm8r6EsxX1pfgIWV9CbZV1pfw9ZAr1WOgqbKeBJsq60lw
mLKeBDs4KOpJsAWrtwaqn0Gp3tqA6mfwJ6u3/kz1M5jL6q0jqH5Geh9IUa7X
QFqvWVO9Dhyieh3srawfwR93FPUjaKCsH0EdZf0ImivrR/CKsn4EE5T1I2it
rB/BWsr6Efn/UWDr5UtUTwWnqZ4K11M9FRhTPRWOpXoqSKN6KmxB9VRQGUrr
qfAL1VOBBdVTISjrRfCvk6JehK93TlN99z9/rKgXQXtlvQg6KOtF0FFZL4KO
ynoRvKisF8ETrL7amurd0JLVV9eiejfsyOqrb1G9G35R1lejVF+dRvVukr0B
uw+0X7Ob6u3AlOrtsCBRUR/C1x9HqP5Osn+831dZDyLZP44bKutBMFBZD4It
qa6Qt32pnhGqvC+tZ8QXVM8IV6meESdSPeM/f1Zaz4gpVM8I2VTPiMupnhE8
qJ4Rv1A9I2ynekZ8pqznwKbKeg7cpaznwExlPQeOUtZz4G1lPQc2pXpSDKZ6
UrxK9aQ4jupJ0YTqSTGM6klxHNWTojnVk6IZ1ZNiFNWT8vXLJbbfuonqYcGc
6mFxO9XDQjOqh8U9VA8Ln6keFg9TPSykUD0snqR6WAikelg8oKz/YPPDE2Op
PpbHt4NYPCrFtxYsHpXi22UsHpXiW2DxqBTfvmHx6EplfQkOV9aXSPETx0XK
+hIpfhLetxAcWXwp1IdgS2V9CD5Q1ofgYGV9CDYn/h8cTfw/2JX4f3Ak8f9g
c+L/wRHE/4NCfQgK9SEo1IegUB+CUj33L6p/QaGeG4V6bh5PH6X6eHxI/Elw
g/iT8Mv4Uv4k0O1ayp+EB4k/CeYQfxL2IP4k8Cb+JBT4i1DgL0KBv0iaH5DF
5sdpJZ8Rpiv5jLCLks8IJb7KNVT/jxaMr7Ii1f+jwFeEAl8RCnxFKPAV8fzE
dOJPwEziO4Bg4jvAIOI7AA3xHeBN4juA8ltL+Q6wLvEdgCHxHWAc8R0AEN8B
XiS+A5hNfAfYT8lXhFMZn6Ub8UHgasZnmUR8EHiQ8VnWID4IdGJ8lkOIDwIF
PkvMVPIXoYGSvwgnKfmL8JCSvwhRyV/E4+udxJ/BMeOzRAviv4Dy1Ur5L3A0
8V9ALeK/4PG3PfMHG5R8RviK+Dowg/g6MEHJX4STlfxFGK7kL8KxSv4iHh9n
Eb8Jx4zfBI+zevA1zD/+x+rBqyv9I9xU+kcYrvSPoPSPsfCI+XfG34KriL8F
GX8LMv4WlPgpHxJ/CzL+FmT8LSjxU34l/hZk/C3I+FuwRMlnhBuUfEb4Tcln
hNuVfEZYTslnhPuVfEY8v7CL+HAwTclfhPOITwf9iE8HjYlPB9cSnw5aK/mM
MFvJZ4QzlXxG6KDkM0JbJZ8RLlXyGaEhqwcfzuLZWqwevIkynoVPLJ7NYfXg
YUI8a8fi625K/iLcp+QvwhlK/iJk/EnI+JOQ8Sch409Cxp+EjD8JGX8SMv4k
vMr4KucTf5L0fBCeD8LzOZb4KLcRvxSqiE8K9hCfFG5Q8hdhjpK/CGcp+Yvw
opK/CPco+YtQ4C9Cd8ZXOYv4rjBZyWeEF4jPC8yJzwvbEJ8XNCE+L/QgPi/I
Jj4vHEJ8XuBBfF74lvi8YBvxeeFM4vOCUcTnxePRoVSfjMVKviJJHzj+puQr
QoGvSNIHjvcr+YowiHjPeNuKeM94u5N4z3ibTLxnvO1HvGe8ZbxnvJWe85z4
3rAj8buBO/G74QfidwM74neT7C9sZvsdSUr+IhT4izBMyV+Eo5X8Raij5L/E
XCX/Je5R8hfxdWUo8e+hD/HtQX3i28Pf0aV8e1DdvZRvD4H49kB3WynfHu4h
vj34Rnx7mKHkK0J9JV8RTlTyFeEBJV8R+ir5irCDkg8TMxgfpjfxD6Ij48Nk
/IPI+AdRl/gHsSHjw7xB/IN4gPFhjiX+QRT4ilBFfIvQkfgWsT3xLYJeWinf
Iq4ivkX4QnyL+Jj4FiGV+BaleAp+K+M5EOI5kOK5YCW/EU5X8huhVslvhDZK
fiMe/7qwePCUkr8Ik5X8RdhWyV+E/Yi/HBcRfzl6En85hhF/Of46UMpfjkbE
X44Hib8crxB/Of+90v1OKPmLUOAv4vGmLvEx8XjTmviYeLyZRXxM6E587rCc
+NyxPvG5gzXxuaMd8bnDduJzx2QlnzoKfOqoUvKn43z2/7u8IP5TZPyrIM23
TMZ3yfhX8RLju2T8q3iH8V0y/lVszvguGf8qnmJ8l6PYfDui5E/HICV/OuqM
U/Cn83i2LfG1op6SPx3Hsf8fpiHx2WIy+/9hPhGfLUr/P0wU8dny/WBfpu+/
VhB/5RRmL9SMv3IUsxfLlPzpKPCn40MlfzoK/Ok4UMmPjqeV/OjYgfiC8Rfx
BfP48gmznxHEVwz7ia8YTYivGOoQXzE+Jb5iuEx8xdiV+IqhA/EVozPxFcNj
4ivGaUq+c7yg5DvHBCXfOTZW8p3jLCXfOY9Hf+aX8h/jixsKfnOcTfzP+Iz4
n/Ed8T/jFeJ/xmHE/4x7iP8ZQxj/5HrmjwW+cjyj5CvHl0q+cvyk5CvHNkq+
chT4ybEV+/9g7IlfGzuz/w/mNvFr8/93xZXFJw8Z36SZMl6S+CbxBuObnMXi
JWfGNzmXxUsXGd/kYhYvLVfylaOukq8cjZR85bhMyVeOjkq+cqyj5CtHIyVf
OY5T8pXjO+Jfx63Ev45+xL+Oy4l/He8T/zoy/nW8QvzryPjX8Tjxr2M/4l/H
v8T3DjOI7x1bK/nJ0VzJT46zlPzkPB58TfzwuFbJT45VlfzkaKLkJ8dNSn5y
dFPyk/P9U5f/09V5h0V1dA08IrEmCiIWBKNRUbFgNILByIhdsMUKmoAFjCL4
KsaGBYwGYqxREDUawFgwaDA2VMpRsSsgAhGD4HaWZXdBYxSxfTw555797v41
z3lm7tx7Z06bu3B+dB44QPUpI+h8s4XqU8bR+SaS6lOep/PNQqpP+YjON/5U
n/I1nW9GUX3KjnS+AXk9c153b6zHD3Pk9c1hl7y+OeTI65tL+s2yVX1zsOLP
gBV/Bqz4M2DFnwEr/gwEE3/mEvISOF+tkp9HRTmdR4n3IIj3ALHIexBPkfcA
vsh7EIuQ9wAtjsnqo3P+uAf5D+Avr48OVvXRJX/Fclt5fXSYLq+PzvlmsPz8
L5bQ+X8i1bP8lb5fLKB6lgX0/WID1bO0pe8Xv1A9S0/6fnGW6lkupO8Xw+X1
0yFBXj+d88905HVAsLx+OmyW10+HNHn9dLCqnw635PwbOEH8mxnIN4FOxL+5
hXwT0BP/xgv5Jvy99b4Kvx8doHqVy+h71Xh5vUpwlNdL5++n/4z7j7cCj6k+
+SisPy7lI6IL1h/nv5fYiLwc2CCvtw6Z8nrr8FJebx2s6qnDKOLXvkF+LVwj
fm0X5OdBbQDya32Rnwd5g5BfuxT5efy80nxmeT11zq9mY313zq9isL47f5/s
jbwfOIU8QJGNPED4vOY/HqBIQR4gJMp5fXBfzuvj743NkF8DE+W8Prgj5/VB
OPKIoB/yiADkvD6w4vVxfuWMvCX4i/g4VaQ/F+V8HJD4OLmkP29Qf4Q36Q/p
s9hN+jxYzvcDWznfD/yR/wSzkP8EcXJ+HwyX8/vgmZzfx9/vDiC/ivOnreQ/
rHh98EbO6wNf5GVBHPKyIAx5WVCCvCzYjrwscEZeFpyX8/sgTM7vg0/l/D54
JOf3cb60FfljcJ34Nk7kr9sT32Yx+etw4ttI/voy8W3akL+24tuAFd+Gv+fN
o3gzQM73g1Ti76YiTw06EX83HnlqEE/83SjkqUFT4u8uQJ4aPJTz/aBUzveD
J3K+H6jlfD+w4vvx97r9yI/j/GsE5QMv5Dw/WEx83W7Io4MtxNc1II8OCuQ8
Pzgv5/nBHTnPD7oiX0/0R74eTEK+nmiEfD1Yg3w9UYp8PTiGfD2Rhnw9OC3n
+UGwnOcHO0NkPD+YQ3xeqd1OfF6pvUR8XqmtID6v1ObLeX4QK+f5QXaIjOfH
9xXIRwRX4sskU/7rTnyZ05T/quT8PiiS8/tAI+f3QSDyGeEs8hmhH/IZIQb5
jPBYzvfjfKgh8nthKfImRUfkTYI/8ibFJORNgkDepPgeeZPQDXmT4hzyJjkf
aYg8FiiS8/3gbznfDxRyvh/o5Hw/sOL7AfE2gXibYMULBiteMFjxgkGzRMbv
s/y9K/JFwQv5oUKF/FDwQ36oAOSHghWfDxbK+XzQUc7ng0I5nw9aEh+4CfJO
YT3xgS8j7xQWyPl9kr9kWRA/pg+dtx8QP6ZxLJ63Q4gfo6LztpRPZNP5fZec
5wfD5Dw/eCrn+cEC4gknIz8WzhNPWI/8WPCW8/rgIzmvj/MRR+TdQgjxXu7S
944DxL9zQb4d5BH/7iLy7Tg/IX4wy92QH8xyDvKDIUPO94NCOd+Pv1e1o/xg
qpznJ8VzlsNG7HZcpD4Koz8P+NNjsZKfV+rPk/P6OJ8YivxAzieSkB8I44kv
/I7yozziC3ej/MiW+MJ+lB/9hfmRiKD8yJN4xfjWCs53fkdeMjxBPjL3ByMf
mWUD8p9hEfKfYR/ynyET+c+c73Si/VpH/OAE2v87xA9W0/4rkP/M8w9G/jPL
RciTZvk88qRZTkYeNrVKGIQ8bGoV8HYp8oHfX0B7WU584Ayyl2vIx+b5iI/N
8gvkY7N8CfnaLHdBPjjkIR8capEPDr8hH5zzmVzyD3OI95tI/seK9wtAvF8f
8j+Life7i/xPO+SJ8/0zkCfOciDyxK32VwvEN2d5A/LNoQfyy3l8PPLb4TLy
2zn/0CJfGAYhn90yHvnsLD9DPjvLUj4wDHnxLMcgLx7uIh+exz9HPrxlv5Fb
z62UT/Sg+BdE3F5qwYrfC+eI20stKIjbSy0UIu+e75e17z/ePcuT3Va0Oz4+
heXfXvfqGnWrDPraGMIvd1BCBPF0XeT5i5Dyl0V4vZCvR72fezapQe0GS17r
cemzYW8aKEGNz8Pji/B5WF5bvdO/z3d/g0PuwQZhO1TQXH+ixj6iBGbdTh0f
uF0J+xW3fnzxv7/g0PWL+yZt4/UW2ygfO0783WOUL3Yk/u7PlC/uJv7uGsoX
Jf5uCOWL2bhf/DxVuF8sS/mAx7uIvR+/UYAn6gv370V9YbkW9YVl5ZO0kQ4z
6uNx9cNDm1Pr17/JuafZTsXQc9Pfq4K2qTg/+JHyb4ePvl38212d2LTrce48
hzL4GPWZ5yP7gzHfDRwduFEFbdB+uD8d7Ydlf7Qfluvz8J12d2/AzO7ZeYu/
qZ/PNnd6qf9dSK36JloZrYRhjuNcjury4U3a28+mHpbsXS9i6TxTELrDZHxZ
KQLdlF1d7R6DJi+0QfBbvfhirttbzw/L4UX/UY6lNnrRev+y4rF19edd9C9W
63kdqssqDQ2uK+Aq+ivuL0V/xfJz9FeW93mqf3/P6Qqk/jwxvskBJcdzQwye
F8/OGOTYyMskjEc0bmOVf0PS0zDf2pZG4Rix5nLwwDLYuiU5yqA1CG/vVtOj
Nz+B++iPef5T6I9Z7oLxRQSf7pk1fYIl3opl6oN+k1VgRH/P4wX6e6v3NYlJ
FI/+wXjE/asxHlnkrPG7kmr2Q0K7IWnu36v5/lK/FO9UrouSi/z/X7wz2U7/
fI4aNrbN3P11zyr2SzYntywZmWWkVgMxQ3R9H9pUUauuP092Tdt3uJLHd/T3
DprA53HJng3Qc/uvKxXXNCwvKTqS4WSrhvzBw/ukuOSIuTG2vlX19lnWomPy
9ZALInL3Z8kHxli4BFW03w3/TNqWHW6Ak7P8Bi1spwWX0at81pyqhJtPPzV2
m6UBz7KJ/3r+owdlbF2i6qAaJi3rfvz5QD28dnkwJVGhArXPiF2ne6j5+cwf
n5y54gsNy7WPHLt4+WpZJv2FuW32FkdWaFh2b26cndVTDfOzXhQ5P78pjk26
eqfWxhLfhpN9Zam/7NU+RMnzpb0T3/uuqwDbqfEPEx9oYF9M10OmUC1Ul65+
OeyyCtYnPTN3V5bx+LXRb4qn2z0Q4aEnRNQhJcTftR8T1rtIKK4lx3wXZ+HS
9if/YrcwI+RwX8u5s6akYO/qA/ydGH4dGZOf7KbmtsQ3MyxeaLh1mPSs6eap
Wm5nRnm4RXxYbLWfKgh8ooiIzldL/ldI/rcJ+l8RQP43Dv2vSJT537+Flb8X
/cnf181s0DjA9Sbf5/uKgLM38/NZbjE00uzRTAmjHUvnd/TTwP79b+smd7vM
/YcwHgl3ikcBR5zGpm8qB5sU1atTCZbvLPoM293dYzWQjnFUpMviqUp4y+Oz
2ETxeRbej+uYVneOsFc+eAQv7S7+uKRSAyb3OQ52Rx7Cy4RTTX98oAbjkEmO
YmUxvOiY8lNihgo+nPXf+/H1a/H9WJbixakFXi+CHCy/u6nOButs8lSwG/MR
kSPLR7RigjyfEZson5mF+8fz++yOTRpxpgjObbH/8MxrFdijvljeB/WF5e9R
H1nW2gyPsvnlBrRs4/qv4xsVzPE//22DE/cgvGpY2rRoDWSgvlu9z3Vo9WR9
o0hby/+RNIn2LcuszyOPY74qjlO+OgTzVTGE8lWyV2Flryy/QntlefLj1075
eVeg9cvsG2eWWf6v/1L7hO2KXzTwFvN14U/5egrm6+Ik5euSfz6zPbnF2RA1
xKF/4/k7oX+zej+TyCP/uQf9J/dHK+ZlpV7cL77yCH0ZG6WBiiwwPWto5rxT
Oh9cp+f70/lZUsLDHFG0KqetUzM1NDG7xkWvuCjEp2tM7gUamK9wPHF7qIGv
/6cuN+7xSz3L/Pvynn7hPpt1oB4W/um01RXcf2F2+bf66Vqr+18XjvL9ER/T
/jRycAlosEDN4/du/ny1YYrleskfbhjY5M37yAqWbdOjJvzko4OpiVcd/1pp
ybP7ZQ4c8VUR6y1kTP4ne01qBbeDl/bd46vRcZuxY2F4exdL++Ufh0fo66+T
2mGoz+Is6bM07/J/6+Ymmy3v3a79qT+8Z2gh9njZQE3zR1bvXyzOye1NSPb2
5N/OHt/w762WuHDX9W07u8kVUOf1W/fiQAVM3Fm71u2sFk6dGbF7f4QSPmy6
X199Uwff9ta9C4pRQeaGwVPPlfJ3YmEm/xOM/kk0Jv8kxWn9s/yCL4/poOOq
njHJK8qgZWbrnEkZOmiM/k9MIP/n8svxb4tSSuCLVVHlrd/r2F8FkX9ORD8v
qIUy9POCWuiAfl5QCzX4vkJ63xlfH3s9uOgBbGjYc8oy0EECrh/3S/ndNHl8
FL0pPn6F+8/jaf+FfP2vgwj6rHbq+Ar4GPWN+4+ivrEsGu6Mb1x4FSJTW+wM
C5LW0yBc5fmFiKT8YuzSrmZtvFGkby+1dwpVQwHaA8+XgvbAsg7tU1wzGjLT
j2pgNtob9xvQ3ljWilZ7Ul4chndd5mwOnVjJ10v9kr1jK/2dhwlejbqirtLo
4d9j3UaEuZjZbko+ulnd3MvI8oL0UWeaOhjBfLDFIb9hlfCiddCp2HaV3C/Z
6xhavzXHtk72jLXYYUnID6O2hupY7jZFGblCVHKbPuFA/EcaS14jtXfubX/k
ebYSBiXEvZ6af0vEui9pE925Au6GKvP/rlXwuD0r0yZ4rrLkSTmJUUktZ1bA
kNnRQTVH9BCU4+1d+0ALyV9eudK4T71furzQx0tdxuNvBo2bI6BION8PmDg7
SQsdcvc1jH/2kPvHtc00xLZXQ3KY/dCyxXo47zx/jtu6Qu5P/WBdwt7ZJWKa
mzEwMFIHpj985sU65XL/V/qrl9vnKajVw0djSmfta66i1gBHds3t9db2itX7
K6DF3i65byv4O4x4TPZ4ss+sEcU+j2GDT8m4+Lt66BCZ91Tv9QQuVPzc5ZMx
Bs4vUj6ductlsgHe3HefEROoFLbu91NWJ1vsM5f8x2O8v5Du32Vz3bBxniVw
za5kQNoX9fqE78P9XzX78xuHensISHo1LmEG+2GxUO7vhC35u2xcL8v1nV3v
3LpXCMftHEKCdZXQC9dbyN9fL1bK/bl4dR79uT3uH48f/DC909qhdyAyqeT0
ba9KuIX6wf3xqB8sS/au6u9h17V7JdurM8WrCNRHHr8M9ZnlAtRnq/nOwXLl
Bz0dcyqhDu1JzDrpbl/paalrGlVTENAhTQ96tB+r603iPdmjEu3Psh6dd/gl
r90A7hUl7gdrDDy/1C/Zb9Lk++Y2t/Qwsu+in+f1PC5uvNy9tHW7Srb3m/PU
G0ptq1g+t2GKV6v3RlhavmSsU1AVx+2dhXNSbkQYWf6fU9SEtZ9UcSuexKa+
KLC0LQ7vbLJ0k5Hb8gX7Qqo8TNzS+ogIWp8PW3YdmedwSSwvPLW1tJUBEntc
f1tZkiP6NtcUOwXp+b5LYJohe6URvN+557Y/wX4W5r/75BvX33Usb3/X0tQ/
xZJ3jHfstDx/gB6aDB2o+KGzhRP4mPZbd77D4l331DxeWkfv4Udvfv/cCNei
j/w4LoHP5fBwz0KVi1oHfYzZnssG1Z9DN27J+ui8FvxLFK3mNq+S9FlI+nzV
oZnGraicr7dv1io9+Jqa2irohfYlLpN9pXlPOHp8RyGPV+yq8Gg7XAkrroZ3
9G5l5Hh9guzZ/1F+uMe0TB6/44nP3IAG5eA8ckUjm+lG9hfNyX+MR/8jxpP/
aYL+RzQh/zMF5xPSfPfclu0MH6AVm91U1yo666Xn4/47wTnm58kPoObQP2Uz
bY2Qgf5WjCR/Ow/9rThI/jYH10NYrbe4Tv7dGeOAoBYA15/HS/baO3fv+dAu
JqjB/eP+MIxPwkDxyQf1hftDUV9Y3oX6YjX/OXD9a/P7k6mWus1VN+I/H5Nt
gD0zmzheumASjpMOxdc8NUIE2otlPrQXq/f74IP1r7w7O02phuKXB2MVVcdE
yfLScQl/VcFunI/tULKPXnT/5PKwzpsmWOz0+cYOl7cPMbI8uuedwH29LddL
9z1yyndITiszuL35ozgiPV1EdvI9Yt/UBP3azLAJmndFfOcVKnocs3AxPWk9
B95euRTKLXnB/bDRk+1Oalm+8sut+c3d9NDmqUvm7CgTDFhauOTwRTX3J020
yejmeENcbWMYPKebCRbqOzgOnqDk/m1X/NaPeKWj1gzrk52H153WUmsC18n2
mY7ty3h8LuqXqCb9OrTFL653shrGe7zwfuhnhnhbZ0NccKHV+6tg/Nb80x9k
mWFVbe+QSddvcP/G4rqKHeMusizF19Hfxfgtdq2G4Aez26e2LherfepcpiVV
gRLtTywn+5uO1wvp+h44P8uHHFqVX7yiFoFGU+dR3kaIwefj/iDNul7RfkXw
w+jWixzXVIMC/YnwIH/SFP2JCCJ/ItlHQ/JHI3F9eL6vn7Yd0vSnG/DOv2Wj
wtPVEIrrzf3h6P+EXqD/k+Lbt+RPh+L+8fi7pQ49Tg2/CF1dT6Z1KjTBUNQH
7i9FfWBZshf1gHEF9j3NUlwQUnzwxrggvOXxQUjxoQzjgiiTxQeTuC2PT+Is
xacVZ95tfW+XCtuGdpsQ0qgaUseqBg06axK/N1/m7JJcDQfRXvj5nqG9sDwK
7YVlyZ7l72OCXr0Cxmfdr2b55KEWb+tSzSz3c7p2YlCsie1Xao/j89C+1UDU
/bCxue4porb/wl4N11k4V6W0Xk+LL12te13F42sK4vx6btSznIj7ITrSftSl
FCUdq9Rx/6JmRUdf7dCy7Ij6IOwCUB8aOhvL2j5QcH/+vu2hoHsg2p254Ju0
td7+Uo8lONUUcr9WeUHbveFNlrfcO7nkXmiZsPvfO+fqRDPHk4FkL14rzMFn
QhTixmb7X8btr4a3w5YlOz1VioZZWwO1LcycX04ke1yP8wtp/ki8P8vd7sxd
ejZPJ/pteaZOijHDG3OYjf1WrZg5Xz95xO1qaIXvw+Mlff6D/N17XB/uX4Lr
w3LWyL3lBR5VwhTc6l7Jsmq4Haeyr1FWCaXjrb2XbpmhWN17ZIttRlF8Y13I
gfo8Stl/5areg+r1ceWA/usjLPrpJtcPYaUf4jPSj1rcT74/7bfl+Ul/Jfn/
AIWcN0w=
          "], {{{
             EdgeForm[], 
             RGBColor[0.293416, 0.0574044, 0.529412], 
             GraphicsGroup[{
               
               Polygon[{{2146, 299, 1969}, {2151, 324, 2170}, {1596, 277, 
                1601}, {1994, 327, 2189}, {1782, 277, 1773}, {2379, 349, 
                2553}, {2189, 327, 2180}, {1791, 302, 1991}, {2355, 324, 
                2163}, {2359, 349, 2379}, {2180, 327, 2384}, {2546, 349, 
                2372}, {2384, 327, 2184}, {2371, 349, 2546}, {1773, 277, 
                1596}, {1957, 299, 1964}, {1601, 277, 1787}, {2553, 349, 
                2371}, {1964, 299, 1973}, {1978, 277, 1782}, {1969, 299, 
                1957}, {2175, 302, 1986}}], 
               
               Polygon[{{1986, 302, 277, 1978}, {2163, 324, 299, 2146}, {2184,
                 327, 302, 2175}, {1787, 277, 302, 1791}, {2170, 324, 349, 
                2359}, {1991, 302, 327, 1994}, {1973, 299, 324, 2151}, {2372, 
                349, 324, 2355}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.38278228745321385`, 0.21278823917452944`, 0.655027127924248], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtUzFIQlEUvWb/f/8PCiIaooYCm6qhFpeopgadHCqHosKGiMoGJWgTySlC
CMRJDAKhKQi3miWCpmqIDKKIyKHmGjqHe4fPOd537n333PscXt9N7nSISAJf
GN+IJzIQEim6Ig+ByCF4ExjGlwOvA7sjIqPgBWgj4JPgv+Dj4LPgE8AVX2QV
fNnXM2regIM4S4BfAudxxzfufHdEonbvoqf5rLMAvIbGAT8A3hlvAj+szhPw
Bvlt1EkD1zzt7djTO6ih9gw5PngP4o/mi/72jTN2irNe8Fdok1aH9QrG4+wf
fpbAG776oa854Any8+wZWDNeDrRX9kwfgac9VMCnQuqX+SnTM69uc+4MtFfq
mVc2De8pRXS2nDF7Zc8tV+fFuf0AS5jFH2Yy7eqMOId7YJfV5z7j5oteW1bn
01Ud9RfAPvP7DJ43L9xDDvFt7sLX98EZ7gHbvvZJT0Xrgb0MIb6J+BgwGmju
FXjV4jxP2x63gOeOvo0vR98Q/aaAKdsj9xlztT7vibiay7dQsdyqo7UYzzj6
zhjnecx65v4zprl1NIca3t9vfum7YXOo+eqBPdctxpnPmB/62gC+mIb++F/i
ro9cPaMm6+tvxvn2sxbnXGtWl7P/B7hKcZw=
                "]], 
               Polygon[CompressedData["
1:eJwtkjsvhFEQhmfFd01WqRANQjQau8lux4pLYQsULu0qlgKRVdmCKMQWS+0f
KChWQkFnCxv8BfEDXMJKiEvCM5lTPPlmzsycM/PO11VYm1ltEZF+aIVGJLKS
ENmFbCzy6Yt8wDO8wBHxZWI78IR9G4jcQDUU2Yd7mCc2BOPYh9RE2K/cPYFd
J/cKLuAysBzN7YM27Bxng9gd0I09xhujkII05GESvuAbZmPrRXt6wH+HpqvR
2jfuHE5YT534Ffw92IJt2IASFGAR5gJ7OwVN16P2qhqoFnceczOLR7wdv0zN
JmS4Owsn5B7DGZxDA66dRqqVwJ9vZxpLu9lKrpeDwLRQTXrwf8n98a1Ga0f4
5tyZxsq+9aI9hb7NpLOpxnXXg/ZS5GwJpnlrKjINKu6s6GbQWZKhza47CLHX
Y/sX9J/ojU0TjedVT+KPnu1Wd7zA+7XQYpqTdJqqtjXqTgObSWfTnQyEplnG
7VR3+w9tg1Mn
                "]], 
               
               Polygon[{{2393, 352, 2180, 2384, 2385}, {1769, 274, 1957, 1964,
                 1965}, {2190, 2189, 2180, 352, 2193}, {1970, 1969, 1957, 274,
                 1954}, {2564, 374, 2371, 2546, 2547}, {1597, 252, 1596, 1601,
                 1602}, {2554, 2553, 2371, 374, 2571}, {1774, 1773, 1596, 252,
                 1592}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4549177851989543, 0.3382123884810212, 0.7564222964541523], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlDtoVFEQho+6d/fuvRuCgoYYd1cTNBoVQXyAIhoQJIgYRA0WCsZGJT4K
LQwI2hgkYgRhmwg2oiArPqIiiBZJYxFXfEAIKNFoF1IE8QWCfj8zxfD/d84/
c2bmzO6S7lN7Ts4OIRzF5mCbkhD6ZoVwAWzCzsFL4HA+hAPwZ2B7FMII2tFM
CCvhNXgZLOdCaEZzHEzdr/PuvOVRvsXZEP7gXwre42wG/hQMfE8Bw/Bv2Ef4
ZGQ66deAy52Xshaj2B/gMq9NNcZxCDvhdeA/7huEb01DuEFNG+Hz8X+Bb4av
h++KzZ8HV2Ot8JbY7tBdqvdIzvwnchYv/UHFep09kZ1JUwEnqOMifD/3N/gM
68G15PqKvh99a2w1vEY/7XnUd4vXMID/FzH34WepfwF2C96QmolvA6+nprkG
dmAD8MeJ9azef8K3uF45ithNeE9qJj4XfJ5Y7BDYS52N8PNZy6v8famZ+OnU
9kN78hmsUvNe+G+wg+8KfB/4Ct0L+J3U3lXvewisZ2+ewBeCZ5zL18TcOtG/
i61n3aX+HnieWmox0hczdofu6kpsD7QPh6l5d2LzHyffioLFlgtm4qqrOWc9
tufs/TR/vUOd789D8FHG9vwteMlzKnfVZ6WZrSLmPZpaxupT/raCfcu/jvO7
nqcK9nr9FfCK51TuUddIW3Wu+z/4Hmr3F/mez1DbtPc+ntg+aa9mMmbi38EM
/jF4Z2Tf8l+NLEaxeqsdrpG26LWpxjafleZ32f16qyHvXbvW5Xk+gS99z7Xv
JefzEjNxnQ/6zmv3/8bWi367jf4W2rsRn/9tnWftTaeobYNrpJ309zoGvnG9
4vo5K8G35+z/QnObyNp/k/6LIvA/Toejxg==
                "]], 
               Polygon[CompressedData["
1:eJwtlElIVlEUx6/h873v+6I2DZsKCnTVsElSwqgkDVIojUyhIrPIFqXRsNBF
g1EWKboQtDZqkEIT5bAoa2ELJW2CapEGDTaRBRoYadDvzz2LH5x3373nnHvO
/56lpUcKDs9yzpVAMozGnWtKcu42TGHPjzk3D0Yj595BLuTAHJgLZ1OcOwPP
4DnUs1YHDdAIZbAP7obO3YMcfG2C1ZAOvdADrdAGv/DxEzIgE6qhCiKIwUJY
YDEVu4Qci6EV2mAxsRZBF3TDID4HIIN/mXAUKiEV0qCEf8WwDQpgHT6zYCNk
w1d8fIG3MAKfA+fGoBla4A97pixn5d7IWkPgfcjXA+58P/R7tPchMfpgPxyA
C6ydh8tQB9/hG9zkzC3IVO6QB/kwQQ7b6c1auII9ztqPmK+BaqEejVqPcq1H
6lUNvs6Fvuaq/THWjsMwuQ4Fvqaq7SA+BqxGqtUgZwbgCQzBb85OWg/Vy2n4
Cwn2zobh0Oe2DMqwdxFjDfZWeINdSawKi6nY0oS00QbtcCj0Z+XjPfYj1cw0
IC0ExEiO+xyUywpYDh3QaT1UL2uJdTHyNVVtU/GVBqtYWwk7oCjyNc2zO+gu
m9mbm+J7rF4P2d2l6XrTVJdpQtqY5N9E6DUn7SmGYhXBTngM/aYBaSEPtkAB
FEILsZotpmKfxsepyJ/R2YAcnvIuu6GWB1qR8G9Tb3Q87u/cYRqQFgrN914o
hWp8VUVeQ9JSu9X6A7E+pvgci+wOukvM+rUELvG9nnjXsPvgDnaCtXjoc1bu
SdjONCKt/GNtJsWv6d8MTMMnGIOXkdeCYuRHXuPSeg/0hr5ntVYD1SLN3qre
jN5OeuS1oTdwQxoPfa7ydxX7esLnqpyzEn6mtNoM0ywr58xBq0m1vYFjNqM0
q15Q437SH4H8wM8wzbLdnN0T82+oxnqoXpYHfq/ObMDuJNcO06i02pTse6ce
JgI/QzRLXsFrOInPEzajNKt6rRbKUblm2yxSTVXb/1IkxsA=
                "]], 
               Polygon[CompressedData["
1:eJwtkksohFEUxy+a8X0zSpbyig2LQUkadkpZ2EgaUcgYNspjgbGwsBoLEXmE
xaBMhIUSVmyHzSjvDfJYMKuxEJnid7p38et/vnPvuefc//0K/QNN/alKqRJw
gD9dqS6YgeIUpbrRG0upa9iHBnIx9Mul1CrxEjoPC3AHt3ADYdby3Dov6z6Y
IDeFjjuVyiYu4uwQ8SREYBMyyRWxVoD22kr1wDA0k/uk7wH1M8Rp6BZsQ5Zb
95O+UTiTOdjbKDNQ64FSCJizpYcL3BAxd7LQX76TUAf55KLMcwKn0Ig5t/gT
RndgFzbos+7SHogXf+gxfVqJc9FDOIJq6r0QouaFMyqI723txyMahjWYNuuy
bxbmoAPi5M7RAPRAC7P6IGHpXkm0izMT7Gs1Poqf1czjhSCE2FeDrlC/7ND3
kPvUS0/2PsMD/JC7Qp9MTdC8qbxtJXsvWe9DB2HIoeeW+cVn8TvH1t6IR3GH
nmkPzaR+jPV28QfaoBM6bJ2TNT+6aP67Uu5UBuWQQa3bpd9c3n4XvWDGmFO/
kbxVPXXflv5P5H8ZgVFb+yW+9ZnZPeijuafc9x0+wAbLqX0WvxXxG2e+Qm26
/l+r0H8kXG5C
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5270532829446948, 0.46363653778751296`, 0.8578174649840564], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlVtolFcUhU8mMxPnnxlJFFQI1lZiQY1XVLA1CjUt3lEfxFpJcExQQSNK
iheiIiKKKbSVVmrxwRaVqMlQQYiKLRWLyXhBIq1GIRpFFF+UUBVKaPRb7P1w
+NZ/Zp991tnnMh/lNi9viIUQfqUV024PCqGuKIS7sDkD0dUwlwwhQrfA71MW
sxPugvVF9p0jrgtWwMdRCMfRo9IhtCZC6Cb3UljnMYotiodwjP58sTXpBH0n
MDQd3QJHpi1PN/kG0J3oMsZ+4d7kcS8+GtD74A3Xc4k/lDJvbSkbo7H95KjN
hjCL3F/CU76uNXCie5PHFvfQChfhLYc+ALP8Ppj2hu8Kcv2M7mOuya7VlydX
HN0IO/jtrNZL/yeReZup2iQtTwGuLTGdg3eoURF6Hf15xlxA/wcztGb0EcZ+
E9lcP8JV9B9G/4VejG5Br0ybV3leAA8mLecu+IL6nqO/Du5nruvoV+hqxpxX
Tnja512ftjk011vYS1wH8c9hgrzz0Uk4grYEPQw+ov2CHk1Medz0P+r3evbE
7Fv9iv0YD3fQl4l9zG8zlB+OZm8q4Hh4MWl1/wGW+bzz4MtiW0sfnMf4M+iJ
cFvCfD5Bt9H+QG+C63ztG2ADeb8if2PWxmjsfPgT7RL6b1jp3uphj69dNVjk
MYqVb8VchY+o1xXdnbTVRT7ld4B2Ej2FmM85W7eIqYIpPydNcJv7/A1e5bxu
pf8ZXJixnMrdzvcW9AU4W2smPiq286RzVaD/iXt4mLb1y7O8d/t97IVdxK1H
H4X/uzd57KQew7UuWO4+5bfK9dCMnRvVULWvjNtY5ejzvVCNh/t50Llo9DX2
U8N77k0eI/c/oMfHY1SP074v2p8GvgP9q2AT43v53Adn8ds4Yj6Dn9LGoqdl
bS819gysoVWh6/W7nyWdqcoSu+8fwo28cXN19wfZudf570pbXVSfEtjBmM2M
/R02xeyN3A7b/E3T29ZFrkl6o+AQ1+rTndfdXw2nus/XGXsTtRd74Bzv1zp6
/I6c8PWoX+P+ZUwpuh1eZr7nxJxMmD/5LIV5vzu6Q9/52r/Nmm/5/zNrTboT
7vG1aE3bXe+G/RmrrWqc8rVoTfV+F2rgBPeQh6VehzLY5++G3o9RXme9r+3u
/w1c4Xl074+7//sp+19RvPbng5Tti/ZnjGv1XfM9Oqx3ye9gddzefZ1/vf11
vqdfwyNeB9Wj3OfSnO9idjf1hh31M1+I2Rq0lmUJ2zPt3VO4I7K391hke6a9
a0zb2VJ+zbM2srv5gPxv/S7r7Sl4ft2tZv/f0f/PQ78Lut/tfv71v/HU562F
N73+BfgemTr7tw==
                "]], 
               Polygon[CompressedData["
1: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
5e5Nf7skMCYR/gfT6KdH
                "]], 
               Polygon[CompressedData["
1:eJwt01toznEcx/Hf9DwPns1hu3CY7JkLxJLU5oJwMbGJnHK4Uhsih4kSCZHY
QixcaRciJYcbW+YU2pZMIiMhF3MoXFBOu1nh9ev/XLyfz+/5fH/f3/f7/x3G
1W9b1jAghFCJNI77OYYfqRAe+3/YuKIohMmYhFcFIcyjh/i94uWZEMZjAubm
43FeDuX4bt43fMIf84vN24AC85roCZzEgIE8dGOq2GBaitHYIx54DXRJNoTF
eDM4hI285/R1PucJPTkohGZM5E9AB3aIddJy8axxjm7CZnTqqwNr0KPMSprN
JL3Gnj/gY9yYwhD+qTuHtlljLl0kfyGWYwjvlrzp6lRhpx6qeeONvxp/wTus
5x3l3bXWHbTiEm+R9S6q81mpCppDOWqdw2XeVXodrUijhVdKx6IMfXF/UZdJ
vrGezrT2PuMVdBVWY7i5w1JJblyjgOb4ZSjBKfMf0jP6OY1mPOL9pcsLk15j
z7XGC3Al9pdK+ot91tCl+nhtfI3eQDu68mvHGvdwH3vswzreM/vSiS68lH9b
7lNaKa8KC2K9bPId8Xum0SJ+YTrZq7hnU+Kd5Z8VP06PoBHd9mEob60z2ooG
vFV3O6+dnseFeJd8y03eFlqMErTIP8YbYTwSo/Az/y7i+/iF36hRez5SuCfW
x5tt7qzCJDeuUUQf6OU+9iIV69Pdau9CNxp4B2ld/u6so636bUN//hzieTSi
CQf1dwC9OCf2Pp5v/l2MoT3yX6A/ndQLmeSuxztfnU3qzcivEdfKiZdlkjcd
3/Z+8/4DneqDUQ==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5898244653146343, 0.5693459826903318, 0.9100915432605748], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlnuQzlUYx3/7vu/utu/+3qGpaBQil2kR/WMa15KpdW1dZxnZrCISMo1S
EVOUhGV3Y0hRDTbaIUyzpmg2o2Qi7WQa20WTkVwS0RZl+3w73z/O+/n+nvc5
t+ec85zTpnTG8OmJKIquUJKUODuKDsNVqShqRVmHzoYllNXoczg9HEdRQ1YU
PQqn8P049hK4m+/T2HfA6dYr4ET+f47yPGUhfq/AD+Ey/vsHnwPwCb6fxv4C
XEN5Db0BHk2Gukvg8mRo4wSsuC6KCqm7BpZbl8FGJtMVn2twHe2exP4ibEud
EdgvY79qny/hNPf7f//M/Uf0PBjnR9E71O2TH+ajuSyFd/O9CV0IVyRDTCrh
Ho9ZYy+jTEIXwXriVo0eCwclQyyGwgcpQ9A3wjO0tY82x9B+JX412D+F9/Pf
BHQvOMdjmwQHu51CeAW/g+hGuMzxUZwabf83FfpQX98x352O/wK4jTJb65IM
MVXdn+AO2/X/Mx6DxvIJ47vKOBfCmmTYG2nan2sf+S5w+1rntPdPe9jfPgNh
EetUQDsbc6Ooe14UjUM/kBdiNjkKY33EMTmbH/zkXwlbKHb83xJ+TSxOoQ9m
hyJdnR3WWXtymtbY6/UFTOVE0SVsdfjMs5ZtBKUZPknaT+QGfQ1bnrVsaftX
iF5rrXnTnLAu+WIijL0Z9q/QHXSO4L3MvwrdBr7rueyELxPHb9A9YHPP6wT+
1xjrAewV+cFP/hOI2XbPsT477Evtz82wd5r5oCfDmZRX0a/D47TVUf6wzPYS
+LHt+r/YdXumw9lQ7BrggEwUtYYt4HhKe3Qn2Bm/cvwPwZ6M+SH8C+Bg+6ve
B3mhTY3rM/vvTztGUdjLBa7bCWaocxN1s+DP2SHOind9bjjXOuvHvU96wwvW
sv2aCHHTvjhh/Qu8QEybwDtp8w7K7eixsJdjqFgm3e8NsAH/69GN8G/ry3H4
Tz5N4HG+c9FxJjAnEeY8EvsxxlMVBz/5a045meDzvc6N21Tb55w3lD/O8B1j
P2/mJ0KsR3vM7TJh3NJjYIX31ZuwpWOu2NeoHvYy15H/LZmwrlqL94nVZr6H
YN8E/3B8LsFq962xzIK6D9ZqLZ0/F8GDbl/9XPFe0p5aw/fN2I/AibZrD/5F
WYX+AbbzHtDeqbM+kg57SFq2Hj4LzWGR41kM3/JZyInDGdZZLoIjrI/CJcxn
FP0vh785byinKp9Kn84PdeSv/H3Yc9Gcztpf9bop16NXwmpKDfopuNf2JTCX
sg39LFztM3gX7E/f99HeLNjXuh/s6LPTBQ70GDT2OeSCvboH4VrnB+WJPd4n
tXG4O3Xv6F5d7zNbBf/MCmunO/j3OHxvj8N/8tH5fjsV7vHm7PNq7RX0Vvik
7wXdG7c55v3h0TjsW52JXZ57Frau1K/F/3P8RydDfh4OR1rLNsZ33PhUuOek
h6ZCkS5OhfXTOraCFz2GKakwT81X528ffc/UvQ0P+a7RnfOex78drvee1N2+
yFq2xX5L6E1xNg7n6GQcivSpOOQCxe0i+tYotMkQovluX/3Mx2cQLM2E941i
vAuOdZzHxSHW0rKt9XmZy89k6gyGb8AV3mPlPv/KA0fgNM9d61DnOWquZfZX
vf0+F63T4QzoLCjHVFmP0ro5FyknFTvOWodOzqvd4ErPRXNa59gegLWwmd4t
cJjfKnqzXPLYtD4lftd1TYY3md5IH8E+vsd1nw/zvan78yXnli2ZUKSVbyo9
Bo2lvfO27vxS2zvDGfZXG1OtZVvqt9A9cIDfPHpDNc0OZ2dbKryHdKfMhhuV
K7X3M+G86dwVZEIsFJO+sM7vE72DJnq9HoOT7KM7rdL5+TwsTYZ3xEzYxW9j
vZEbfFd2wF7u/LMYHvN7Ve/W7q6rNvpRpx49Fe62v+pt8FuiVm8tvsdh3woL
nRO2QD3QRydCnTK/db/NDe9Uzb018f8PSgmFxg==
                "]], 
               Polygon[CompressedData["
1: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
/ThkNi3bLlAulWo5j3Kftuw9O2o2KFucoNwjYjax1PPN9vy/ldd3alMuvY09
bYVidJWkmg+XL89EVxNYCs9F7Y50V7pj3fUr8GrUctA6r/FU68nmh7vPkO+Q
DumaB/PhMZgC15njRorNWew1nmq9C2573byW6wd5UcsplVuW+t46QMeIxXzF
/nbQHrrQlguPw7SInYnOpjPkRm3O6+5D5Usbum0fxGbfh4ucyQUoYuw45ULs
eTl0RncuTERHqcdgxeIZXn+p/miBXE7bKl+z1l4Io73GUK0xDor8THW2bSI2
VjpUyzX12kdzaK7v5NPCtqcu/iYaeI2lWuuK5yKjfa4VIctlZD/KvbTmzp6j
K1f/J312wxbY6kiugE1Ohd+R7qqWuY+FzUfJV73qd38ADkbtDRa4Tcu2c+jT
yWse1T4j3VZUM6h2mKi9+ZnqbB9F93i3B9luITY02mtQ1aLfJOy3Av1msCVh
NdwCt3nZfq7fba18K+ynbR/sgJ0xG6Ox30fH18gnaTsRsxxZuXKZ15eKEQPC
ZqOy1RNwEvqFrfZUH/Wd5L75HG+lDl5C1+qY+QT5hosJm+syc55HznX/uQiu
0T/H/dP90Fr1cZp9U59E3HJm5c6ZyE1gRMJ0aQ+jkKsS5k+V4yjXGQD94Rh9
a+NWQ6mWWgxLoCVrauE1mGqxPu7r9Ab0FvK8tlSNrFo56bW+3rDe8pmExQLl
cBXIm8P2XuXD5MsUA/r6GegsPmFMNbSHH8IX8Lm36dsRr++Ufx3W/TLmUszW
qLXOd1+hGKNYs9Xju3zkm2G7Y931f+GsfIrnf8rpVPtWJsx364x0Vm04k9vj
lpMrN//Aa52eXnsMDltslM8ehPwGa9nkPlG+UXeQ6TFEseSsz60+6qs3cM5r
whqvYVTLHIcTafYbhPQrBjcOm83IdmQDsgX5nINeE6k22ulvVzmIcpETrksx
P8t/Y9BvDcNUC8TtN5sSf9N62zM9nigGj0VuG7a3JhvrGjYfKV+pmKbYttt/
C1MOplxsuOve67+VqeYJPGdS7tTd61nVL/ciz0XXnFSzuf0ew4f6nepulTMu
9j7q+38KV7Dn
                "]], 
               Polygon[CompressedData["
1:eJwt1F1o11Ucx/HjnHMPf9FN7MbZiLYLpZykXrVJ2EazB7JgQjDUPZiTTEXC
B5ApdGNb0mg+RFAQGNVFS5MpC0UrSSW62EQJp27qTPOimCwhZdPX4Xcu3vv8
9n0653y/5/yfadn89qa8EEIdpmHq9BCemhJCES3DbDwoCuE/vIImvjH6fH4I
z2FiaggfyxunZShFA1rZVtCbit/AHbzJ9jddJ68N//B/xrbG960SsbiOK9ZY
mQvh3+SPcWO4jx/Qi2lyvuA7HtcX24U6XJLbSdv512MDfhe3kc4rDqEcFegR
V0nrC+RhsiA791t07Qx7wjt41n5X0SHNuavOIF0vph0n1DzNNoutFGXYhmG2
7fRmPBc+kt+oTleqG+vXpl5W0adRgXKxc3HJmfaqcZEO6v8A/kSD+CG6wNrz
UVGQrTWLVjvzQrThnrhN9PPCLKeHrlW/GTvU344jae876UDqxznaov+tOGq/
8/h70/ziHO+xnxXXREdxGz9Zux/7MS6+g/6S7kS8G5N4jPecebkaL9IlWIou
++nE9+hQ90day14TY/Gy+Dq6k+5AB+Jd3epPjZrNvpfRYpRgsdgXMO7sM8WM
0Yk0/3H6iZl04yrfG2zD9Bqu52VzivO6hl6+ITpH/gX7mnTOUt9lOBD7z3aY
jjrrbSywZpUaq+k6vIsROcO4jG/E/0G/ZF8l7hQ9g59nZL2OPW9KvW2jDSnn
VdpnJsexx/dufIB+vj7amMveSnwzr/l+Pb4D38fYFtFKVOGUs5zEr+h3tn10
Si6r08v/Px7iMVup/T3KZTOIs1id+hH7MoIbWGM/nXJb6RUzG8KHcv5iq6e1
WIZyzM1ltuhbQb9W/zC+Rbm6X+VlfYj9OI8t/j9L51vnO/4GuhDV+dmM46wn
xVTzPcrL8mOdXemOxLvyUjrnAVqH+vim2BfF3zj5BZiOc878Gz5NPTtNT6S3
F9/gMEawL72p+LZa0Ir3vamNaC7M7sNKesi+D6I7zTnO+wkbTbsn
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6428607477268338, 0.6545605310241889, 0.9113006071455907], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
                "]], 
               Polygon[CompressedData["
1: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
Xe6+V3dKd+uc5/qVPPf6H3KZL/E=
                "]], 
               Polygon[CompressedData["
1:eJwt1FtsVUUUxvHd9kAv51Ro46tKlQcTKVREATUgRoVUoLGiEuo9WpRgKyTF
aLyBFFN6wSoHpPoARosiaWtpuUURE6ORykWq8QEkVIjVKFbhQWOs+Jvs/fDP
N3vNmjVr1l4zZY/WV9flRlG0GGOwKx1FvTiGAzlR1EfP5UfRVcZn6PSCKJqB
4pQ5/qtoCUoxoSiKnuM3kU5COf4IsdjO0x34ECP4Hb/iB3M1GWO+XcYj9ARO
okrMhViMrL2G86JoshzKUZbk1EC75dOFf3APWw/tE3MXWvELWy/9HiPG39HT
GMIWMZvFPkA78BY2y2sTjuNI8KdfK9IA9mEi/y/p25hmfIq+h060yLU5Fdcl
1GcN3W6fYXHW0a3YhsLCKCpACarMHZLzMr691iynK7ASL8vnJXyMdnOf0MPY
ajxI+9CPV/h2sj1L92AvRu1zqZwG6REcxUlnOWi/w/QQBpC190Z04BFz22i1
9e+It4BuQQfmjxWT7S56NxYhYr9o/6nJ/vl0f6iXOJ/SZrTgAp/zeCI541/h
W26zjI8mtQ01Pmb+C7YTdAlqkFsY/9c1dC0asVvMfuQ403FzubSjWDwxaulm
vImlfHaaf4z+FnoZz/A9w9ZE27AhEzf/xVAznPWZ9T0q1m3G18i1AtdiHt+5
aEl6KUsXYH7oqaS2lcb7+TZau48WiZnGavZz5l+lN+ImPC3HeqzFQvutoBWp
+F9PoZW4Ezfr88us3avm3ejBZ9YfRGPoZXMv0Ift9xCmoFqMcjrM/hN+xgV+
3fT2grjvqmgamYL4foV7dpYO4Udkktil9F/nG0W+8VhcntTxSnpDJn4vwrsx
ybg8E+8T9ltEP8CO4Od81+M6XO28FXRdqBX2oMn+6/PiNyG8DUvo/Xgg+U/h
f32FUXNv0Prk/9fRdryOGv/uc3GqaB3qUaZef7ONp2lkMGCfDeHNoz34CEv5
1mLVmLgPT6n9xnAHjdtDfbAJM51zBuahLdTUezXb3rPCncvE/T8z5Gt9K25J
xXd2eiruo9BPs/Eg21T6rfWD+KYo7tfH03E+Ia/n0cDv/bz4zQpvV0bdJqjf
eDonibOcPoU63GqfOShLxWe8guaFu4Tu8F6w7Qz3MRk/mfRN6J9uPl2ow7vm
aul97PeGnkpqEWryn3vYINc/6WkMoT+8exhMxf9gN50rx8lyHUeLcQnWO18T
Vqbjd/9FWiBmPkpRae042qbvW3FH0v+r8+P1IU5Ocfy+pel29k5kUcLvNVrN
Ps38suSOhbv2PwSK8Ak=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6958970301390331, 0.739775079358046, 0.9125096710306063], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlmtslFUQhg+723bbfksUEqUIKoIJVwUTsQWqqUqpYCkWajEFA/4QJEhb
AUUMl4LcmsIP5CKCEjWokVsDpQUJIsFLNIBEY1BUDEIhWotYRBoi4PM68+Ps
Mztnzm1mzpyvxzOVpTNiIYRztDgtl58RMAZrs0P4okMI1+DvGD2A/gzsEYXw
Nfon4K/YrUF/Hn7I/zb0O2G/9BDuQB6XEUJZZghjkS8kbYzGnmbO+YyZy9g6
2M689yB/BZenQngMzoOjmCeJ/ZuwN3Zl2Fylbw/yMuSjcCWtGrkYfpMVwlrs
C2B6IoSN6NvRT2TdU+grYCvjx6Dvhv412gvIq+FPPrYFvszaj2I3E0bsezD6
4fBy0s7yHGeqZUwVY5fCeuymYr8PNtBKkXfD5+E42nTaRuxmYr8B/uh+k//W
0RYir4G92PO78nPcmuQ/4BA/u3xwgDYHeSFc6/4phJP5Pwv9rLjFSfHaJV+5
fA7Ws/9hihG8km0+eRqfdKCvKy1GO0jMekgPJzHXNMZOhScVP/STYA5nuxXb
NJjv/kkkbV7NnwsfYt5m5Ffh7JiNPZu0tXJ8vcKE+aGZ+fORtyKPgW+5n+Xv
i/h6GvI2eNxz5hj80nNgO/yNNbKY7xTs6PufAn/xmCov5ns+K69vwOsd7Awf
0/owz064KsPOopifw6e5yDnIo5n3BPI6uCCN3EJeQf8O31t7puW0crs7Np1Z
bzryvkzzo/bThn01/rqfdapSdq+0nwj7BLoW5DiscJ/3gTuwK0G3BNZBpg0r
YEf6xiN3jlueKd/qYIq9HUV/HR8+yP9+utywFt6JuBsmXF8A98M85ZjHXjG5
jTbKYzEQ3oRdEt1p9tnVz6Xz1Sj+2CyGsyLb/+uQY/6vv532KX394Uewmr52
bPbCSgx+Rl8Bp7te/fNoV5EPwcmsO5RxtXCv778eLvD6sBKu9bgUwbvxRQU2
eXGrR8qrEva/x8+iM71B249cKvr9PAhXwZ7om+CZyM57M/qRyD8wf7Hyiv8D
0I9IWe1QDekZt1gqpqXw4WC5VED7N2a1NMLmg0hFNYRyuNXvWz2sS1i8kvjh
n5iNa4a7IotHg/zgtUs17JDvsxEO9zgqzqvd/5Uwn/5hwepFBfNvh8fhIuzy
sB8Pi2mDkCfAsbS7NC/8xO9CC3yWMQd0L2CKM5Qjf69a4j7XndjmNf8deB82
w7EZBHunLJcuoG90/ysORV5XZ6cs55R7l7zWK6ZlKduf9lkif/tdUB36y3NJ
ObXI/Sb/vYRdoXIWfu42f8O41/9OsMHPpfPt9D2fhxM8D+ekWc1S7WrlvjZw
N7cg74ZXWHuD9hk3O9lfSrO6rPrcl/k3e16dTFhtUo1aHrcY6j7pXn/HXHuY
c322vVd6d56iVfL/M/SXYKvLU+BgxnSPWW7pDdNZtsCBmVZLVY9bve514+zl
fl90b/QO6C7ovanxmqbatoQxQ5B7waVuPxE2ZdneNrFubsr2fC+c676tgaNd
lk65UBns/VMeDYxZ/Pq63/rDFs+f9xL27iqH/0TfzWuUapVqWLX7oZPHK5Uw
fZX3nfV350W9vz6n5i72u/mk7krKfNUFluGjqao/8HH3uc6nOct93iLP4QH6
HvE7MjZhb7De4nLFlrFN2EzOtpxWbl+L2dl0xlHZdrd1x/Pj9t6ozh+Hr3jd
XgY3Z9i30MgMW0/rDo6snqrOnIDd0+1N0dvSxc9SCLO95qj2yN8zgr152zwf
lOMXMixv8/DPeD/7RHgkZrWgDd7wt+ay6Hr1Z0amV/9h/wY7FrNcV85fjNu+
tf9v0+0+6OyPwMX+7qxKWT0L/q4P9fuu9zzPvwH0LXDQ63yjaiF9K8Fh5t/q
fr4Il3ud13uV4TayXe9x2aTvtMje7iOR1SzVrlvg25G96+/D/wD9zVX6
                "]], 
               Polygon[CompressedData["
1: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
P1NM2r8=
                "]], 
               Polygon[CompressedData["
1:eJwt1EtsVUUYwPEBLu0tvU2QjYZKbNENTTC8tSqJSoBEasAG4qJCKEqrFbnK
S6hAVBBYqBtFgxpZYH0EiCygkNBGGygo2LSJj1J5LQyKErVKGismxN/kzOKf
/5w533zfvM6pXlGsXz0yhFCH0bh7VAiPcwWPQg5X8La+89yPc1hdHsJzuDYm
hN0jQrjM7RUhHEEHVkl6lJvErEQzusUVuUbsJHSVidM3XvtkIYQTGMY4Y0/z
bbkQbkWPejvV/5q3YaN2J3fjFN5Up96Yw6l+nMe/xg3jc3SKH+Jpck5FEdfU
XccteAYFnNZXVsjWF9f5OlqN7Yvr1/8WvsFNcXv4WJyv9hdp7nENP6pz3Jj3
+Af04x39/eJ280dowxL9+8TdxVfl/xVteF/fAf4Qe9P+x3P42/pmezdC+04H
NRF59Oi7nYftZYsag7zUfi5DZYm9xQ6UeDehJKsT69Wnee7lAZxDgzwX9T3B
jZ6XoybNM873FvuaN4+xfAeqMFSe7dtWfhEbsQBt+g7zl+hCq5qbMB/L5dvA
k9CiPZmrUI2P03k1pfpxHrX5EB6Q7xB3oBNPiX0ST6ccDXzI3Kq0d/EO7MQi
4/fra+eT6MZ885mHd3FE3jq+ntZe5EH8hbPqnMFczBI3mx+z5kVYiFr5Gyqy
OrHedtji8Bqvj9+IdjOvwdq45859QJ5H+CE8HO9SLjvDV3kztuC+mDveacyU
60HOpTm8Umov8RIui72EPhyUo5e/s5ZvMSvduXt4M65o1/IMzESlmPGYk86q
hhtxVHs/t+BZ9IntRRdueNfDQ9ayR71/+Ab+wxxznGyu5fGOoAzLxF4yppGb
0IyvxL5hbKm55lEW7586veKqvf9Z+xcMxO8wrqGQ3bmf4p6lf80FrsOjY7LY
OGYwzX0fBzXm0jSejhlYon8xJhSyWrFmR1rTFt6E1vjvMe9K9e5NZxDPYp5D
zYtbEL8f9+I3fJDuzvcpb8x/yvicsef5DM7iotoXMCXdw/v5eRRRkcu+95L4
HO8LXk7/txd4UK4/cR21+q6OzPYw7mV7+ves4g3uwnr8Xpp9J3/wrvTv2pq+
u/j9fYZPsS7i3Sf8P5L5z5c=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7489333125512325, 0.8249896276919031, 0.913718734915622], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlWtoznEUx397Lux5nv9f7rnP8sq1lNlIMcul5g0ryjVaImxkQ7m8IJdX
QnthYQgbsRK5FCXJEhPyMFuxEpKIFwhJPt/OeXH6nOf3P79zzu/8zvk9xatq
F9QkQghHkaQkF8LxghCasyEMQG9CXwdrkVb01Tn7rfWVcJ7bz4G9cTARHxm4
IwrhHeuN8C0yiCDv4WK+LcamCj5JhXAfvRs+T9jePGxBhqKfgKfjEBbBNvg4
a3GV1wT2L8SmAs5wfRxMua7vRR6rFD5ADqK3JG2PbLSvjZw+4/MoHEke5+UT
ZmPLuRjOQIahT4UTkXL00tjiyU9B0r7Jpi+8S37N+KyEv1ibjU0iaXu0d0Ns
51duJbDDz64a5F3vhMu8zjFcztn3oP/K2EXJ53dsPiJl6N/gF9c/wCXEmArn
wy6v50l4zOtZHdud6e505/tZK8LmMrxLrL2sr4clPUL4qjtKh/CDurxE/w03
I1fR16XsnuRfcY54DafDS/h9iJ8ctd1EzitYr4V7PDflWOvrM+GntMWaTcyh
yBf0Z6wdSFvcCvguZeuv0tY36p816Ns9hzMwwd43uhe4E5t29H9wktdN9dvr
59W5z/q9nIOl5HqHnPM5O6fiVuJ/MrVoYH0aLMxa3VLYjPFabYFzM3ZH1Vmr
tfKpS9jMaHZeZK3/1IcXYHfW1mv4XuLzormJiNuEzS1senofaoYavLaqcQ+v
/0a4FMmjT0mbX/m/An9G1pN/I5s9+VFfF/NtPjajk2Yn+/ak9WW516PT+1Az
/df99I+tv6XL92OkH/pT+MjnSPN0zHWtPXWbf5Ht117N00jlgd4nthnQLAyG
Gc0V6xVwlveGeieTsjw1x6Vur7ek2vtZ70SZ22vfRWQf+mZ4Q/OGzXU43PtK
/VXpfdUEq7wnl8EOr2cXbPYeVi+PikwvjCw/5VkJdyhX9Hq41fVdsYl0fU/F
Voc/7K1Pm/8yOMT7R320NG393Encue6/HK71e9HbU8b+PPYDI9svP8q3PWd9
+zpnZ9bZ65MWT3F1V728r8amrNflU77vwPGsP4SHvA+3wUavrd6Maz4vrXCf
1/MwbPO9t/2tVI+NiE2kq39PuR/5a3D/ilPg76fe7NvuR7kM9vvV+93o9tpX
5zOlWb/pb91H/2+Q/3uxiXTFPOP2LZ6rclYvXHf9IJzm9dwd2f+Wel7vcauf
V+9EvdezFf4HZMzd9Q==
                "]], 
               Polygon[CompressedData["
1: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
/wCveDuT
                "]], 
               Polygon[CompressedData["
1:eJwtk01IVFEUx8/Muw6Nb2YyaiaSgmSCUbSPzUySQuWACIXR2M5xYdtiXKgx
0cJQdNlqiqC0TyQQbeEiwYUFZSQDSoiUUBvdZbTQwHAIf4d7Fz/+551z77n3
nHNf3c2+XCEoIk1QBYmIyGpApBU9BrXgwxK+JJqCeshCG/zwRRaIXcL+RoLf
5DgREhnCvg+LRuQTfFcl9hk9Wy1yBlagxN4Mehj/A+JhNA0ZY8/R84qwybpz
qME/y7oQuuuJ/INWl+crehna4DnxZ7AOq6zPoxXW7sEtl0Nz5fnuhga4ji/l
2XP0vDR6EGrgNjlH8dXqXeEIPKLOh9AOf9ibRhPkjEPZs/VoXYPsH4DHsEWO
O5ofNuBQVKSOAcTR1/TyFfTCBOt6VNk/Dll4Q74SavA/JX4Vfcc95qAfexpf
H7oNO76dic7mPNoJ1yK2Pq3zOJqEU7AEX2Aaxoh9RE+zvwmuwKTOyLeonUMv
QAu8DYvMwC6MEOtAw8y9TJ4Kdw1gB/UtcPYQDLv31YzG8Efhv7HrdV+AHv7E
LmJvww40Ep/AF0FT+i6MfUf6npbRLrgBd7lPEQquF9qTuOtvEk3AUbjoennS
zUpnluWcNXx/sX/BlrF90H5Moe/hg0Ptec/eKWbsPHWuT1yNWmuMOqJwr8rW
E8R+yX1ewAH3P01i7wPBFWtL
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.797959728229592, 0.8587791894972692, 0.8982037614123688], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlWmIjWEUx5/rvty5M+9osg1C2TJ1y5IlRdYPSpZsH8hSikbWrE1ojBDZ
t2yZGdtMExI1pIkaGVd8IZHxYShLGZR1MlL8/p3z4el37nnPc855znPOc3sv
Xj1zVZsQwiFWkjUuDuFlIoSJsCUnhKXIh9IhZHJD2IJ8ELmubQiN2M6B11gf
kCvhpSiEW8hlsJn9aRwX5oewh31rWLtZvfJCOAU/428/ax9yNXyZNpsTsBRu
S1js4R53GuznsWrgBNePhg34rEPuTsx3HvcVXIf+AfoS+DxtPmdj3wF5HvIQ
uNtzronst/Qv4AN+X0E/A+7MtdwnwVLPWbnPdpssHEhO9cj3kPtRyGXIA+Da
diF01blT1Ijf29FXOctYp1mj2XMENqHv77VdAFuT9j3i+0rO8xo/xbAjv6vR
d4ksjvzIXwHfHmMzGI4i3hDkZricHNogN+Fzkues3Ae7fRF8RKwK9N0ii6e4
f9Ed9b3ykfW9qs0d9rSifwjfe31UJ9X+G/JXVk+/L91bsee/CK50n+WwB6sF
m1rY2eXv2GdZzcj/4CDu75z8w7t+14fhXK+z6l2QsjqvwMd5vl1H3gqf0MNj
1M+wR57dXSV51vF7MvINmGFNRa6HCe5+PPJ85Cm+9y0cn2P6JbDA/e+C5ZHd
+2N4zGXpMh5LMTu5H/lbSn7fsfnDucqQY/R3YJX7VO7DsCtCPsOZqn0umuBv
7+ef8Hja+l/zUZu2WTmQtjmRXvPROd/uQzOh+9C9aLb35toM/oJZ7/lM2mIo
1mL0I9nzTHMI16csn+0pi60cNFuF7l9xdCad5Qc843ekuSxx+5Y8u1fd70/4
yfuzEU5I2d6b7eybbBLqEerQH30p33+zhiEvgBs8t6GxnVln/4Jti8/LWXjf
+1l9PcD7ZH7S3ibNe1Fkb5zqMSu2WdJMjY2s7+VH/hLeJ5dhsefQCj8G62H1
6EOfhQbYi/yforse2XukOnSJrXaqYSWs99yU4yzP4UJstda5NsI+ORZL596M
XQn2e+BFnxHNSpGfJQOzbrMDTnefesvbRxZLMef5TGm2drj9pqTVRfVZAqu8
V07AEV4TvTeb3F65PNW7gNyYtN7V3c0gz1qfd/0nNHhNbsOrsfXe69jmTfWs
gH19ZjW7uXx7o3cmtvdI71JebDEU6wPc7D719mz0WqkXTibtDVwI/wPBjuvC

                "]], 
               Polygon[CompressedData["
1:eJwtlntol1UYx89vv/u71wmhFgpCmmEt03JqXvCSUSaVWLaROI2ZUenSFNok
r110KqQ5aMvwhksrFMtu6sq2QNPIVCJzEzZBLZ0T1wXJoOjz7Xn++MDznvec
5zznOc/l3Fox//EXC0II+yEF03IhPAEfZEP4EFamQ1gBazMhrIOt/JucCOEe
uML/rwpD+BLehPUwE8qhGxTBcNYMg3Z0nIPbWT8AmljbDGX8K4UMchZWYcQb
cBAa4X3YBRUwG/oy5xbffzRymj1SsD8K4QCsRvcq30N7TYSxzB0ABTmbo7mb
WbMFuhi75mu0tiVrurVHf+Q/se0PeBvq4CXmLHAfyVcNsAPm5UOohNuY0x+K
oLv7TL67CwbBzejsBT/BaViTDGExft8IJ5DPMqcVDsMRqEHnajgBJ2E8ti/H
tmfhM76vQAcsZXwZzMbHFXAvDIU74RS6O2A68iLmLoR+zO0PvZHL0LUAdiGv
zZqv5LMeObPhsJ9JZ0uiowDqoB7KmV/C3D5QjFxFML0MF1n7S858IF8UaC28
h88bPEYUK3+j43dsa4FG5GJsmI6uCZBArojMtjVQi9yHOb1hHIyHqznzxaNw
UHviw1p07YaHiJcMY2lYgm1LYShjW/n3BdQgP5I238hHfaWXOWNhH7Z+AtuQ
B7o9E3TXcQhnkH+DPcgjFOMwGsZAVvGCrpj/KzMWY4q1UiiDavkIrkEXXGLO
r9Ab3X1guftf6+9HHsaaEviHs/8LHR6fysEE8zvd/gK+K9HzAxyHhcxbBD/z
/7THhGLjvOeD7lx3v95zdyDcoXtJ213oTo4i383YID+jzlrP+jqPecV+BzZd
hoh/hXBAuaicxDfp2HRIl3xyDPlpbJqVtZxSbn2NjkOQwpY0jEYe5WP618Ka
M16DVItmey0ohTI4zpzvdSYYB6+z92tug2zZkjHfKD5LsnZHuquPsXkf1GFj
V8LudEpsOapcfZK5pdAObVk7s84+I2exoJgoyVnMKfaUA/2QL6P7kse4Yv20
53qb65qF7pnQxFmaocjzT3dyUvfP9zI4inwMrhDPHbCNs26Hhdh4jrntum/k
tqTVDtWQb5HnwPPIr8K2pPlIvpIO6RrnvlJOKDemYMtjXoNVix/AponQyZqr
MDVluaScGov8FmyAkTAKbnj+ywfFOasJqg07oEFndP8oR68jt8eWO3lqRAdy
L2jk+0e4L7Y70d1sgndVo/Dhdv7VwMXIfCBfzIDylM3R3ACJyHpIxmusaq1q
kGpRFVRDW9ri4TJLPk3bHeuulYPKxc8zlnuK2UUZ62HqZc3o/kb2qHbmrQeo
FzRjQ5P7RL6ZmrX1ymHV0kmR2a4adoZ1BzjjjYTdoe6yy//rjIPZpzhltUk1
qkj+jaz2aY7mqoYt8RqlWlWGztK89TD1skbkgz6mf3NY8wzkIA8T1EP8DDpL
tftmL/JHMNfjSza+EltNUm1STVdtD7HFnuZEsfXwJs9p5fZ1znDE41NzZxJz
K4PF5FPIFznThZTltHK73O9yJPKotNkoW9XT1dvlc/l+HlTCNFiB7ndgXWQ9
d573NPU2xWynvxn0dugWW2wpxg4V2h7aSzbIFr1J9DapgTUwy8+nM/zF/M7I
9tKeVcg7k5Zbm+BG0tbUeM4od7q8tquGqZaph6iXVMNi2AO7YYjqeNZ6gnpD
K5yFnuzRI7I71F02+luoJ7p7wRbGNkMhxPAwTMrbHeuudYd7fUz/hjA2GIbD
CLjA2HmPAcVCpftWe2rvSHfgPV69PuG5pTUXvEan/E2it8mDacsl9SD10iq/
H71R5kd2xiHe89T75jL2gvcM9Q69MfXW3Ai1WfNBq9dQ1dI6f3vpDam3ZK3P
1Rvp/7dSbLVENXxnbG8Q1XrleG3G3jj93Afyxeak3Z1isj5pPpQv1UPUSxq8
dqkmqjbO8XqvN8lNeXujbfR6eAp5Q95qm878HXJ31XT3oXxZ4vaoRj6nPpK3
WqCar9qvmlrr778xyP8BnVF1AA==
                "]], 
               Polygon[CompressedData["
1:eJwt0stLlFEYB+BXGzOdSjdFd4gSzMhFllEEuqpoGbRpUdCiRYqCtihIJ/BS
QRBlLUIqg0okJQSlhQXZplTKIlL6B4KsVVLQostz8Fs883vnXN4535xv6+nW
Yy3FEbGdEup87GYmFzHpe616gC/qzXI1FVw2P2isXvbQy1rjazjOZ3NVctT4
B3WN+mXqSfPyiHVFEW3yJKfozVtr7LEcZoS/5RF/6OOqud+y3dof+p2Rw4zQ
qHcDY3w1d0jesH/Cnn65h728L4uY5bA+V8wdka0U1I3yLE2M6/lLn4fyLe8o
WRmRo46P1q+SndZ2MMA1YwW5w+9U81N9x9gW9ZBnfqbfI7nB2TbSY/yB+W2y
i24Gsz471buo5YA9+1nP/XQ/uaX/Jv1HeWeYsf6pes5znVC/lgt8Y59+9Rzk
YuorL3iW8/xzhgX9vsu8/eV0ZHdQKaftv6T+JO9yjz6/fZOG7O7TOzCZ7pWh
7B0Zl1MrIt7whKN6TMhX2ft0K+uReqVzp/NXeo7n6hdcL1s6623ZSYEpPRft
LXXuOfU8y9TFFGV3tUm2l3qn6Kdaj3PyP8p5YZE=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8455899094648454, 0.8746625857881032, 0.8768654829019348], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkz1IlWEUx0+97/Pqe9/CphZDij4gAgskpGhoioYmh+5kSg4NfdzhBhJB
LqYtYdJyIZCKohokEpTKim5TtyGcMmoOKhvcxKX6/TlnePj/n/Oc73OePecb
Q1e2mtkoJ+P8qsyWtph9B38WZrvhZ7vMJmpmTfgN8C1vC/Dn4BpGb7Cr52bv
uL9Gvn2bWQ+2G8j3gX+xeYj8KO9jues/zV1P+gmcD59T4BRv79GZzt1GtrPg
OH5a8D/gAuc2/ATyc5HzY/A08gZ8pTRb7iYevAMOIr8OPwJORp43K79Lvrfm
9SgH5fIqdKQ7Tw0VvFl4/erDGv4Pha1834t8lFcz9JfA9ah9EzwY/mfAwcr1
+ys/4k9qXo+43qfJewi+Dh6OPshfJ+qaKN2XfGomOyrvTwXO8XYB/glcLT3n
jdLvkt8BG9FP9XUz8tSsrjLvHtULjrMcx+C93X6X/HPh9cvnl9Ljyc9vbG8x
s5fMbiD3u+QXweMhn819TpqXdu1B7IP26FEy+wFvJZ+9duAueIb7CvwU2A4/
L8DL5JFpH5If8WvIhsOnfC+HH+1UK/xnyXunHs6Au2JXM7AvYimm6lS9i4Xn
rbiKP8r9H3xI7+HzfvI/oLja8a+l76H2cYC3b5KDH4MPq5Yu7+0BetsbcZ9h
uzN5zsp9MXmsdvKeKgf1Mou4teRHXLm0Q3+k8D+sPtfBvtgT7eBq5NBJ3l/F
+pB7f5XDyeR/Uvuvf5BFf/Snx8JWPkaiD5cKt5Gt6qhH3LnKZ68d0K51wlY9
6A+u3uyPelX3fwawoo4=
                "]], 
               Polygon[CompressedData["
1:eJwtlE1IlFEUhq+T8803M+VY0Q8UUmhtLEPphzJQR1vUppBCCYIolFqoWEFK
VGZU9gMRBU6brKhFtUktKItSg1oZulG0oIKUwIqCSmrV83LP4oHz3e+ec99z
7jl3+b6m6saIc243ZEMm7lwn5EAKAohCB5yHMOZcDBbBYiiBYmiBVjgBx6EM
yuFm6FwXTGN/hQLIh1yYq7UEZ2Y51wN5SeeusXYV3gXOvYcJ7HHzke89RA6j
8wl0YP9k7QeUcsZmiEEQeg3SEiF+FnxG+2Tca5b2URiDj/ABMvhchwfY902D
tEiDtLyGN/AbfkEnZKCbmA9hK2yDg/gcgL/wz2rSYhql9TJ79pPrMShE12nW
2lUnuAXrYK3FUCxplvYKSMMSNG7Edxl84fxZfEfgJHvboJGYDbAAFhqyn+H7
HPbGvK9iDJiPfNNQaXc0bTVX7euJXQfz8J0PI9jDUAlV0Bb3uSinJuxW1lpC
XxPV5i72HWjAboQLUfoIqmCLIfsbd/kdAnogCk/R3JfwNVQtC4mxCtrZewou
kvslGIQZeiHF+WP6JkY/3xNQxL5d+OwM/Z3qbqf4Pwnj/JuAlVbPajiHfQia
zUe+O4i5HWqgFj7h89FyUC7d2b4X1ZN5fHex50bg71B3mbFeWQ8bAt8j6pU6
cquHqdCfLQ1HI75GqtVhOAKPA5+bclwa+DvUXdZALZRy5qaoz0m51ZpWzahm
NU38CrtD3eUVanubeH3wAvtM0ttaW4P9Ck2D1kONplFa45BI+ByUi2qgWqgn
1BvFUBL3MzVqM6XZShEzJ+ljKnbaejkfCqAXTT32RuitSNnbox4bsZnWbL+E
fkN21N6mcntretH0KPAznLGeU+8V2FnNdrdzsGfDEPbb0PeQemk1FAW+pytt
pjRb6pFx6zn1XjlrZfbG6K05m/Rvl96wXOXJ2gD8gZnQz7RmW3eQth4utD2D
pmHIYip2wmqtGdAs7In6XlZPr8D+D7kiteM=
                "]], 
               Polygon[CompressedData["
1:eJwtkb8vA2EYx58W155D2Q2ElaS1YdI/oNIBC2kYLOigg8ZAWBjQCUmTY5Cc
SIQoEj8mA6tJDYxsxIAbDHwe7zt87vu95+e997aP57MzURFphTo44PGC7qEZ
R2QQnmpFromNor3E++CUeAWKUBMRCdBj4kewa2forHd63mDfztBZge2ZRn3Y
gZaYSDNM4X+py6E9vHvUHeKT+BSErsgssYV6kTVYhzTxATh3TL32VfEJfAG/
BMvwTKyNWA7/if+Cgs6DDubMk1vE/8RFJvE+vgEaIQ8TxK7InUAFQviGkmvq
ta+bmV0wFDO7dGc/+Sz+lfwcFOGSfRfge3w3uYxnzqJnClSJbaCbuhv/iG7B
tmtqtWcMbYIE3LHnFjoh5P/dOKZf55TRCERhlf4VuLdzdX4KkvBg/20VHYFh
+Iibb/8/g72bM3vPet9/31hN+A==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[0.941176, 0.906538, 0.834043], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkzFI1HEUx1/q/f+//4lYBOrQErgEEXIhDRnImUMOKkJx0BIOQQR3IC4u
IdVShC0RNkQ2RGCLopM4hA5uQUMcHBfUUFMcNMSBQvj58t7w+H7v/d97v/e+
793FxcZCvcfMZrBe7GXZbPmM2Rr4uGTWwdcCR3KzYfwJHCjMZuEnyWwUfhde
BbvJ/QfgOHEX4O8yj5Nf379id+CDxH/MPGYXvEr8KHwKfISNw3Niv/Mth18B
m9hZ1Qf/hV/ft6n1EL5C/CtyL8E/gStRsyLExuCt3HvSu3r/Se41VXs9aqr2
FjP/Z/YF+HzmfBPfYL/ZW2Lm+t3E99BqMmb8Al5O3v8xtT/Ab8HfJJ9B9V9k
nqPcjBp/o0/1WwkuPW6TU4UvgQ9CT+naYN5F+Cr4unA9nxU+v3SYgJ8vPPc+
vuWIr4Of+X1DMcl7Vc/a51S8uwruJI/XO7uh1WTuukurI+0i9l4BO31m39Bn
Gn3KzPVU74K/w38d/73M7+dc7r/lb/f5DHpLPQ5Fbh3sjT5vJr8VzbgO9sR9
6k4nYu+1wudXTAYehrba1a/C45W3GTvVbmciV7ezFjW7hb+hOtK1FjH7hfeq
njXr8/hf/Cy5FtKkDdbiTnQv12LXuqlq8pt8z+x/cr+HDXw/4iab4Ck//2sh

                "]], 
               Polygon[CompressedData["
1:eJwtkb8rRWEYx79+nPOecyykXIOBsiiDlCzU7cbgDoZbpCy6wy2po2SWMMlo
MSgGk9FqEH+BQbduBgYmKZMyyOfxvMO3Ps+P9/n1jjW3G2W3pFHUiy6DNNEl
9aNDeABV4Ck0Dpe51ISX0FUmpX3SOXyEikJqpNKv/M0GfB3r1dAK+Sf4AvxJ
zkEitTKP/efAO9Fet370ahVeewvVsctoW88HOJA/Ay+jKtwOPqv1H4bn8M1b
LfSFvR+czddD7Cf4+xG0CU/n3ttmGIQX4vtV9Ajf5j6LzTBE/yzex3ZeY7ez
zG9jM7wQu4i23ewG7sT5zPcBdxK/xRN65wO+qb8b92/DrzFuN5ulfpr7LDbT
HfUWE39rOcdwNfguttMeXIv7WM03+D7zW1l8En5O/a/t/qfk/wGfjDh4
                "]]}]}}, {{}, 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1254, 1339, 1244, 1262, 1349, 1418, 1505, 1591, 1688, 
               1781, 1757, 1582, 1676, 1410, 1498, 1254}], 
              
              Line[{1616, 1450, 1456, 1618, 1632, 1809, 1828, 2010, 2028, 
               2208, 2227, 2415, 2432, 2420, 2414, 2213, 2201, 2016, 2007, 
               1816, 1800, 1624, 1616}], 
              
              Line[{1845, 1695, 1703, 1716, 1856, 1918, 2055, 2112, 2254, 
               2317, 2299, 2295, 2242, 2092, 2042, 1897, 1845}], 
              
              Line[{1730, 1751, 1923, 1953, 2114, 2150, 2323, 2354, 2519, 
               2551, 2702, 2703, 2562, 2533, 2370, 2340, 2162, 2133, 1963, 
               1940, 1756, 1735, 1730}], 
              
              Line[{1913, 1842, 1843, 1859, 1920, 2051, 2116, 2257, 2319, 
               2456, 2454, 2441, 2310, 2240, 2108, 2033, 1913}], 
              
              Line[{2481, 2169, 2364, 2392, 2492, 2582, 2670, 2755, 2831, 
               2895, 2746, 2822, 2570, 2662, 2378, 2481}]}, 56], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1185, 1003, 1111, 1123, 1192, 1261, 1348, 1417, 1504, 
               1590, 1687, 1780, 1888, 1985, 2086, 2183, 2288, 2391, 2491, 
               2581, 2669, 2754, 2830, 2910, 2981, 3049, 3035, 2903, 2974, 
               2745, 2821, 2569, 2661, 2377, 2480, 2168, 2278, 631, 2075, 
               1768, 1878, 1581, 1675, 1409, 1497, 1253, 1338, 1117, 1185}], 
              
              Line[{1075, 1082, 1169, 1217, 1201, 1310, 1356, 1350, 1344, 
               1307, 1193, 1160, 1075}], 
              
              Line[{1211, 1158, 1159, 1171, 1218, 1326, 1331, 1379, 1495, 
               1481, 1480, 1373, 1317, 1302, 1211}], 
              
              Line[{1432, 1283, 1290, 1295, 1440, 1455, 1461, 1473, 1631, 
               1644, 1808, 1827, 2009, 2027, 2207, 2226, 2235, 2249, 2431, 
               2447, 2603, 2615, 2608, 2595, 2419, 2413, 2212, 2200, 2015, 
               2006, 1815, 1799, 1623, 1615, 1444, 1432}], 
              
              Line[{1645, 1516, 1657, 1715, 1855, 1917, 2054, 2111, 2253, 
               2316, 2462, 2506, 2448, 2294, 2241, 2091, 2041, 1896, 1844, 
               1694, 1645}], 
              
              Line[{1564, 1539, 1551, 1572, 1734, 1755, 1939, 1962, 2132, 
               2161, 2339, 2369, 2532, 2561, 2715, 2738, 2876, 2871, 2862, 
               2727, 2701, 2687, 2686, 2539, 2518, 2353, 2322, 2149, 2113, 
               1952, 1922, 1908, 1907, 1742, 1717, 1564}], 
              
              Line[{1709, 1651, 1718, 1858, 1919, 2050, 2115, 2256, 2318, 
               2455, 2520, 2632, 2512, 2440, 2309, 2239, 2107, 2032, 1912, 
               1841, 1709}], 
              
              Line[{2667, 2671, 2679, 2796, 2846, 2857, 2959, 3005, 2991, 
               2989, 2950, 2832, 2827, 2794, 2667}], 
              
              Line[{2863, 2800, 2809, 2814, 2869, 2961, 3006, 3085, 3077, 
               3001, 2948, 2949, 2863}]}, 42], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{857, 804, 807, 860, 869, 928, 934, 1017, 1028, 1020, 1014,
                925, 920, 862, 857}], 
              
              Line[{900, 887, 891, 905, 975, 977, 985, 998, 1095, 1108, 1223, 
               1222, 1105, 1086, 1084, 990, 967, 900}], 
              
              Line[{961, 964, 970, 1049, 1081, 1168, 1216, 1322, 1370, 1479, 
               1535, 1656, 1714, 1854, 1916, 2053, 2110, 2252, 2315, 2461, 
               2517, 2644, 2699, 2805, 2856, 2958, 3004, 3088, 3120, 3112, 
               3083, 2988, 2982, 2978, 2941, 2826, 2793, 2666, 2624, 2485, 
               2446, 2285, 2234, 2082, 2040, 1885, 1835, 1683, 1643, 1502, 
               1460, 1343, 1306, 1189, 1153, 1064, 1067, 1038, 961}], 
              
              Line[{1184, 1002, 1110, 1122, 1191, 1260, 1347, 1416, 1503, 
               1589, 1686, 1779, 1887, 1984, 2085, 2182, 2287, 2390, 2490, 
               2580, 2668, 2753, 2829, 2909, 2980, 3048, 3034, 2902, 2973, 
               2744, 2820, 2568, 2660, 2376, 2479, 2167, 2277, 630, 2074, 
               1767, 1877, 1580, 1674, 1408, 1496, 1252, 1337, 1116, 1184}], 
              
              Line[{1078, 1043, 1046, 1087, 1170, 1172, 1182, 1227, 1330, 
               1378, 1494, 1543, 1665, 1725, 1873, 1930, 2068, 2124, 2275, 
               2330, 2471, 2526, 2658, 2707, 2813, 2868, 2971, 3013, 3098, 
               3094, 3128, 3200, 3190, 3189, 3123, 3076, 3000, 2947, 2851, 
               2789, 2693, 2631, 2511, 2439, 2308, 2238, 2106, 2031, 1911, 
               1840, 1708, 1638, 1530, 1467, 1365, 1301, 1210, 1157, 1078}], 
              
              Line[{1431, 1282, 1289, 1294, 1309, 1316, 1449, 1472, 1630, 
               1650, 1822, 1851, 2026, 2049, 2219, 2248, 2430, 2453, 2613, 
               2638, 2626, 2620, 2614, 2607, 2594, 2418, 2412, 2211, 2199, 
               2014, 2005, 1814, 1798, 1622, 1614, 1443, 1431}], 
              
              Line[{1557, 1522, 1524, 1537, 1538, 1550, 1571, 1733, 1754, 
               1938, 1961, 2131, 2160, 2338, 2368, 2531, 2560, 2714, 2737, 
               2875, 2870, 2861, 2859, 2844, 2720, 2685, 2538, 2503, 2347, 
               2305, 2140, 2100, 1947, 1906, 1741, 1700, 1557}], 
              
              Line[{3060, 2931, 2937, 3062, 3072, 3082, 3179, 3195, 3261, 
               3272, 3269, 3257, 3186, 3181, 3176, 3167, 3064, 3060}], 
              
              Line[{3151, 3136, 3139, 3155, 3235, 3245, 3295, 3306, 3351, 
               3349, 3300, 3290, 3238, 3223, 3151}]}, 28], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{671, 628, 635, 675, 679, 669, 730, 671}], 
              Line[CompressedData["
1:eJwl0L8rxAEYB+D3jjvOj9F2N3y7yWIy2fwBtyhFOoN0yunON4vUjfIP6CxK
XSkpZVE3KIu6VWKUTQxK6aIITxme7e19P583WWnONTIRschZNmKXPc7p8swb
yUDEJEuscsQxn+QHIzZp8cN4LqJImROuqOYjUkpDETO8EMMRp/RoFSL2mR6J
qDDLLY80RiO26fNLYSxinR0u6XFNl5QN1ljmw/w7TWrc23fDFAmpm3U6MrR5
kOuOCXLMy1yho0ObDN86blHnS/8+hxxQZYEyRV797omL7P9//wADJjM/
               "]], 
              
              Line[{710, 700, 703, 714, 760, 770, 824, 837, 881, 879, 834, 
               820, 768, 756, 710}], 
              Line[{727, 723, 724, 729, 784, 777, 727}], 
              Line[{769, 772, 814, 835, 832, 812, 769}], 
              Line[{793, 821, 851, 858, 823, 799, 793}], 
              
              Line[{883, 885, 941, 969, 1048, 1080, 1167, 1215, 1321, 1369, 
               1478, 1534, 1655, 1713, 1853, 1915, 2052, 2109, 2251, 2314, 
               2460, 2516, 2643, 2698, 2804, 2855, 2957, 3003, 3087, 3125, 
               3196, 3225, 3220, 3216, 3192, 3111, 3107, 3080, 2977, 2940, 
               2825, 2792, 2665, 2623, 2484, 2445, 2284, 2233, 2081, 2039, 
               1884, 1834, 1682, 1642, 1501, 1459, 1342, 1305, 1188, 1152, 
               1063, 1036, 955, 960, 939, 883}], 
              Line[CompressedData["
1:eJwl0L8rxHEYB/BH58f5cYOS5RbHdtkMiqQMlitxN+nuFpPJZZGwXcmkblEs
ipTBYGJW3HRhMPgOR5HhRvkDeJXhNTz1fPo873durVbc6IqIVeqpiC12OOCR
Z175YrE7osQT76z3ROyS6Y0Y556ERl/EJcV0RI1cf8Q8H/xyPBBxzcygHVq0
WRgyc8YVb3QYzURMUKLKPg1uueGQOmVWGGOYT28TLjhiiWle/HVHgUnyZDl1
0x4dNzbJE5RlmOJEpk1aMp4zwrf8P2xTIdHLA8vMMUtbd83Uf79/FRozJA==

               "]], 
              
              Line[{935, 968, 1033, 1077, 1156, 1209, 1300, 1364, 1466, 1529, 
               1637, 1707, 1839, 1910, 2030, 2105, 2237, 2307, 2438, 2510, 
               2630, 2692, 2788, 2850, 2946, 2999, 3075, 3122, 3188, 3224, 
               3270, 3275, 3227, 3199, 3202, 3132, 3097, 3012, 2970, 2867, 
               2812, 2706, 2657, 2525, 2470, 2329, 2274, 2123, 2067, 1929, 
               1872, 1724, 1664, 1542, 1493, 1377, 1329, 1226, 1181, 1091, 
               1056, 1045, 972, 946, 937, 935}], 
              
              Line[{1183, 1001, 1109, 1121, 1190, 1259, 1269, 1273, 1355, 
               1438, 1514, 1606, 1685, 1778, 1886, 1983, 2084, 2181, 2286, 
               2389, 2489, 2579, 2586, 2602, 2678, 2765, 2837, 2923, 2913, 
               2979, 3047, 3033, 2901, 2972, 2743, 2892, 2887, 2819, 2726, 
               2654, 2552, 2478, 2166, 2276, 629, 2073, 1766, 1876, 1579, 
               1673, 1407, 1565, 1563, 1489, 1397, 1336, 1239, 1242, 1183}], 
              
              Line[{3277, 3280, 3326, 3337, 3395, 3403, 3447, 3454, 3452, 
               3445, 3400, 3393, 3332, 3322, 3277}], 
              Line[{3298, 3301, 3338, 3361, 3358, 3335, 3298}], 
              Line[{3318, 3346, 3386, 3392, 3348, 3324, 3318}], 
              Line[{3377, 3383, 3437, 3492, 3493, 3433, 3377}], 
              Line[{3483, 3428, 3489, 3526, 3523, 3488, 3481, 3483}]}, 14], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{643, 641, 683, 690, 739, 746, 795, 798, 853, 855, 916, 
               918, 1008, 1011, 1015, 1018, 1130, 1138, 1275, 1280, 1429, 
               1441, 1612, 1620, 1796, 1812, 2003, 2012, 2197, 2209, 2410, 
               2416, 2592, 2605, 2767, 2772, 2917, 2919, 3053, 3055, 3163, 
               3165, 3169, 3174, 3254, 3263, 3267, 3320, 3328, 3390, 3397, 
               3443, 3449, 3501}], 
              
              Line[{644, 646, 648, 650, 691, 699, 748, 755, 751, 800, 813, 
               864, 872, 867, 926, 940, 1027, 1042, 1037, 1135, 1148, 1154, 
               1164, 1288, 1314, 1447, 1470, 1628, 1648, 1820, 1849, 2024, 
               2047, 2217, 2246, 2428, 2451, 2611, 2636, 2780, 2795, 2925, 
               2935, 2942, 2954, 3069, 3084, 3177, 3193, 3197, 3265, 3279, 
               3325, 3336, 3339, 3342, 3399, 3406, 3450, 3457, 3503}], 
              
              Line[{649, 652, 694, 705, 750, 762, 808, 826, 871, 882, 938, 
               959, 954, 1035, 1062, 1151, 1187, 1304, 1341, 1458, 1500, 1641,
                1681, 1833, 1883, 2038, 2080, 2232, 2283, 2444, 2483, 2622, 
               2664, 2791, 2824, 2939, 2976, 3079, 3106, 3110, 3191, 3215, 
               3219, 3276, 3292, 3333, 3353, 3402, 3413, 3453, 3464, 3505}], 
              
              Line[{651, 654, 695, 709, 711, 716, 754, 771, 781, 728, 782, 
               787, 789, 758, 741, 702, 687, 653}], 
              
              Line[{655, 692, 704, 747, 761, 805, 825, 865, 884, 936, 945, 
               971, 1044, 1055, 1090, 1180, 1225, 1328, 1376, 1492, 1541, 
               1663, 1723, 1871, 1928, 2066, 2122, 2273, 2328, 2469, 2524, 
               2656, 2705, 2811, 2866, 2969, 3011, 3096, 3131, 3201, 3198, 
               3226, 3274, 3291, 3330, 3352, 3398, 3412, 3451, 3463, 3504, 
               3513}], 
              
              Line[{658, 698, 708, 753, 765, 817, 818, 819, 833, 878, 896, 
               957, 965, 988, 1072, 1099, 1205, 1206, 1220, 1240, 1371, 1391, 
               1520, 1555, 1698, 1739, 1904, 1945, 2098, 2138, 2303, 2345, 
               2501, 2536, 2683, 2718, 2842, 2883, 2995, 2996, 3008, 3027, 
               3126, 3117, 3144, 3221, 3236, 3288, 3287, 3297, 3344, 3359, 
               3408, 3407, 3416, 3458, 3468, 3507, 3508, 3509, 3516}], 
              Line[{25, 722, 726, 776, 783, 50}], 
              Line[{26, 627, 634, 674, 678, 668, 51}], 
              Line[{575, 3482, 3480, 3487, 3522, 3525, 600}], 
              Line[{576, 3376, 3382, 3436, 3491, 601}], 
              
              Line[{3506, 3469, 3455, 3420, 3405, 3366, 3310, 3368, 3375, 
               3384, 3385, 3410, 3440, 3441, 3446, 3461, 3502, 3512}], 
              
              Line[{3519, 3515, 3476, 3466, 3425, 3415, 3365, 3356, 3309, 
               3303, 3247, 3242, 3158, 3149, 3146, 3137, 3036, 3019, 2897, 
               2873, 2735, 2712, 2558, 2529, 2366, 2336, 2158, 2129, 1959, 
               1936, 1752, 1731, 1569, 1548, 1402, 1383, 1246, 1232, 1115, 
               1103, 999, 994, 987, 983, 908, 894, 889, 839, 829, 780, 764, 
               718, 707, 662}], 
              Line[CompressedData["
1:eJwl0C1LgwEUBeDrpu7DsWIwr4hJEAZOEEyLlhlmFrNLGmzzCxRdmEkGghaH
Bl+GynRiEYuw5E8wmywWwQcMTz33nFtaa9Q2RiKizlE6YpkT2pxyRodLXonR
iAxZyuzSZ3IsYoVHflgfj7hmNhOxyReVbMQtCc+kchH7DKnmZfFJaSKiyQOp
QsQcDdoMuKNHwg11ulxxwTl7LLFAmSJP8o6Z5tudQ2p8uN8hx7teVQq0dG6y
zSKJPVv82vfGKjO82N9inimG/nTPDgfp/7/+AW51Lxc=
               "]], 
              
              Line[{1106, 1000, 1060, 995, 1004, 1066, 1120, 1126, 1199, 1272,
                1354, 1437, 1513, 1611, 1693, 1806, 1895, 2000, 2090, 2206, 
               2293, 2409, 2497, 2601, 2677, 2764, 2836, 2922, 2987, 3056, 
               3046, 3105, 3153, 3041, 3101, 2900, 3029, 2967, 2886, 2818, 
               2725, 2653, 2544, 2476, 2352, 2266, 2144, 2072, 1951, 1866, 
               1747, 1670, 1562, 1488, 1396, 1335, 1238, 1178, 1106}]}, 0], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{637, 667, 626, 633, 673, 677, 734, 732, 788, 847, 848, 
               912, 849, 850, 854, 852, 797, 794, 745, 738, 689, 682, 640, 
               642}], 
              
              Line[{661, 706, 717, 763, 779, 828, 838, 888, 893, 907, 982, 
               986, 993, 996, 911, 910, 846, 843, 841, 786, 775, 725, 721, 
               666}], 
              
              Line[{3494, 3490, 3435, 3381, 3379, 3313, 3374, 3314, 3312, 
               3249, 3162, 3164, 3168, 3173, 3253, 3262, 3266, 3319, 3327, 
               3389, 3396, 3442, 3448, 3500}], 
              
              Line[{3529, 3485, 3524, 3521, 3486, 3479, 3430, 3370, 3373, 
               3367, 3311, 3307, 3246, 3304, 3302, 3308, 3355, 3364, 3414, 
               3424, 3465, 3475, 3514, 3518}], 
              
              Line[{719, 663, 720, 731, 736, 701, 681, 672, 670, 660, 659, 
               657, 656, 697, 715, 719}], 
              Line[CompressedData["
1:eJwl0DFLQgEUxfHzfOpLU6JCHATDQGkTHMLBPoFbS5BD4JIhqCg0KLgJiRDi
FxBUwk1sMBwCFweXlsTFXcGlSVxE/EPDb7nDvefcUDp/nzMkPWBrk3aImNIt
0iggix7GcNulMKrowO+QEhhiiYxTauLGkh6xxdWJ9IUNGi7pE3du6RkrWKdS
GW04PVIQJbyhjnfMsIDplS5xBi8MzJn/4gcT1FCADxfYs7eOIv64t0QSMbTI
UsGUbH0cyLtGHAHk6ZLCN90+EIKFBt1fcQ4bBvxmhC5e8IQors3/vx4B/Bst
jw==
               "]], 
              Line[CompressedData["
1:eJwl0L8rBAAUB/CnO+dwBpbrlOE2v+rcyqCz6CTqFpmuDAZxt0uMVzIYr5Cu
/AHCIJlkkIk7JqnbjHaDfMrwmV699/2+/Ea9UuuJiDXmEhGTTDHDPFtss8MB
97wxkYwosMQNHVZ7I2p8M5KKaPFMvS+iSTEdsc4v4/0Rj3yxOxBxRm4wYoEr
XpjORCxyxCHnvNMlMxQxxjJlRknxafZKm1MazJLlwc4mRX7cO6bKhwwXZOnK
VmaYhswr3OmwT5KOblUKPOl8Qok8bX+55ZpL9thM/P/1Dx6SLcs=
               "]], 
              
              Line[{897, 901, 951, 992, 1059, 1101, 1177, 1237, 1334, 1395, 
               1487, 1561, 1669, 1746, 1865, 1950, 2071, 2143, 2265, 2351, 
               2475, 2543, 2652, 2724, 2817, 2885, 2966, 3026, 3100, 3145, 
               3206, 3232, 3229, 3203, 3134, 3092, 3015, 3007, 2955, 2853, 
               2802, 2696, 2641, 2514, 2458, 2312, 2321, 2260, 2127, 2059, 
               1933, 1862, 1729, 1720, 1711, 1653, 1532, 1476, 1367, 1319, 
               1213, 1165, 1088, 1093, 1052, 979, 948, 897}], 
              
              Line[{1005, 913, 917, 1007, 1010, 1128, 1132, 1137, 1274, 1279, 
               1277, 1424, 1428, 1600, 1605, 1617, 1619, 1795, 1811, 2002, 
               2011, 2196, 2202, 2401, 2404, 2589, 2596, 2604, 2766, 2771, 
               2769, 2915, 2916, 3052, 3054, 3051, 3161, 3050, 3045, 2912, 
               2907, 2757, 2752, 2585, 2577, 2396, 2388, 2188, 2179, 1990, 
               1982, 1786, 1777, 1595, 1588, 1421, 1414, 1264, 1258, 1125, 
               1119, 1005}], 
              
              Line[{958, 922, 929, 962, 1023, 1074, 1144, 1145, 1207, 1298, 
               1362, 1464, 1527, 1635, 1705, 1837, 1825, 1900, 2019, 2103, 
               2222, 2298, 2425, 2434, 2436, 2508, 2628, 2690, 2786, 2848, 
               2944, 2997, 3073, 3066, 3119, 3182, 3217, 3258, 3251, 3213, 
               3171, 3109, 3058, 2986, 2921, 2835, 2763, 2676, 2600, 2496, 
               2408, 2292, 2205, 2089, 1999, 1894, 1805, 1692, 1610, 1512, 
               1436, 1353, 1271, 1198, 1134, 1069, 1012, 958}], 
              
              Line[{1114, 1102, 1112, 1113, 1118, 1249, 1256, 1405, 1412, 
               1575, 1585, 1761, 1772, 1968, 1977, 2155, 2174, 2363, 2383, 
               2557, 2574, 2734, 2749, 2894, 2905, 3032, 3043, 3152, 3160, 
               3156, 3241, 3157, 3148, 3040, 3021, 3018, 2896, 2872, 2888, 
               2742, 2731, 2567, 2550, 2545, 2528, 2365, 2335, 2157, 2128, 
               1958, 1941, 1765, 1750, 1578, 1552, 1547, 1401, 1382, 1398, 
               1251, 1243, 1114}], 
              
              Line[{3426, 3456, 3474, 3477, 3484, 3431, 3495, 3496, 3499, 
               3460, 3439, 3434, 3432, 3427, 3372, 3426}]}, -14], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{638, 632, 636, 639}], 
              Line[{664, 712, 713, 665}], 
              Line[{3497, 3438, 3444, 3498}], 
              Line[{3527, 3517, 3520, 3528}], 
              
              Line[{680, 676, 733, 735, 790, 792, 791, 740, 743, 737, 686, 
               684, 680}], 
              
              Line[{766, 778, 830, 836, 842, 903, 844, 840, 785, 774, 773, 
               767, 766}], 
              
              Line[{1025, 942, 1029, 1054, 1147, 1175, 1292, 1325, 1454, 1483,
                1490, 1639, 1679, 1831, 1881, 2036, 2078, 2230, 2281, 2442, 
               2477, 2619, 2648, 2782, 2808, 2934, 2964, 3070, 3089, 3067, 
               2952, 2929, 2798, 2778, 2634, 2609, 2449, 2426, 2244, 2215, 
               2045, 2022, 1847, 1818, 1646, 1626, 1468, 1445, 1312, 1286, 
               1162, 1141, 1040, 1025}], 
              
              Line[{1051, 981, 991, 1058, 1100, 1176, 1236, 1333, 1394, 1486, 
               1560, 1668, 1745, 1864, 1949, 2070, 2142, 2264, 2350, 2474, 
               2542, 2651, 2723, 2816, 2884, 2965, 3025, 3099, 3141, 3133, 
               3091, 3014, 2962, 2864, 2852, 2801, 2695, 2640, 2513, 2457, 
               2311, 2320, 2259, 2126, 2058, 1932, 1861, 1728, 1719, 1710, 
               1652, 1531, 1475, 1366, 1318, 1212, 1219, 1173, 1092, 1051}], 
              
              Line[{1006, 1009, 1127, 1129, 1266, 1268, 1423, 1427, 1599, 
               1604, 1790, 1794, 1801, 1810, 2001, 2008, 2192, 2195, 2400, 
               2403, 2588, 2591, 2758, 2759, 2914, 2908, 3044, 2911, 2906, 
               2756, 2751, 2584, 2576, 2395, 2387, 2187, 2178, 1989, 1981, 
               1785, 1776, 1594, 1587, 1420, 1413, 1263, 1257, 1124, 1006}], 
              
              Line[{1068, 1021, 1022, 1073, 1143, 1200, 1296, 1297, 1361, 
               1463, 1526, 1634, 1704, 1836, 1824, 1899, 2018, 2102, 2221, 
               2297, 2424, 2433, 2435, 2507, 2627, 2689, 2785, 2847, 2943, 
               2932, 2990, 3065, 3118, 3172, 3170, 3108, 3057, 2985, 2920, 
               2834, 2762, 2675, 2599, 2495, 2407, 2291, 2204, 2088, 1998, 
               1893, 1804, 1691, 1609, 1511, 1435, 1352, 1270, 1197, 1133, 
               1068}], 
              
              Line[{1096, 1070, 1097, 1203, 1234, 1358, 1389, 1518, 1553, 
               1696, 1737, 1902, 1943, 2096, 2136, 2301, 2343, 2499, 2534, 
               2681, 2716, 2840, 2881, 2993, 3023, 3115, 3142, 3211, 3140, 
               3104, 3017, 2984, 2878, 2828, 2710, 2672, 2659, 2522, 2467, 
               2326, 2271, 2120, 2064, 1926, 1869, 1721, 1684, 1546, 1507, 
               1386, 1346, 1229, 1195, 1096}], 
              
              Line[{1245, 1250, 1399, 1406, 1567, 1577, 1749, 1764, 1956, 
               1972, 2145, 2156, 2334, 2341, 2358, 2375, 2549, 2566, 2730, 
               2741, 2890, 2899, 3030, 3039, 3147, 3038, 3042, 3031, 2904, 
               2893, 2748, 2733, 2573, 2556, 2382, 2362, 2173, 2154, 1976, 
               1967, 1771, 1760, 1584, 1574, 1411, 1404, 1255, 1248, 1245}], 
              
              Line[{3255, 3317, 3321, 3323, 3388, 3394, 3391, 3387, 3380, 
               3378, 3316, 3315, 3255}], 
              
              Line[{3369, 3362, 3371, 3422, 3429, 3478, 3472, 3471, 3467, 
               3423, 3417, 3418, 3369}]}, -28], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1140, 1039, 1050, 1053, 1146, 1174, 1291, 1323, 1311, 
               1285, 1161, 1140}], 
              
              Line[{1228, 1194, 1196, 1202, 1233, 1357, 1388, 1517, 1508, 
               1506, 1385, 1345, 1228}], 
              
              Line[{1324, 1230, 1332, 1393, 1485, 1559, 1667, 1744, 1863, 
               1948, 2069, 2141, 2263, 2349, 2473, 2541, 2650, 2722, 2815, 
               2879, 2806, 2709, 2700, 2694, 2639, 2521, 2464, 2331, 2258, 
               2125, 2057, 1931, 1860, 1727, 1660, 1545, 1536, 1474, 1374, 
               1381, 1324}], 
              
              Line[{1265, 1267, 1422, 1426, 1598, 1603, 1789, 1793, 1993, 
               1996, 2191, 2194, 2399, 2402, 2587, 2590, 2578, 2750, 2583, 
               2575, 2394, 2386, 2186, 2177, 1988, 1980, 1784, 1775, 1593, 
               1586, 1419, 1265}], 
              
              Line[{1351, 1284, 1360, 1452, 1453, 1462, 1525, 1633, 1702, 
               1823, 1898, 2017, 2101, 2220, 2296, 2423, 2505, 2617, 2618, 
               2688, 2784, 2776, 2845, 2924, 2833, 2761, 2674, 2598, 2494, 
               2406, 2290, 2203, 2087, 1997, 1892, 1803, 1690, 1608, 1510, 
               1434, 1351}], 
              
              Line[{1566, 1568, 1573, 1583, 1759, 1770, 1966, 1975, 2153, 
               2172, 2361, 2381, 2555, 2572, 2732, 2747, 2739, 2889, 2740, 
               2729, 2565, 2548, 2374, 2357, 2165, 2148, 1971, 1955, 1763, 
               1748, 1576, 1566}], 
              
              Line[{1661, 1658, 1817, 1846, 2021, 2044, 2214, 2243, 2255, 
               2262, 2268, 2280, 2229, 2077, 2035, 1880, 1830, 1678, 1672, 
               1661}], 
              
              Line[{1868, 1925, 2063, 2119, 2270, 2325, 2466, 2487, 2488, 
               2498, 2342, 2300, 2135, 2095, 1942, 1901, 1891, 1890, 1875, 
               1868}], 
              
              Line[{2645, 2633, 2777, 2797, 2928, 2951, 2960, 2963, 2933, 
               2807, 2781, 2647, 2645}], 
              
              Line[{2877, 2838, 2839, 2880, 2992, 3022, 3114, 3113, 3103, 
               3016, 2983, 2877}]}, -42], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1482, 1380, 1387, 1392, 1484, 1558, 1666, 1743, 1736, 
               1726, 1659, 1544, 1482}], 
              
              Line[{1592, 1415, 1425, 1597, 1602, 1788, 1792, 1992, 1995, 
               2190, 2193, 2398, 2397, 2393, 2385, 2185, 2176, 1987, 1979, 
               1783, 1774, 1592}], 
              
              Line[{1509, 1433, 1439, 1451, 1515, 1625, 1701, 1807, 1802, 
               1689, 1607, 1509}], 
              
              Line[{1671, 1677, 1829, 1879, 2034, 2076, 2228, 2279, 2267, 
               2261, 2225, 2061, 2056, 2043, 2020, 1857, 1826, 1671}], 
              
              Line[{1954, 1970, 2147, 2164, 2356, 2373, 2547, 2564, 2728, 
               2563, 2571, 2554, 2380, 2360, 2171, 2152, 1974, 1965, 1769, 
               1758, 1762, 1954}], 
              
              Line[{1924, 1867, 1874, 1889, 1935, 2083, 2093, 2094, 2134, 
               2289, 2332, 2486, 2465, 2324, 2269, 2118, 2062, 1924}], 
              
              Line[{2463, 2333, 2348, 2472, 2540, 2649, 2721, 2711, 2708, 
               2646, 2527, 2463}], 
              
              Line[{2493, 2405, 2421, 2422, 2504, 2616, 2680, 2775, 2774, 
               2760, 2673, 2597, 2493}]}, -56], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1782, 1773, 1596, 1601, 1787, 1791, 1991, 1994, 2189, 
               2180, 2384, 2184, 2175, 1986, 1978, 1782}], 
              
              Line[{1957, 1969, 2146, 2163, 2355, 2372, 2546, 2371, 2553, 
               2379, 2359, 2170, 2151, 1973, 1964, 1957}]}, -70], {}, {}}}], {
         AspectRatio -> 1, Frame -> True, ImagePadding -> {{20, 15}, {20, 1}},
           ImageSize -> {260, 
            Rational[395, 2]}, PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}}]]}}, 
     Spacings -> {0, 0}], $CellContext`forceGrid$$ = CompressedData["
1:eJzdmP1P1XUUx29OuALaMIh4yIfa6kZCQnW1tHGPNAda6hVEmjIeLBDK8RQx
FUiogGsFkkg6XSoEEUk+AAkTFEQHscipsQE3ICwTnEWIiEjXaGv39f3h+x90
2fjh7Jzzfr/v+ZxzPp97n9iSFBI7Q6PReFj/fbuv3xoKG5XesbjEgiGzWIIj
7nSNtMu4Pl+zfvq01Bya7BgfqBQxbK4funBQJp8rTcjQF8mglzFk4sVcuZjn
90PjZJbkOtcU9gymy8TZ8BXh/anyXnjidO6PyRL+ivPQmWeTFRs/8eSDBz58
8KMHfehV63/TZW9in65NvtHNTk74rlbGzCZ3n9Ey+cCy+8jGr4slb9icluOY
J0XbxkqertkpQafq3mhITxFXN4c5acfj5cLkgh2u3VvkYU21eWBulNx+a9VX
e6o3i4vjruUpRzcpNn7iyQcPfPjgRw/60KuuP/62in3P60ylcrhkV1tNT5F8
MtI4Ky8zRy41eGS8fuhdiagb025o3ipuVj1Vi0+2fj4eJklm+7LoVqM0hr4U
G/3la7LJKa/d9XCwfJETEVN8Ikix8RNPPnjgwwc/etCHXnX/8HmJ/63nyque
ftmyw9oP31vr91dXb+axKxvlkk+DccS8RqJvrfDtd18pf3f751R6ivys8z/a
XrhMFuWU3j9duVT2ui3INLUuUWz8xJMPHvjwwY8e9KFX3f+cH5+f/DhLS8kf
yTGyrG7KsrowVA5a66ur2N4c+CBA2rWN8fY39FIeGlkVWO8nNz710jp9tkg6
7AMiWwqeEa2+w7f/iE6x8RNPPnjgwwc/etCHXvX80o+cJ/UAr8TsHb3mz5Xy
i7We2uP3uvZF+UunVd9Fv3Pu8889KWfmzjPWDc+Xj/WOw9fzvWT3zIAm7yxP
xcZPPPnggQ8f/OhBH3rV+4f5oj85X+oDvoe+KXDdo34SHdpZPOD4lCTE1m8P
ODtP6sO6cpNq3eRtlw3f/l7/iLy8vMDZp9pZKu7mPlbu6KzY+IknHzzw4YMf
PehDr3p/si+YN/qV86Ze8Jms9Y3rbemLSXMRu4XZ56Nq50hzp6UjPWuWzA6a
sBgu20lqxOXAm5aZio2fePLBAx8++NGDPvSq9z/7j/3B/NG/nD/1g3+bw6qr
5993khSr3iUnh0LWrn1IUk/lf/hC1z+G6f19xo+qHhiw8RNPPnjgwwc/etCH
XvX9xT5nH7JPmEf6mX6gnujJXnjAe72dRqYcBvP3vzNl+CnyZnyU6Z7hQLax
OLp8QrHxE08+eODDBz960Ide9f3L/cR+Zz+yX5hP+pv+oL7o+zXjWtWMjruG
a01LF+/cesfQXrFOm3FsTLHxE08+eODDBz960Ide9fuB+5b7in3PvmTfMK9K
/1v7hXqjN9BUdn9P8G2D9+oTVx8vHVVs/MSTDx748MGPHvShV/3+4f3A/cv9
xf5nf7J/mF/6n/6h/ujX/Pc3qtj4iVfmx4oHPnzwowd96FW/3/7v52Er82Er
+8pW7g9buc9t5X1lK+9dW/n+YSvfB23l+7mt/F5iK79f/QsuMEcA
    "], $CellContext`forceTermSelection$$ = 
    3, $CellContext`grid$$ = CompressedData["
1:eJx12j3K7TYQh/FDsoqUWYn3ELgbCKTOvpLatSv3atS4EgKBMQiyhJDklYx+
k2u4HOb+nzlH0uhjNH5//vX3X3778fP5/PT174fPeP46vj63b/8+fdp//vHP
80z7v88bvsFX+IJ+4Z/hE/qJvcPPfgx9w39b+YSep/3VPviCXvFv8Df8A9/h
w+cxuBGPYY94rN9zwzf4Cl/QL/wzfEI/sXf4zwd9w59xSOh52iMetB+94t/g
b/gHvsOHOB34TXvEY43zDd/gK3xBv/DP8An9xN7hPx90xuFknib0vNE++IJe
8W/wN/wT4uK6wT6I68H3TnvEY+UbfIUv6Bf+GT6hn9g7/Himzjw9t5VP6Jlx
vOALesW/wd8hLoxv2NewD9bdtNf9av4ufIOv8AX9wj/DJ/QTe4cf+9XU2UdO
xi2h52mv+9VsP3rFv4W4MH5hX1v5cA4d7IsH6/JgXsA3+Apf0C/8M3xCP7F3
+LFfTZ1xO5nXCT1vtA++oNcQF9eN+5rnjnkB9rHOg36s7XimPeLBvIGv8AX9
wj/DJ/QTe4cfz9SZ1+e28gk9M+4XfAlxof9hX2P8Ql6w8iGPO8grjnWePMfa
zhu+wVf4gn7hn+ET+om9w4/1cbE+LtbH/H70vNG+EBfXjfua5455gXmbeTX2
Mdo14rG285n2iMfKN/gKX9Av/DN8Qj+xd/hxfkydc+HcVj6h5xAX2h/2Nfof
8gLGL+TVKx/uQcfazj7tdb+aeQl8g6/wBf3CP8Mn9BN7hx/P1Bn3c1v5FOJC
+8K+Rv9CXsD4wD/wHT7cU491HvVpr+tj5o3wDb7CF/QL/wyf0E/sHX6sj6mz
Ls4QF34/7Gu0P+QF9B/+hn/gO3yoIxxrP/q013jsxGPmlfAVvqBf+Gf4hH5i
7/AjHlP/TlxcN+5rnjvmBeZt5tXee7yXWjewrjPtY+1Xn/a6X43nhm/wFb6g
X/hn+IR+Yu/w7/P/cXrX0df3h3OH9oW8jf7h3+Bv+Ae+w4c63Jhvx4jHsFkf
X+Nwwzf4Cl/QL/wzfEI/sXf4N07rPHz3Nb4/5AW0D76gV/wb/A3/wHf4UCel
3/P8IB4n8Zj3ZvgKX9Av/DN8Qvdzh3/X0Zf+nXPHvMC8zbzae4/3UusG1nWs
u1kXtW49bcZh5lfHul/NuhJ8g6/wBf3CP8OnEBfXzcqN5z138A95G78/be9B
Ix70D/8Gf8M/8B0+vGdgns77B+tj1v3gG3yFL+gX/jnEZf1/19EO/55DIx74
byuf0N97kPfUEQ/6h3+Dv+Ef+A4f3gMxTvN+PuOxzusbvsFX+IJ+hbi4btzX
PHfMC8zbzKu993gvtW5gXYf+4d/gb/gHvsOH93TM4844zvoV+9Ws28JX+BLi
4rpZuYTuObTDj+fNq/HfVj6hv3UE6zwjHvQP/wZ/wz/wHT68R2Wf6czzh3G+
4Rt8DXFx3bivee6YF5i3mVd77/Feat3Aug7tgy/oFf8Gf8M/8B0+vOfmHOiM
88M6uOFbiIvrZtUv/DJ8QjeP2+Hfe9CIB/7byif0tw63nh9v3Zr+4d/gb/gH
vsOHv0NgnDvrYL4fDJ+0I6yjdR2+587qn+ETunn2Dj+et26A/7byCf2tk677
1ftegf7h3+Bv+Ae+w4e/E2EdzPfn4ZPfCevIfW7Ew7zAvM282nuP91LrBujU
ed463IgHv7/RPviCXvFv8Df8A9/hw9/xsE/1EBfXzco1+Apf0C/8M3xC9566
w791nhEP/LeVT+jve4Z1v3rfy9E//Bv8Df/Ad/jwd1YhLq6blbvhG3yFN2+4
8M/w3otO7B1+PG9dFP9t5a1rv+8d1v3qfW9K//Bv8Df8A9/h37+7+huSLu1z

    "], $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    1.1102230246251565`*^-15, $CellContext`h$$ = Rational[
    1, 12], $CellContext`kValue$$ = 16, $CellContext`lenX$$ = 
    2, $CellContext`lenY$$ = 2, $CellContext`northbc$$ = 
    1& , $CellContext`northBCconstantValue$$ = 
    0., $CellContext`northBCtype$$ = 
    "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
    "Quality", $CellContext`plotToShow$$ = 
    "solution and contour", $CellContext`rightHandVector$$ = SparseArray[
    Automatic, {575}, 0., {1, {{0, 529}, CompressedData["
1:eJwl1WPbEAYABdA323Zvdi23bNvWlo1l27Zt23bLtm3XVu307MO59xfc5wY2
alupTdCAgIAoIoiOTRziEo/4JCAhiUhMIElISjKSk4KUpCI1aUhLOtKTgYxk
4jcyk4WsZCM7OchJLn4nN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOB
ilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojF/8CdNaEozmtOClrSiNW1oSzva
04GOdKIzf9GFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJ35ziNGc4yznO
c4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97z
gY984jNf+Mo3/uFfvvODn/waaRCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMIElISjKSk4KUpCI1aUhLOtKTgYxk4jcyk4Ws
ZCM7OchJLn4nN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojF/8CdNaEozmtOClrSiNW1oSzva04GOdKIz
f9GFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQm
M4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjaz
ha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJ35ziNGc4yznOc4GLXOIy
V7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf
+Mo3/uFfvvODnwT8+mmCEozghCAkoQhNGMISjvBEICKRiBz0/6+PSjSiE4OY
xCI2cYhLPOKTgIQkIjGBJCEpyUhOClKSiv8ALMEESg==
       "]}, CompressedData["
1:eJzVl+lPVGcUxmeMdUGsoqatBRNRW5doXagmVvRcatyTRgvYuMaiQJoGqFHp
QFFBJ1A7ZVBcWArEidQRMA2bYrVFWkdHinaidgzWWp26lIDLlCVEasF+uL/7
4f4HN7lfTs45z/Pc855z3ntDY5I+jDWbTKagfibTo3NndzmrIpXHVwPSPdYI
peP1I1lp3hnKwxee7BkpoUrlryutOXkjlfRNw7uvnB2oBG73bGkf0idHRw6a
FO/vku2z7KXvnPdLXXlAQnBJm9wcm7pgc0GLnEuNWjWs4m/Nxk88+eCBDx/8
6EGfXu+ma21r/FOmK87a4Gf9O8Yo3ffOFy98bZgS82nPyoIEszL7Vklrc3CX
1Kv8nsVL5o2y3pdI68c7VjfdkbtxWfPnHmiWb5+0HLrl84pvjG1181CvZuMn
nnzwwIcPfvSgT19f/Aumho9f4Q5UYn9LDJ549z9JUesTY+1JzF/6QPxPZ26p
2/e7uGvNha6G6+KYEt442XFFfrYUh6z/xi3v5+R8eXvARYn9JPvF+HkuzcZP
PPnggQ8f/OhBn74feD/ir2Vtyy81P5OeoATX4Bif/KnW72puQ3ajrUmqLO9O
GPf5BRnYOrszt+5HCT19fN2T9DNSXflmWfSNU1I1IiLQ11er2fiJJx888OGD
Hz3o0/cv58P7kj/93yMhhTtvyCW1XosSd9d4/qqXU6qeHe2+D3pPVErY1CTv
3pQK2eh4bGmynJC28N5VNTanZuMnnnzwwIcPfu28VX36edP6Sz0v3h+8jLdm
rS3L+0HKpxUERdVWy6CDmc8jk8ol09GVfGZaqeTFdV1PPnZUMrrDcv44Viyp
bz/1V1mLNBs/8eSDBz588KMHffr9wHzQb5wf9QB/vVq/yjtup3mFQ5q2Rpvt
cYUSNWTOxtuuwxJgqR/t3nxQOi4UNbY5czUbP/Hkgwc+fPCjB336fcZ8My/0
H+dJfeCbmDph2cnP8qVd1bdw7j/Jo112Kbk5IHx5vE0uzbS1/7LhK83GTzz5
4IEPH/zoQZ9+/7KfmHfmh37kfKkX/PaKos73vvhafoqwt45Ky5LO3uqUvlar
NNiXNEePtWo2fuLJBw98+OBHD/r09wX7lX3F/DNP9CfnTf3Q0/jGtpqPNuyV
y/cyh+6TDBn3inddQn66ZuMnnnzwwIcPfvSgT3+/cT+wb9lf7APmi37l/Kkn
+r57tWXP/e93SWx82fyw/Ts1Gz/x5IMHPnzwowd9+vuY+437gv3LPmM/MG/0
L/1AfdEb4t76/5Om2fiJJx888OGDHz3o038/GK3eRu1vo+4To+5vo96XRv0+
Mer3oFG/v436v2PU/0uj/s+/BK53XPE=
      "]}], $CellContext`southbc$$ = 
    1& , $CellContext`southBCconstantValue$$ = 0, $CellContext`southBCtype$$ =
     "Sommerfeld", $CellContext`stdx$$ = 0.3, $CellContext`stdy$$ = 
    0.3, $CellContext`systemMatrix$$ = SparseArray[
    Automatic, {575, 575}, 0, {1, {CompressedData["
1:eJwd1QFLEFYUgFHNapVziZtYzWo2SZxNDLE1W1MkEUOMVgulJaJIITbJtVwr
JHE5MVyucpW4ia25wuZqUYghhtjCaIUUUkghtUhaIokkUrid9uD8gI97eTeq
oPSTzwMDAgJSpwX8/4KYyWxeZy5hhDOPt1lEFNHE8B7vk0AiK/iQj0ghjXQy
yWYDOWyhgK2UsINd7GEf+6nlIEc4zk/8zCl+4w8u0kk3vfRxg1vc4R4PeMxT
nvGcF6+Cxc9gDnN5i/ks4l1iiCOBJJJJYQ2ZZLOBHLZQwFZK2MEu9rCP/dRy
kCMco4kWWmnjLBfopJte+rjBLe5wjwc85inPeM6LV4M0xxnMJoQwIogkiqXE
kUASyaSwhkyy2UAOWyhgKyXsYBdfU0EVNdRxiKM00UIrbZzlAp1000sfN7jF
He7xgMf8wyjjTDJFkKWcRQhhRBBJFEuJI4EkkklhDZlks4EcPiOfIoopZSe7
qaCKGuo4xFGaaKGVNs5ygU666aWPv+hngEGGeMQTRhlnkimCpushhDAiiCSK
pcSRQBLJfEwaGWSxnk1sJp8iiillJ7upoIoa6jjEUZpooZU2fuc8HXTRw1Wu
088AgwzxiCeMMs4kUwTN0EMIYUQQyTtEE0s8iaxkNWlkkMV6NrGZfIooppSd
7KaCKmqo43saaKSZk5ymnfN00EUPV7lOPwMMMsQjnjDKOJNMMc0HOJNgQgln
AYuJJpZ4ElnJatLIIIv1bGIz+RRRTClfUM5eKqnmAPU00EgzJzlNO+fpoIse
rnKdfgYYZIi/GWaEMSZ4SeBreggmlHAWsJhoYoknkZWsJo0MsljPp+SSRyHb
2E4Z5eylkmoOUE8DjTRzktO0c54OuujhT65xk9vc5T4PGWaEMSZ4SeAsPQQT
SjgLWEw0scSTyAesIpV01rKOjeSSRyHb2E4Z5eylkmoOUE8DjTRzklOc4RwX
ucRlrnCNm9zmLvd5yDAjjDHBSwId25kEE0o481nIEmJYxnJWsIpU0lnLOjaS
Sx6FbGM7ZZSzl0qqqeU7DnOMHznBr5zhHBe5xGWucI2b3OYu93nIMCOMMcEL
/mX6HDeIN3iTeSxkCTEsYzkrWEUq6axlHRvJJY9CtlFCKWV8yVfsoYJKvuFb
aqmjnsP8wHGaaOYEv3CKNto5x38zVyMW
       "], CompressedData["
1:eJxN2lWwFdcaReHTHXdBDxxX3N0J7i6B4O6B4O6B4O6B4O6B4O6B4O6BABd3
CATuWsXYtebDfBj9sqv+r5+6dmT9NhVb+0FBQSs+DQrygt4tqVl6M/s82CyD
2Xtmycwymr1vltwsk9kHZiFmmc0+NAs1y2L2kVmYWVazj83CzbKZfWIWYZbd
zPxkUKRZDrPPzKLMcpp9bhZtlsvsC7MYs9xmX5rFmuUx+8osziyv2ddm8Wb5
zL4xS2GW3+xbs5RmBcwSmKUyK2iW0Cy12XdmiczSmBUyS2yW1qywWRKzdGZF
5CbBcpdAJ5P7BDq53CnQIXKvQIfK3QIdJvcLdLjcMdARcs9AR8pdAx0l9w10
tNw50DFy70DHyt0DHSf3D3S8OAQ6hXgEOqW4BDqV+AQ6tTgFOo14BTqtuAU6
nfgFukiQe6etVVGxzIBVMbHMiFVxscyEVQmxzIxVSbHMglUpscyKVWmxzIZV
GbHMjlVZscyBVTmxzIlVebHMhVUFscyNVUWxzINVJbHMi1VlscyHVRWxzI9V
VbEsgFU1sSyIVXWx/A6r78WyEFY1xLIwXjXF0vYPeBXFqpZYFsOqtlgWx6qO
WJbAqq5YlsSqnliWwqq+WJbGqoFYlsGqoViWxaqRWJbDqrFYlseqiVhWwKqp
WFbEqplYVsKquVhWxqqFWFbBqqVYVsWqlVhWw6q1WFbHqo1Yfo/Vj2JZA6u2
YlkTr3ZiafsnvGph1V4sa2PVQSzrYNVRLOti1Uks62HVWSzrY9VFLBtg1VUs
G2LVTSwbYdVdLBtj1UMsm2DVUyybYtVLLJth1Vssm2PVRyxbYNVXLFti1U8s
W2HVXyxbYzVALNtgNVAsf8TqZ7Fsi9UgsWyH12CxtP0LXu2xGiKWHbAaKpYd
sRomlp2wGi6WnbEaIZZdsBopll2xGiWW3bAaLZbdsRojlj2wGiuWPbEaJ5a9
sBovlr2xmiCWfbCaKJZ9sZoklv2wmiyW/bGaIpYDsJoqlgOxmiaWP2P1q1gO
wmq6WA7Ga4ZY2v4NryFYzRTLoVjNEsthWM0Wy+FYzRHLEVjNFcuRWM0Ty1FY
zRfL0VgtEMsxWC0Uy7FYLRLLcVgtFsvxWC0RywlYLRXLiVgtE8tJWC0Xy8lY
rRDLKVitFMupWK0Sy2lYrRbLX7H6XSynY7VGLGfgtVYsbf+B10ys1onlLKzW
i+VsrDaI5RysNorlXKw2ieU8rDaL5XystojlAqy2iuVCrLaJ5SKstovlYqx2
iOUSrHaK5VKsdonlMqx2i+VyrPaI5Qqs9orlSqz2ieUqrPaL5WqsDojl71j9
KZZrsDoolmvxOiSWtv/Cax1Wh8VyPVZHxHIDVkfFciNWx8RyE1bHxXIzVifE
cgtWJ8VyK1anxHIbVqfFcjtWZ8RyB1ZnxXInVufEchdW58VyN1YXxHIPVhfF
ci9Wl8RyH1aXxXI/VlfE8gBWV8XyT6z+FsuDWF0Ty0N4XRdL2//gdRirG2J5
BKubYnkUq1tieQyr/4nlcaxui+UJrO6I5Ums7orlKazuieVprO6L5RmsHojl
WaweiuU5rB6J5XmsHovlBayeiOVFrJ6K5SWsnonlZayei+UVrF6I5VWsXorl
31j9K5bXsHolltfxei2Wtv/D6wZWb8TyJlZvxfIWVvbDwDFpa+V5zvI2Vr7n
LO9g9Z7nLO9i9b7nLO9h9YHnLO9j9aHnLB9g9ZHnLB9i9bHnLB9h9YnnLB9j
9annLJ9g9ZnnLJ9i9bnnLJ9h9YXnLJ9j9aXnLF9g9ZXnLF9i9bXnLP/F6hvP
Wb7C6lvPWb7GK4HnLG0n9N55vcEqkecs32KV2HOWtq1VEs9Z2rZWST1nadta
BXvO0ra1SuY5S9vWKrnnLG1bqxDPWdq2VqGes7RtrcI8Z2nbWoV7ztK2tYrw
nKVtaxXpOUvb1irKc5a2rVW05yxtW6sYz1natlaxnrO0ba3iPGdp21rFe87S
trVK4TlL29YqpecsbVuvVJ6ztJ3ae+eVCKs0nrNMjFVaz1kmwSqdWCbFKr1Y
BmOVQSyTYZVRLJNjlUksQ7DKLJahWGURyzCssoplOFbZxDICq+xiGYlVDrGM
wiqnWEZjlUssY7DKLZaxWOURyzis8oplPFb5xDIFVvnFMiVWBcQyFV4FxdL2
d947rzRYFRLLtFgVFst0WBURy/RYFRXLDFgVE8uMWBUXy0xYlRDLzFiVFMss
WJUSy6xYlRbLbFiVEcvsWJUVyxxYlRPLnFiVF8tcWFUQy9xYVRTLPFhVEsu8
WFUWy3xYVRHL/FhVFcsCWFUTy4J4VRdL29/jVQirGmJZGKuaYlkEqx/EsihW
tcSyGFa1xbI4VnXEsgRWdcWyJFb1xLIUVvXFsjRWDcSyDFYNxbIsVo3EshxW
jcWyPFZNxLICVk3FsiJWzcSyElbNxbIyVi3EsgpWLcWyKlatxLIaVq3Fsjpe
bcTS9o941cCqrVjWxKqdWP6A1U9iWQur9mJZG6sOYlkHq45iWRerTmJZD6vO
Ylkfqy5i2QCrrmLZEKtuYtkIq+5i2RirHmLZBKueYtkUq15i2Qyr3mLZHKs+
YtkCq75i2RKrfmLZCqv+YtkaqwFi2QavgWJp+2e82mI1SCzbYTVYLH/C6hex
bI/VELHsgNVQseyI1TCx7ITVcLHsjNUIseyC1Uix7IrVKLHshtVoseyO1Rix
7IHVWLHsidU4seyF1Xix7I3VBLHsg9VEseyL1SSx7IfVZLHsj9UUsRyA1VSx
HIjXNLG0/Steg7CaLpaDsZohlr9g9ZtYDsFqplgOxWqWWA7DarZYDsdqjliO
wGquWI7Eap5YjsJqvliOxmqBWI7BaqFYjsVqkViOw2qxWI7HaolYTsBqqVhO
xGqZWE7CarlYTsZqhVhOwWqlWE7FapVYTsNrtVja/h2v6VitEcsZWK0Vy9+w
+kMsZ2K1TixnYbVeLGdjtUEs52C1USznYrVJLOdhtVks52O1RSwXYLVVLBdi
tU0sF2G1XSwXY7VDLJdgtVMsl2K1SyyXYbVbLJdjtUcsV2C1VyxXYrVPLFdh
tV8sV+N1QCxt/4nXGqwOiuVarA6J5R9Y/SWW67A6LJbrsToilhuwOiqWG7E6
JpabsDoulpuxOiGWW7A6KZZbsTolltuwOi2W27E6I5Y7sDorljuxOieWu7A6
L5a7sboglnuwuiiWe7G6JJb7sLoslvuxuiKWB/C6Kpa2/8brIFbXxPIQVtfF
8i+s/hHLw1jdEMsjWN0Uy6NY3RLLY1j9TyyPY3VbLE9gdUcsT2J1VyxPYXVP
LE9jdV8sz2D1QCzPYvVQLM9h9Ugsz2P1WCwvYPVELC9i9VQsL2H1TCwvY/Vc
LK9g9UIsr+L1Uixt/4vXNaxeieV1rF6L5T9Y/SeWN7B6I5Y3sXorlrewsn/Y
OSZtrTzfWd7Gyved5R2s3vOd5V2s3ved5T2sPvCd5X2sPvSd5QOsPvKd5UOs
Pvad5SOsPvGd5WOsPvWd5ROsPvOd5VOsPved5TOsvvCd5XOsvvSd5QusvvKd
5Uu8vvadpe1v/Hder7D61neWr7FK4DvL/7BK6DvLN1gl8p3lW6wS+87StrVK
4jtL29Yqqe8sbVurYN9Z2rZWyXxnadtaJfedpW1rFeI7S9vWKtR3lratVZjv
LG1bq3DfWdq2VhG+s7RtrSJ9Z2nbWkX5ztK2tYr2naVtaxXjO0vb1irWd5a2
rVWc7yxtW69431naTuG/87J21iql7yxtW6tUvrO0ba1S+84yEVZpfGeZGKu0
vrNMglU6sUyKVXqxDMYqg1gmwyqjWCbHKpNYhmCVWSxDscoilmFYZRXLcKyy
iWUEVtnFMhKrHGIZhVVOsYzGKpdYxmCVWyxjscojlnFY5RXLeLzyiaXt/GIY
8EsgbgnFK5E4JRafJOKSVDyCxSGZ3D+53D1E7h0qdw6T+4bLXSPknpFyxyi5
X7TcLUbuFSt3ipP7xMtdAjf5PyhKDd8=
       "]}, {
      1., Complex[0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., 1., Complex[
       0., -0.6543893935923044], -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 
       2.2229914497937235`, -1., -1., -1., -1., 2.2229914497937235`, -1., -1.,
        Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1., -1., Complex[0., -0.6543893935923044], 
       1., -1., Complex[0., -0.6543893935923044], 1., -1., Complex[
       0., -0.6543893935923044], 1.}}], $CellContext`testCase$$ = 
    2, $CellContext`u$$ = {{
     0., -16.260041378869747`, -39.466615131586444`, -25.272961654738463`, 
     2.3749916649324234`, 
     8.099705412544072, -3.600907584555048, -8.197452722106043, \
-1.2231613491120523`, 
     3.451769372233096, -0.6448277666102281, -7.290093572431949, \
-10.051505767494113`, -7.2900935724319424`, -0.6448277666100843, 
     3.451769372233351, -1.2231613491119668`, -8.197452722106298, \
-3.6009075845554306`, 8.09970541254394, 
     2.3749916649326073`, -25.27296165473825, -39.46661513158644, \
-16.26004137886988, 0.}, {
     0, 16.385691474308302`, -23.596211170651788`, -27.247436978671974`, 
      4.01795851321634, 20.570196010985615`, 
      7.697658705153527, -6.449139538674315, -2.8933403575029506`, 
      5.059072372806588, -0.7879341904363677, -17.016858829836465`, \
-25.6416599864592, -17.016858829836394`, -0.787934190436116, 
      5.059072372806936, -2.8933403575028147`, -6.4491395386745705`, 
      7.697658705153089, 20.570196010985395`, 
      4.017958513216451, -27.24743697867178, -23.596211170651724`, 
      16.385691474308246`, 0}, {
     0, -2.4943434898774828`, -37.163397446428085`, -32.55353654162438, 
      4.497438160981835, 21.01403881122218, 
      3.6254693448391273`, -12.883664390151617`, -5.189834488676128, 
      10.429104462932516`, 
      9.987993068215713, -4.877368012809537, -13.655598808733474`, \
-4.877368012809598, 9.987993068215712, 
      10.429104462932639`, -5.189834488676005, -12.88366439015163, 
      3.6254693448390167`, 21.01403881122214, 
      4.497438160981917, -32.55353654162429, -37.163397446428085`, \
-2.4943434898775445`, 0}, {
     0, -19.804780681218634`, -39.553688551088875`, -19.940160637739606`, 
      13.633434639840525`, 
      15.842410002248355`, -9.087944435714288, -21.489821285891804`, \
-6.798930337857389, 12.861043347722319`, 17.05555718673736, 9.500207394710177,
       4.711146582406286, 9.50020739470997, 17.05555718673706, 
      12.86104334772212, -6.798930337857371, -21.489821285891587`, \
-9.087944435714032, 15.84241000224852, 
      13.633434639840546`, -19.940160637739673`, -39.55368855108898, \
-19.804780681218705`, 0}, {
     0, -18.811757499839775`, -18.506496200767444`, 10.549672565245187`, 
      28.04034045532752, 
      8.611337622365841, -18.814342586450756`, -19.41580535272949, \
-1.5883672054259048`, 7.680589774234324, 5.380685281747866, 4.065272277479491,
       4.969967763689045, 4.065272277479385, 5.3806852817476125`, 
      7.680589774234016, -1.588367205426006, -19.415805352729276`, \
-18.814342586450454`, 8.611337622365955, 28.040340455327385`, 
      10.549672565245, -18.50649620076752, -18.81175749983976, 0}, {
     0, -12.243797758028624`, 2.790119510553459, 31.991167638974037`, 
      28.570041698477468`, -6.468695513350292, -22.26068057313621, \
-1.4838416826435041`, 14.851146037786021`, 
      0.30444160591544317`, -16.93591913573476, -10.899050886486366`, \
-1.8755246980431484`, -10.899050886486142`, -16.935919135734647`, 
      0.30444160591531066`, 
      14.85114603778587, -1.4838416826434493`, -22.26068057313612, \
-6.468695513350382, 28.57004169847723, 31.991167638973906`, 
      2.790119510553556, -12.243797758028453`, 0}, {
     0, -16.094228150680753`, 2.78302305175959, 28.159583014670456`, 
      9.40492828698284, -29.605094702822555`, -22.902851503415455`, 
      23.406124148433452`, 
      35.69648198353058, -4.984124223882655, -32.488140895002765`, \
-9.530121966520104, 
      12.612870936655783`, -9.530121966519681, -32.488140895002346`, \
-4.9841242238825885`, 35.696481983530425`, 
      23.40612414843335, -22.90285150341553, -29.60509470282273, 
      9.404928286982654, 28.159583014670456`, 
      2.7830230517598373`, -16.094228150680483`, 0}, {
     0, -29.282768116114863`, -9.988136590459586, 
      17.785531545190757`, -6.546424878483565, -46.029682370114095`, \
-22.564881111796343`, 40.64876096438747, 
      46.02819765933303, -14.631859549074116`, -40.803191235688836`, 
      9.559995803022533, 48.94622293905196, 
      9.559995803022835, -40.803191235688566`, -14.631859549074102`, 
      46.02819765933285, 
      40.64876096438745, -22.564881111796318`, -46.029682370114095`, \
-6.546424878483592, 
      17.785531545190835`, -9.988136590459401, -29.282768116114685`, 0}, {
     0, -40.953395118882696`, -14.352378907883189`, 27.49740746894817, 
      4.07137253591951, -43.72783801866432, -21.950828960911934`, 
      43.44461078127945, 
      40.573131068344196`, -32.79316271209948, -53.166399362182304`, 
      22.619943883981087`, 77.05595385755714, 
      22.61994388398105, -53.166399362182446`, -32.79316271209966, 
      40.573131068344225`, 
      43.44461078127965, -21.950828960911778`, -43.727838018664194`, 
      4.071372535919561, 
      27.49740746894816, -14.35237890788328, -40.95339511888278, 0}, {
     0, -48.77509229288592, -9.070964284437835, 53.32896089826739, 
      31.6754086027017, -33.38272719860883, -26.00002736224501, 
      37.2721598556563, 
      33.490210414425306`, -45.69201117073111, -67.22706360220074, 
      16.821010946757262`, 77.09574166603626, 
      16.82101094675703, -67.22706360220103, -45.692011170731185`, 
      33.49021041442553, 
      37.272159855656575`, -26.00002736224489, -33.38272719860875, 
      31.67540860270179, 
      53.32896089826733, -9.070964284438118, -48.775092292886214`, 0}, {
     0, -59.44892906807504, -10.831701493223887`, 68.22430400465379, 
      46.28047388941408, -36.222138989604744`, -39.775853537038984`, 
      31.89511700084543, 
      42.27695295683916, -35.056841174674304`, -67.41925513209344, 
      4.89412771569137, 60.675371488282735`, 
      4.894127715691189, -67.4192551320937, -35.05684117467413, 
      42.27695295683943, 
      31.89511700084548, -39.77585353703923, -36.22213898960491, 
      46.2804738894142, 
      68.22430400465382, -10.831701493224088`, -59.448929068075316`, 0}, {
     0, -73.41071741869877, -24.167054203114034`, 62.699882470826495`, 
      39.1078068581785, -53.69705988158703, -58.12683010262227, 
      31.108054345591185`, 
      63.637796238230166`, -7.108211977910709, -52.49210602951771, 
      0.7940547978971266, 47.988731702313444`, 
      0.7940547978968506, -52.49210602951774, -7.108211977910259, 
      63.63779623823051, 
      31.108054345590997`, -58.126830102622804`, -53.697059881587336`, 
      39.10780685817865, 
      62.699882470826715`, -24.167054203114034`, -73.41071741869888, 0}, {
     0, -80.34413795486519, -32.52252820479885, 56.051974200106166`, 
      31.567767827001973`, -64.17473935307362, -66.8795326434522, 
      31.72792038415549, 75.17610099303207, 
      8.099442667725096, -42.9645125385135, 1.366922141861517, 
      44.40784157849741, 1.3669221418611863`, -42.9645125385135, 
      8.09944266772549, 75.17610099303229, 
      31.72792038415522, -66.87953264345266, -64.17473935307382, 
      31.567767827002246`, 
      56.05197420010647, -32.52252820479877, -80.34413795486526, 0}, {
     0, -73.41071741869888, -24.16705420311421, 62.69988247082642, 
      39.1078068581785, -53.697059881587, -58.12683010262237, 
      31.10805434559098, 
      63.63779623823002, -7.1082119779106625`, -52.492106029517615`, 
      0.79405479789717, 47.988731702313366`, 
      0.7940547978967899, -52.492106029517835`, -7.1082119779104636`, 
      63.637796238230166`, 
      31.108054345590798`, -58.12683010262263, -53.697059881586966`, 
      39.10780685817888, 
      62.699882470826516`, -24.16705420311425, -73.410717418699, 0}, {
     0, -59.44892906807518, -10.831701493224072`, 68.22430400465366, 
      46.28047388941412, -36.22213898960465, -39.77585353703902, 
      31.895117000845282`, 
      42.27695295683898, -35.05684117467426, -67.41925513209333, 
      4.89412771569143, 60.675371488282586`, 
      4.894127715691151, -67.41925513209353, -35.05684117467417, 
      42.27695295683908, 
      31.89511700084521, -39.77585353703898, -36.222138989604325`, 
      46.28047388941456, 
      68.22430400465369, -10.831701493224264`, -59.448929068075316`, 0}, {
     0, -48.77509229288594, -9.070964284437853, 53.328960898267354`, 
      31.675408602701783`, -33.382727198608634`, -26.00002736224486, 
      37.272159855656376`, 
      33.490210414425334`, -45.69201117073101, -67.22706360220074, 
      16.821010946757017`, 77.09574166603595, 
      16.821010946757024`, -67.22706360220073, -45.69201117073098, 
      33.49021041442533, 
      37.27215985565626, -26.00002736224475, -33.382727198608436`, 
      31.67540860270198, 
      53.32896089826707, -9.07096428443828, -48.77509229288592, 0}, {
     0, -40.95339511888249, -14.352378907882995`, 27.49740746894821, 
      4.071372535919491, -43.72783801866422, -21.950828960911853`, 
      43.44461078127962, 
      40.57313106834427, -32.793162712099466`, -53.166399362182325`, 
      22.61994388398079, 77.05595385755687, 
      22.619943883980977`, -53.16639936218213, -32.79316271209935, 
      40.57313106834416, 
      43.44461078127944, -21.950828960911725`, -43.727838018663974`, 
      4.0713725359195765`, 
      27.497407468947763`, -14.352378907883475`, -40.95339511888263, 0}, {
     0, -29.282768116114596`, -9.988136590459375, 
      17.785531545190725`, -6.546424878483725, -46.029682370114145`, \
-22.564881111796232`, 40.64876096438761, 
      46.028197659333024`, -14.631859549074028`, -40.80319123568877, 
      9.559995803022417, 48.94622293905169, 
      9.559995803022627, -40.803191235688466`, -14.631859549073885`, 
      46.02819765933281, 
      40.64876096438731, -22.56488111179627, -46.029682370113996`, \
-6.546424878483724, 
      17.785531545190402`, -9.988136590459426, -29.282768116114458`, 0}, {
     0, -16.094228150680596`, 2.78302305175963, 28.15958301467027, 
      9.404928286982587, -29.605094702822655`, -22.902851503415373`, 
      23.4061241484335, 
      35.69648198353053, -4.984124223882616, -32.48814089500257, \
-9.530121966519971, 
      12.612870936655778`, -9.530121966519895, -32.48814089500244, \
-4.984124223882568, 35.69648198353033, 
      23.406124148433257`, -22.902851503415413`, -29.60509470282253, 
      9.404928286982676, 28.15958301467042, 
      2.783023051760187, -16.09422815068009, 0}, {
     0, -12.24379775802859, 2.790119510553404, 31.991167638973877`, 
      28.570041698477343`, -6.46869551335025, -22.260680573136085`, \
-1.4838416826435463`, 14.851146037785798`, 
      0.3044416059152987, -16.935919135734654`, -10.899050886486139`, \
-1.8755246980430476`, -10.899050886486311`, -16.935919135734736`, 
      0.3044416059153297, 
      14.851146037785789`, -1.4838416826435339`, -22.260680573136018`, \
-6.46869551335023, 28.570041698477276`, 31.991167638973888`, 
      2.790119510553764, -12.243797758028164`, 0}, {
     0, -18.811757499839803`, -18.506496200767486`, 10.54967256524517, 
      28.04034045532761, 
      8.611337622366051, -18.81434258645057, -19.415805352729524`, \
-1.5883672054261637`, 7.680589774234073, 5.380685281747832, 4.06527227747966, 
      4.969967763689216, 4.06527227747943, 5.38068528174765, 
      7.680589774234077, -1.5883672054260352`, -19.415805352729304`, \
-18.814342586450408`, 8.611337622365959, 28.040340455327232`, 
      10.549672565244734`, -18.50649620076768, -18.811757499839775`, 0}, {
     0, -19.804780681218695`, -39.553688551088904`, -19.940160637739528`, 
      13.633434639840656`, 
      15.84241000224849, -9.08794443571418, -21.489821285891765`, \
-6.798930337857451, 12.861043347722196`, 17.05555718673727, 9.500207394710186,
       4.711146582406353, 9.500207394710031, 17.055557186737147`, 
      12.861043347722228`, -6.79893033785731, -21.489821285891587`, \
-9.08794443571402, 15.842410002248496`, 
      13.633434639840413`, -19.940160637739943`, -39.55368855108925, \
-19.804780681218862`, 0}, {
     0, -2.4943434898775454`, -37.16339744642809, -32.55353654162432, 
      4.4974381609818135`, 21.014038811222026`, 
      3.6254693448390083`, -12.883664390151539`, -5.189834488675925, 
      10.429104462932633`, 
      9.98799306821566, -4.877368012809654, -13.65559880873357, \
-4.877368012809654, 9.987993068215701, 
      10.429104462932687`, -5.189834488675948, -12.883664390151624`, 
      3.6254693448390167`, 21.014038811222218`, 
      4.497438160982058, -32.5535365416242, -37.1633974464281, \
-2.4943434898775996`, 0}, {
     0, 16.385691474308224`, -23.596211170651777`, -27.247436978671885`, 
      4.017958513216255, 20.570196010985274`, 
      7.697658705153232, -6.449139538674264, -2.893340357502642, 
      5.059072372806817, -0.787934190436386, -17.01685882983659, \
-25.641659986459295`, -17.016858829836476`, -0.7879341904362184, 
      5.059072372806887, -2.8933403575028054`, -6.449139538674616, 
      7.697658705153018, 20.57019601098545, 
      4.017958513216723, -27.247436978671423`, -23.59621117065153, 
      16.385691474308285`, 0}, {
     0., -16.260041378869868`, -39.466615131586416`, -25.27296165473826, 
     2.3749916649325025`, 
     8.099705412543866, -3.600907584555293, -8.197452722106018, \
-1.2231613491118496`, 
     3.4517693722331737`, -0.6448277666103166, -7.290093572431983, \
-10.051505767494033`, -7.290093572431906, -0.6448277666101727, 
     3.4517693722332954`, -1.2231613491119084`, -8.197452722106291, \
-3.6009075845555993`, 8.099705412543784, 
     2.374991664932664, -25.272961654738076`, -39.46661513158638, \
-16.260041378869925`, 0.}}, $CellContext`westbc$$ = 
    1& , $CellContext`westBCconstantValue$$ = 0, $CellContext`westBCtype$$ = 
    "Dirichlet", $CellContext`x0$$ = 0., $CellContext`y0$$ = 
    0., $CellContext`zAxisScale$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Item[
            Grid[{{
               Grid[{{
                  Button[
                   Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}, {
                  Button[
                   Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
               Grid[{{
                  Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                  Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                  Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                  Text[
                   Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}, Alignment -> Center, 
             Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
           Item[
            Grid[{{
               PopupMenu[
                
                Dynamic[$CellContext`plotToShow$$, {$CellContext`plotToShow$$ = \
#; $CellContext`event$$ = "plot_changed", 
                  AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                "solution and contour" -> Style["solution + contour", 11], 
                 "solution and density" -> Style["solution + density", 11], 
                 "solution data" -> Style["solution data", 11], 
                 "system matrix information" -> Style["system matrix", 11]}, 
                ImageSize -> All, ContinuousAction -> False], 
               Grid[{{
                  RadioButtonBar[
                   
                   Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                  Style["plot", 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"face", "grids"}], 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
             Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
               Thickness[0.005], 
               GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
         Spacings -> {0.2, 0}, Alignment -> {Center, Top}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                  SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                   Alignment -> Center], SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}], 
             Style["source", 11] -> Item[
               Grid[{{
                  Item[
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                  SpanFromLeft}, {
                  Spacer[2], 
                  Text[
                   Style["a", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["b", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["c", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Item[
                   Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                    Alignment -> Center], SpanFromLeft}, {
                  Dynamic[
                   Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                Spacings -> {0.3, 0.2}, Alignment -> Left, 
                Frame -> {None, All}, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
         Center]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`testCase$$], 1}, 0}, {{
       Hold[$CellContext`angle$$], 0.}, 0}, {{
       Hold[$CellContext`systemMatrix$$], {}}, 0}, {{
       Hold[$CellContext`rightHandVector$$], {}}, 0}, {{
       Hold[$CellContext`zAxisScale$$], False}, 0}, {{
       Hold[$CellContext`centerGrid$$], True}, 0}, {{
       Hold[$CellContext`event$$], "run_button"}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`addFaceGrids$$], False}, 0}, {{
       Hold[$CellContext`plotPerformanceGoal$$], "Quality"}, 0}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 4]}, 0}, {{
       Hold[$CellContext`lenX$$], 1}, 0}, {{
       Hold[$CellContext`lenY$$], 1}, 0}, {{
       Hold[$CellContext`kValue$$], 5.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`c$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`y0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`stdy$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 1}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution and contour"}, 0}, {{
       Hold[$CellContext`northBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`northbc$$], 1& }, 0}, {{
       Hold[$CellContext`northBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`southBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`southbc$$], 1& }, 0}, {{
       Hold[$CellContext`southBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`forceGrid$$], {{-1, -1, -1, -1, -1}, {-1, -1, -1, \
-1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}}, 
      0}, {{
       Hold[$CellContext`grid$$], CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

       "]}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}}, Typeset`size$$ = {
    270., {201., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
        False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
        True, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = "Dirichlet", $CellContext`event$$ = 
        "run_button", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceGrid$$ = {{-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, \
-1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}, \
$CellContext`forceTermSelection$$ = 1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

         "], $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        Rational[1, 4], $CellContext`kValue$$ = 5., $CellContext`lenX$$ = 
        1, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
        1& , $CellContext`northBCconstantValue$$ = 
        0, $CellContext`northBCtype$$ = 
        "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
        "Quality", $CellContext`plotToShow$$ = 
        "solution and contour", $CellContext`rightHandVector$$ = {}, \
$CellContext`southbc$$ = 1& , $CellContext`southBCconstantValue$$ = 
        0, $CellContext`southBCtype$$ = "Sommerfeld", $CellContext`stdx$$ = 
        0.3, $CellContext`stdy$$ = 
        0.3, $CellContext`systemMatrix$$ = {}, $CellContext`testCase$$ = 
        1, $CellContext`u$$ = {}, $CellContext`westbc$$ = 
        1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
        0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; {$CellContext`finalDisplayImage$$, \
$CellContext`u$$, $CellContext`forceGrid$$, $CellContext`grid$$, \
$CellContext`systemMatrix$$, $CellContext`rightHandVector$$} = \
$CellContext`process[$CellContext`u$$, $CellContext`forceGrid$$, \
$CellContext`grid$$, $CellContext`systemMatrix$$, \
$CellContext`rightHandVector$$, $CellContext`finalDisplayImage$$, \
$CellContext`event$$, $CellContext`h$$, $CellContext`h$$, \
$CellContext`lenX$$, $CellContext`lenY$$, $CellContext`centerGrid$$, \
$CellContext`addFaceGrids$$, $CellContext`plotPerformanceGoal$$, \
$CellContext`kValue$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`x0$$, $CellContext`y0$$, $CellContext`stdx$$, \
$CellContext`stdy$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`northBCtype$$, \
$CellContext`northbc$$, $CellContext`northBCconstantValue$$, \
$CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, \
$CellContext`southBCtype$$, $CellContext`southbc$$, \
$CellContext`southBCconstantValue$$, $CellContext`zAxisScale$$, \
$CellContext`angle$$, 
          Unevaluated[$CellContext`gstatusMessage$$]]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray], ImageMargins -> 0]), "Specifications" :> {
        Item[
         Grid[{{
            Item[
             Grid[{{
                Grid[{{
                   Button[
                    Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}, {
                   Button[
                    Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
                Grid[{{
                   Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                   Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                   Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                   Text[
                    Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                 Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                 Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]]}}, Alignment -> Center, 
              Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
            Item[
             Grid[{{
                PopupMenu[
                 
                 Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; $CellContext`event$$ = "plot_changed", 
                   AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                 "solution and contour" -> Style["solution + contour", 11], 
                  "solution and density" -> Style["solution + density", 11], 
                  "solution data" -> Style["solution data", 11], 
                  "system matrix information" -> Style["system matrix", 11]}, 
                 ImageSize -> All, ContinuousAction -> False], 
                Grid[{{
                   RadioButtonBar[
                    
                    Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                   Style["plot", 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"face", "grids"}], 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
              Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
          Spacings -> {0.2, 0}, Alignment -> {Center, Top}], ControlPlacement -> 
         Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                   SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                    Alignment -> Center], SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                 Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                 FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}], 
              Style["source", 11] -> Item[
                Grid[{{
                   Item[
                    PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                   SpanFromLeft}, {
                   Spacer[2], 
                   Text[
                    Style["a", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["b", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["c", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Item[
                    Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                     Alignment -> Center], SpanFromLeft}, {
                   Dynamic[
                    Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                 Spacings -> {0.3, 0.2}, Alignment -> Left, 
                 Frame -> {None, All}, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
          Center], ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`testCase$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`angle$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`systemMatrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`rightHandVector$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`zAxisScale$$, False}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, True}, 0, ControlType -> 
         None}, {{$CellContext`event$$, "run_button"}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`addFaceGrids$$, False}, 0, ControlType -> 
         None}, {{$CellContext`plotPerformanceGoal$$, "Quality"}, 0, 
         ControlType -> None}, {{$CellContext`h$$, 
          Rational[1, 4]}, 0, ControlType -> None}, {{$CellContext`lenX$$, 1},
          0, ControlType -> None}, {{$CellContext`lenY$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 5.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`c$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`y0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`stdy$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution and contour"}, 0, 
         ControlType -> None}, {{$CellContext`northBCtype$$, "Sommerfeld"}, 0,
          ControlType -> None}, {{$CellContext`northbc$$, 1& }, 0, 
         ControlType -> None}, {{$CellContext`northBCconstantValue$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, 
         ControlType -> None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`southBCtype$$, "Sommerfeld"}, 0, ControlType -> 
         None}, {{$CellContext`southbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`southBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`forceGrid$$, {{-1, -1, -1, -1, -1}, {-1, -1, \
-1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, \
-1}}}, 0, ControlType -> None}, {{$CellContext`grid$$, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

          "]}, 0, ControlType -> None}, {{$CellContext`u$$, {}}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        ContinuousAction -> False, SynchronousInitialization -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{611., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`$forceGrid, 
          Blank[]], 
         Pattern[$CellContext`$grid, 
          Blank[]], 
         Pattern[$CellContext`$AA, 
          Blank[]], 
         Pattern[$CellContext`$rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`$finalDisplayImage, 
          Blank[]], 
         Pattern[$CellContext`event, 
          Blank[]], 
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`AA = \
$CellContext`$AA, $CellContext`forceGrid = $CellContext`$forceGrid, \
$CellContext`grid = $CellContext`$grid, $CellContext`rightHandVector = \
$CellContext`$rightHandVector, $CellContext`finalDisplayImage = \
$CellContext`$finalDisplayImage}, If[
           
           StringMatchQ[$CellContext`event, {
            "reset", 
             "run_button"}], {$CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`rightHandVector} = \
$CellContext`initializeSystem[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid, \
$CellContext`forceTermSelection, $CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`x0, $CellContext`stdx, $CellContext`y0, \
$CellContext`stdy, $CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue, $CellContext`kValue, \
$CellContext`angle]]; If[
           Or[$CellContext`event == "run_button", 
            And[
             
             StringMatchQ[$CellContext`event, {
              "reset", "reset", "k_changed"}], 
             
             StringMatchQ[$CellContext`plotToShow, {
              "system matrix information", 
               "solution data"}]]], $CellContext`u = \
$CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype]]; \
$CellContext`finalDisplayImage = $CellContext`makeFinalPlot[$CellContext`u, \
$CellContext`AA, $CellContext`Lx, $CellContext`Ly, $CellContext`grid, \
$CellContext`plotToShow, $CellContext`plotPerformanceGoal, \
$CellContext`addFaceGrids, $CellContext`zAxisScale]; \
$CellContext`gstatusMessage = 
          "ready.."; {$CellContext`finalDisplayImage, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`initializeSystem[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`nCol, $CellContext`nRow, $CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}, {$CellContext`nRow, $CellContext`nCol} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`u = 
           Table[0., {$CellContext`$nRow}, {$CellContext`$nCol}]]; \
$CellContext`grid = $CellContext`makeGridCommon[$CellContext`hx, \
$CellContext`hy, $CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid]; \
$CellContext`forceGrid = Which[$CellContext`forceTermSelection == 1, 
            
            With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, 
             
             Table[$CellContext`a, {$CellContext`$nRow}, \
{$CellContext`$nCol}]], $CellContext`forceTermSelection == 2, 
            Map[$CellContext`evaluateForceCommon[
              Part[#, 1], 
              
              Part[#, 2], $CellContext`a, $CellContext`b, $CellContext`c]& , \
$CellContext`grid, {2}], $CellContext`forceTermSelection == 3, 
            
            Map[$CellContext`a 
             Exp[(Part[#, 1] - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + (Part[#, 2] - $CellContext`y0)^2/(
                2 $CellContext`stdy^2)]& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 4, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] + 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 5, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}]]; $CellContext`forceGrid = 
          Re[$CellContext`forceGrid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue]; {$CellContext`AA, \
$CellContext`rightHandVector} = \
$CellContext`makeSystemMatrixAndRightHandSide[$CellContext`u, \
$CellContext`hx, $CellContext`kValue, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype, \
$CellContext`forceGrid, $CellContext`angle]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`getSolutionDomainDimensions[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]]] := {$CellContext`Ly/$CellContext`hy + 
         1, $CellContext`Lx/$CellContext`hx + 1}, $CellContext`makeGridCommon[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]]] := 
       Module[{$CellContext`i, $CellContext`j, $CellContext`nx, \
$CellContext`ny, $CellContext`grid}, {$CellContext`ny, $CellContext`nx} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$icfrom = 
            Floor[$CellContext`ny/2], $CellContext`$icto = -
             Floor[$CellContext`ny/2], $CellContext`$jcfrom = -
             Floor[$CellContext`nx/2], $CellContext`$jcto = 
            Floor[$CellContext`nx/2], $CellContext`$ifrom = $CellContext`ny - 
             1, $CellContext`$jto = $CellContext`nx - 1}, $CellContext`grid = 
           If[$CellContext`centerGrid, 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$icfrom, $CellContext`$icto, \
-1}, {$CellContext`j, $CellContext`$jcfrom, $CellContext`$jcto}], 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$ifrom, 
               0, -1}, {$CellContext`j, 0, $CellContext`$jto}]]]; 
         N[$CellContext`grid]], $CellContext`evaluateForceCommon = ReplaceAll[
         Unevaluated[#3 #^#6 + #4 #2^#7], HoldPattern[0.^0.] :> 
         0.]& , $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`i, $CellContext`j}, {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; 
         If[$CellContext`northBCtype == "Dirichlet", Part[$CellContext`u, 1, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`northBCconstantValue 
            Table[
              $CellContext`northbc[
               
               Part[$CellContext`grid, 1, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 1}]]; 
         If[$CellContext`westBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[2, $CellContext`nRow - 1], 
             1] = $CellContext`westBCconstantValue Table[
              $CellContext`westbc[
               
               Part[$CellContext`grid, $CellContext`i, 1, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`eastBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[
             2, $CellContext`nRow - 
              1], $CellContext`nCol] = $CellContext`eastBCconstantValue Table[
              $CellContext`eastbc[
               
               Part[$CellContext`grid, $CellContext`i, $CellContext`nCol, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           Part[$CellContext`u, $CellContext`nRow, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`southBCconstantValue 
            Table[
              $CellContext`southbc[
               
               Part[$CellContext`grid, $CellContext`nRow, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 
               1}]]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 1, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 
            1, $CellContext`nCol, $CellContext`nCol, $CellContext`nRow]; \
$CellContext`u = $CellContext`setCornerNodeCommon[$CellContext`u, \
$CellContext`nRow, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`nCol, $CellContext`nRow]], \
$CellContext`setCornerNodeCommon[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`nx, 
          Blank[]], 
         Pattern[$CellContext`ny, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Part[$CellContext`u, 1, 1] = Mean[{
              Part[$CellContext`u, 2, 1], 
              Part[$CellContext`u, 1, 2]}], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nx], 
           Part[$CellContext`u, 1, $CellContext`nx] = Mean[{
              Part[$CellContext`u, 1, $CellContext`nx - 1], 
              Part[$CellContext`u, 2, $CellContext`nx]}], 
           And[$CellContext`i == $CellContext`ny, $CellContext`j == 1], 
           Part[$CellContext`u, $CellContext`ny, 1] = Mean[{
              Part[$CellContext`u, $CellContext`ny - 1, 1], 
              Part[$CellContext`u, $CellContext`ny, 2]}], 
           
           And[$CellContext`i == $CellContext`ny, $CellContext`j == \
$CellContext`nx], Part[$CellContext`u, $CellContext`ny, $CellContext`nx] = 
           Mean[{
              Part[$CellContext`u, $CellContext`ny, $CellContext`nx - 1], 
              
              Part[$CellContext`u, $CellContext`ny - 
               1, $CellContext`nx]}]]; $CellContext`u], \
$CellContext`makeSystemMatrixAndRightHandSide[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`AA, $CellContext`k1, $CellContext`k2, \
$CellContext`i, $CellContext`j, $CellContext`n = 
          0, $CellContext`eqs, $CellContext`vars, $CellContext`uu, \
$CellContext`U, $CellContext`An, $CellContext`b, $CellContext`keepList, \
$CellContext`nRow, $CellContext`nCol, $CellContext`sin1, $CellContext`sin2, \
$CellContext`omega, $CellContext`sum, $CellContext`prod}, $CellContext`sum = 
          2. $CellContext`h^2; $CellContext`prod = 
          1. $CellContext`h^4; $CellContext`omega = 
          4. BesselJ[0, Sqrt[$CellContext`kValue] $CellContext`h] + (
             Sqrt[$CellContext`kValue] $CellContext`h)^2; $CellContext`k1 = 
          Sqrt[$CellContext`kValue] Cos[$CellContext`angle]; $CellContext`k2 = 
          Sqrt[$CellContext`kValue] 
           Cos[$CellContext`angle]; $CellContext`sin1 = 
          Simplify[(2. I) 
            Sin[$CellContext`k1 $CellContext`h]]; $CellContext`sin2 = 
          Simplify[(2. I) 
            Sin[$CellContext`k2 $CellContext`h]]; {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; $CellContext`U = 
          Array[$CellContext`uu[#, #2]& , {$CellContext`nRow, \
$CellContext`nCol}]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`eqs = 
            Table[0., {$CellContext`$nRow $CellContext`$nCol}]; \
$CellContext`vars = $CellContext`eqs]; 
         For[$CellContext`i = 1, $CellContext`i <= $CellContext`nRow, 
           Increment[$CellContext`i], 
           For[$CellContext`j = 1, $CellContext`j <= $CellContext`nCol, 
            Increment[$CellContext`j], Increment[$CellContext`n]; If[
              Or[
               And[$CellContext`i == 1, $CellContext`j == 1], 
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
               And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
               
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol]], {$CellContext`eqs, $CellContext`vars} = \
$CellContext`processCornersCommon[$CellContext`u, $CellContext`eqs, \
$CellContext`n, $CellContext`U, $CellContext`i, $CellContext`j, \
$CellContext`vars, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`southBCtype, $CellContext`eastBCtype, $CellContext`nRow, \
$CellContext`nCol], 
              If[
               
               Or[$CellContext`i == 
                1, $CellContext`i == $CellContext`nRow, $CellContext`j == 
                1, $CellContext`j == $CellContext`nCol], 
               Which[$CellContext`i == 1, 
                
                If[$CellContext`northBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i + 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`i == $CellContext`nRow, 
                
                If[$CellContext`southBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i - 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == 1, 
                
                If[$CellContext`westBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j + 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j + 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == $CellContext`nCol, 
                
                If[$CellContext`eastBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j - 2] == 
                   0; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]]], 
               Part[$CellContext`vars, $CellContext`n] = 
                Part[$CellContext`U, $CellContext`i, $CellContext`j]; 
               Part[$CellContext`eqs, $CellContext`n] = -
                   Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i - 
                   1, $CellContext`j] + $CellContext`omega 
                   Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j + 
                   1] - ($CellContext`kValue $CellContext`h)^2 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == \
$CellContext`h^2 
                  Part[$CellContext`forceGrid, $CellContext`i, \
$CellContext`j]]]]]; $CellContext`vars = 
          Flatten[$CellContext`U]; $CellContext`AA = 
          CoefficientArrays[$CellContext`eqs, $CellContext`vars]; \
$CellContext`keepList = \
$CellContext`obtainListOfRowsToKeep[$CellContext`nRow, $CellContext`nCol, \
$CellContext`northBCtype, $CellContext`southBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype]; $CellContext`An = Part[
            
            Part[$CellContext`AA, 
             2], $CellContext`keepList, $CellContext`keepList]; \
$CellContext`b = -Part[
             
             Part[$CellContext`AA, 
              1], $CellContext`keepList]; {$CellContext`An, $CellContext`b}], \
$CellContext`processCornersCommon[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`$eqs, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`U, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`$vars, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]]] := 
       Module[{$CellContext`vars = $CellContext`$vars, $CellContext`eqs = \
$CellContext`$eqs}, 
         Part[$CellContext`vars, $CellContext`n] = 
          Part[$CellContext`U, $CellContext`i, $CellContext`j]; Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == Mean[{
                 Part[$CellContext`u, 1, 2], 
                 Part[$CellContext`u, 2, 1]}], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, 1, 2], 
                Part[$CellContext`U, 2, 1]}] == 0], 
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`u, $CellContext`i, 2], 
                 Part[$CellContext`u, $CellContext`i - 1, 1]}] == 0, 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, $CellContext`nRow, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, 2], 
                Part[$CellContext`U, $CellContext`i - 1, 1]}] == 0.], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0., 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, $CellContext`nCol]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0.; Null], 
           
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
              0., Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
              Part[$CellContext`u, $CellContext`nRow, $CellContext`nCol]], 
            True, Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
             0.]]; {$CellContext`eqs, $CellContext`vars}], \
$CellContext`obtainListOfRowsToKeep[
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := 
       Module[{$CellContext`rowsToRemove = {}}, 
         If[$CellContext`northBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[1, $CellContext`nCol]]; Null]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[($CellContext`nRow - 1) $CellContext`nCol + 
              1, $CellContext`nRow $CellContext`nCol]]; Null]; 
         If[$CellContext`westBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[
             1, $CellContext`nRow $CellContext`nCol, $CellContext`nCol]]; 
           Null]; If[$CellContext`eastBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[$CellContext`nCol, $CellContext`nRow $CellContext`nCol, \
$CellContext`nCol]]; Null]; Complement[
           Range[$CellContext`nRow $CellContext`nCol], 
           Flatten[$CellContext`rowsToRemove]]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`x, $CellContext`loc, $CellContext`mask}, \
{$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`x = 
          LinearSolve[$CellContext`AA, $CellContext`rightHandVector]; \
$CellContext`mask = $CellContext`setUnknownsMask[{$CellContext`nRow, \
$CellContext`nCol}, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype, $CellContext`southBCtype]; $CellContext`loc = 
          Position[$CellContext`mask, 1]; 
         MapThread[($CellContext`u = 
           ReplacePart[$CellContext`u, # -> #2])& , {$CellContext`loc, \
$CellContext`x}]; Re[$CellContext`u]], $CellContext`setUnknownsMask[{
          Pattern[$CellContext`nRow, 
           Blank[]], 
          Pattern[$CellContext`nCol, 
           Blank[]]}, 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`mask}, $CellContext`mask = 
          Table[0, {$CellContext`nRow}, {$CellContext`nCol}]; Which[
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`northBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -1]] = 1]; $CellContext`mask], $CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]]] := 
       Module[{$CellContext`tmp, $CellContext`finalDisplayImage, \
$CellContext`nRow, $CellContext`nCol, $CellContext`plot, $CellContext`n, \
$CellContext`dim, $CellContext`cond}, {$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`tmp = 
          MapThread[
           Append[#, #2]& , {$CellContext`grid, $CellContext`u}, 
            2]; $CellContext`tmp = Chop[
            Flatten[$CellContext`tmp, 1]]; If[
           
           Or[$CellContext`plotToShow == 
            "solution and density", $CellContext`plotToShow == 
            "solution and contour"], $CellContext`plot = Item[
             
             ListPlot3D[$CellContext`tmp, 
              PerformanceGoal -> $CellContext`plotPerformanceGoal, 
              ImagePadding -> {{20, 15}, {15, 1}}, PlotRange -> All, 
              
              If[$CellContext`zAxisScale == True, 
               BoxRatios -> {$CellContext`Lx, $CellContext`Ly, 
                 Min[{$CellContext`Lx, $CellContext`Ly}]}, {}], AxesLabel -> {
                Text[
                 Style["x", Italic, 12]], 
                Text[
                 Style["y", Italic, 12]], None}, TicksStyle -> 9, 
              SphericalRegion -> True, 
              
              If[$CellContext`addFaceGrids, FaceGrids -> All, FaceGrids -> 
               None], ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}]]]; 
         Which[$CellContext`plotToShow == 
           "solution and density", $CellContext`finalDisplayImage = 
           Grid[{{$CellContext`plot}, {
               Item[
                
                ListDensityPlot[$CellContext`tmp, PlotRange -> All, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution and contour", $CellContext`finalDisplayImage = Grid[{{
               Item[$CellContext`plot]}, {
               Item[
                
                ListContourPlot[$CellContext`tmp, Contours -> 10, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             40, $CellContext`ContentSizeW], $CellContext`plotToShow == 
           "system matrix information", $CellContext`cond = Part[
              LUDecomposition[$CellContext`AA], 3]; $CellContext`dim = 
            Dimensions[$CellContext`AA]; $CellContext`n = Min[30, 
              First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
            Grid[{{
                Style[
                 Text[
                  Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                Style[
                 Text[
                  Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                Style[
                 Text["eigenvalues"], 12]}, {
                $CellContext`makeScrolledPane[
                 Transpose[
                  Partition[
                   Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`n], 1]], 
                 45, $CellContext`ContentSizeW - 20]}, {
                Style[
                 Text["A matrix"], 12]}, {
                $CellContext`makeScrolledPane[
                 Normal[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`n], 
                   Span[1, $CellContext`n]]], $CellContext`ContentSizeH - 
                 140, $CellContext`ContentSizeW]}}]]; \
$CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       260, $CellContext`ContentSizeH = 405, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> True], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           2, $CellContext`forceTermUsed = $CellContext`a \
$CellContext`x^$CellContext`n0 + $CellContext`b \
$CellContext`y^$CellContext`n1, $CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 2, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a $CellContext`x^$CellContext`n0 + \
$CellContext`b $CellContext`y^$CellContext`n1], \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.53984020258309*^9, 3.539840288099449*^9, {3.5398406788210645`*^9, 
   3.539840690936103*^9}, {3.539840772642478*^9, 3.539840774568223*^9}, {
   3.539840807063349*^9, 3.53984087983959*^9}, {3.5398410649120913`*^9, 
   3.5398410672638903`*^9}, {3.539841106028813*^9, 3.539841146021891*^9}, {
   3.5401003093818417`*^9, 3.5401003389490967`*^9}},
 CellID->327754044]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
    False, $CellContext`angle$$ = 109 Degree, $CellContext`b$$ = 
    0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`event$$ = 
    "plot_changed", $CellContext`finalDisplayImage$$ = Grid[{{
       Item[
        Item[
         Graphics3D[
          GraphicsComplex[CompressedData["
1:eJx9XHl8jFf3T/tSW2tfiqp9SaR2ar9o8Za22hB7aVRsQUsssZRYKtZYq6X2
tXZCbMEZJYoWIwwjhMmYMJgsr6W64RfmnvO4x72/+Wc+8/U4z73nfM+9555z
bsr3+Tok/PWAgICWOQMC/hOAnyyQ3wKR0BefdMJLX7u4uM/cZ7Bl8/PPXcJ3
i7U9Lnzjlb+9hE+5Wmf03mJO8MtJI7zk9o2zChU/JeW4CT/z5uzyVz88JH+7
CG/zXv45O2rtks8nEz51/fLha+dvkPIdhPcI+Wz8on9Xyt92whck1t35QdSP
8vlE6/niA3t1qL9I4vGEpz/O8WuNHAsgQPlkiZx3U7u91mU+Pi8Qz5DPS/mE
d5Hy5XgIV8fjIBzHL+dLOM5X6odwVT9uwlGfUv+Eo/6lvQhHe0n7Eo72lXwg
HPmAv9Vv0hf7fxavEJ+c726Z44lFbMgrxHO1D+y0/eET4hXiqxq2vtDsaDrx
CvEC798d2efxdeIV4q91XGerOeo88Qrxak2uJz5tnki8QnxCwIiRibcTiFeI
V952pF/hk7uJV4jXv96hU+4224lXiD/MEe6Lfm0T8Qpx95jQD0+33wBMH6Jt
0T19t41cT7xCPFU+j7xC/JGUj7xCvJ4yHgfhOH7kFeLRcr7IK71+3IQHSH0i
r7j+kVeIr5b2Ql5x++JvzgfkE72X8UrlqcUrxI80Pdxq7i9Pab1CfOjmKxM/
fXCbeIV41x3OWkNjLxOvEB9TrGmz/jNPEq8Q37XSZy+ygfRGeM6Zvgqbz+0k
XiEe72oUvrOQtV4hXmdMzXqL21jrFeIh+5tu2eD7gXiFeK5lSY1OHl1IvELc
+UFgrYLL5xOvEN/ecfK9fQ/mEa8QvyKfR14hnkPKR17px+MQfPzIKz5f5BXi
byj6cQuuT+QV4mOl/pFX3F74m9sXecP5gLzi/EFe4Xs4rxAvG1ml+vRvMtg+
6BXbina9GzH6MtsHvaLA654Vy4N/ZfugV8TMf/z3wnL72T7oFc2XFJz8U+0t
bB/0itErotwzZ6xi+6BXzB5wqMuCvd+zfdArppesFDzlRCzbB71ib9GdqR1m
xbB90CsmXZ04NXHYFLYPekX1GfkPZoROYvugV2wdku9QyI5otg96RbB8HnmF
+EQpH3mF+H5lPA7CY+T41X3QK+bI+SKvEI9S9OMmvInUJ/IK8RlS/6q9veIt
aS+VH16xQ9pXXY+8opzkg/93llDl4SeLvZ/vg2ni71nrv10ed4N4hXjxXzsF
3xlB/Cd85x8VK/atuJ/tg9nPp1SpuaPCJrYPpolSYW2Lle20jO2DaaK6++vg
xo3ns30wTcw4s2X2lBXT2D6YJpK31R+6LFc02wfTxNUuPR79Mi2K7YNpoliR
p39GtBzB9sE0UaTfk+D8BYazfTBNhI141mtC2DC2D1rPI68QLynlI6/043EQ
fkWOX90Hrfkir/T6cROO+sTf+F1U6h95wO2l7oPZz0v7Sj4QjnxAXiHOeaXy
ne+DblE16Wl0Ptd5tg+6xZHR10a3mJNAvEI80D7i6Nh65C+ER7f9oyJ0XMb2
QbdYXejNK73T57J90C3yxiWdnz9oCtsH3WJWaKF/vpgwhu2DbpE5aU5K9ULD
iVeI37ke+OaNdRFsH3SLz8aMPffTxX5sH3SL30a9Vfxk975sH3SLu+0aFwv6
4Su2D7rFafk88orLR14hfk8Zj4PwDDl+dR90i5lyvsgrxPMp+nETvlbqE+2N
+GSpf+QV4tWkvdR90C1A2hd5xfmAvOL8QV7heDmvEH/z9rxCYTaKSwhvPKFR
2+G2nWwfdImRf9Vyhs5axfZBl3h6teqBHJZ/Ef7j+FWJPw6aQrxCPDJh0fij
y0ezfdAlfu+2rk7d179m+6BL/JUQYjv1VzjbB10idyVb0X/Pfcn2QZfI57pX
sUpiD7YPukRSzc8LNvilK9sHXWLHsbD0Nhe7sH3QJS7K55FXiOeQ8pFXiOdR
xuMgHMev7oMucVrOV7UT14+bcNSnuo5k/79rfv1LexGO9lL3Qcu+yCvOB//v
LEu+8sli8+DrVbK4vHz0tM8WHGLrVbL4ctzbobOfrGfrVbK4ndsX8mD/92y9
ShZDY09Nb5K9nqvrVbLYvShpYD/LHwl/0uhsqTrZ+lTXq2RxI+WXigt69GXr
VbJ4NytpY2ZyT7ZeJYvCuWs2+KpIZ7ZeJYuMvUkH+jYJYetVsnDAunOtWn7G
1qtkcbRK1xal23Vg61WyuCifV9crSz7yCvECyngchJeT41fXq2ThlvNF+yH+
r6IfN+G7pD7V9crSP/KK20tdryz7qutVskiSfEBecf4gr1S/4fGVQ2wt5Lz6
ecs9LL5yiGZHhn17NXAl8Qrx4PLDN9w9FcviK4d40HbTbwMofnATHlc88klt
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
Ky7HfnlwDuNbmlh06EnhZtUi2fqTJhYruJPkr+p6JOK3EzROkn9u4Ee2n+rv
oPeinF3qOAm3K/Oy0b8fXHOwaM8xQ9j6w3nrEyY9475dPOvRih7HThLut2Oq
GDUfNkQfO8r45hETzubIYR86lK0/blGtWvPp71dezNYftzgc0cF3/NeRbP1J
Ff3vXwrp/uM80gPKj44dPq7kxols/XGL/H8eu7/rh3DGB7d4S8GdJP94t+VD
VjcbTvrC7yPM7ijnkDpOwoOUeSEfUsWA3a8t2vZuGOO5RzzqdPbMH+0uEG7S
s//bJQI3vFd/abkjTP8pIness1/Ypr1s/UkVy6efj7i6NIz0iXLalfqz9OeZ
M0kPiLtnjhvz9NtBTP8povqkZR1XLIlh60+qOKbozUZyMmPeLbX9g+6MDy7h
U3Anyff9nvf+tqBw0ifKH6i1+yvjJPxjZV6o/xTx5YNC4WcmhLL1h/PWR3K4
njHOPZ4+qessOg/6aFy737gb91UNWvcEvjdMea+H5PQdfKXXvu2TSA+IPw66
9M/UvtxeTvHxggUBy2h9QP2niHRvmymOff1oviinT0LC8Y7NP2f8TxZhCk7x
l2gfn7Dbqnt6SH4wszvK+UsdJ+FfKfOy0f/79+NzZ+bZPmH6TxGenJerHBcJ
hKOco0zPfn06RJNJ9RJO5tvK9t8kkfPrfjmi2lnxnv69HpLz8YU+p18rOIb0
gHj3TssDCm/sSs+j/ISDlb9Paj+S5oPfnyh6s5GcHd/OteUd9l/GB447SX5c
evidoi06kz5R/q8lp8Rc3DCR3msYJ+HtlXnZSP6jmyuX3urfmvHcKXYpvPWR
nKZMz/5vuxh1+ps660euZ/o/Ld7K2f1xyLE1NF/9ez0kp+zdfPsjg/k+aBd9
Amps+/RaCNP/abGs/JT/nc0zjPSg15uN5HQU0ZXy7G7F+GAXIQruJPnl3tgw
pEPWZ6RPlH9Qa/dXxkn4u8q8bCR/S5vjtSL+bkF61vPWR3K4nv12SRRBv7YL
n3NgNbOLTRxL+P7A4M6r6PcW+d63P4huVjeoJekT5dQpUGHsuC1fkx4QD9l+
PfKDqh2YvWzC16HW6koUP6D+ud5sJCd10fSFQTebM/5znM5JYlrdL66+5Kck
v7R9yZQ+f1p2Rzmd1HES3kCZl43kxwTl7Ji3QzOm/9Ni0eywVTci1jH+J4rq
TM9+PF5cC29RafRPKxm+XmwelhzW3LaC8c0mpivv9ZCcEhum9mjcdDDTf7wo
1GVf5tAT7dnz68W4d6rt2RobQXqgeSl6s5GcbRkZS3+Z0YTpP15sV3AnyQ87
eBoaBdF7SX7v8FH15lP85iQ5BdRxEl5cmZcNOkn5l8puKZHypDHjeXac0tzR
7Fqt1Uz/8SKZ6TlAflpM6TDkRsQKrn8YOjq+5tttV9J88b2Xlfd6SM6Jks0W
pgSTPgmPcRdr9l1CO65/6LN2SeOI5Aimh/WiwcTXhxzs0p7mi3IGNLjToOKk
xowPHCf9Q31Fjofk8/einOnqOAlX50X6BwfTP8pX9eYjOXo9x4PeLtm8U+xI
+geuf5RTTM9/YLwi+d21PFwPXyq8Jf7DVj3/YRvjP/6/GLb+oPyxzO9QTiE9
/4HzH7+nsfUH5avrBvH/FT3LdQn4uiTXMVDXMVp/QL/+JIJh/Qe2rpJ8vg7T
vLTrTyK49es/uNj6j/L5/ovy+L6DckL06z+bF8bDp0HdB2n9gV+UfZPW/1f0
7P+2gz7+SQIef+K81H2f4h8wxD+gj3+SgMefer1R/AOG+IfhFH8Cjz9RPo+7
UE5fffwD+vgnCXj8ifLVuJHiH4jSxj8O4PE/ziOOnb/076X4Hz7Vx//A43/8
95MsDkf5u1j8iXIM8T9sZ/E/fn/Czl8on8efKKerPv6HT1j8j/L5+Qvl52Lx
J8rh8T/WtY6xc5k8x4F6jqPzFzxh5y+UYzj/wp/s/Ivy+TkU/187dv4i+frz
L/Rh51+Un6Gco+n8BZ+yc7dhnEI/L8o/QBjLP6D83ez8ZdKz/9sFQdr8TyqM
ZPk3/Xsp/wPt9fkf8GjzP6nA82+ot3Qlb0P5H0jX538YTvk3OMHyb/+/3V2Q
qs//sHnZSP4KJQ9G+QdQ82aU/4Fq2vyPG97W5uU88FDJ46H+s/Wm5P0o/wmB
+vwnHGH5T/w+zPKQOC+ef6M+Un3+E/Kz/CfKn6jkUSn/BgOY3alPUp//hKos
/4nyxyp5YMq/Md5S/hNKMj379ZkGPC/tX8duAa+/4HsPKXlvyv+DXZ//h50s
/4/y7SwPj/++QsnbU/4fFuvz//A9y/+j/CiljkD5Z+B1B5QTp8//w3mW/5d1
EJit1EEo/wx7lboJ5f9f0bP/2wu8/iXrOMDrjzivvUrdh+pfYKh/Aa9/kXxW
h0L5at2K6l/QRV//Al7/QvkuVn9E+bzuhnI26utfUJTVv1D+MqUOSPUXGMbq
LyjnINMz9rP8o61L+oDX30Ple9W6J9V/wVD/BV7/Rfm8Dovzus7qjygnU1//
hQxW/0X5vP6O8lewurNhnIT/zOq/KP8bpQ5O9UfGW6r/Aq//+vWZDrwu77dj
BixQ6vhUf4cspe5P/Q/whr7/AXj/A8rPzfoQUD6vv6McQ/8D8P4HlK/2UVD9
HQ6xvgvDOAnn/Q+yDwTU/hOqvwOvv5v07P/OArUvhfpM4DvWZ4LPC6W/hfpw
QO2ToX4SmKX229Dzan8O9eFABQWnvhFg/T9C/17qw4HmrA8H5YxR+5HoedSD
X190ThJ1954cX//DFcQDxOO6L8noPyof9VsiXrZgvtNBjx/SOoV4zLC5gW2S
rT5yxKucdI5sfNzaFxF/9m678/f+l8r66HziVrkP87ZfYd1XQTxj7I09e3qf
pPgM8ejWQV1yzMB4wEV4UHSnyxc2HKZ4HfFWrWv9vq/HXtZ35xODo3Jf/DRq
N+u784nhs04/2LdkC51LEe9/pu6+TQ+xb81OeM0yjy++9+56ylMgHrvztfJ3
x61hfXo+MT5w49Q6w1azPj2fOFt6UM+QUpjPwY9PvNt8ZPcZmcvJDxH390P+
x4b2Vu2PfY/r0Y/E/rXFG29IRLvHE47vleMkHMcp50V46cXLGo4qgnkkO+E1
FD0kEd5P6k3qmXDUs9of6BNDpV2w/od4593BNwYdO4h2J7y6YvdUwpEnaj+h
T/gkryQPCUceSt4SHlDWz1v/by/hyHPsU0F8uvQLtf/Q8iPpd4Sj30n7Eu7v
o+b9+a/Yl9aJEzXfGOSOjWB+7REFa4ZM7HTK2r8RHzup/J7jZY4xv/aI99+P
/iTEifupl/A+NTOP2q/HMb/2iFWXPvlzUfXNzK89IiJg/pdts+NM1a894tGe
W9H9s+N/1a89YsKjsW+OpHOEi/BaTboVm5J9XlP92iNi36+35fySGObXHlG1
aanWV7ZPYn7tEUlD/+1Zp+AY5tcekTZ4xMDHlD+xE/5zxf3NlgRHMr/2iNaT
ZkB6nmHMrz3icIcE14EtXzO/9oio8jkaDqd8L3484tKSZQOLvBfB/Noj/97y
OdpXEGd2F4hPn7X0/bXJEcyvrfeqfu0RR+U4Vb/2iFbtZg+dTvlbO+GqHpII
90i9qX7tEXapZ9WvLbuofm3ZUdqdcNXuqYQjT1S/9og/JK9Uv/aIQZKHql97
xPzp5X0dG2I84yUcea76tUe8+8+ua7laAfNry49Uv7b8TvVrj/y7x7h/ZRHO
7EtxwdBN1fY8r1+ofu0Uv1yuWvv8wP3Mr51CbPPmaXZqDfNrp1hws8aA/sMw
DvcSfmR24Y4PYxcwv3aKM5eXlyiyZybza6eoFdEoKClkCvNrp4hzrKn7e/Z5
X/Vrp1h35+ao9ZR/cBG+sEfP+U++HcT82immbrv0/fN8kerXThE75/Rr3/UN
Y37tFMFz9zwstLEr82uniAjNc93Ku9oJDw97f/3zvLTq105xoWGe/s/z5Kpf
O8XcFeH9ntcRVL92Cnfo6ptWfQc/ThF4c3Dt53U31a+d8u8JY740i3Bmd4H4
srlpXz6v96l+bb1X9WtrnKpfO8VFOS+pB8L7KnpIInyw1Jvq15aeVb92innS
LqpfZ4+/yWdPLlK+1GU9r9g9lfA1kieqX1u8Uv3a4qHq107h2mrbv/EQ5km8
hCPPVb+2/EL1a8uPVL92CpB+p/q1U/4dV4yLsghH+2K90//LJm6O2Pqi7qn6
tU3sHlC7WrOGPzO/tonfK0SuKLEC72XcIbzA9dEp29vg+d1LeNzlL1rdDZ/M
/Nom+o2HhqOixjG/tokyGZ/UfVo1kvm1TRS8kvfrAz+EY5+iNc4l01N3Ut7S
Rfikp4/rb/ugO+W1EX/WoWvA8zyz6tc2Uerw50nP8+2qX9tErVn3jzyvg6h+
nT3fQ3eWWPUaO+EPji15UbdS/domOqede1FfU/3aJoJKxryoM6p+bRN9B2W9
VP/Fj02Ejbj7oi6P50nE2734O2CYz8winNld6O0eT3i4fK/q19Y4sV8H8doR
c16qV9oJV/WQRDjqTfXrbDlSz6pf20RJxS4phAd85rejtDvhk6XdVb+2iRXN
J1S7sTSM+XX2eBRepRFeVuHhLcJLlW83sec4zE96CUeeq35tE03F76sH9ZjN
/Nomzih+lG7JUfwug/D/qva19KDaF+0OqXq/hji9XwOOR92vbdBcjl/Ol/Dd
cr6Yt0Uc9cP8Ggx+Dfml/tX92gZoL2lfwifr/RqQD8yvoaTer6G23q8hv96v
4b7kM9bpSY7kP/NrqK73a/hK79fQU/o14wOzF/k7/Ffv7ySX+TsY/B366v0d
0N/VfdwGXeU6JvVD+EO9v4PB38Hg71BK7++A67bkA+HfKXwgfwfcF5i/E9+Y
vxM/1X3cBoPkPuX/7bXkS/6Hqv4O+eU+yPwdcN9kfs3tSDjaMVTxayesUeIx
isPhqD4OB0McDvP1cTgY4nC4IeMZ1a+d2fzXxuGwRx+Hw1p9HA7z9XE4LJfx
G4vDYa4+Dof39HE4DNbH4WCIw+GiPg6Hefo4HG7p43AIknG46teWvTYrfu0E
Fr8RzvhActRzGcXnYIjPafyqX1vzlfohvL8+PocIfXwOhvgcYvXxOeA5S/KB
8IX6+BzW6eNz4pvq1xY/Vb92Ap4r/b8pPgdDfA6G+Jz8a7Pi1075d8PonEU4
s6P87YGZSv6E8mZgyJuBIW8G5WV+QM6L8DB93gzmyfyD6tceGKTPm4Ehbwbj
9XkzqKHPm8Fsfd4MqunzZnBWnzcDQ94MNunzZoD5JdWvPQD6vBkY8mZwUebN
VL/2QGE130JyAtV8C+GMDyTnuJJHpXwajNXn0+CIPp8GbWSeUOqHcEM+DQz5
NDivz6eBIZ8Ghnwa1NHn08CQTyO+qX5t8VP1aw+slHlg/2/Kp4EhnwYNZJ6Z
5dPIv1S/9gDLixLO7Ch/++CAUu+gOhcY6lxgqHPBNH2dCwx1LjDUucBQ54K7
+joXTNLXucBQ54JQWR9hdS4w1LnAUOcCQ50LDHUueEfWg1S/9sE4fZ0LDHUu
YHUugTjWuVS/9sm/O0T1EcIZH0iOWvek+hf8rq9/0fhVv/bBXFnXk/oh3FD/
AkP9Cwz1Lxiir3/Bh7KOKflAeLC+/gWG+hcY6l+Qpq9/EZ/9v6n+BYb6F8To
619gqH+RP0o7Eo52/D+GcmHe
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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

                 "]], 
                Polygon[CompressedData["
1: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
TqRHpRjrh+AI+NopyvYG66jrU7TdDKwIP4+2l4BB2oCkN0yh+41pbQDvCA4r
wqbumcdrrEGZ3AK+N3i0iBjXXin0jbagc+7cq3PUPcaBvgLbkn6hCJmrvbJN
Ct/kbrA1fM8UtuZDWZ5+XIXfYp2hKeS1a6vNo+2zFXgO/nxuv2UK+0A74YMq
7BN11SX+5hT7R1/lLrCH812FD3JctmfcU+6tb3P7lVP4q/qtd1cxPmW9MY0R
Kdb/sSLmYO8s//WtteFPTOEvNy0jJjs2hX1vbK/M5UvUcYaM9yrfR6aIDb+Z
51P5qG+iDhidQt84N/rcu8KPShE7nQ/GuT58a9E68iwbD5YsI4Y4LusT+1Lm
+r0pdcSuWlXh/62UwlfdF3R1beuQLcYAjQX2Ju/wIvZEL397FT6SeX3yfGoX
OOfag8pmZb0++GPw6VX4aPpDPSjvliK2cQZYC75GCt/lALC6a03dqVXkWdY9
RduDc32/pw8/Pu9PZY2y3jPzXB3nSVmsz6nv+V4dsSfPmP6n/qq2nDrhSfjT
dchObXBtcfene2t23n/qSnXPcrn+1Dp846WqsNdtL1c+Kifdn+5t96R7U3/b
uVb+zcjnu20V8tHxGr/Q1lUnzapD76h/OuS0861NajykL98b7B5Rd4L14YM8
00X4KKbbpIhdbAjawpcFmxThEy8Hv6wKn1D/cZkUutZYUtssb2xjW33GdvCL
qoiD+M3WpFulkB3rgyVSxFu0zeq83u1TfNs+7ds61h0Mlsz7S1tXnaYe7ELe
GMpOzvtPeaQtqM+hP7IqOBV+GlgNPqsKO/GCLK/WBUcU4bP3zeXG6J0j52pg
Ct/OOXKuVgH7w6fk8225c6nPvR78ySp88CNJD0gBuX30h/cD5xThY/TP/bs2
5vXL7fVBJuTvXV3HvcN72X/1vkfdqUw0/qw8MIbfLtuPng/3+kFgzRT+qrFJ
YxjGMqaliI8YJ9kOzEkRi9KnNb7xRQpf83p1dIp4gb6/8+F9xacpbNmHtPFT
6Ifunq2sX8yz7OHcfobzW0aM7Mmc1rfVB3/CsdQRtzR+6X3LU2C3MmJ6xh+M
QRuLdg6NZ7iennXXwLVwTV3b0/P59/7Gb52vDQofV8cdg7/J36a8cq8oo5XV
xl+MJR7mmFPEB4wVHZHHt0MdMVvzjBc8kqKuMdxHc9rY2g65vf0ZZzHeMo/0
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
Z5lvOnzvZDzUOyjtEWOZ/wM3we1k
                 "]]}]}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0bkuRGEAhuGx7/tg6ChoUFAoUdCMSmXf92WGEIMgUepoqFwADYk7IBGu
wTRcgCW2oPGcRPHMmy+TzPn/OTXj8Z5YSigU2iNoKqs+0jSdDNbsTM0im3U7
R3PJI2HnawGFbNpFWkwJW3aplhFm2y7XCirZsSNaRTO1HhzVyeA7ovaRnnMb
nMd+0J/gNx36xG7QToa5sRN6wCnP9pXe807EpQo8s442OuxeXWGZb5ePa4wl
vuxFXWCeT3tOZ5nh3Z7WKSZ5syd0nDFe7VEdYZgXe0gHGeDJ7tc+2mlynnot
5MN5M+ykXnNG0n0OdYMRLu0ubSTMvv3rv3nkjlH7Qo/ZpdWe0m5agndmV/+/
/z/rjDYu
               "]]}, {
              
              Line[{1038, 1037, 1019, 639, 1020, 1021, 1022, 1023, 1024, 643, 
               1025, 1026, 1027, 1028, 1029, 647, 1030, 1031, 1032, 1033, 
               1034, 651, 1035, 1018, 1036, 1039, 1040, 656, 1041, 1042, 1043,
                1044, 1045, 660, 1046, 1047, 1048, 1049, 1050, 664, 1051, 
               1052, 1053, 1054, 1055, 668, 1056, 1057, 1058}], 
              
              Line[{76, 77, 670, 78, 79, 80, 673, 81, 82, 83, 674, 84, 85, 86,
                677, 87, 88, 89, 678, 90, 91, 92, 681, 93, 94, 95, 682, 96, 
               97, 98, 685, 99, 100}], 
              
              Line[{1079, 1078, 1060, 687, 1061, 1062, 1063, 1064, 1065, 691, 
               1066, 1067, 1068, 1069, 1070, 695, 1071, 1072, 1073, 1074, 
               1075, 699, 1076, 1059, 1077, 1080, 1081, 704, 1082, 1083, 1084,
                1085, 1086, 708, 1087, 1088, 1089, 1090, 1091, 712, 1092, 
               1093, 1094, 1095, 1096, 716, 1097, 1098, 1099}], 
              
              Line[{151, 152, 718, 153, 154, 155, 721, 156, 157, 158, 722, 
               159, 160, 161, 725, 162, 163, 164, 726, 165, 166, 167, 729, 
               168, 169, 170, 730, 171, 172, 173, 733, 174, 175}], 
              
              Line[{1120, 1119, 1101, 735, 1102, 1103, 1104, 1105, 1106, 739, 
               1107, 1108, 1109, 1110, 1111, 743, 1112, 1113, 1114, 1115, 
               1116, 747, 1117, 1100, 1118, 1121, 1122, 752, 1123, 1124, 1125,
                1126, 1127, 756, 1128, 1129, 1130, 1131, 1132, 760, 1133, 
               1134, 1135, 1136, 1137, 764, 1138, 1139, 1140}], 
              
              Line[{226, 227, 766, 228, 229, 230, 769, 231, 232, 233, 770, 
               234, 235, 236, 773, 237, 238, 239, 774, 240, 241, 242, 777, 
               243, 244, 245, 778, 246, 247, 248, 781, 249, 250}], 
              
              Line[{1161, 1160, 1142, 783, 1143, 1144, 1145, 1146, 1147, 787, 
               1148, 1149, 1150, 1151, 1152, 791, 1153, 1154, 1155, 1156, 
               1157, 795, 1158, 1141, 1159, 1162, 1163, 800, 1164, 1165, 1166,
                1167, 1168, 804, 1169, 1170, 1171, 1172, 1173, 808, 1174, 
               1175, 1176, 1177, 1178, 812, 1179, 1180, 1181}], 
              
              Line[{301, 302, 814, 303, 304, 305, 817, 306, 307, 308, 818, 
               309, 310, 311, 821, 312, 313, 314, 822, 315, 316, 317, 825, 
               318, 319, 320, 826, 321, 322, 323, 829, 324, 325}], 
              
              Line[{1203, 1202, 1183, 831, 1184, 1185, 1186, 1187, 1188, 835, 
               1189, 1190, 1191, 1192, 1193, 839, 1194, 1195, 1196, 1197, 
               1198, 843, 1199, 1182, 1200, 1204, 1205, 848, 1206, 1207, 1208,
                1209, 1210, 852, 1211, 1212, 1213, 1214, 1215, 856, 1216, 
               1217, 1218, 1219, 1220, 860, 1201, 1221, 1222}], 
              
              Line[{376, 377, 862, 378, 379, 380, 865, 381, 382, 383, 866, 
               384, 385, 386, 869, 387, 388, 389, 870, 390, 391, 392, 873, 
               393, 394, 395, 874, 396, 397, 398, 877, 399, 400}], 
              
              Line[{1244, 1243, 1224, 879, 1225, 1226, 1227, 1228, 1229, 883, 
               1230, 1231, 1232, 1233, 1234, 887, 1235, 1236, 1237, 1238, 
               1239, 891, 1240, 1223, 1241, 1245, 1246, 896, 1247, 1248, 1249,
                1250, 1251, 900, 1252, 1253, 1254, 1255, 1256, 904, 1257, 
               1258, 1259, 1260, 1261, 908, 1242, 1262, 1263}], 
              
              Line[{451, 452, 910, 453, 454, 455, 913, 456, 457, 458, 914, 
               459, 460, 461, 917, 462, 463, 464, 918, 465, 466, 467, 921, 
               468, 469, 470, 922, 471, 472, 473, 925, 474, 475}], 
              
              Line[{1285, 1284, 1265, 927, 1266, 1267, 1268, 1269, 1270, 931, 
               1271, 1272, 1273, 1274, 1275, 935, 1276, 1277, 1278, 1279, 
               1280, 939, 1281, 1264, 1282, 1286, 1287, 944, 1288, 1289, 1290,
                1291, 1292, 948, 1293, 1294, 1295, 1296, 1297, 952, 1298, 
               1299, 1300, 1301, 1302, 956, 1283, 1303, 1304}], 
              
              Line[{526, 527, 958, 528, 529, 530, 961, 531, 532, 533, 962, 
               534, 535, 536, 965, 537, 538, 539, 966, 540, 541, 542, 969, 
               543, 544, 545, 970, 546, 547, 548, 973, 549, 550}], 
              
              Line[{1326, 1325, 1306, 975, 1307, 1308, 1309, 1310, 1311, 979, 
               1312, 1313, 1314, 1315, 1316, 983, 1317, 1318, 1319, 1320, 
               1321, 987, 1322, 1305, 1323, 1327, 1328, 992, 1329, 1330, 1331,
                1332, 1333, 996, 1334, 1335, 1336, 1337, 1338, 1000, 1339, 
               1340, 1341, 1342, 1343, 1004, 1344, 1324, 1345}]}, {
              
              Line[{627, 626, 638, 639, 654, 655, 670, 671, 686, 687, 702, 
               703, 718, 719, 734, 735, 750, 751, 766, 767, 782, 783, 798, 
               799, 814, 815, 830, 831, 846, 847, 862, 863, 878, 879, 894, 
               895, 910, 911, 926, 927, 942, 943, 958, 959, 974, 975, 990, 
               991, 1006}], 
              
              Line[{4, 29, 1022, 54, 79, 104, 1063, 129, 154, 179, 1104, 204, 
               229, 254, 1145, 279, 304, 329, 1186, 354, 379, 404, 1227, 429, 
               454, 479, 1268, 504, 529, 554, 1309, 579, 604}], 
              
              Line[{628, 629, 641, 643, 657, 659, 673, 675, 689, 691, 705, 
               707, 721, 723, 737, 739, 753, 755, 769, 771, 785, 787, 801, 
               803, 817, 819, 833, 835, 849, 851, 865, 867, 881, 883, 897, 
               899, 913, 915, 929, 931, 945, 947, 961, 963, 977, 979, 993, 
               995, 1008}], 
              
              Line[{7, 32, 1027, 57, 82, 107, 1068, 132, 157, 182, 1109, 207, 
               232, 257, 1150, 282, 307, 332, 1191, 357, 382, 407, 1232, 432, 
               457, 482, 1273, 507, 532, 557, 1314, 582, 607}], 
              
              Line[{630, 632, 642, 647, 658, 663, 674, 679, 690, 695, 706, 
               711, 722, 727, 738, 743, 754, 759, 770, 775, 786, 791, 802, 
               807, 818, 823, 834, 839, 850, 855, 866, 871, 882, 887, 898, 
               903, 914, 919, 930, 935, 946, 951, 962, 967, 978, 983, 994, 
               999, 1009}], 
              
              Line[{10, 35, 1032, 60, 85, 110, 1073, 135, 160, 185, 1114, 210,
                235, 260, 1155, 285, 310, 335, 1196, 360, 385, 410, 1237, 435,
                460, 485, 1278, 510, 535, 560, 1319, 585, 610}], 
              
              Line[{631, 635, 645, 651, 661, 667, 677, 683, 693, 699, 709, 
               715, 725, 731, 741, 747, 757, 763, 773, 779, 789, 795, 805, 
               811, 821, 827, 837, 843, 853, 859, 869, 875, 885, 891, 901, 
               907, 917, 923, 933, 939, 949, 955, 965, 971, 981, 987, 997, 
               1003, 1011}], 
              
              Line[{13, 38, 1036, 63, 88, 113, 1077, 138, 163, 188, 1118, 213,
                238, 263, 1159, 288, 313, 338, 1200, 363, 388, 413, 1241, 438,
                463, 488, 1282, 513, 538, 563, 1323, 588, 613}], 
              
              Line[{633, 640, 646, 656, 662, 672, 678, 688, 694, 704, 710, 
               720, 726, 736, 742, 752, 758, 768, 774, 784, 790, 800, 806, 
               816, 822, 832, 838, 848, 854, 864, 870, 880, 886, 896, 902, 
               912, 918, 928, 934, 944, 950, 960, 966, 976, 982, 992, 998, 
               1007, 1012}], 
              
              Line[{16, 41, 1043, 66, 91, 116, 1084, 141, 166, 191, 1125, 216,
                241, 266, 1166, 291, 316, 341, 1208, 366, 391, 416, 1249, 441,
                466, 491, 1290, 516, 541, 566, 1331, 591, 616}], 
              
              Line[{634, 644, 649, 660, 665, 676, 681, 692, 697, 708, 713, 
               724, 729, 740, 745, 756, 761, 772, 777, 788, 793, 804, 809, 
               820, 825, 836, 841, 852, 857, 868, 873, 884, 889, 900, 905, 
               916, 921, 932, 937, 948, 953, 964, 969, 980, 985, 996, 1001, 
               1010, 1014}], 
              
              Line[{19, 44, 1048, 69, 94, 119, 1089, 144, 169, 194, 1130, 219,
                244, 269, 1171, 294, 319, 344, 1213, 369, 394, 419, 1254, 444,
                469, 494, 1295, 519, 544, 569, 1336, 594, 619}], 
              
              Line[{636, 648, 650, 664, 666, 680, 682, 696, 698, 712, 714, 
               728, 730, 744, 746, 760, 762, 776, 778, 792, 794, 808, 810, 
               824, 826, 840, 842, 856, 858, 872, 874, 888, 890, 904, 906, 
               920, 922, 936, 938, 952, 954, 968, 970, 984, 986, 1000, 1002, 
               1013, 1015}], 
              
              Line[{22, 47, 1053, 72, 97, 122, 1094, 147, 172, 197, 1135, 222,
                247, 272, 1176, 297, 322, 347, 1218, 372, 397, 422, 1259, 447,
                472, 497, 1300, 522, 547, 572, 1341, 597, 622}], 
              
              Line[{637, 652, 653, 668, 669, 684, 685, 700, 701, 716, 717, 
               732, 733, 748, 749, 764, 765, 780, 781, 796, 797, 812, 813, 
               828, 829, 844, 845, 860, 861, 876, 877, 892, 893, 908, 909, 
               924, 925, 940, 941, 956, 957, 972, 973, 988, 989, 1004, 1005, 
               1016, 1017}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
kV/rY6Ch3Mnh+1MeNCWXFt5oCcUh06ZkmTD7pGwzxXczsz91SS43+1N90OJ2
8vHuVB+IibXX7mHe66U7Hs6cxXPCUf2b18/+6Qr1LSum2v1m9i2ut+lPpA3O
5198zX+lE+RLZr+bxTxHM76R4Z/vGOPux9eCRI7ehnin5j5lpt7215+rsHyD
DuqPjpGJ23IL9nfdemrJrD/3svVtclDE/3Z/ubDI8Qbk9h9YHTbw+fbkvo3K
K8BW/Uh0Z9NNsPsz3/U5sy4XOP67pJ4qiB+vSNCadRP6/8rLBDLrw69JTp96
Xh/mBiumK3ZZQ7ROuq4Os/5y6/sSxXBTMBr5OSrT2RbU1wWIrWHWkz7Mk7X+
Ygvzs1+s7hvqDA2Pr+/qZM7bxdYJzxZ1OMCS3h6xDT4u8NyS57WeWa+n/YHr
/+xPC+0nCP+zn+ZXWlIqi5JAqz7skMqCWBCce2qmBBPf1sxaYyH2sgBEPEeL
3WnMAPn1KwLvtnbAc78FDyINqiFy8/pbm77mQaWQn6fPrFZ4v2vG5GWzXkLa
nZTkj6+r4dv61UJ/NrXB0InTd7j4t+FL4/8SAq68AbuTdzbfdGDOW+LcMW8c
W+H5tyapH8UJ4C8wfWuMYg3Uxl7nv1n7AqO7ZnmdvVQMtV8UpG/P7ATtUN9z
TW4VeEFTdXhMRgrsDTf7Yq3aDnfPFAYcfJyGoZN+KSxTeQvbpaOmbZflQV7i
sw0HwqOR/6vYCSOrYIi83ZMnyOQvRyGLBRPs/LHu02vTtyO9Ienl6AMfmPfx
6v6x5Ut/uqIy31k/5hyBuULx5IHzY7Py2ZeiHXfxyyYl05Idd+FkcsMNfeb8
6M8X6PgueAUdpe95z7xsAZDg/d6ReV7xxiH7TlfqoWpWhVRd9xWQ3vEqKIlZ
91Qfbmdoqo5hzqsUE0qNIVxn+PiPzPrW/TKVfWPkUa5y5VOziouwlO+rdiOz
riple5z3ehTuz9TdI7HFCMqVrM8NrPv/Uvr+vmUPOOaVtsY9MYTbtc5PW5h1
d7o+BP9z/US6Hzjxz/0sOGST/9vZHOROGvXaaNwEddnOQCNmXWGZ2dLEp/fg
qM6bScnMf08JraVyzO+dtmrbWGnmnL0VGyK4mDl38z7IPR04bxe/ii8oaPaH
MR3JKYVMnOv4bjg2ltnP2Z+2z+5Lew1jb5hKrVFl8mpp6p/JTD5VeS3oen51
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
rI1LVe+YnD7jDrrC7tKjmOdy4VWS6OgCSbi6c4T1MefHoKtywmILs64n5PH0
0LMmiLxx8lzziTrgPxa89tv3Api4oOrCB89O8DGK2fbHMxumLjqY8TcvDc7E
RHkedjoH0sZtc1KN3aEh9JjCgJ7snTmueulQfTgrqKJmUucO9odDBRuZ++GL
6JLeqHgDbmZKzd71/CkoWpz9MaDr1phpRVXI2cKGnlyhidXeoPjI4/bAHFaq
z0mP5D93oFmmS8NivQ9cGLJu6VhmvXpn/6iiu85QP7QkRl/wGUwYv8PWienv
vlrnf4ht94QXfxQUFtgHwvJXh/2fMvVDU+atlcuGvAChNfbqm9TCodjmbdxH
Jr4JnP5idSA5DIrC5YYtL38NNr/Oz7nKPF/v7/UZ2omRIPtepuaoPBMfgp7F
zo3mwX4FRfmx9+PgY5f+qNXNCTA610TBZ0BnCBpm7m2aCjOU8LHqtXTAdXZS
LUy/HLrLxrlyTREcv6rwY5V4IXz7k7NKmOnjAlTEdT0mlIPhuERZYd0SMOhT
3/R0YxsIvJzn+9/LzxBrpTXK4Uo5VBxV+tWs2AJvZBv6q7TqoOVM7H7TtZ+h
Yqu7+HGmv3getX3V98eNsPIRn5KuWDW4jansPfe6Cv4sWeC6rrsUg1b9Pma4
rJWpO/6vS3P/6/ns47iQ0xzChs0hlvOcy2GMN3MYmW5FNCQyp9FIt1PK4Xa4
40ajmEOIkaEoyVh4FRGpqFRCORVGynGR0f39fF7X9cP2D3wfn+/1uT7v6/V6
Pq9FVcPe3RRrjzo3pm/7Ayk3/Lzuh+XKoyv5kux5XS6FT13Qc1URfh10wcOr
f5w0ybe2j56aJt9999rK8BaRvziNyqozW5zXfDD9xbUKw2tHJP0mufMvH23q
mS51DhY2PrusSBY5/edtsW0OLnZMC9rsc06u5/fsm1TpqXgX7klePCANjpF9
/njifkayv/98dePgIqk0z/X7jO4JyFnR7Lcqlr7ycFh68J4lxVLy6nxW+zan
sLqTZ1L+ynD5otPp5n6W3hQQu63f9unRmLu9g2+kpV+2f5aa7m7plSHfvDtr
Zen5pcfqLTtl6f1r3o8pNvr+yRMpXmOdQ+GzZFz8Q4NDFDjEG/whsEZW8oKN
wdjh79k4YkigFIxMfmHwmWnPkp4Pb/0T6i/LDJ7lt0Ze5DQ2eVGLjU/rBbiv
gl8zX7uSfStkwttEk6fNrxnWz+Cbgzv26zbKw1emXS0yOWeo9UF3g7cmb8s6
Ujp0gaQ+7mFy1w+nRzc3eHRl9xNfJg+fK5MKD5hcOmxYq8kGHz9WlnLF4OW/
995jcvIRI5p6Gv7gcfzgFuMPe0utEY6mR3BuWTvD8DpvKvsnvDk3S67cDzX9
Tt82lwMM3/YvtzHnPrWdJc26J5nebU6lIw+evMqWtYdqNL/aNVUSo7c+7Hu0
UKL7/m6TUvZIyuW3GxAfdUoWHXx4LzbsviSv7dLe8IXbqxfWDlvqJYtXDzZ9
34EGVkcNn1qc53+rRpSXjD4cbPovVz6nPPrHc17vN2yd4d1zr2fv3DDaR7bH
tjS9yaZV1/oZ9xKGuU+w2jt1ruxN9DE9wssfrO4Y9yQ+q+K7ob+Lr3ToJibn
v2HjOnBI2nyJCxqw95rXIrn2ZIPJvYvt58Q6VAiQpqkD9hQ7rJId3k1MHuvi
lLb7ZOY6cVtWt/9wlwB5vmDXOoOXnqlfmrI/PUgWDp0eMKtgnRwvHbHC4IfX
37ddkhITKnXOfHUyq+nPkjbLbbnB9w6/+WRoFae9UnZjYUH10G0igb12G7zL
uWWRT1xZjBTWuNHpp30HpODcx3c8LHkmdKdr68o+8TJu/Z0Ho6Yfk1e9L7bo
srVYHIK792o2MkFaeXw5IzkvRqZXv1kSubBYnvy3bt9X+9Ok+47NB0IHxUnm
ZpuK+X5FstbB2iMx56bcST5x4X6ti+I/L3NSw/aFkjBupfXdxFS4vx4bntch
XWYUlXsxLvqpNC37ELI34i68c2Y6/tY0Qbqnhp9P6/xYZn9TOWT0+QcoN+n+
tE/CI2XPpdZb73o+kMJ3NqbvvOq62fSfY5X37Pz1hdFxmZEyKNbetUblCMu5
OPJDLcucdFuRfLakUzLabJvUtvf+7XJ5dUlcor1lPcfu/Tqj4CxqOkTFngzc
IIPWH+tRfp8ll+56PahexDGMnNE57/6BNXKutK7PGss52LXByKm3ciJQ9nN0
i6qRy+Rd7+uDzz4vln7IrvbRsl8w3tG+rn/GIunzadnEXOPewuKQV9GFGzEh
271e669mydY2GcEGD/xxffH6k8vXwqFXu1U9Xk6RqnZj/A1u+aDm/Dv+U5fj
Qsfjbw2Oa/PDCJPfOnxb5b3Nez/sd/skzuDNNit9TM7czPb0ih3fzUWTzzqm
G9x9Y7lpJm+vHmg9zfAf2+wmdjF8SJ2Z9CCh05LCDE+T6nEq0/A2bfvS1zTZ
MT/b8FUP8mdfMfyV43h6q3YX1rQwvNrMuef+Mjzb6Ir0a14XO7Qw/GJc+3DT
N8Ypz5g7ZojpfXs41jY9cK7yvyVj7ZcYPr5Xl8mmn6+vvPzoyfmt5+VmSptj
t8u1eLxb7v+vq3ucpV+veNmkuE7WbYn8ZpvTkNJg2bE41iPQ0jtubnM07xkU
rrU37x1kKc/+qklj875FYXz2BeP+RWflo3/MOWDeg3lnNdi8F7NSedKtW474
GPd1nj1wMu/vHFK+0sb5A4x7S/smL11s3GO6kkevl/g2b7Fxv2rG0DuNjPtW
SwPo19yPZbob98wuX3Ix751VtqWHinxd9rx37L+lxPaSGPcBL4xraPqRm9+f
bTgywF9OdhowuXaUh5xaGG16ivG7gip6BayQexNq3nlkPVVavVw13OD5Niey
Su1i1kkVl94/zuk5S/ZHdG5scPW08UN7TfUKkhi4Z/Qs9ZaPcvuMNvhz0MTS
mbk2e2XxlvmrPN2WytDsLaXeln1oe/HylASrSDkY8zDq1v01khAW5Ny/uFhQ
1mBirYExctnuY89uKYGyM7me45F7lvU5vnNYhyUJkt7QMejekhCpOOdkYp0g
yz7pFry4fLsUCfOKXejUbbekNw4b+audJRdtatX82ZsDSN/aYnjzruHS8/Go
yx8eWeb/glPDR7hcQ2bTkE12C/eI7fFb3852KZLxbQ5kSeRtbNqDrlbltshH
jaJGnEt6IqV8v/iT7xf6/f4VbP6+pPH3oX+/EZ8HEXwe6OfZzOdHAZ8f+vnV
/0Um/y/0//2c64MYrg/0+mzmemIR1xN6PVO4/kji+kOvfzW+L3Tj+4J+X+r9
4gnfL/T7vcH9gN+5H6D3g9o/eMH9A71/1H6D2m/Q++089ycWcn9C789q3M+I
4n6G3s9buP9Ryv0Pvf99+b2gQnnze4H+XirYmt8XXvH7gv6+SqzN7/rMQH7X
0N/1F5zD6Ms5DD2H1X4QtR/wj/0gB7kfoPdDjb/MOS+3OOeh5/wzzhnpxTkD
PWd8OZcknnMJei515ByTaZxj0HNMzT25zbkHPfd2ck7KRc5J6DlZjXNVtnOu
Qs9VO85hacQ5DD2H1dyWg5zb0HO7gHNeznPOo7aa8zN4Log6F6DPBXWOiCfP
EehzpD/PHfHkuQN97jjwnJI/eU5Bn1OlPNdkEM816HPtNM9BseY5CH0OqnNT
BvLchD433Ti3MYlzG3puL+fcRvXB5tyGnttXmccQyjwGncfimQdkEvMAdB4I
ZH7ANeYH6PxQyLyBrswb0HnDnvkEzZhPoPPJLuYZODPPQOcZJ+Yf3GX+gc4/
Ki+hlHkJOi+pfIXqzFfQ+SqeeQxzmceg85gb8xtUfoPOb8+Y92DHvAed97KZ
D3GG+RA6Hz5nnkQD5knoPPkz8yeGMH9C589s5lXcYF6FzqvOKoerfAudb3cx
D+M18zB0Hn7T0MzhfZyYw6FzeBJ7E26yN6Gu6k3NmN9kJfMbdH7zZn6TGsxv
CFX5rQ17mRxmL4PuZaPYC6SUvQC6F0xU+fzxP54/nL1DVO+A7h2qp0hV9hTo
nrKLvUZS2Wuge40Pe5CoHgTdg1qyN8ki9ibo3jSdPUsasmdB9yzVy2Q7exl0
L1M9Tuaxx+G66nE72fukjL0PuvetZk+U2eyJ0D3xNXulrGGvhO6VqoeK6qHQ
PVT1VnFib4XurX7suRLHnosc1XO92LOgehYu/r1noT57FnxVz/IgP8EA8hNo
fmLdxuzvovo73FV/V30fndj3EaT6fiz5AJ6SDyBH8QHFE3CWPAE5iiccJH+A
D/kDNH+IIq+AG3kFXileMZ18Aw3IN6D5huIhyCEPgeYhO8hP0J/8BJqfVCZv
QRp5CzRvUXwGdchnoPlMMXkOjpDnQPOcPPIfKP4DzX/iyIvwmLwImhcpvoQv
yZeg+VIF8iisJI+C5lEh5FeYQn4Fza8UN4PiZtDczJucExPJOTFJcc5K5C2S
SN6Ch3/nLbKbvAWNFG9pS44qiqNCc1RXcjxpS44HzfFukvtJBLkfNPdrTk4o
tcgJoTnhp+SKorgiNFf0I4eUueSQ0BzyBbmlrCe3hOaWYeScojgnNOd0IReV
6eSi0FxUcVQZSo4KzVHDyV3lCLkrNHdVnFauktNCc9o4cl1RXBea614gBxbF
gaE5cAdyY5lHbgwnxY0VZ5bK5MzQnLkJubRUIZdGhuLSC8hFcYhcFOUUF61L
LooAclHUU1w0kb4D1eg7oH2HPXm7VP3T5O1Ypnj7LfJ5lCefh5vi87vJ8/GI
PB+uiudPJv+HI/k/Zin+r3wBOtEX4LHyBb3pFzCWfgGfKb+gfASe0UcgT/kI
5S+QS3+BN8pf5NB3QPkOOCjfofwIlB+B9iPO9CmoR58C7VM20r9gO/0LtH9J
p6+B8jXQvkb5Heyj34H2O+/pg6B8ELQPWkd/hD70R9D+KJa+CZPpm6B9U48p
pueCNz0XtOfaS8+FVvRc0J7rJ/oRcaIfwXLlRybQj8hx+hEcVX4kkN5TGtB7
QnvPkiemdxPl3aC9WwN6Ogmhp4P2dD3p9SSeXg/a6ykPKBn0gNAeUHlD+Zre
ENobutMzSgI9I7Rn3EQvKYfoJdFYeUnlMaUPPSa0x7xK7ynB9J7Q3rMuPamU
pyfFUeVJXehVJYpeFTuVV1UeVnbRw0J72JX0tpJGb4t85W2j6Xktv2N6Xrgp
zzuPXlg60AvjmvLCyiNLJD0y1imPPIreWdbTO2Os8s7KY+IuPSbeKI/5fwgk
J/8=
            "]], {Axes -> True, AxesLabel -> {
             Text[
              Style["x", Italic, 12]], 
             Text[
              Style["y", Italic, 12]], None}, BoxRatios -> {1, 1, 0.4}, 
           ImagePadding -> {{20, 15}, {15, 1}}, ImageSize -> {260, 
             Rational[395, 2]}, Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {All, All, All}, 
           PlotRangePadding -> {Automatic, Automatic, Automatic}, 
           SphericalRegion -> True, TicksStyle -> 9}]]]}, {
       Item[
        Graphics[
         GraphicsComplex[CompressedData["
1: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
tR+0X/aDYmNv+v8y4c1PcySZ/an9s639qfhMzfe3f1XjPB+L+rFxjp+SqJSl
D7T/rqUPFIs+UGzs0YM/p5VufzRJ8asbe2vkv+GjzaXGNtx34Ajv6t254MWK
AbodWax7oxVn+VKrX4btj7DjCmp22XCCqtr25+PxFScXye5X/Z/wpH5C91J+
iv/49ax/U/ScaRPrr3ru8dhtUoF3h1/22m3ynxejDvrt9tH1QZ1WJ9vtk73/
nP7mkd0+m/dDrcF/2u2Lz2psb/eX3b5qfvntmi/t9p9SgxcUem23sdubNute
5DD98W+NrrWqBajC6mm32xeeT7n2ZHAVKOxXfQ/zJTPfN8P2HM2Y6QylH+Pf
8/vvSfR23bhPynqOUobZDXZv/ttHf95yZw0v5WVpKXpl6+TFWbwsrdoD4Af9
Lfzo2+nD9+8PvUQjEiuVufxOEp3o0Wt164uh1Ny/63jCOR/Vzcz7i5Pt7/iq
2tYe7mVxind2W/DPVq9bsWvSmC3DGtrY4paX1330dPWeofa96VynU5FvFPVS
hsON6jeaZL+D/JJr9K415WMV53xaYuas9PH8KGv05El/J6q9+kTkWfYDmf1Q
YvOSMd/1jU7l5x9QNH3/VatsXK9W+4qzMtg4V/tVj0d9lag4YVDs8f4P7HeD
U19XntWhrZdCP/5p18Ea9jtm9WJl+h8gN5er8+7TTfnsOFfY72T2+6eWPiGj
T4pY+oRAnxDoEzL6xNifY4NyRnaeZb8bcZVe68tMS1R85s/NA/6a5KXMJW7V
yHH1go7Xe+rA6JWLXGy1Proz0721zo1YttpEOtcmX8TdvLFstYl0NFfL7JN6
xLDV2nHWnZz6mi459TUZfT3vdEdXjqrRtKb2lD8i/UmU7Vy+isc+eED368YM
rTE+iRZcuv/Fp72iqMj7H2Sfky6JcoT9fCTXV5HUp+HW/VEL/LTw1pDXx2ff
p7WUpVvNQrZ9W1n8WpbcY+x3y1FTQvuN+cNLXRM35i1T+z73mLf3aWCQHZcP
9pPAfhLYTzos9lPsM4F9JmOfjX3q1DrpZtM5PspmrTc55S+cM52c+vpyxkS6
d/SzW8133OBA7/d8G7slGnki534J4z/HjV53sJSPilvyrP2yXxQftfaLYtmv
BPuVYL8S7FfF3tt9qo8MCVLDKgdnnckaoGG/f1fZfSJInD9yWt3cAUratb/c
R2eD1CRtxq/3FArQyJURJa9cCtIZ/zvjS5UM0KNpGYo2vRmkFrd7jlpVIUCj
h1creDQiSOd/+3ZEtuoBetb9ozxVUvR02117PpteJ0ATG8/I8XNikK6uuDPw
WaMAvaq0O0v+FL3baVrafsNbBGhqvtsZ5qWcn28Mq9wrpn3AjI8LVtx0bUkb
rxkfr2w08VaRD7xmfJy3W8d72973mvHx0qFlH9R4z2vGxzm/eeU6WcVrxscL
ll9PaFXWa8bHWXduS7qZop9kfDybpzzqm99rxsdvhHd9lpjDa8bHM3wVX43J
5KWt9w5X2nXcx51m9gvvPtj2uywoP3Zz8CcPtbo7d0+/1Qnqt9k//U6POn/G
Ky5YuUy6nB1tPP3Wl7vjd9jvmA1rr+9+tqiPz1zov/N9l4da/DZ1WfNdcdqf
c3jB0r93cCs2+rbr0kd7uqxOUNyg3Nsj8v0Zr7jssaZV7nawcc4Ow/1rdnho
XppnT9ZXu0pXK23f1qW2HTdu5LPY67vDqzSK1d8z+vJGszqN8n6aoPh2uz3F
V5WPp7uW/FOSyL/Rj2Z/NFuX/fuZUzBuxMULr13/zR0eb+sf2W9m/ycVeN1z
UfZ4erHj37vZ90bTtm8qrTow3UfNZ3YbUq9iFF1J6ta3JSXq/gb9QV+J/qiU
+3rp7r4IbnL58zOVYhJ0f0cWudGqxeMEoz8J9CeB/iSjP49Y+lNa+z0A9DeB
/qazor//2B1Ry9/SQ0XSVZ/XeJ2PnhV/UnBqTBy1G9tq5M1aPiq37M2/c02M
o8ne/p0HX01Zz4xloje9FUc7e09878XgRJo1scHp2jvdFHF1SYH5/3rpcFK3
LReauilL050vi/3gpbh+I+b0ue+ieiGnow5Ut/P4wF4S2EsCe0nxTntJJ8Ve
fmDxU/3/Ys/J2HORH+0XebbpLXlWLPtHsewfxbJ/FMv+sfvPL249aZj9XtF7
37Q8jYrauGOOfpPbDA3Sy1+ylHuax0ctn7y/sc+EID1eF98uU2kf0d2CF0bO
DpJvxpnRhWr4qM7Jp8FpK4PkGrJhTeUmPnpn4438y7YEKaLdlN8bdvJR+dn7
Gm45nKK/3u3l7dgvRZ9/Pn/Q0TNBupi/Ts4BI31UoPPQeRduBOn0qzy1x0xJ
Oe/UbnHwfmyQjsU87PPdfB9lLlz6XuBhkA6GXvn2hx9T+H1929y8a+135JXZ
Q8Y+zmTjjG1O9w8bnah43HfX2u6Ntt/tE05H1p7f1sZGPx29s3f6sGY2Hphx
36q1P6jd4Jy19u25mqR2go8N3HcmTRM3rb7rT142KEG/7/aHxdMOKh+vePyS
ZxW7lPFx9Jm+ldO/66bA8ze+6zs6Dt45vTz0daHZW3Yq37nY9S6bO6TwvXCa
47v/zhir9EafDG756pMBo+No4KKWc6+djWNpaVilqJmJBd0sLb0frDf5+ooI
arWx5WfLniaoPskVG7F2fqRb9YnZ33efVJ5SuVIUJb1YcSrfinjVD0a/LBzd
Md26e7HkPr+5x+NqCdSmZr1xizvE0Po5Cy95Ntl5mkZfRfVvWaN5UhzNefNx
ZHBlAq2+1qXb07xx1GzS63/Wczx92KjvuC0p9jdNYuaSnbx2Xu11p/4koz93
5qp2b8qJBG3vJNedeq+j3aa/8kHpWu54bavv6nB+8Ti77fN9zxFJWez2+yGD
crda59HW7INuTntBDZ32gso57QUZe9HEsk/EYp+EfzqPZIv/ikV+7Hla8qO4
vCXvildZ8q44kyXvisdb8q5Y5F3xph5VDs17kCxtPO0ufP/YlFfJ0sZTSPT3
p78oGJQ2gU5tqnvxk1pBaRPo3JCE6127BKVNoLDKK+81/yIobQJFBJvF1pkf
lDaB4g498VbcEZQ2gQLjNz4s/EdQ2gR69n7n59ndQWkTzPg4U9epfxW77Dbj
438WXgtW2ec24+OnF0t46y91m/FxUsZRMa3Gus342N30zN0PP3Kb8XHE1LzX
B73vNuPj68c+vTCqmNuMj889O/L7tLRuMz4+VSPzsYVxLjM+Pjyy58G151yU
I8uCeWea2O+f6WsN9jVJ1ncpet6fWv+2xsZJ8wtub9TSxrG/PMp48okdF/Pl
3qxfl2scYM/WNveq5Yuhz8c+WZq7VxInRn9yuumrGPqsQeSOf0b7OVBw4q4P
Y2Ppw1b9p1783v78jVqNFxyYkai4fekSa3+YbMctGX21tPnhvu9Ns/GaqluW
DKwSS/9eDHy0LDxe6esU//Xj2KU+tloXvTGIfbNuJbLVxtKN7aHjK+VPZKuN
pQ2BSxmu9fCy1cbQtDbzXSsi3fp9Rp8tKV7ks9UNdR/w7w8WjcqeKVb1hdFH
Ro+ZdqjoMdMaOTb6r1n9slWX/EevLJo0I94fRwU3R6YZnKJXRrx498PjKXom
KfvyW/VT9EqTgYkVFze07SjoWzL6NvuZyQdHbki5V4wo93Ghth6qu2zyxG/q
+sjdsFyZSu6UcQ2c3HhxWCLlyFHOX39yHC2sOTnTz58lUr0HZQ+2zRNHx9JP
vnogTSJ9urfsxD673OS5OWnF6ZRzxuKpZRuP+MBNb22e1OdmyjnjRIeymabe
/3/uMU77Q2B/COwPGfsj663rKPxULPJCIC8E8qK4RNKmzkf/CdC4Ji+2Zuvm
piOz8wx8s0YyZYv67Jf+s93UrvS3Y/p9mkwbJ9y9cPiYm1ynHs869EMy1c3b
6n7mZDdN7DVgVabLyXR139GkPiXjKOez69t7/5tMg9qW/2d/tzjauqTJsX01
gvQqfmXON+bEUcOqBy6lHxykpTMylux5PI5uni8R1WN1kCoUG1djT3KKPRu0
OHnX5RT986vng7SlPHTmn59+LfSxHVflLzZ8xrgDNs5DddrefCNZcf1+6fNW
72XjAd9ci5y/18Zz1/+4JTFdUPEBHjKyRQ8b342uWWfTLhtb8hfgZdeeLTl5
I1pxzfYR3SskRCm+cfFkoWWv7tPSWW9eOdTKHt+1v95L+y0nKc42rG+tLrVt
3Dpy9tCSe/yKv+twYN3D0jYuFBwTv/FJEpcZP3xOzpH3qdXqF0tLn/TzH6UG
vJPjfhTVmld+zOgJdhxe19pje245Z8c1mv3/eMb86Tk/j6Yuzb9t9nn2eO0f
9tfU4wdG+LjKW+m+X1vmPjUs9En0zQcJ/O4Erz9dwM4/N/u3UPnCvXamnAPO
Xg/N0D3lXNAh5nG2qJRzwPO5647O7mDXCzD7X/QLgX4h0C8E+oWMfjHyD/qM
jD4TfUqgTwn0KRl9KvPXc46sH8H6KRb5o5E7Wg86m0nlj1ZeyFe1ZB+VPzqV
GPt0yn6VP/Jk2XsqIkOskT/KXmnS7Do9Y438Ua02LTot3xNr5I/6DMtd6FFa
l5E/mjn3QWz7D11GnnQ8Ik+KRZ4UizwpFnlKNR/YT4rNfGA/KTbzgf2k2MwH
9hP+Ppfe83md8Q+jdT/f+vzWlpMto3U/z6rSIG+G9Q90P9dO2jSjzbMo3c8J
u958tLh9lO7nH4aP7ndnc6Tu59aV718p+vd93c8vfU0bDOp6X/dr5UJ9Dj9d
fs/GY4sN71PqNmXoOCqZp9hxnbWpQtma/9h46DsPem+dmqz4x+LLlxb618ZX
c7a5MP+boOICQ/6ouzGP/flfT75ueatpkuLeeWv1yDjKr3jglTkHzhQN8Lk1
bw2c/X4E5WiVpWGFEUlcZHHuSZ0i7tKvp78/P/+En7+alWdJoYl3aGDDrN0e
vZmiDybl3e4qcJsC5Td0uzU/dZxu9TpbR2X5IIJWp2u3fc+jBIjT9PKsxw+K
zJkcQT+EdB3lXh5P7w7fFvdHxSia1Gn1GzlS7u3r20aF/HE4mg7V3TQutnEi
vVXk0aoRVaJ0Pxr9It+v94x8N9cOftgmQNNfLSxV2x9NmxNKR2aNSKL1ZdZl
H54lmmr+vbNz2aFJdLL9rufryz+g07lqnKPnfro/7lf3reZR1KXsrw16zfbT
y/XnrmYZFEmx9RofHJPfTwUvhP/aaIbyk5Y79TO959TPdEv0s6yPjk/4TZl/
iov85pXym0ZM7dRmcIr8CL/pRt8TR9u9jjT8pjr/pYsy/Ka1//33B1TQ4rd+
/zGL34r7WPxO9fsgbwTyRiBvBPKG38ftj345IbynLb/e2xneDH50T+X322c/
rMv80V2V32L5q1Yv1eOOyu+xWr+ffv/D2xRJN3aNjLHjnhuG1y66fkWy4p+G
/bjwWpugYrOfanS5d6Tj4TDakqlf+Tajk7Q/9kW3G3fb+RVPy3jgeez+FPlf
1+rX+FY3af/4XWOnZk7U/q5bSyyb+WEib23XpFyWPTeoT8M+N4ul3GsHlh3Y
2bvc9rMY+dV3CpH3QdZ+ovPO/URFnfuJYD+R2U8yHoL5UVWn/qAqoj9kvWhg
pY7p5gy/bdaLynUv6PGG3zHrRd5vYs+1bnzPrA/B+ig23wfrb7+7yPcBPbec
1nt7Kbql/JrVfWno77duKL9OV7rg6j/sOv393rK6o8uZ81EYTV3Tem29PEHF
iWMWF1qVNklxt4YhSw7PSeKeIeED784+T82HlX1jQbnUeQPzmy/OWC7tRcM/
2iL8E36T4bdZPyMvzazvU7+rjI868OQ/3t943YyPusz1Ljg/+aYZXyp6mA/2
86DpmUfPOX5Z59vHXy1uZOYL1Dmqm//IaTsPYPvInWN7xyYr/qf+/Q7bNyUp
PvlxzkDWG3YexZVdG1vNzBng5T/7jkV9e5Q2f9AsODrCx18+Sm5afeVZerqj
QoHf6vmo4uu/DnRvcFXldY6s15Nludckl0qicS//zP1p7UuU53rhIWnP++hJ
cqGW+y+G6vxg/GTG/9oan757nrDGp1jmRzA/xZn2/bgie4r+SCg1p0eBZUdo
5p0rF787lbJeh+ZP+7Ljb9pv0Ydov8FpZ1fNfCOv3b/2eI29e7P6FY+dl7ak
v0GAj0Vf6PresM9oWNfOxRNz+fmjnCX2f1L6IPXwLyiQvDeJ+uyp0/eX46dp
Xas85e+/9JG32Zq6924fNb9PHuf4yIwvnfX7BL+v2Hwexo/9fGZ2qa7LChzW
+Vl4M12udy/+34F2Hkn82s+f/HsgWXGHVic+/rah3T9mb7GO2Yr7Fc+YdaVX
u/wBPnE7//TsHx9i34lrL4oV9PMvi5pdyPPxPJZ+kn6SfpJ+8/u0P3A+U+nu
H5P8PmWbOCZ2x8UtJL9P8PuKzedh/NjP8v1s5iffz8B/Bv5zOif/GfjPwl8W
/rLwl4W/LPJBIh8s8kEiH+b3KdTij/l9wZsZ+M/Afwb+M/Bf5yfyxSD/DPqB
QT/wa6d+4BNO/cCyv1n2N8v+ZtnfGict+oBFX7DoC75q6RdaYukXFv1Col8Y
9gfD/mDQD3zSqR8Y9AODfmDQnwz608RFGfvPYF8Y7AuDfWE4D3Azp31hcx4Q
e6Lv/HNlvcQ+kdgn8/s00Dleoy8Z7I3GdVWX8YN9YbAvDPZF5yv2Sucr9orh
PMVwnmI4T+l6yn3FxtZ5g+F8xXC+YrhPMNwnGO4TDPcJhvMYw33CvFvybOv8
xXI+40HW+YzB/hv+0m7hrznfyHnFrAfJecWsB8l5heE8pvyC9SFYH4L1UQzn
K4bzFcP5Svkn5zvln5zvlH9yvlN+if9IsfiPFIv/iOH+yXD/ZLh/Mtw/Ge6f
DPdPhvsnw/2T5b7Gcl9jua+x3NdY7mss9zWW+xrLfY3lvsZyX2O5r7Hc1xju
pypPj6z7I69x3k9Z7p/8k3X/ZLl/stw/We6rLPdVfUf/TuQR7gMM91OzPwj2
B8H+INgf5n5g+EVy3zL8IrlvGX6R3LcMv0juW4ZfJPcthvupyjPID4H8kJGf
As77p+E3Ab8Vw/2T4f7JcP9kuH8y3D9VfrNY92mV35HWfVrl96Z1n1b5lfu0
yq/cpxn8vwz+Xwb/L4P/l8H/y+D/ZfD/Mvh/dX/+2GvBkYIvbVz82++Wph8f
w+DvZfD3Mvh7Gfy9DP5ehvchhvchhvchBv8vg/9X99cyy3+qWPynDP5ghvcg
hvcgvinvQVYby/AepPZgqeX/ZfEXs/iLWfzF/MLyF5t3bvM+xOJ/puqW/5nF
P03in9b9/ET0hfjHqbTlH2fxj5P4xxn8vUaeSPyPRp5I/I9Gnkj8j0aeSPyP
Rp5I/I9Gnkj8j0aeSPyPRp5I/I8M/mYGf7PuZ5A3AnlTevAHM/iDGfzBDP5g
Bn8wgz+YwR/M4A9m8Acz+IMZ/MEM/mDd3+Jf1/0t/nXd3+Jf1/0t/nXd3+Jf
1/0t/nXd3+Jf1/0t/nXO7nzf5XTO913+y/m+y/C+y/C+y/Bey/Beyx2c77W6
H49Y74GKB1jvgYpzWO+BiuU9kOE9l+U9k+U9k+U9k+U9k+U9k+U9k+U9k+U9
k+U9k+U9k+U9k+U9k+U9k+U9k+H9V/f/MOu9VXFx672V5f2W5f2W5f2W5f2W
5f2W5f1W9cMQ6/2XB0n8i2kh/kXH8Zb1vqxxNEa/yHjM+xTD+xTD+5TRdwT6
zrxPqT4C/Wrepxjeaxneaxnerxjerxjerxjedxnedxned418E8g3gXwTyDeB
fCuGeCyGeCyGeCyGeCyGeCyGeCqGeCpuIPGfZ634Gk52xlOpfEm8p2KJ91Qs
8Z6KJX6HId6Kd1hxRtretuKMtJU4I20lzkhbiTPSVuKMtDW/I/Gi9ryteCeW
+CmW+CmW+CmW+CmW+CmW+CmVd4m/YonXYonXYonXYonXUjsv8V0s8V8s8V96
7pb4MJZ4MpZ4Mo3zMPsL4jc0Ds3sR7P/JH5D999Qp34w8Rg8wYqfowdW/By/
7Yyn4oAznkr3G+hPAv1JoD9NPAVDPBZDPJaRd8UrnfFYRt4Vj3PGYzHEY3Hf
30pHlgu3P2/inyQ+i038k8RnsYl/kvgsNvFPEp/FJv5J4rPYxD9JfBab+CeJ
z2IT/yTxWWzinyQ+i038k8RnMcRvM8RvM8RvM8RvM8RrM8RrM8RTc3bJf3li
xcvq/pD4XMUSn6tY4nMVS3yuYonP5Q+c8dYs8cYs8cYs8cYs8cYs8cYs8cYs
8cYs8cYs8cYs8cYs8cac1Yo3Zok3Zok31v0q8dCKJR5ascRD6zut2Y8Jks9i
tT6GfBaGfBaWeGxp7XuBxIMrlnhwrmDFg5PEg2uciNEXEm/O2614c5Z4c5Z4
c9UfEq+u+sLoJ4sfmh+i+uG6Ux+a+E+W+HmW+Hlu7oyvVr+gxOerPgF7QGAP
COyBiedkif9nif9niNc29oiMPTL6RPIdGOK5GeK5GeK5GeK5GeK5GeK5WfIt
SPItuIAzvpt7OeO7OdrKx2PJx2PJx2PJx2PId2PId2PId2PId2PIZ2PIZ9N3
QcMfyIdgyF9jyDfTd2AjL28687sY8onZ5BOnsfKVdP8Yeexi5UuR5Eup/Eu+
lGLJl1Is+VKKJd+YJd+LJd+LJd+LJd+LJd+LJd+LJd+LJd+LJd+LJd9L99sK
5/40+RoM+Rh8V/Ix7jr3v8nHkDy2GMlrs+vzSf6xYsk/Viz5bAz5wAz5wAz5
wAz5wLr/Qd8R6DuS/D1+18ovpLJWfiHncOaX2X5yK99QseQbMuQLqz4Z6LQf
VN9pPwjsB4H9MPkd/KbkczwV+wT5bKqPJP+Yizrz2VjyT1nyT1nyT1nyT1Uf
Sf6oYskf1bxXkwdr8l5NHizkyzHky+k7lOTHKpb8WK7nzKdjyKdjyKdjyKfj
bFb+Lkv+Lkv+Lkv+rr4DSv6vYsn/1XdSyXdmk+cc2m5PmV0p62PynE9/kefg
2bM+NnnOvHQiPfjdxybP+WRI9OW/TvnY5Dkfu9u811snfGzynH95tSuh0q8p
9l7ynEOK5R7b7IiPTZ7zwSYT0vU95GOT57x/0INF4/f72OQ5753drOiSPXZ9
RanPwSZfT/IJ2eTrST4hm3w9ySdkk68n+YRs8vUkn5BNvp7kE7LJ15N8Qjb5
epJPyCZfT/IJ2eTrST4hS/0QkvohZn3Vrynrq1jWV7Gsr2JZX8WyvoplfRXL
+iqW9VUs66tY5INAXky+OG+w8utpt5Vfz+FWfj1Jfr3GZYC8m3xwlvx/kvx/
tVeSb82lnfVB+K6zPghDfRCGeiAM9UD0PCr1DhjyudXegX4z+dQM9UAY6oHw
G1Z9Bd5n1VdgqAei50upF6FY6kUolnoRiqVehGKpF2HsA4F9ILAPBPaBnPZB
86sVX3LaI5NfzVIPg6UeBks9DJZ6GGqfpb6HYqnvoVjqeyiW+h4s9TxI6nlw
RqueB0k9D7XHcF4gOC8QnBdMfjVD/RCuadUrYalXwlKvhKVeCe931g9R+yz1
VhRLvRXFUm+FIZ+bIZ9b7e9Sqz6M4j+t+jCKpT6MYqkPo1jqw7DUh2GpD6P2
WerbKJb6NrzAql9Do636NWpvw6x6OQz1QFjq57DUzzH7QfuhHojaY6n3w1K/
h6R+D0N9EIb6IAz1qRjqUzHUC2GoF8JQL0TtrdQvUiz1i3iKs34VhznrV6m9
lHpViqV+Eku9JZZ6S2zqQz04FvZO+p8CbOpDFV311+pTKfJm6kP1GV0sw6RF
ATb1oX7s2HxkrTkBNvWhIip/fvfhtACb+lCFMi9runtigE19qI/ift09ZFSA
TX2oVb/F5C89PMCmPtTttZmmPxgYYFMfKv/Eav7VfQJmfMKnh2Z8imV8imV8
imV8imV8imV8imV8imV8imV8inNZ9b1I6ntxY6u+F0l9L7VHu5z8MPWseJKz
nhVflXpWfR381HpWio08vOesh8fFnfXwGOrhMdTDY6iHxaYe1hKRX2PvzP6A
+nkM9fMY6uex1H8jqf/GUv+NpP6b2i/Y/6a+FUP9PZZ6dST16ljq1ZHUq2Op
V0dSr46lXh1JvTq1F6AfCfSjqUfFz5z19Vjq95HU72Op30dSv4+lfh9J/T6W
+n0k9ftY6veR1O9T/Q/2iP522iN6y2mPTL0pfuWsl8dQ7457O+vZMdSr4/PO
enVGnhQXd9ajY6hHx1CPjtNs+2+9RsWwfwn2L8H+Jdi/BPuXYP8S7F+C/Uuw
fwn2LyWXeWt/3wEeHlK92ZZnj7XelDl/UaV53Vcc6u/m6cW75/urdZDWfr1i
Ycf6bs5ZLV+R3l8GKcfI8Nn+PG5e1yC8FK8M0rR++abPDri4ctsVFUufDNLj
Tt0nlT7n4l97dq8+223Xl4Z6XAz1uBjqcTHU4zLnK1qQsVynIhGxPPrFvX3u
ssnkuT3z8tDlsVy44uSaK4cnU8Nt7lZHO8TymY+KHG11IJlWjG8amiFlvw6f
c7L+q2fJFGj5c5MuZ2I4zy99T+1pEKTmBdOcWj8lho8n/Nuk/4wgrfP2rR+o
E8MDC/wcmvt8kKQep+GvqS/IYj+Uv2I/lL9iP5S/Yj+Uv2I/lL9iP5S/Yj+U
v2I/lL9iP5S/Yj8I7i8E9xeC+wvB/YXg/kJwfyG4vxDcXwjuLwT3F63TBeNT
bO6vMD7F5v4K41Ns7q8wPsXm/grjU2zWT+7Xun5yv9b1k/u1rp/cr3X95H6t
6yf3a10/uV/r+sn9WtdP7te6fnK/1vo3xs9q7tMGm/u0weY+bbC5Txts7tMG
m/u0weY+bbC5Txts7tMGt11Qenu+tbYfGM7TBOdpgvM0wXma4DxN4+v1OBEY
6JbWT8tmvs55oaFbWj/tu7Zp4OYCbmn9dOntNke/eeSS1kcJnz7M2vuSS1q7
joCpRwnnYTMf48/R+kiw/gTrT7D+BOtPsP4E60+w/gTrT7D+iqV+ifrJpH6J
YqlfoljqlyiW+iWKpX6JYqlfoljql9jvBlb9EsVSv8Smt/zzisU/r9i0UC/O
+PsI/H0E/j6t3wLzV2zqt8D8FZv6LTB/xaZ+C8xfsanfAvNXbPiTseWze1mT
PMqfHAMKHXoe6VH+5J/SYH78FY/yp9gP/T69dcqj/Cl3aEaj0/s8yp9qV7cU
2L/Bo/ypnXj+4bolHuVPowxJF+bN8Ch/WhTPuWniaI/yp0P9Gl8PGaT1MfTe
ad5fDTbvrwab91eDzfurweb91WDz/mqweX812Ly/GmzeXw2W92LFR/oPyFSu
oZ/brF/3/N5pu16AqbcF70ME781aDwTmq9jUA4H5Kjb1QGC+ik09EJivYlMP
BOarWOwSr7Xi3xSXsOLfTL0C9TtIvQLFUq9AsdQrUCz1ChRLvQLFUq9AsdQr
UCz1ChRLvQLFMybUzvlnX7+0bjo8pNj55/X80rop/sOM01/n9UvrpoItkuul
e+iT1kVta91+nDFFT1ut1h9Ru5DeGb9j6o8ohvgdgvgdrfcA60ewfgTrR7B+
BOtHsH4E60ewfgTrh+PjmDx99rZKa/O3zYSktX9eiVX+Ho78et6GNbHK32JN
sk9qNyRW+Tt7y7rPnteMVf4+ylKtx+Y0scrfXiNPNe90JUb5e+ZGh/f+Xh2j
/K1aJ7rU9sExyt+VP37xVreadt1XkE/6H/LJIJ8M8skgnwzyySCfDPLJIJ8M
8skgnyzyKa2bRT6ldbPIp7RuFvmU1sUin9K6uKTIU7TFLz4q8tTa4he3F3k6
ZPGL3SJPRS1+mfmS8MvMl4RfZr4k/DLzJeGXmS8Jv8x8Sfil4zPzP+qUdx2f
wW6nvDPIO4O8M8g7g7wzyDuDvLORF6m/ovIi9VdUXqT+isqL1F9ReZH6Kyov
Un9F5UXqr6i8SP0VlRepv6LyIvVXGOwjg31ksI8M9pHBPjLYRwb7yGAfGewj
g31ksI8M9Sg1TsDEZ4j9JLGfZn4k9afM/EjqT5n5kdSfMvMjqT9l5kdSf8rM
j6T+lJkfSf0pMz+S+lNmfiT1p8z8SOpPMdhrBnvNYK8Z7DWDvWaw1wz2msFe
M9hrBnvNcP5mOH8znL8Zzt8M52+G8zfD+Zvh/M1w/mY4fzOcvxnO3wz1pBnq
SSsdvMebes5m/iTnWzN/kvOtmT/J+dbMn+R8a+ZPcr418yc535r5k5xvzfxJ
zrdm/iTnWzN/kvMtw/2A4X7AcD9guB8w3A8Y7gcM9wOG+wHD/YDhfqDyI/Un
VX6k/qTKj9SfVPmR+pMqP1J/UuVH6k+q/Ej9SZUfqT+p8iP1J1V+pP4kg/+B
wf/A4H9g8D8w+B8Y/A8M/gcG/wOD/4HB/8Dgf2D4/ylUL14z72mWP0FaP4s/
QVo/iz9BWj+LP0FaH4s/QVo7fhHeDxneDxneDxneD83/L8HtnP4Hs/4k9Y/N
+pPUPzbrT1L/2Kw/Sf1js/4k9Y/N+pPUPzbrT1L/2Kw/Sf1js/4k9Y/N+pPU
P2bwjzD4Rxj8Iwz+EQb/CIN/hME/wuAfYfCPMPhHGPyPDP5HBv8jg/+Rwf/I
4H9k8D8y+B8Z/I8M/keNPzGt8T+a1vgfTWv8j6Y1/kfTGv+jaY3/0bTG/2ha
4380rfE/mlbeO/R9SPzxJP54Fn88iT+exR9P4o9n8ceT+ONZ/PEk/ngWfzyJ
P57FH0/ij9d7JcRrEMRrEMRrEMRrmP/fg+W9g+S9g+W9g+S9g+W9g+S9g+W9
g+S9g+W9g+S9Q/0SJp5F3ltI3lsY/n8ihv+fiOH/J2L4/4kY/n8ihv+fiOH/
J2L4/4kY/n8ihv+fiP8PXTT0lw==
          "], {{{
             EdgeForm[], 
             RGBColor[
             0.29341600000000007`, 0.057404400000000154`, 0.5294120000000001], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlTeIVVEURR931P9GLMVKxGnEjGDWMY45O+acc84555xzHHPOlZWFoJVa
mhBsRETFUkTUtTgWm7/vu+ncc87ev2TivPK5KcuylaASWFCcZff5cA/Mh/8s
ZFlHeAfwHb4TXIM/BAuZr1wly5bCV7onz7JH/LYCLcFb1lbjW58UZ3hWQ8aD
4YNAgzzWuLY1eAevAU7Br4NenN+uKMt6wruBukVxh3etBo/hL1n/IEXMxm7M
xn4XzIIvYf4y/ApYBf/NbyfQFVTlvGGgP3wU6Mx59dlzGH7E+OB1wUH4IVCv
OGI01jbgPbwEnIEfALWK45tzbcHHQkBeCj7BM9bsge/zfvhp7h8KHwYac/9s
1lyEXwKL4RV8WwZfAj5UzrJx7LkNvwrWM1+d8X74NvDDfIIN8O3gF3wz9dkK
XwteML7CfcPhfUENxu/ARnNjvlk7lfPupLjDu8yZuTsBmjMuY3wefguMZZzY
3zvFG3zLZ37bexboXhQ1sBae6dkbWD8PPgPMNN803XS59WLcCoxIEaOxWgNr
cRQ0gf9mfgd8J/gDb8b+WfBJYDTjcjAxxRmeZU7MjTkwF08Zr0mRU3M7HUz1
reAL99Vm3A8+AExgXMJ4YIoetBfVgFpoAV4VoobW8qTfiiOH5lJNqA1raC3t
QXvRHij934P24j3OHMnvZPNj/XnPfLUFdjF+whm74LvBsyoRk7HZs/buJ9Zs
SdFT9tZz1uxNsce975nflGKNa9Wc2isHdfKokbWyhtbyPuPRKWIyNte41hyY
CzWpNvUAvcCaWTtjNva/6ihFDs3lNDAFrsm0Z34w+2/Az4KG7H/N/Dp7GbyB
z3BPippYG3vEXvGbczkxdYGXGS+8KegO7wGaFQXk7cC3QniG3uEa15pjc21M
xqam1baaV/t6gt7gHd5lT9gbY0E3c0lON6fQjNopcMfxFDk392pErRyz/oXw
FL3FnJrbjmo+hcfpdY2YH5LCE/VG97jXMz3bnra37Wl7W02rbTWgFmpy53L4
CnAzjxyaSz1AL1Djal0P1ovNWdn/GlkrPUvv0kP0EjWm1s5Zr0JAfsEeKYTn
6D16lF5lz9v7vsm36cl6sz1n720FC1JoXu17hmdVqCn4YXAzRU/YG2pabeu5
eq+ep/f5Rt/ahfkxKXJm7vQ0vU1Nq+2vvG+82rUn8siJubHH7LUjYBF8DliW
h+fqve5xrxpTa9bYWrvGtXqMXmMP2AvGYCz2tL09W33n0dP2tv8J/jeoYbW8
2JzmEZOx6Xl6n3vca0zG5hrXmjNzZ47MlZ6r9/4D3fLmog==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4137133536108868, 0.2665690098242754, 0.6985044832330225], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkr1KQ0EQhddr2LspbPIEESIYf0Dw+gRWgiBYWEURxZ9YqAEFIWDjMygW
eQgFsdUujWClaJLKUrBNoUX8DjPF3O8wOzt7dvZO7pysH2chhAVinHjkswqH
8M71PcyIGjrBUWZaubUYwvtYCBuwmiyv9UP0NroJ+zm16B78Yk+BHsB6mTwL
0/Ammu7AK+Kbnl04VbI+VXjO/go1Z/DSay7gm/e8haf0KqhpwZp7q8N+snr1
/kyW/0jmT/2PYMH+CnoR/uSmlRt4f50z457l/SDZfPbhbLKaObhUNp9tejR9
bnuw5+fq/KHP9g9uySv1y7mF9Ap88jvqrh2fzwuc8Dn8RjtbffRWbc9rTlqT
HkXzJG/z8Nr7aN4tn9Vrbm+jN3rgs+me5X3X598oWUjrTbru7TnafHUv/Qv/
HH5D2w==
                "]], 
               Polygon[CompressedData["
1:eJwt1DlMVFEUxvErb2bem0E7hUYxQ+EGuCSuhYM7OGOFGik0KgUWDJpoXEox
LoljKVYa1EILLbCFVhNtXHpGI8WM4oJ0qKD+P88pfsnk3fveuWe5k+8703O6
IYRQRApvkhBe4zleoBV5bI9CKGBLNoTN2IGduMHadQzhCp5hFGMYRxf2YQ/2
4hvf+Ipufu/HLVQwgvtYhIWYjUP4iTK/B1DmcIOY5tl3vMU7nOAMx3GZ30NY
lglhKZ7wzlO0s9aG9diAKnsm8BGTscUc8RyUy2/8whzmcQHnMYw7XhPV5gEe
YgY/cJWY19DJGQspe0fvlnhWRBoZdBCzHXm0Yp7izyFHTRojO6POWmCt0/do
bwvPlmetZqrdGmK04UM6hPdpy1m5H2StB1uxzc+ss1/EJc9Juf3BX9+jvY+I
/RglYhRxk5gVRKw14C5r95DwLMZLYr3CF55NRdZj9XoJ7y7OWk1mPKZib+Ss
m1I2M5qdJr7RjGOsHfUz6+zKSbn973liPVfvKz4rC3g3IIdGlDGAfpzCOvas
TWzGNGuT3usa6vhMrT+hSzOIlexd4TOuWdeMa9ZXYTWaedbkM6nZ7OPZSRxB
b2QzoFlQD9QL1Ui10hl0FsVQLNVQtVQNVAvlrNzrqCWWk3Kr+1k1E5oN9bzF
a6rajvvdmkA1sRnRrJRwILYZ06yN+l2s+t6axxpmz20c4luHszazml3ded19
zYBmQTkr9wx7097zxO/krN/Bae+heqmZKfk39W3NeIffSd3NMgZj61G/31nd
3V6v5S5i7U6spzn/j9F/jWZQs3iW3+fwD4dyjMs=
                "]], 
               Polygon[CompressedData["
1:eJwt0L0ug2EUB/Cj2ipiaVxAJQ2lTGol8THQTgabhIoQ34PByj1IXIGFxcDK
SJhFlKVj3QGJ+snb4Zdz+n/Oc9737VD9cPkgFRGDZHjJRqQEY70RZcZ5kj3y
QKsr4l49y0WcssOaexvpiJ/uiJp+Szbt9wyFdHK+LWs5/+KCiqwsG2aEFTtf
7X7Xf/PDNVe85ZKzopk5/Sw3nWfdqSed92rIl/RV2vpfSr3J95zLRs2WmCTv
blPelufVKXOZnogsNaosUnR2qd6q//9TQ//BJ/vscdyT7BhQN+0umit49rq+
zoJ+nolc8t1NWT995Drzq+qz+xV7jrzLLnv8ATNuL6Q=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4864414824148776, 0.39302358449215674`, 0.8007326664076604], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkbFKA2EQhFeT++8KS7Gy0M43yANECbYWkiZNwFY7CwvBFwg2gpWFhY3Y
KAgBwUII2KYQSxG0EZ/gkPgNO8Uyc7tzu7P7b46P9g6XI2KL6BDDEvG7FDEC
d5qIXXID8KeTfKMb0SdO4GfgO3EOn4M35pfglfkt+Ol/1W/gnup3T/TgU/DR
vE/9r0kPLbgwV25szQF4ag8PYFOjQ1Pq/Fb+GNxmhyfyNfhR4Q/+Ba5108M3
fdbNlautn1XpW/6139BzNX/uvHZ9LTlX84s9LMhde9ZdlSGu+W/mqrdVzlpB
/+w+6rdaUiPtzBppR36XCfhi/bTkG2hf3ePCGt1Md5RneW99w33q/3bbSPY=

                "]], 
               Polygon[CompressedData["
1:eJwtlDlMVFEUhi8zk/dmAkyn0LixqCi4kLgWzkglMkaDS8VMFE1Qw2ChBdNo
hLgkYukgCWOhiVhooYk20mojxiWRyqGAAjRR1ELDovH7c0/xJTf3nnPeWf7z
1nVf6OyLOOc6IQY/Qufm4QN8hDmYhb8Y/YMtnFugDuohH3euF/I498FNzjdg
AAZhOHCuCKNQgiR31bCA72LofeQ7xN1tOJVw7iRc5W0AjnF3FPbAXqiKOlcJ
WcjBJHyCuzACzcTaHLOc4Bk8hZcwDmd4Ow1dkIWD3LXHvY98Z/jmtNWs2gu8
9cMO3nbCNs5b4Rvf+g6bqKkJDsMRyJN7L/TAWXiC7WNo4K0x8DWoljF8H0E7
HIAodzFIcd4HTYoNu4mxC/ZDG3xlBl8i3ke+96AU9TkptxZsmmE7tMIcd7NQ
wTkCtZxrbAaaxQQ1vgl9zsr9NXev4D48gD/E/g1LsAwZbDrgFj5D8B6bd+Yj
30PcZeAhjEEVtpVWg2pZTQ9WBb4n6k091MV9zapdmlgwDUqLU1C2mWg26mGD
9Vy9X0nMFfCTGL/ivmfq3TQ9moEcd1nTkLQkDUvL0pC0dIUYl6EfCnCCWMcT
XuPSesHeOiAT+Jn2mEal1TQ2KatZtWdNW42wPuY1LC3npfXQ56hcrxHreuA1
JC1Jg9JiLTY1oe+xev0Wm4nAz1SzHTctl2Eq7ndq1GxkO2i7J41L62vxWWM9
Uq9ytjvn4DwMY1s0jUvrraYd1ZS2nJV7NSRDvwPaBfU0ZzmUTWPS2gt6+zzi
Z6bZLZt2UvikYSM2G2zmmr16oF5IQ9JSGdvPttOTtiPaFWlW2m2zXVCP1KsR
233FVGxpvMI0J+1Jo9LqRc6XEv6fpX+XeqLeaOe0eyXbpSJvd0KvAWkhabUv
kuMS/Aclp55X
                "]], 
               Polygon[CompressedData["
1:eJwtz7ELQVEUx/GDR28wGIyIgX/BSLGIIoPMysDAZjAwMiCL90wSZfcGpZTB
v0FKsVkpBr6394ZPv/vuPfec+2K1drnlFpEAvOhoIl2VuogBEw+PSI69G3nG
BQnq4ohq9lmILPlEiqjg6RKpkgXk4cOBvSx5Z9CG9ZUM8x3BmDkjLDGl34J+
aaQ0+y3qTRnWa9Yr3b6regS52+Q9DdSRpM4i/c48NXdLvYW5ZvdWMwYY4sv5
Bz+F+hO5d/rsyBfemDj/NCMNmKrOuXMke+jjDxccLnY=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5591696112188683, 0.5194781591600376, 0.9029608495822982], 
             GraphicsGroup[{
               
               Polygon[{{1986, 545, 1981}, {1760, 533, 1857}, {1752, 533, 
                1756}, {897, 33, 826}, {795, 33, 806}, {1881, 533, 1879}, {
                826, 33, 795}, {768, 21, 789}, {1756, 533, 1760}, {705, 21, 
                768}, {1981, 545, 1916}, {789, 21, 787}, {905, 33, 897}, {
                1887, 545, 1898}, {909, 33, 905}, {701, 21, 705}, {1916, 545, 
                1887}, {1857, 533, 1881}}], 
               Polygon[CompressedData["
1:eJwt1ElIVlEYxvFLfeonaG0qFbKB1ErTrKBxU5mLTKOicaGSGDSQQjSQi2yi
Acp2+RlkkJFGw0KjSGqV2CajEiwXqVGZFTQujDTo/3SfxQ8O5557hve875le
Ub2hakwQBPsQwZ1oENxGZnwQZKEgMQhWIjUhCNIwF3mYgQyUjw2CMuzGHvyg
7zteoht/6RvFciZfgRLmKsY5vp1PCPv0rQCrkMPYbLxjU+9xg3YLUtlTGqr5
pwrjMB73GXMPfbT7sRYlaEaLxvLPXlQxd3UkPIPOoj1oL3nIxXwsQA1jD2Mh
YxdhPO1x+MM/I/jCWp+xmj0VYTAuCD5gCrGaiheMfY5OPMEh5jiIetoxjDJm
BI/RgbP0ncEJnEQcImhk7itIRpJjrFjXs4eL2Mxet2AJFvuOdFe7sBPbUZEY
xkix0ppaWzFSrN7hvak9hE9I5p8kz6m5q7DXc2ruZextaTS8E91NOe0ybMQm
1LDGYRSjxNRehcL4MGaKXcRnvUS7AbNozza1ZyADz/inKz68I93VL/p+4hR9
px1zxV45q9xVTim39jP2QGJ4Z3+ck8pN5VCq71R3Ow/5+MoevmE6/0zDJKSg
i3+eJoQxUCxirFWPy2hUTLn7ESTRTkYOsrEO63GHb7cxgLfoY4036MEroa8H
V9GEMnKlFFmYiTbGtOIB2lGnMyo/+HYlEu5Zey+ib41zrN45XOOcUm5VMnYH
anFE8+IujuOY+2rd1+acPeSaUe1ozTrf8UbngHJBOahczPPboDUqfQad5RZu
4jV6MZaxY5xjyrUO18IDtJvatTiKdP6ZjElIMbUHOfNH/Maw3xi9NSm+O+WI
cuUThqLhmlq7m39f4jqaHeMsr5HuN6jAMVFsMvzWKSeUG3v81ulO2nyHPc5h
5bLupNFn1tkbEIuENa5ab/baMX/TG6O3RjWkWprImSfEhzmh3Mjl25yI37Bo
GJNa15hq7RF9D9GHflxDUzScQ3O1O3eGHasofQnoZO4nceEbo7cm37WgNz/T
Oaxc1phO5/ioc3jAb57evkbXgmpUtao7GXSOK9f7vbch34VyVLmqM+lsqhnV
Tit9bX4zO32G/2dxbaiGVEu9ziXdoe6y0G+LzhT1m6C3QW/wC8/Z6hgpVtv4
thWlKMMF1LmmY+4rdd8F1/A6/6N//wHd+O3x
                "]], 
               
               Polygon[{{787, 21, 766, 780, 781}, {1879, 533, 1856, 1869, 
                1870}, {2355, 2354, 1856, 533, 1752}, {2025, 2024, 766, 21, 
                701}, {1898, 545, 1922, 1902, 1903}, {2084, 2083, 831, 33, 
                909}, {2402, 2401, 1922, 545, 1986}, {806, 33, 831, 810, 
                811}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6138731190118498, 0.6079854775726915, 0.9106397784940057], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlUtolVcUhX/z39x7M4gGrDHx1SrG2Cb1DT4nWnVQm0gD1eogNygWqpLr
pFW0xfhCEzQ6q7HQCKYYi8aBKS1KBGMlTlqxBhpFGxXT1Fior4FiIn7LswYf
/Pfc89h7nbX3mbguW1WbE0XRQUhAUzqKjsJ22AFNSX7DD9AM05j0IdTyXxYW
5EXRfPgIlsLaVBStgdXwuWBsNUznewacYe1puAm34Chj36XCHM3tjaPob/gL
euAIZx52DE2OQbH8AdfgCvwG5+EC1LAmA5tgM1wkuQ64BJ2whDMXw1JYBlOh
FMbDBH2zZgqUQTnsYs862A474C4598JDGICFzFkAY2EcHGasEZrZ67jP0Fm7
YQ9c5L8O76G9epzrMfgeKtGgAg6hSaM1lJaVsDIVNJbWxXyPgSWw2JpL+2/h
G8hADRTACBgk9qFkiHGsc1SuF6ydclSuu5Wzc1Ju+4hxL2wg9i+cU7PvUHe5
DbYmgmfknXl8z4UM3zVQxZ6fwhpYCz+x5yko5r8x9tBbL7FmC7Tz3zk4r9ji
kINy2QibIEvutfAlbMwLMSm2ap2ZCHM0NwtbIMneuboP9joOw1mTb8/Ku42M
HYJ6aIhDjIq1GjJwlbVd0AI/QgGMgFfSNBU8I++MhiLdL2MdvgPdxTHGmqCe
NQ2uKdWWNJJWDT5bmkv7Tns14ntYHO5cd98Kp+AAMe2H6+zxJ7xmzlAcPC1v
TyenaTAb5uQFDbL2QIFrULU4GUrsIXlJnpP3Mtay1LWhmOvtAXlBHhp0zan2
BlwLMWsT8A6xjIR8aQ3t/HfOnpf3dQe6i5l8z0oHj8vrX7H2a7jLdy88gL5U
0FTa9rPmX1jOmcsgDXnqA8z5PRU8IW/05FJPcAJa4Cn/PYEb0A1nGWuDe3Af
3mOPd6GNWM6mQ42qVndCHQwxZxDymTMcJnHGRBgNRfagvLgO1luD2B6T15Sj
cv2f2B/HYQ/tJU2kTZ9zfQgDqVAzqp3PYBWUMncKlEG5e5B6UQVUJoPG+e55
6n3rHUsne11OhTVlrsEqr6mwhtJywGerR6pXlnDm5HSoCdWGPP7KGkpL5aBc
VjDnk3SoWdWuep56X5G1ecb3c/hZNe0eoV6hMf0nD8vLm92rVfPtrnnV/gt4
CYXMGZUMd6q7vQpdvhPdzS2/JTegOxFy7nQNqhbvqWcnQ49Ur/yVHH/JCR6T
1wo5Y5Q9K+92e6+T0AorGPs4Dj1EvaTEtSMPyAv37aV/oD83xPzCNanarLOX
pIG0kGbSTm+o3tKbxNYDt+FOMnhQXtSdl7oHVfsN1FuonlnsHlTgnqTeJI0K
XROqjS5rtUhvVDr0XPVe9Yzr7mnqbS2uFdWEaqPcb98DNOrLCTHdtobS8j/G
HuUETaTNNb/F6jnqPR+w5/v2kLykHhZZ40K/cXrrNEdzVdP9fvP19s9x75Im
0qbVd6Eeql7ab61Vs6rdVa4V5ahc3wDAlR9W
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6673451223818831, 0.6939001082451417, 0.9118587754748212], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkz1oVFEQhW/27Xsv28gKErB7IYRAUCwMpLEQIRsEMUFSpBHEiKKCG4So
KNhliwUtFELQMkiIjVVA0aAIIhGJf5VgoWAIKloIglio32FOcTln586dOXPm
bf/x9pFztZTSFCfjPChTqgisgsO9Ke0ldpuLQXPFOvWUbsKfgru42w4fAld4
M8jbCXCrIA7/Cf7OU1rqSWkdHOL3Y/g96hyGv4NfKSJP+b/AdoNe8A3qbFNv
6u8Ae+g3A2+B/zgr8D/gRhbaFsC35oo9ct9F8Ad1+6g5Ts1v5op9z0NPP/yA
6//l7R3i14h3wFNl5J8Au+i+SM4tcr/YhzXwZD3i89xvluHlxzKO+H3en/Fc
mu+Y59J8nz2LZpqy/0fBJTRl8GVw0nHdz5bh1VmwYS6/O9bczcNfzVUVMbP0
a46uc+6CN6z5NHjJ9dXnuj3Uzvc0QsMr6sxY8+UsfJfmT+AT+/wyjx2Ly/uH
9kc+vfcsI9Rree/a/6LzVWPc8X1FHPH94AX3bWfhrzRrD2Pel/Z2yPxgPXqo
l7R/sE55/Maza7ct5+vdM+uU3srf51Ye37fium/aZ3m/Gx19xAfA57XgL8Cv
/pb0TQ04p8riTryAj3IqeBO8an4eXPAutJM5zy4/Vr0X7WezFv81/ecK15eW
puvszKKWuPos2/PXRexMHsrLCf9Pp8H/Qtd4Rw==
                "]], 
               Polygon[CompressedData["
1:eJwtlDlMVFEUhm/gMe/RgDbKYCJRo9HE3ca108pRE0hwKxiXEgUal2gjNi6J
jJ1D41BoXOJSDDaQmUTUSKuQQKEO2Cho4kYBEeL3e07xJSf3nnv2c1ec7Gg+
WxVCyEAEZ6pDaIci9MOu2hB2wl7YB2viEFbDSuRVUA91riPdPHd34AjyUXiT
CuE1DMAg3IYc5KEXJpIQKjAF04npSPcKdEOZ4ErwEoZglCBH4AE8hHl8/YVf
8BuWYaMRFsFiyJDDfkghx7BQwxuow3Y9TPNmKjYf8rWUsyUwhs44fOfsW5XZ
kK0N3K2HZmiBPs4KsBXb2xLLSbndhQLc5+xeYjZlexDdAZiFOThNjU7BEDG8
guf4fAaT8BlO8DYLrXDYc1Au8inf8infP5B/wh7k3fAI+TFcRr4E26nVjsh6
WvQYFMtHYvqgPsAk9BDDLThHTOe9x+p1A6ThPbbewVsYhq/Y+AKfoAK9nOXd
p3xn8dkGa2EddEEn9HCXSyxmxZ5BPgBb8L3ZZ0yzdpyYjkEbZGEGnT9wDfl6
ynJUruq5ep/2WKUz4zZleyM+N0X2Rm+Vg3J5oZrABbjoMSrW5dDkZ7pTTsqt
D7kAT+CpcuGsI7GclJtyUm7Ske4hYjlYazVVbRWDYvn/JrGd0m41anZj2xnt
jmqgWqhn6p1mQLPQ5LE1QDqymWj1nqv3ab9TT9SbFp9V1VC1rHivxmAcavAV
+Q5rl4e9t5pZza5mUrNZgrLvmHZtBEZj2zHtmnZQu6id0m4VOetPLCflphqo
FgvczfufoL/hJjHcgG64Wm1/gP4CxaTYysgl/yMm3GbRz3SX9dnI+d/yD6lJ
op8=
                "]], 
               Polygon[CompressedData["
1:eJwtkk0ow2Ecx5/ZbM3JSpOitrJ24bSjixTl6iRLxpbyupMcRGzLweKiduBA
zQE1XKgdWHFAKe+1idUmqe2sUFs+j//v8On7/H/P7/35u0fCfdM1SqlWqIWo
WakIdICL7wU0DB7OAXQSpqDXolQQWzcahRhckOgcTNw7ubvkfG1TyoeO2/GH
EOQolIUdWDUpdY+m8SFMfeBfgjLcWbFhz6FvkIdfnH6gajbqm6j7TnwRPiFD
vhJah68drjgnsX2jX3w7yFdP7grnKjTJnHreZmiBAjn3sL2gT/AMN5JH56tA
FbaJ34Jb6TOJ+sk9AP3gwZZCB8HFeR4NwDDsy+x6B4dwBGPUmaXuKDoEAQjh
6yS2S/L6JV7nmbAZ89jRCLWXYA4eyTuDJpjFR741dAXielZ5m/83gkbIEH9m
M/rTfabRA2qnLMYO9C5etcIubEifCdRtNXbuRdugHTqlhx55A/0WMflPFmGd
2GWLUVv30CD/V1D2r9/BCw5sefo5lRgdewwnkOM+C5sy4wNapE7BauxK76zM
+Q9e914J
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7208171257519166, 0.7798147389175919, 0.9130777724556367], 
             GraphicsGroup[{
               
               Polygon[{{1790, 510, 1781}, {949, 56, 877}, {1637, 494, 
                1682}, {1635, 494, 1637}, {992, 72, 1001}, {1018, 77, 956}, {
                1111, 95, 1059}, {1055, 95, 1065}, {1653, 489, 1666}, {1041, 
                72, 996}, {1587, 471, 1620}, {1585, 471, 1587}, {1114, 95, 
                1111}, {1666, 489, 1724}, {951, 56, 960}, {1044, 72, 1041}, {
                1660, 489, 1651}, {877, 56, 879}, {1023, 77, 1027}, {1025, 77,
                 1018}, {1734, 510, 1790}, {1690, 494, 1681}, {1627, 471, 
                1619}, {1729, 510, 1716}}], 
               Polygon[CompressedData["
1:eJw1lV1MlmUYx5963/d5wA5QTwS1FsnqCM1qi0paHaTVpK/lrMwWCMs8SMUt
Fa0ONF3YltkGoSeiBX4U5RY0FQQTNSgrId1wpQNppSAurdbHhH7/7n8Hv/e9
dj/Xfd3XfX3d+WVLn3rl+iiKtkAaNvKzAb6AI3AyjqLv4Cycgz+youh3eAu5
GlYnUbQKnoAnoZW1C9dF0SgcQx7HWjb8jPwL3IZ8K0zLjqICIzkPJkMlZy6H
zZzxLnyO3AKroSoddKQrH+TLNtgKa+E1GIYhyKATw1TkKTABJsLznL0APoYm
uIxPIzAH+eEk3El360X3e+iGLmiARp2FTh08i+3nssOddfenYR50oNMO/TBg
+u2TfJNP8i0HxsO+TBR9CudhEGaxdh88BLPhQXx5QHGEG+KwJ8c60i1KRdHd
MB4mwE/EaBDGlEzsHeK/zTFULO/ChzvhV3SvpEKOleujcAzu51sx7OXbR3Ca
tVOwG/bAj/CDz9BZ/8Df0A8DtiFbB6E1HXKi3NyDfC9chAv26ZB1DnpN3x5D
twRmIN+eDjWn2huA87CDtXpogk+gDN1SmA/PQBYkUI/vO1IhBmP2Ub6+Cetd
46p11ZhqTTZl+1F4xDrSfQ+2wMuwBGqhxmv6tpy9y7JCzVY6RrutU+uY9DuG
iqVqqtc1pdpaYtsvQmk61JRqaya1dIdqC/lxeAd5cxJqQrUxBXkqlLBnrn2W
73Ngttf0TTZmuufUe1Xupa3unW7WuqAcmxXZIeaK/X93ghGGwyWYSyxL4LM4
9LZ6fC3yLmj0jNCseAOd16ESVkCr9pGGImhG7sBWOxyBTiP5OHwJb6OzCdbB
eudQuVTNqna/Rf4GaqDWNa/az4PJqdDj6vVr3Gk0CTbW2Sf5NkQ9XIRLMAL1
+LwddsIHcVjTt3zkW6AMG6WeYeM8IzQrXoLFSegh9ZJqVrWbj3wzTIJc+Atb
f0IXdMMa1qrgVVgJX3HnboiREyiHRdZZ45gr9sn/tZ0KuoUw3TGoccwUu17o
cYwUqwPY3g9D+DqchB5UL6pn1Dtn0OnzHu0tgGm+g+4y6NmkmCl2ub7bIvuq
GaFZoRmrWduRCrlWzsdSoSfne6ZottzE2o1wFp/OwW/4dBVOwekk1MBxx0Sx
WeFa0owr8p0L7WOBc55nm7Ld6Fk9idzlxqFH1CvqIfWSauKaz9TZe7nTHs9g
zeIDrO2HZmiBw6x1wNdwIhNmsGaxcqrcnoE+OAk9mbCn2W+i3saj0AntehtM
u8/QWXXsed9nHHaNqFZaoS0T3ky9nVfgKgzDkN+sy67Zne7BXZ6RA9aRbgux
aPabpLfphO8yqrmYCTWh2lBPqjfn+S1bCC/ARnQ2QDVsyoSZ2+Q3QG9Bj+/+
ITTYpmzn6K0ykuWDfGmwrmzK9mL3UjlUqL/0FsMsKI6DDwvdg+pF5VS57XPs
K7xXb7re9jbHTjGts8/VzrFyrZ5WbxfC9DjMPM2+Tueq2GfrzdXbq5mr2bsS
nVXwL/0eSfw=
                "]], 
               
               Polygon[{{1779, 1778, 1781, 510, 1729}, {1682, 494, 1690, 1696,
                 1697}, {887, 886, 879, 56, 951}, {1059, 95, 1055, 1049, 
                1050}, {1121, 1120, 1065, 95, 1114}, {1651, 489, 1653, 1607, 
                1608}, {1633, 1632, 1681, 494, 1635}, {1027, 77, 1025, 1094, 
                1095}, {1620, 471, 1627, 1632, 1633}, {1050, 1049, 1001, 72, 
                1044}, {996, 72, 992, 985, 986}, {1582, 1581, 1619, 471, 
                1585}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7731007912011785, 0.8504893963881272, 0.9093405429241936], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkj8ohHEYx3937/veGwY3qJPBdcvtrpTVYLnRfBlEmXCSRSbhupSFrnRl
VAhJBhYppRt0ym6hFCkW2Xy+Pc/wu8/zPO/ze/58f1eaXpicz4YQxjgRZ46f
MtyEjTiEVewm7JJUwO4h/oi/g92GW56zAb85J8pJQjjOhRBz5wyu4TczIezC
3jSEPPFpmMG/Iz+X2DfltBOrpZrV2Gqp5hf2KXfK3K3BD+KH5L/CAa8Tw23m
q2C3YMvnPIJ1vi2T34D73ktzPXj+Huxj1hvi47Drd7VrzfvOwkvvewX/EsvX
vR/fXRoMuoYlOMzJYw9JN9dQWi7iF7FHIzuy48j0km7P8BZSLnzS98XjT7CK
X8BeUjxr9dUn9jr9kb2Teo3AGZ9Hc627DtIj8n1/sTuug/S4p25F+/bwLWe9
1HOFU8SeSK234nV44fHz1N5V7zuVmq+47mU9/pazuqrfSU1H6fme2J7a9zpr
/wm9qd72wGfW7P+/8E22
                "]], 
               Polygon[CompressedData["
1:eJwt1UtQjWEcx/F3VKfTrsIMXRZUw6p0sUHZKYtQI1KrTlhoxqWaEV1YsMFC
ZYWNQhkZl6EajXTIrdxGqZkaLQrj0sUQFkz5/jz/xWfOO8/7f///5/m/z/uc
ZYF9+XsXeJ63H6GoCvG8g+hAJ8IjPM+HSEShwOd5W1GCAB4giNu4gwqSlKPe
73kNuMTYRbTiCkbDPG8EbzAQ5orOUyeE31BUKgdysNFyKncNajFBznFMYgpB
9NiY7nWSowOHUR3qYhSrNWgtu8mxCw1otJw1VlO1jzKXI6hAJZoYu2Br0FqO
M3bMYhQbsF6UYice0cxePMUz1BBTbT1Vb8uY0x6UIIAMnkm3nqq3/cy1Dy1o
xUt69ALz6pXP0XUkv1FIwHIkI8Xnaqp2P57jZ7jnzWIIw+ggZ7v1TL1L45lU
m0OG9aTB1txkNVRLz+jZGWpPh7maqj1g7/IyWnCSsRMYJPYtVlJzBRLpfRKW
cm+Jz+0B7YVWW6vGdO8BY0Fbs9berHeADGJWo42xq7iJW+hHH+6hO8ztGe2d
TGRZT5JtjVrrD3J9xyZybcZ93kG37RntnSjb6+uQGeFiFLuKe6kIspYe3EUX
UsiVjEQkoY7YWqwhdi0Wch2NOWLnw11O5d6AbFzjmTbEEROPc8ScRRH3ivGb
sV9+11P19gY5r+MdxhBLTEyEi1Fsl82tXe863O3JUtvz2vvnVcPmWGc9VW/V
E/VGc4izOWvuY1brAz7aN6VvSzmUK54acdjCHPIww56bRq56jPf6ZjGJKZ9b
k9aWxjPpWE+OLL/rgXoRwbXf79653n229Uo1VGtW79DOHJ095cQe8LszR2eP
aqq2ciiXaqTZHtRe1J4ctG9M31opAijEDr97R3P2zejb0Z5NtB6r11O2lhl8
Qz0xp1HFvUPWA/VCY7r3lTl9sT2mvZbPWB4KsA2fyfHJ1qS16czU2dlEbLP6
rh5iBKMhbo6F1jP1rpiYImxHodF1AhLtjCmxGMVOYBxDGLY9rb39v4eI5ToG
i7DY6DoK0ZYzwWIUm4Ns5Kr3FqNYzVlz1zegbyFgvT7DdaOdgWV25odYDuX6
iz82xwnrQZPtee39XjzEYzzBIDUG8AqvrUcjNjZo/2H6L+tB0Oha/zn67zml
M8vOFJ0t/wBVH/GB
                "]], 
               Polygon[CompressedData["
1:eJwtkjtIglEUgK/61w8tWYvQIoI5Fjm1FDQEERQk1NgQBbb0IJeosVJMaKiQ
QmjrDZFEDVZo2QONHhA1NDT0wBI0WiRq6LvcO3x8l3PPPee+XH3DviGrEMIN
ZbBoE8KLI3gKpuGtXAg7SRWmEDnGH/AFRWgj5mCuxPgeDMbP+AVeoYH1DuqZ
uA7q4ZhGR7AEYYsQy3iGuIe8fjwBkxAzhJgjFsXzsAAJ6iORxGk4gzjrd+EV
1qi3hytZ7ySvEVdBNYRZOEEsiE8hbai4nK8BO3NP1Osk3gHtOj+EezhnN/Sa
6i6suESfBP1+cAaysj+sQhACzK3gkB7L2CxEoJm7aYKWclXDhgv02abfIf6E
PLTSx0m/cdwFPngk/gCb+n5ucU6fPY8LUAQDToR62F9y/uCWc95AVL9zBteC
G1z6Dfw4AGM2dX/yHkfwBevPDbU/uc9vPKrfX/4DPwxq5HgAPMzt4APYN9U5
5Hni+ApnrepvyD9yzfidmm+G2rPcuwVfkuuVb42TkIIN7msd7vSf28Ix/Z/k
v0rJ9fAP7y1h9g==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8211222794294132, 0.8665032831343766, 0.8878269592315668], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlEtIllEQhj//27eo1JLCe2iZuQixyDIVywoTqbBSEynIJBVBUyxLyGph
RUQS2jZCCCKE6AaRUBn9kbYJMbr8EYEFbSIyKySCnrczi+F5z5w5c+Zcsxo7
drUHPM87gwUxP+R5O2AE3op4XpjOV3Bz2PPy4jyvGq7DFqCLYavvebnEdMJm
EmQy9lDQmXQDjCdXBXoa/QgrQkc1mc01ht5OrkRylsGA+VVLKe3f6Hw4TB3f
iBmEdbTL0A1h16eYVbCUOjKpZwusJG6SmG7Vb7oYXrM8yteEvUE3whbzt0Zc
W/4auJa8s+TPg2lYFD0f7qbudHQ17GO+ZObthePUPYR/Au7B9qOzYSN2FN0G
L1iMYi+ZfyDkTLoFRrVmangAK7AV6CpYY7oS1lp+zVNt9WTDq9SRTj1X4BhW
gH7uuz7F/KD9HktFf4RvTcsXxUjtjQZcnOJ/ak+DLqYcVjFfk9YOE+18dc5F
9CWjC+Ec7evoGLxp90T3ZQnJY/hTdNa0E/DX+m7ftf9DcCPjU4gpgYuwBHQC
nAq6uWKwHytAX4Z/Au6+BdGHGf+FPF1wHnlT6FsI5yxGsbGAy6nchbZX62EL
7Vz8OfCU5dc89+3eHtO6Iu6s44hPs/1frrOzseeCrk8xQd/Vqpo/wxNW2z3Y
bvEa95D2X/y34Tbb2xB8ZjUM6k1Znaq3nnYG/hr4xMbOwqV2RjqrcTtHnWeK
7Xku/Grv+lPEmfSU1mQxSTDL3lQBfBdxZxSDI/a+bvjubqke1TVsWvduse2J
9uYg7VT8Z333NrQnPXADloEu8V2fYvrhGvsHNsHJgLtLUwF3R7UurW/U7rPu
dY/tp848yfJMRJxJa/4cW5fW59l9+78m2h+UE66m/Zg8+fAu7Ys6C71xrBx9
AA6Y/w48ju1Ft4VdnPwjsBtrQB+B38Mu54z+TPtP6iJuDvmXwWb7x+rhS3sv
r+ELe/u/w+6PU0wr3Gf/8E641f7hIthl83aE3Xjlmdb+m191zYbc3xWPLrR6
VNdT+4vOw9MWr3y9WCf6JPxl9ehPmrF1rWTsoMX0aZz9Xfrn/gHKK7PA
                "]], 
               Polygon[CompressedData["
1:eJwtlUtslVUQx0/vd8/9ejGiBRa09NawKEqIkVJRqy1FCA9DbLUN0VqM0ZIY
YxRBjAF5LPABKgsQNlKisU0EfLUY7XUjUkJExRYUUIPBhYrgo60CFhMJ/v7O
LH75Juc7c2bOnHlMfmhZy+OZEMKLkIWKXAjlcDKG8D1MKA1hPFxO+cm3nk23
QQfyUng3CeEdKCBXwRfIn8Mh+AxK8yGkUAbj4Hd0f4N98AmcxcYZGIYROIYz
EzFVDieQp2L3OqhGdwrMQKcGVmDrSZjPv3nQAq3wJ76PwChchEp0JsEoey9C
CWsBymAcXIPNUyyNwmTkR6CxJIR74THkZmw1wUbYBPXYKOBXFTSkdifdrQFm
wWnO/BnOwq8whjPyMITuMFyLfBJb52Ea8iAMRPNJvs3ysxbAwrz5IF+Ww2rk
66P5Kp8LyMugnX9z4AHkOriyxM6fiZzg40R8LYcrkLeztg06YSfUJxZrxbwO
OYuPS5GbgiXELva8Ca/B69AHH/qb6e2a0WmCPLEdA7ms6eqMRcjn+XcOmvl3
F+xD52N4FXbAJtgIL8Nm2EsMLuH/GXga+QBr/R6jQc9J5ebXyhW/Q6fvOeA+
ytcN8Cy8gO3nYQ2shRlQAzfAdOiGLpiJbzfBbthVajWgWjjmthQDxWJDarFU
TNchH1bOu450i9AH+6Hfkfwj/ARHsXXEa0S18jdnXIBv4Ft4irWV8AQsh+dY
q/D3k+1boDJjOXhrajmsXO5z2/dBGzTCbBhk3wAcgaPQqByDBLKwP7H3qoMi
8sHEZK1leL8yv698GI/8Jd/DfqbOXqzaZ28ltCZW06rtInwEnejsgHZyeQms
yNnbfgVzc5azyt2pcD/yVvZugVXsXQ1F5D7YC+97D7rsMVPs7o6mqzNao/WE
/3sDtlfCGnhGfrC2s9TO0Fk90AttXu9TYLFqK2P3qYJ/kC9k7G5a0z/1JNVL
BXynHIhWm6rRVcpH2YJtsB2q1C/kJ3dpyVsOKBf+gCG4HZ2r/f5zo8VIsapF
58bUdKSrmCg2cxKzLR9mI/+AjVNwGn6Bbu9PypE3UuvJBe/hEzwGisU6WA9j
sXnQ+8lV0d6s6DFT7BrdP/WcBsU6Wm9RD6uOVvOq/S6vpRrvT9KpRb4jWmzV
k+apznnzl+A4Oid8hnR4zip3C96P5dOkaG+ot9zKv1c8p5XbmjmaPSPcczhj
PUi9aE9qvVkxUCwe9f6pN344Wg9SL9IM0Sx50PNPPbQjWg9QL1DPUu9a77HS
zNPs0wzRLNEddJcMOiWQgxQiZOFf9l7Se0AX9ECvZqf3Z8VkQbQcUC5oRmpW
akYM+YzUrPzA60U9sR/5bXgL3oOenL253l4+yJdet6WcUG4oZopdl/uyB53d
fobOavb60XvdGe1NjntPU29TDtb6DNYsnubvrzvcjHyIMz+Fv+Ccai5ntS2f
1yIv8vdX/O+JNsOrfSZrNg+iM+A1o9pZ6LNPNaPaaU+sFlV/bcj/AU5hEnE=

                "]], 
               Polygon[CompressedData["
1:eJwt011oz1EYwPGf/V8WqcmQq5W35o5pW0lx43UXZPKWcqFlKzWG4cJCxGhI
2264UwqtbBFCmwts87qtqdUuNUVphrCy8jn9zsV33+f//M55nud3dn4L9h2s
ri9IkqQcORT6k8ccjPo9j3dnk2QXFmOv3A7+iR+YwEu5X3zK2oZpSdLEbWhH
nfwxz/fEGqHWtsIkqcYOFIXmfNnaFnTgihpX+RzOhprYI3eGn+Cm+A13owet
mSQpU+Y0H0UjiuP84T2yyGGtPiX6HeN1WI9Ka+dbNz3UwArszCfJiB41vB+1
yMlnURSwfkSdmbn03cMZTBfPwEVxMy6hzbMWnsI/fMJtuclsWjPUbsW4XnV8
P777A36IR8joV2JPRewf5hiNdQb4PT7gY5jRTN/4OybQiXsYjs+6uDGeZTjT
5jAvBj0bKEjPIJzFkPh1nP8F96IPzwrSO9LPb/EODfYcyqTzhTlreWG8J3N5
NorRHurhQLwP17jCPOXYHs+7MsyuwTgWiZ/LTYib1DyJE1hpbw9vtb9GvJE3
Y0s4X/kNcsM8gEEsxzIsQaln9bw01l4R+4c5vuILfmHKs+58OneYfyzWnSXu
F/ehPd65V9zlHnUWpvcq3K8OHs2nd7tAPCb+jLb4v77Fd3AXzXGuOj6PCzhi
z2E0oFSNB/zX2j+oEs+XmxRnkQn5+E385lV+D4k38WqsQa89ZfY85Ud4jOOx
TlXsFXresP96Lv1+w3fcyv8B4S6EDQ==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8691437676576479, 0.8825171698806258, 0.8663133755389401], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlEtIVGEUx29zH0MPzRJXbrJaGC0cggQfEfRw08JSKALbBKlQjZWMJpjb
GsjH+KCFtGhTEQqZPcxS6WUPHWSMnq4iUJIWWTklPeh3Omdx5vf/zpzvnPN9
99ybd7iuIhpyHKcFc7GT/ERgDDZhm9DdsBPLRyfgKFaAHoFlWC56jiQhz3HK
0U/wLQSOE+B7BX3WmZLf1bySv0uKhfETUwnHWBfjOuPqWvxl8CaWj66HG3zH
eU9MDtxoWnxvQ5pf6mSxHkevgTVWS85Ub3kaw5pX8u+Ca4l7QMxfev9pPUvv
ETvvFjgb0jN+hXuIO4IOYBZ2CJ3tqYleD8/aWc65eh7R4vPtflbAJOsS9CRM
08PwMsfxqJvBf2X4V8FKy5kH92Mx9EFYZM+l1NX+pM9CGDUtvU+H/l+vk4Lj
rHejn8NW9vegJ2DK1VofYZvlr/H0P4mZhI30FqO3Nrhk9yP3NISF0SOwh7g2
4i/C81gzOg4X2XOJvffgBSyO7oQ72ZNCn4IJ2ys5ili/w18FvxB3Ff0JXmb9
C90PkxbfC4cs5rOv9aRuOTwq+/EfC7Q/6fMNPI4t4I/CZ8T1E/8C7rVnWiEk
VxUx1XC5p/f2gfv5ZvGyb5T9v4mZh3eIa0cPwpUWL/u+W7zsm8KuoGfgkqfz
9kfmzfw/PDXRKTkXDy5Cz09hElLGuQ8XLWca+ja32XDQ4mXfOiwXHQ/rvcv9
34UNJJlD18Frdj/dgc6TPPda2ETcCfwtcMrqSv0+chXAgbD2LXWl/mp71zJh
jtXdHNZnIM9in9yD9EnOCMm28V8GMaWw2Wqdhq02Y3FfvynybemAO2xOimGN
zcYBuDXQnPmw0c51AxaaX/5vt5ySu8/OK+futTkcg12mxddhzzEBa62W1EwH
2vN0oHMj89MLtwf6zpbAl4F+T17DQXtHbsts2NzK/I5ZrWH42N59+QYkrO4t
OGtzNSN1bLblPai2mWzw9Y7kXDE4Ye+vvMcD1tt1+Mi+ew9d/aZIn9LvvOWX
Ov8ABt3H3A==
                "]], 
               Polygon[CompressedData["
1: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

                "]], 
               Polygon[CompressedData["
1:eJwt0jtPlEEUh/Fhd9k1JgtamJBYcAkSiQVUIEKBRmlVEC1cGpGLQLgYiGKB
pdogJnYm2hr1I9jQbIGVF0K0kpBAY6FATICG32SnePI/75xz5lzmbbw30z+d
CSE0oxqlfAg/q0IYpw8wgT8c7539o7vYw6ak36jPhnBW3jb7RYFNh+kzPEc/
/000pbg+2iL/HOrwK9am9zGMeZTUGqHv5L/FaLq3gZ7IhVBAHiNyb+Qq/cS+
zut1Ve4++zTK/LW0Hg0YE7vg7Da9hUHUogZb+urjK7IbMcQ+lXwxZjdT6T/O
scfeR7d+LqEHRd//1b+ITtxJe+yiOyk37uoqrmUre437fY2/4ibpU/cs4Qla
5XymZUrCN/oD6zjEAY5Q5PtOL6QdxV11oBMb7iw4q2JnkcOKWV5iPO1imc6J
m8VDfNXLFfoFa/nKW8Z7z9DL+u5FD1rlLtL2tPOONHecf8V5G/8ovYsSZuIe
xD1KtWLNwfQOTWnfA7SsTpt6n+gHfMRjbzcrd5FOYgonxV6Xk0n/Q/wv3mDZ
2as0Y5z1GC7BT2s=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[0.941176, 0.906538, 0.834043], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJxNmXm4j2Uax9/3nN97zrE0TVnSZCmZ6kJahULJUtrokPYSWcKhNNMeIlKq
CxlL1hZzXUX2rdIyqcjWgjTNyK5maCNC23y/c39+V/64z/1s9748z/s7J3Xp
V9q3IEmSLfpTKPy84HXBUsHoNEnuF4wCPL5P0EvwqKC3YF1RkhwS/qQo1oew
9wDnzWMw694fKujDmSWi2Se8SHhkliT3aPy08AbBdI03CY9EtuWOETwI78Ha
u9v8hH8QLpH+++HbB936aO9a0wqX134FwY/mofn1wn2F701Dxn3QWb8yQTn4
me/BNOhMX7Eg7PVae8HVgsaCcwRXCK4UtBM0Epwn6CYZLYVvF75V+BJBG2hK
BU0Et6Sx5/XWgptZawz/UuTl5Z+LnIbwNf8u9p/8uEvjWUVhz63wGau9/sKD
stDTtObxg+YvCe/LgtdV6H4l44ZAO2yx3TsE29GzFbo6Lg8dERvH/Bn07o1f
nQud8fMdgp7kxe3QPmx7pcd+5V39LM51xgbTd4BfZ3g9AO9S8upqsOdLyJuF
wu8KRmg8JQuZPewH5HZFdnfBQPbmy3d7hScWxXmffUSwWPPDwp8Whd49WR/I
GdNeJxmnOg+EnxM8qfFL5Nh9xKIzut8mOECeOTf7knfDBI8J+qWxdgd+sm2d
xauF8J1Z0O6Hfih0Zfh9DDJ8pjw5v49Y78lCtve7CDri3zLi15X1hxg/iB7W
pxN0D3LG82vY78vYfE6Qj94Ufrkk+Jex1wd5juWl0uMPwk2zyCX7xvnvmnLt
tMNHlnOp4HzoLgCfT6wvJ5ZXIKOZeaL7ZdBfzrgrOjc74qznzQU1pccm5V6D
LPh3RFZTxj6/TA2ylc5sLQw925EH92ZRB/dkIc+y2sL7Wvg3hV9H9OmK3m+K
V0vxfKcwaNtib09ibzmN5c93hM8UzhVHT9qocZnoHhUMTWLch/lAQXfBAMEj
gl6COwRTxeNVwbQ0zg7hfBk8+gre194swXuC3pzx2T2CdYLdgtnaWy6YYz2R
NwiwPK/9RXCT4G77y/eL4JCgP2ve25+FPoezoLsD2nNy8qHw1cqfweif59sD
eceJZplwSRa547vDdTaLHvhKUfRM9yz3q7PsP2LjWJxMPJy3+Zr7MznheC2V
n+vKzwOFzyZm7p3muS2NmtrO+CB0pq8jaJBGn3cct3J2Gzl6Drx6cjf5jmqU
jzO0pjtDUJs8v4DxBeh9BmfOZN97J7HWlvUC2f+i8EdZ2Hwme3XgYR/Up9+e
JtwN/ZyTfbkfe2VxF3i9GznpnHevs89vxu878PNh7DiyH7cnj88mBtblKnjk
75rurJViTxPOX4avmuJf654pN9pL5+WFYa/93Bk+3eDVmfVb0c167URGd2S7
n9n/rlHfPQOw/SrZfJr1zuJ+q5fG/VpTUCONe/BvafRH99nh8HoMv1YQlEdX
50NFbHHcjwfOYu2hLGhHZ0FXh/MXK3YfCd9VFHIsb2wa/dH5cbpjh26tGBu3
xn/OhROtb7kkSZXDp5aLPPR98CP2mLYuMiyrn/uJ4F8a9ykKOxth95/QO29D
NWwoEKTsn8C+3xXTVTMNJHdGcfh2LP49RB84KPhNsEvwq+B7wT8FnwkSeH6p
4V7WvV8H39rHa4mrY3oLd6LvxhPQ5RziM5bYnoXOroFOWdT3DcIvoKf17ZiF
P0qFq2NHQ+Jdg3F1cA3024Ud9lMtfFULv+VruQrxqppG3R5HfpRLf6/b2sw9
LiF29aGrzNpJnDkDO8ynWFCEzAJiUCg4qBp5277NBY8q8NmSxpvhAGNj50UF
v5N0/qgs9GyAnD9qvlzrB3Ihqxa6VYVnA/hshu+J6FrMuAn52Ep8jhG+OAv9
quPD8th+MjZVw65KgmPJUZ/LBLk08rsNfmmCjMbo1fgIv7XmzCXo2Ab9rOcP
+KgGPGvCvwb+q85+Qfp7Xjsfj2deD93qAh4fA4+axCOfB0XYUh//V4Lec+f6
d+R2+1zc1yW5qIedgh1J+PjnJGi/ScKv9u9e6Mrjwwqs/ScJ3f+bBHjs+/pV
3aNvWH5R6Os6PAb7d3POb9jxggnE4Ddq07z3UYvVWPe+dXc+Wg+/gV3f49Ko
32r4qzL6/5QED/OqyJnf4Jdw1j5uk0XPvCwLOufZL0l8I25K411+bhb94+ws
5I5H9+ny3X1aHyNbD/PWsK0D0cvnCkXzsta/ysVdcTt695ZfPhfuVRT3wwDo
PO7GfA9vH/vsMLwrAbbzJ3x6iP5mPz6Lblskb5TW5uUiJ8wrn9MZc4P3vibO
3xwxL2JuuZWQ5Tz4Non1ceg4lnz4ntiUU9/f7XMl8a0yCJ3WSI+/68zHwju1
t15ry0rinWYZ29DHstfzfjvEXuXi+OY4tjjeg3s4Y522Q3teFnE+P4tvl0eQ
+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
p3use6h1m49/6uJX722D1vv/AwIRdHk=
                "]], 
               Polygon[CompressedData["
1:eJwtlW1olmUUx6/7ee7ree5ne6x0G0EZ5lYoU4dU8w0z3ZaUScwppkuDBpr0
4iJ1KiaIUBg10SX2QbDEJqRUUPSyQis36IMOejPJlPKDGmQUU6f2Ifr9+e/D
H3739XKuc53rnHOP7+hsW5sLIWxCKZobQ7g1CWEiehw+weBexreibngqY8PB
a+bA/zB2hO8BVMl3DfoFHkJ18Pl8CC1wOyqxdmYxhDIHVqLpRY9p7kntF7Nn
DrafQGvg+9AN5n5DtbLNHqZCNboOr89CeBpegO5n/zB2y7KFrsLr2NPOhnVo
O/wimpeMjMGV7K9lbRVqxdd6xq7AZeanwbPRLfA1xmbASeaz61ANfAdjZ+F+
dDt8Gb3H+l3oc/hoAT/gK/qGr+PjV6z9Gt2Az7Gml7lj6E7mF2W+SyO6hj8n
USu8CA3CnxZsawh9DI/L7Ms09CHz0zPv1Z16+R7mjG/hD2QPbkv9lqt1X3gX
axrgJnQUnlDijsStGtUT31eiY/cGOgCf5sws5zvpbvMyn/2Y3hA+jo3m4Dfv
h99nzUXWXkCH4O8581BwDBSL3ayZDT+IeuBR0bl0Do2FG6JZOafcW4DuTZwj
S+EV2DwDH0cz4fP4VqFckw14X8GxOovWwqsy+9qhM1Ov0VqGwxm4D5s7WPsO
+jI6JoqN7nQMnlrwWXrjq8y3oXp4NGqBv8FmT3BN/AWfxvAp5i6jbvb+gG4m
roFh+GTqt1GNqdb2Y+N15l9Ce+GhnHNZd7oIb8vs+2a0Hz6cOXd0xiA8RjWV
8xuV4U+ic3Ej2g23Rte2auApuJ89P+ktUR98gD1T2NuADsJZdG4fRnn4NcYm
MTcZ3Q1vIXiNcC16k++lxGhKcE61w+XUtb0CjYKbVWPwJPQw/Ddn/pnYhwvw
+NRr16PF8KvYrM/5zB3wpZz3Tkbz876T7talmoP/S11b6kFj+H4U/6rU4NBD
8AliXpFzjKp1l6J7kcZqin5zvX2fah4eHd17VEO3wbMKnvsONcGrGWuBm9Eq
eCGakLhnPAIvLjk28mEc9nsY60ycY2/BVQXH/l2Ug7dFv/1ytAV+nrFfE+f4
c/Cs6N6kGpgPd6GViX2QL28X/TZ6Q73lM6lj2Y12whOje5l6lnpXZ8F3UY12
wTujYymbG6NrRrUjH17Q2mhflaMD0T1JvUk1PABXpCO9BUV4U3Qv151fhm9m
rgX1mLuIzZ68a185sRnek/lfpJ6+gf1N0bWlf8ADqnc0N3GMl8E/49O/iWvq
R/gj9ZSR/1lv6p6j3qM1n8HPRsdWNmRra+paUs1+Af+ROtdl43d4X+rYqWcN
wo1F98Y6tBL/2/LOReX8krz/efr36R9yj9635NxTjpfgjuhcUc9Yon9FdG/V
P+AU/D95/eVr
                "]]}]}}, {{}, 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{710, 725, 727, 730, 733, 737, 742, 754, 756, 758, 760, 
               762, 723}], 
              
              Line[{753, 848, 2059, 933, 2103, 1013, 2129, 1075, 2164, 1141, 
               2196, 1189, 1202, 1248, 1256, 1283, 1288, 1303, 1306, 1320, 
               1324, 1336, 1340, 1352, 1356, 1368, 1372, 1386, 1390, 1403, 
               1408, 1430, 1438, 1476, 1488, 1538, 1555, 2233, 2243, 2277, 
               2287, 2313, 2323, 2367, 2377, 1823, 2387, 1939, 2427}], 
              
              Line[{1949, 2397, 1845, 1834, 2343, 2333, 2297, 1677, 2263, 
               2253, 2218, 1563, 1501, 1493, 1449, 1441, 1413, 1410, 1395, 
               1392, 1376, 1374, 1360, 1358, 1344, 1342, 1328, 1326, 1310, 
               1308, 1293, 1291, 1264, 1261, 1217, 1210, 1149, 2206, 2176, 
               1085, 2149, 2139, 2113, 943, 2079, 2069, 2049, 2039, 2009}], 
              
              Line[{1980, 1919, 1924, 1926, 1928, 1929, 1824, 1951, 1953, 
               1955, 1957, 1963, 1990}], 
              Line[CompressedData["
1:eJwl0rkrBnAYB/Cf+84RuysDiyTn5BxMeh2DTHLlerM4yj8g0UvKYLexyJUY
UAYMKGaTxebMIB8ZPn3rqaeenucpGohGpuJCCIu0JYTwHB9Cu4zQTS999BPj
hFPOOOeJtMQQMsgki2yK6KKHEVaIsckNt3zyxQ95SSEUUEIpZZRTQwPtdNBL
H6NMMMcCa2xwxDHvfP/1JofQzDRRZthhmy0OeOCeOz5oTAmhnloqKOBKPV/m
kUkij2onHLLPLptMMckE44zRTz11VPJmtldeOGSPVWKsMMsMwwwxyADdRGil
mWqqKKaQXHL4sNN3rrlimSUidJJKOklcuuE1N1ywyhrrzNNES8L/f/wCYHFD
8w==
               "]]}, -0.021], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[CompressedData["
1:eJwNyD0rBAAcwOH/3XE3XJF8gOs2o5eclMHLbQYdg01xA5YzIKVYpHNFt/gU
MpwoizIpriRCKYPV5jC4zTM8/eqXX1qbrSQiYoGrZMQ9DzzyxDOvvPHOB7lU
RJFJxhljlAKD9FOhzgFVdrjmhmRHRIY005SYocYhdzS55YdfujojusmRZ4Ah
JpiixByLlNlgkxpH1Dnnkk++aPFNXzpimAIjzLPMCqscc8IpDc54ocUfbRKZ
iBRZeuil6Ze1yj577LLNFutc8A+dpjGW
               "]], 
              Line[CompressedData["
1:eJwN0L0rxAEcBvAvdz+3SVmsrgz+gJPXDF7K6Dj1SxluuFPKW0kW/4J0mUSS
SRYsMjAhGWSTG68MVqFLymf41NNTz/J0l1eKyy0RscBra0SSicjwKzf54YtP
8vppZiiRMk+FKmtsUOOeR554oUF7NqKDTvLMMkfKIjvssscBz9Rp8keS2NJF
D70UGGCCKUqkVFlii21q7HPLNXd8k22LGGWIMdZZZZMLbvjgnTpvRM4HTDLO
CMMM0k8fFQ454pgTTjnjnEuueOAfMuox4A==
               "]], 
              
              Line[{752, 847, 2058, 932, 2102, 1012, 2128, 1074, 2163, 1140, 
               2195, 1188, 1201, 1247, 1255, 1282, 1287, 1302, 1305, 1319, 
               1323, 1335, 1339, 1351, 1355, 1367, 1371, 1385, 1389, 1402, 
               1407, 1429, 1437, 1475, 1487, 1537, 1554, 2232, 2242, 2276, 
               2286, 2312, 2322, 2366, 2376, 1822, 2386, 1938, 2426}], 
              
              Line[{1948, 2396, 1844, 1833, 2342, 2332, 2296, 1676, 2262, 
               2252, 2217, 1562, 1500, 1492, 1448, 1440, 1412, 1409, 1394, 
               1391, 1375, 1373, 1359, 1357, 1343, 1341, 1327, 1325, 1309, 
               1307, 1292, 1290, 1263, 1260, 1216, 1209, 1148, 2205, 2175, 
               1084, 2148, 2138, 2112, 942, 2078, 2068, 2048, 2038, 
               2008}]}, -0.042], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{699, 709, 713, 716, 718, 720, 777, 817, 815, 805, 872, 
               902, 892, 888, 952, 961, 1024, 1028, 1096, 1102, 1160, 1162, 
               1220, 1223, 1266, 1265, 1289, 1262, 1259, 1215, 1208, 1147, 
               2204, 2174, 1083, 2147, 2137, 2111, 941, 2077, 2067, 2047, 
               2037, 2007}], 
              
              Line[{731, 786, 783, 772, 821, 880, 884, 896, 901, 917, 968, 
               970, 976, 980, 987, 997, 1042, 1045, 1051, 1060, 1112, 1115, 
               1122, 1131, 1172, 1180, 1230, 1232, 1239, 1251, 1276, 1284, 
               1300, 1286, 1281, 1254, 1246, 1200, 1187, 2194, 1139, 2162, 
               1073, 2127, 1011, 2101, 931, 2057, 846, 751}], 
              
              Line[{1967, 1897, 1905, 1906, 1866, 1783, 1776, 1773, 1764, 
               1748, 1711, 1707, 1705, 1701, 1698, 1683, 1638, 1636, 1634, 
               1621, 1588, 1586, 1583, 1571, 1519, 1512, 1462, 1460, 1458, 
               1452, 1420, 1416, 1393, 1411, 1439, 1447, 1491, 1499, 1561, 
               2216, 2251, 2261, 1675, 2295, 2331, 2341, 1832, 1843, 2395, 
               1947}], 
              
              Line[{1992, 1985, 1979, 1975, 1970, 1968, 1910, 1861, 1874, 
               1878, 1794, 1765, 1769, 1780, 1730, 1717, 1661, 1652, 1609, 
               1598, 1539, 1527, 1483, 1470, 1434, 1405, 1428, 1436, 1474, 
               1486, 1536, 1553, 2231, 2241, 2275, 2285, 2311, 2321, 2365, 
               2375, 1821, 2385, 1937, 2425}]}, -0.063], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{698, 2028, 704, 708, 712, 715, 775, 814, 804, 801, 792, 
               868, 891, 887, 951, 960, 1023, 1027, 1095, 1101, 1098, 1157, 
               1159, 1219, 1222, 1212, 1258, 1214, 1207, 1146, 2203, 2173, 
               1082, 2146, 2136, 2110, 940, 2076, 2066, 2046, 2036, 2006}], 
              
              Line[{1994, 2405, 1989, 1984, 1978, 1974, 1913, 1873, 1877, 
               1886, 1890, 1802, 1768, 1779, 1729, 1716, 1660, 1651, 1608, 
               1597, 1601, 1547, 1529, 1482, 1469, 1433, 1473, 1485, 1535, 
               1552, 2230, 2240, 2274, 2284, 2310, 2320, 2364, 2374, 1820, 
               2384, 1936, 2424}], 
              
              Line[{735, 798, 794, 785, 824, 883, 895, 900, 908, 919, 975, 
               979, 986, 996, 1041, 1044, 1050, 1059, 1111, 1114, 1121, 1130, 
               1171, 1175, 1194, 1238, 1250, 1275, 1280, 1253, 1245, 1199, 
               1186, 2193, 1138, 2161, 1072, 2126, 1010, 2100, 930, 2056, 845,
                750}], 
              
              Line[{1946, 2394, 1842, 1831, 2340, 2330, 2294, 1674, 2260, 
               2250, 2215, 1560, 1498, 1490, 1446, 1415, 1419, 1451, 1457, 
               1508, 1515, 1518, 1570, 1582, 1585, 1587, 1620, 1633, 1635, 
               1637, 1682, 1697, 1700, 1704, 1745, 1759, 1763, 1772, 1775, 
               1864, 1896, 1893, 1884, 1966}]}, -0.084], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{734, 797, 793, 784, 823, 882, 894, 899, 907, 918, 974, 
               978, 985, 992, 1001, 1049, 1055, 1065, 1120, 1129, 1170, 1174, 
               1193, 1237, 1249, 1274, 1279, 1252, 1244, 1198, 1185, 2192, 
               1137, 2160, 1071, 2125, 1009, 2099, 929, 2055, 844, 749}], 
              
              Line[{1965, 1883, 1892, 1895, 1863, 1774, 1771, 1762, 1758, 
               1744, 1703, 1699, 1696, 1690, 1681, 1632, 1627, 1619, 1581, 
               1569, 1517, 1514, 1507, 1456, 1450, 1418, 1414, 1445, 1489, 
               1497, 1559, 2214, 2249, 2259, 1673, 2293, 2329, 2339, 1830, 
               1841, 2393, 1945}], 
              
              Line[{697, 2027, 703, 707, 711, 714, 774, 813, 803, 800, 791, 
               867, 890, 886, 879, 877, 949, 956, 1018, 1025, 1094, 1100, 
               1097, 1156, 1158, 1218, 1221, 1211, 1257, 1213, 1206, 1145, 
               2202, 2172, 1081, 2145, 2135, 2109, 939, 2075, 2065, 2045, 
               2035, 2005}], 
              
              Line[{1993, 2404, 1988, 1983, 1977, 1973, 1912, 1872, 1876, 
               1885, 1889, 1801, 1767, 1778, 1781, 1790, 1734, 1724, 1666, 
               1653, 1607, 1596, 1600, 1546, 1528, 1481, 1468, 1432, 1472, 
               1484, 1534, 1551, 2229, 2239, 2273, 2283, 2309, 2319, 2363, 
               2373, 1819, 2383, 1935, 2423}]}, -0.10500000000000001`], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{696, 2016, 2021, 2026, 702, 706, 769, 790, 788, 782, 864, 
               876, 948, 955, 1017, 1022, 1090, 1093, 1155, 1152, 1205, 1144, 
               2201, 2171, 1080, 2144, 2134, 2108, 938, 2074, 2064, 2044, 
               2034, 2004}], 
              
              Line[{1998, 2415, 2410, 2403, 1987, 1982, 1917, 1888, 1899, 
               1904, 1808, 1789, 1733, 1723, 1665, 1659, 1614, 1606, 1545, 
               1480, 1533, 1550, 2228, 2238, 2272, 2282, 2308, 2318, 2362, 
               2372, 1818, 2382, 1934, 2422}], 
              
              Line[{741, 812, 807, 796, 827, 898, 906, 910, 2085, 2090, 923, 
               984, 991, 1000, 1048, 1054, 1064, 1119, 1126, 2181, 2186, 1178,
                1192, 1236, 1242, 1197, 1184, 2191, 1136, 2159, 1070, 2124, 
               1008, 2098, 928, 2054, 843, 748}], 
              
              Line[{1944, 2392, 1840, 1829, 2338, 2328, 2292, 1672, 2258, 
               2248, 2213, 1558, 1496, 1444, 1455, 1506, 1511, 1568, 2223, 
               1575, 1580, 1618, 1626, 1631, 1680, 1689, 1695, 1743, 2351, 
               2356, 1753, 1757, 1761, 1858, 1882, 1880, 1871, 
               1961}]}, -0.126], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{695, 2015, 2020, 2025, 701, 705, 768, 789, 787, 781, 863, 
               875, 947, 954, 1016, 1021, 1089, 1092, 1154, 1151, 1204, 1143, 
               2200, 2170, 1079, 2143, 2133, 2107, 937, 2073, 2063, 2043, 
               2033, 2003}], 
              
              Line[{740, 811, 806, 795, 826, 897, 905, 909, 2084, 2089, 922, 
               983, 990, 999, 1047, 1053, 1063, 1118, 1125, 2180, 2185, 1177, 
               1191, 1235, 1241, 1196, 1183, 2190, 1135, 2158, 1069, 2123, 
               1007, 2097, 927, 2053, 842, 747}], 
              
              Line[{1943, 2391, 1839, 1828, 2337, 2327, 2291, 1671, 2257, 
               2247, 2212, 1557, 1495, 1443, 1454, 1505, 1510, 1567, 2222, 
               1574, 1579, 1617, 1625, 1630, 1679, 1688, 1694, 1742, 2350, 
               2355, 1752, 1756, 1760, 1857, 1881, 1879, 1870, 1960}], 
              
              Line[{1997, 2414, 2409, 2402, 1986, 1981, 1916, 1887, 1898, 
               1903, 1807, 1788, 1732, 1722, 1664, 1658, 1613, 1605, 1544, 
               1479, 1532, 1549, 2227, 2237, 2271, 2281, 2307, 2317, 2361, 
               2371, 1817, 2381, 1933, 2421}]}, -0.14700000000000002`], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{694, 2014, 2019, 2024, 766, 780, 862, 874, 946, 953, 1015,
                1020, 1088, 1091, 1153, 1150, 1203, 1142, 2199, 2169, 1078, 
               2142, 2132, 2106, 936, 2072, 2062, 2042, 2032, 2002}], 
              
              Line[{739, 810, 831, 2083, 2088, 921, 982, 989, 998, 1046, 1052,
                1062, 1117, 1124, 2179, 2184, 1176, 1190, 1234, 1240, 1195, 
               1182, 2189, 1134, 2157, 1068, 2122, 1006, 2096, 926, 2052, 841,
                746}], 
              
              Line[{1942, 2390, 1838, 1827, 2336, 2326, 2290, 1670, 2256, 
               2246, 2211, 1556, 1494, 1442, 1453, 1504, 1509, 1566, 2221, 
               1573, 1578, 1616, 1624, 1629, 1678, 1687, 1693, 1741, 2349, 
               2354, 1856, 1869, 1959}], 
              
              Line[{1996, 2413, 2408, 2401, 1922, 1902, 1806, 1787, 1731, 
               1721, 1663, 1657, 1612, 1604, 1543, 1478, 1531, 1548, 2226, 
               2236, 2270, 2280, 2306, 2316, 2360, 2370, 1816, 2380, 1932, 
               2420}]}, -0.168], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{738, 809, 830, 2082, 2087, 920, 981, 988, 994, 2117, 2119,
                1003, 1056, 1061, 1116, 1123, 2178, 2183, 2208, 2188, 1133, 
               2156, 1067, 2121, 1005, 2095, 925, 2051, 840, 745}], 
              
              Line[{1958, 1868, 1855, 2353, 2348, 1740, 1692, 1686, 1685, 
               2303, 2301, 2299, 1622, 1615, 1577, 1572, 2220, 1565, 1503, 
               2210, 2245, 2255, 1669, 2289, 2325, 2335, 1826, 1837, 2389, 
               1941}], 
              
              Line[{693, 2013, 2018, 2023, 765, 779, 861, 873, 869, 866, 856, 
               2115, 950, 1014, 1019, 1087, 2166, 2198, 2168, 1077, 2141, 
               2131, 2105, 935, 2071, 2061, 2041, 2031, 2001}], 
              
              Line[{1995, 2412, 2407, 2400, 1921, 1901, 1805, 1786, 1791, 
               1798, 1800, 1737, 1727, 1662, 1656, 1611, 1542, 2225, 2235, 
               2269, 2279, 2305, 2315, 2359, 2369, 1815, 2379, 1931, 
               2419}]}, -0.189], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{692, 2010, 2011, 2012, 2017, 2022, 764, 778, 776, 770, 
               767, 2080, 865, 855, 2114, 945, 944, 2150, 2151, 1086, 2165, 
               2197, 2167, 1076, 2140, 2130, 2104, 934, 2070, 2060, 2040, 
               2030, 2000}], 
              
              Line[{1999, 2417, 2416, 2411, 2406, 2399, 1920, 1900, 1908, 
               1909, 1915, 2357, 1797, 1799, 1736, 1728, 1735, 1667, 2267, 
               1610, 1541, 2224, 2234, 2268, 2278, 2304, 2314, 2358, 2368, 
               1814, 2378, 1930, 2418}], 
              
              Line[{2029, 820, 819, 808, 829, 2081, 2086, 2091, 2092, 2093, 
               2116, 2118, 1002, 2152, 2153, 2154, 2177, 2182, 2207, 2187, 
               1132, 2155, 1066, 2120, 1004, 2094, 924, 2050, 839, 744}], 
              
              Line[{2398, 1859, 1865, 1867, 1854, 2352, 2347, 2346, 2345, 
               2344, 2302, 2300, 2298, 2266, 2265, 2264, 2219, 1564, 1502, 
               2209, 2244, 2254, 1668, 2288, 2324, 2334, 1825, 1836, 2388, 
               1940}]}, -0.21000000000000002`], {}, {}}}], {
         AspectRatio -> 1, Frame -> True, ImagePadding -> {{20, 15}, {20, 1}},
           ImageSize -> {260, 
            Rational[395, 2]}, PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}}]]}}, 
     Spacings -> {0, 0}], $CellContext`forceGrid$$ = CompressedData["
1:eJzdmP1P1XUUx29OuALaMIh4yIfa6kZCQnW1tHGPNAda6hVEmjIeLBDK8RQx
FUiogGsFkkg6XSoEEUk+AAkTFEQHscipsQE3ICwTnEWIiEjXaGv39f3h+x90
2fjh7Jzzfr/v+ZxzPp97n9iSFBI7Q6PReFj/fbuv3xoKG5XesbjEgiGzWIIj
7nSNtMu4Pl+zfvq01Bya7BgfqBQxbK4funBQJp8rTcjQF8mglzFk4sVcuZjn
90PjZJbkOtcU9gymy8TZ8BXh/anyXnjidO6PyRL+ivPQmWeTFRs/8eSDBz58
8KMHfehV63/TZW9in65NvtHNTk74rlbGzCZ3n9Ey+cCy+8jGr4slb9icluOY
J0XbxkqertkpQafq3mhITxFXN4c5acfj5cLkgh2u3VvkYU21eWBulNx+a9VX
e6o3i4vjruUpRzcpNn7iyQcPfPjgRw/60KuuP/62in3P60ylcrhkV1tNT5F8
MtI4Ky8zRy41eGS8fuhdiagb025o3ipuVj1Vi0+2fj4eJklm+7LoVqM0hr4U
G/3la7LJKa/d9XCwfJETEVN8Ikix8RNPPnjgwwc/etCHXnX/8HmJ/63nyque
ftmyw9oP31vr91dXb+axKxvlkk+DccS8RqJvrfDtd18pf3f751R6ivys8z/a
XrhMFuWU3j9duVT2ui3INLUuUWz8xJMPHvjwwY8e9KFX3f+cH5+f/DhLS8kf
yTGyrG7KsrowVA5a66ur2N4c+CBA2rWN8fY39FIeGlkVWO8nNz710jp9tkg6
7AMiWwqeEa2+w7f/iE6x8RNPPnjgwwc/etCHXvX80o+cJ/UAr8TsHb3mz5Xy
i7We2uP3uvZF+UunVd9Fv3Pu8889KWfmzjPWDc+Xj/WOw9fzvWT3zIAm7yxP
xcZPPPnggQ8f/OhBH3rV+4f5oj85X+oDvoe+KXDdo34SHdpZPOD4lCTE1m8P
ODtP6sO6cpNq3eRtlw3f/l7/iLy8vMDZp9pZKu7mPlbu6KzY+IknHzzw4YMf
PehDr3p/si+YN/qV86Ze8Jms9Y3rbemLSXMRu4XZ56Nq50hzp6UjPWuWzA6a
sBgu20lqxOXAm5aZio2fePLBAx8++NGDPvSq9z/7j/3B/NG/nD/1g3+bw6qr
5993khSr3iUnh0LWrn1IUk/lf/hC1z+G6f19xo+qHhiw8RNPPnjgwwc/etCH
XvX9xT5nH7JPmEf6mX6gnujJXnjAe72dRqYcBvP3vzNl+CnyZnyU6Z7hQLax
OLp8QrHxE08+eODDBz960Ide9f3L/cR+Zz+yX5hP+pv+oL7o+zXjWtWMjruG
a01LF+/cesfQXrFOm3FsTLHxE08+eODDBz960Ide9fuB+5b7in3PvmTfMK9K
/1v7hXqjN9BUdn9P8G2D9+oTVx8vHVVs/MSTDx748MGPHvShV/3+4f3A/cv9
xf5nf7J/mF/6n/6h/ujX/Pc3qtj4iVfmx4oHPnzwowd96FW/3/7v52Er82Er
+8pW7g9buc9t5X1lK+9dW/n+YSvfB23l+7mt/F5iK79f/QsuMEcA
    "], $CellContext`forceTermSelection$$ = 
    3, $CellContext`grid$$ = CompressedData["
1:eJx12j3K7TYQh/FDsoqUWYn3ELgbCKTOvpLatSv3atS4EgKBMQiyhJDklYx+
k2u4HOb+nzlH0uhjNH5//vX3X3778fP5/PT174fPeP46vj63b/8+fdp//vHP
80z7v88bvsFX+IJ+4Z/hE/qJvcPPfgx9w39b+YSep/3VPviCXvFv8Df8A9/h
w+cxuBGPYY94rN9zwzf4Cl/QL/wzfEI/sXf4zwd9w59xSOh52iMetB+94t/g
b/gHvsOHOB34TXvEY43zDd/gK3xBv/DP8An9xN7hPx90xuFknib0vNE++IJe
8W/wN/wT4uK6wT6I68H3TnvEY+UbfIUv6Bf+GT6hn9g7/Himzjw9t5VP6Jlx
vOALesW/wd8hLoxv2NewD9bdtNf9av4ufIOv8AX9wj/DJ/QTe4cf+9XU2UdO
xi2h52mv+9VsP3rFv4W4MH5hX1v5cA4d7IsH6/JgXsA3+Apf0C/8M3xCP7F3
+LFfTZ1xO5nXCT1vtA++oNcQF9eN+5rnjnkB9rHOg36s7XimPeLBvIGv8AX9
wj/DJ/QTe4cfz9SZ1+e28gk9M+4XfAlxof9hX2P8Ql6w8iGPO8grjnWePMfa
zhu+wVf4gn7hn+ET+om9w4/1cbE+LtbH/H70vNG+EBfXjfua5455gXmbeTX2
Mdo14rG285n2iMfKN/gKX9Av/DN8Qj+xd/hxfkydc+HcVj6h5xAX2h/2Nfof
8gLGL+TVKx/uQcfazj7tdb+aeQl8g6/wBf3CP8Mn9BN7hx/P1Bn3c1v5FOJC
+8K+Rv9CXsD4wD/wHT7cU491HvVpr+tj5o3wDb7CF/QL/wyf0E/sHX6sj6mz
Ls4QF34/7Gu0P+QF9B/+hn/gO3yoIxxrP/q013jsxGPmlfAVvqBf+Gf4hH5i
7/AjHlP/TlxcN+5rnjvmBeZt5tXee7yXWjewrjPtY+1Xn/a6X43nhm/wFb6g
X/hn+IR+Yu/w7/P/cXrX0df3h3OH9oW8jf7h3+Bv+Ae+w4c63Jhvx4jHsFkf
X+Nwwzf4Cl/QL/wzfEI/sXf4N07rPHz3Nb4/5AW0D76gV/wb/A3/wHf4UCel
3/P8IB4n8Zj3ZvgKX9Av/DN8Qvdzh3/X0Zf+nXPHvMC8zbzae4/3UusG1nWs
u1kXtW49bcZh5lfHul/NuhJ8g6/wBf3CP8OnEBfXzcqN5z138A95G78/be9B
Ix70D/8Gf8M/8B0+vGdgns77B+tj1v3gG3yFL+gX/jnEZf1/19EO/55DIx74
byuf0N97kPfUEQ/6h3+Dv+Ef+A4f3gMxTvN+PuOxzusbvsFX+IJ+hbi4btzX
PHfMC8zbzKu993gvtW5gXYf+4d/gb/gHvsOH93TM4844zvoV+9Ws28JX+BLi
4rpZuYTuObTDj+fNq/HfVj6hv3UE6zwjHvQP/wZ/wz/wHT68R2Wf6czzh3G+
4Rt8DXFx3bivee6YF5i3mVd77/Feat3Aug7tgy/oFf8Gf8M/8B0+vOfmHOiM
88M6uOFbiIvrZtUv/DJ8QjeP2+Hfe9CIB/7byif0tw63nh9v3Zr+4d/gb/gH
vsOHv0NgnDvrYL4fDJ+0I6yjdR2+587qn+ETunn2Dj+et26A/7byCf2tk677
1ftegf7h3+Bv+Ae+w4e/E2EdzPfn4ZPfCevIfW7Ew7zAvM282nuP91LrBujU
ed463IgHv7/RPviCXvFv8Df8A9/hw9/xsE/1EBfXzco1+Apf0C/8M3xC9566
w791nhEP/LeVT+jve4Z1v3rfy9E//Bv8Df/Ad/jwd1YhLq6blbvhG3yFN2+4
8M/w3otO7B1+PG9dFP9t5a1rv+8d1v3qfW9K//Bv8Df8A9/h37+7+huSLu1z

    "], $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    6.661338147750939*^-16, $CellContext`h$$ = Rational[
    1, 12], $CellContext`kValue$$ = 52, $CellContext`lenX$$ = 
    2, $CellContext`lenY$$ = 2, $CellContext`northbc$$ = 
    1& , $CellContext`northBCconstantValue$$ = 
    0., $CellContext`northBCtype$$ = 
    "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
    "Quality", $CellContext`plotToShow$$ = 
    "solution and contour", $CellContext`rightHandVector$$ = SparseArray[
    Automatic, {575}, 0., {1, {{0, 529}, CompressedData["
1:eJwl1WPbEAYABdA323Zvdi23bNvWlo1l27Zt23bLtm3XVu307MO59xfc5wY2
alupTdCAgIAoIoiOTRziEo/4JCAhiUhMIElISjKSk4KUpCI1aUhLOtKTgYxk
4jcyk4WsZCM7OchJLn4nN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOB
ilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojF/8CdNaEozmtOClrSiNW1oSzva
04GOdKIzf9GFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJ35ziNGc4yznO
c4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97z
gY984jNf+Mo3/uFfvvODn/waaRCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMIElISjKSk4KUpCI1aUhLOtKTgYxk4jcyk4Ws
ZCM7OchJLn4nN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojF/8CdNaEozmtOClrSiNW1oSzva04GOdKIz
f9GFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQm
M4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjaz
ha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJ35ziNGc4yznOc4GLXOIy
V7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf
+Mo3/uFfvvODnwT8+mmCEozghCAkoQhNGMISjvBEICKRiBz0/6+PSjSiE4OY
xCI2cYhLPOKTgIQkIjGBJCEpyUhOClKSiv8ALMEESg==
       "]}, CompressedData["
1:eJzVl+lPVGcUxmeMdUGsoqatBRNRW5doXagmVvRcatyTRgvYuMaiQJoGqFHp
QFFBJ1A7ZVBcWArEidQRMA2bYrVFWkdHinaidgzWWp26lIDLlCVEasF+uL/7
4f4HN7lfTs45z/Pc855z3ntDY5I+jDWbTKagfibTo3NndzmrIpXHVwPSPdYI
peP1I1lp3hnKwxee7BkpoUrlryutOXkjlfRNw7uvnB2oBG73bGkf0idHRw6a
FO/vku2z7KXvnPdLXXlAQnBJm9wcm7pgc0GLnEuNWjWs4m/Nxk88+eCBDx/8
6EGfXu+ma21r/FOmK87a4Gf9O8Yo3ffOFy98bZgS82nPyoIEszL7Vklrc3CX
1Kv8nsVL5o2y3pdI68c7VjfdkbtxWfPnHmiWb5+0HLrl84pvjG1181CvZuMn
nnzwwIcPfvSgT19f/Aumho9f4Q5UYn9LDJ549z9JUesTY+1JzF/6QPxPZ26p
2/e7uGvNha6G6+KYEt442XFFfrYUh6z/xi3v5+R8eXvARYn9JPvF+HkuzcZP
PPnggQ8f/OhBn74feD/ir2Vtyy81P5OeoATX4Bif/KnW72puQ3ajrUmqLO9O
GPf5BRnYOrszt+5HCT19fN2T9DNSXflmWfSNU1I1IiLQ11er2fiJJx888OGD
Hz3o0/cv58P7kj/93yMhhTtvyCW1XosSd9d4/qqXU6qeHe2+D3pPVErY1CTv
3pQK2eh4bGmynJC28N5VNTanZuMnnnzwwIcPfu28VX36edP6Sz0v3h+8jLdm
rS3L+0HKpxUERdVWy6CDmc8jk8ol09GVfGZaqeTFdV1PPnZUMrrDcv44Viyp
bz/1V1mLNBs/8eSDBz588KMHffr9wHzQb5wf9QB/vVq/yjtup3mFQ5q2Rpvt
cYUSNWTOxtuuwxJgqR/t3nxQOi4UNbY5czUbP/Hkgwc+fPCjB336fcZ8My/0
H+dJfeCbmDph2cnP8qVd1bdw7j/Jo112Kbk5IHx5vE0uzbS1/7LhK83GTzz5
4IEPH/zoQZ9+/7KfmHfmh37kfKkX/PaKos73vvhafoqwt45Ky5LO3uqUvlar
NNiXNEePtWo2fuLJBw98+OBHD/r09wX7lX3F/DNP9CfnTf3Q0/jGtpqPNuyV
y/cyh+6TDBn3inddQn66ZuMnnnzwwIcPfvSgT3+/cT+wb9lf7APmi37l/Kkn
+r57tWXP/e93SWx82fyw/Ts1Gz/x5IMHPnzwowd9+vuY+437gv3LPmM/MG/0
L/1AfdEb4t76/5Om2fiJJx888OGDHz3o038/GK3eRu1vo+4To+5vo96XRv0+
Mer3oFG/v436v2PU/0uj/s+/BK53XPE=
      "]}], $CellContext`southbc$$ = 
    1& , $CellContext`southBCconstantValue$$ = 0, $CellContext`southBCtype$$ =
     "Sommerfeld", $CellContext`stdx$$ = 0.3, $CellContext`stdy$$ = 
    0.3, $CellContext`systemMatrix$$ = SparseArray[
    Automatic, {575, 575}, 0, {1, {CompressedData["
1:eJwd1QFLEFYUgFHNapVziZtYzWo2SZxNDLE1W1MkEUOMVgulJaJIITbJtVwr
JHE5MVyucpW4ia25wuZqUYghhtjCaIUUUkghtUhaIokkUrid9uD8gI97eTeq
oPSTzwMDAgJSpwX8/4KYyWxeZy5hhDOPt1lEFNHE8B7vk0AiK/iQj0ghjXQy
yWYDOWyhgK2UsINd7GEf+6nlIEc4zk/8zCl+4w8u0kk3vfRxg1vc4R4PeMxT
nvGcF6+Cxc9gDnN5i/ks4l1iiCOBJJJJYQ2ZZLOBHLZQwFZK2MEu9rCP/dRy
kCMco4kWWmnjLBfopJte+rjBLe5wjwc85inPeM6LV4M0xxnMJoQwIogkiqXE
kUASyaSwhkyy2UAOWyhgKyXsYBdfU0EVNdRxiKM00UIrbZzlAp1000sfN7jF
He7xgMf8wyjjTDJFkKWcRQhhRBBJFEuJI4EkkklhDZlks4EcPiOfIoopZSe7
qaCKGuo4xFGaaKGVNs5ygU666aWPv+hngEGGeMQTRhlnkimCpushhDAiiCSK
pcSRQBLJfEwaGWSxnk1sJp8iiillJ7upoIoa6jjEUZpooZU2fuc8HXTRw1Wu
088AgwzxiCeMMs4kUwTN0EMIYUQQyTtEE0s8iaxkNWlkkMV6NrGZfIooppSd
7KaCKmqo43saaKSZk5ymnfN00EUPV7lOPwMMMsQjnjDKOJNMMc0HOJNgQgln
AYuJJpZ4ElnJatLIIIv1bGIz+RRRTClfUM5eKqnmAPU00EgzJzlNO+fpoIse
rnKdfgYYZIi/GWaEMSZ4SeBreggmlHAWsJhoYoknkZWsJo0MsljPp+SSRyHb
2E4Z5eylkmoOUE8DjTRzktO0c54OuujhT65xk9vc5T4PGWaEMSZ4SeAsPQQT
SjgLWEw0scSTyAesIpV01rKOjeSSRyHb2E4Z5eylkmoOUE8DjTRzklOc4RwX
ucRlrnCNm9zmLvd5yDAjjDHBSwId25kEE0o481nIEmJYxnJWsIpU0lnLOjaS
Sx6FbGM7ZZSzl0qqqeU7DnOMHznBr5zhHBe5xGWucI2b3OYu93nIMCOMMcEL
/mX6HDeIN3iTeSxkCTEsYzkrWEUq6axlHRvJJY9CtlFCKWV8yVfsoYJKvuFb
aqmjnsP8wHGaaOYEv3CKNto5x38zVyMW
       "], CompressedData["
1:eJxN2lWwFdcaReHTHXdBDxxX3N0J7i6B4O6B4O6B4O6B4O6B4O6B4O6BABd3
CATuWsXYtebDfBj9sqv+r5+6dmT9NhVb+0FBQSs+DQrygt4tqVl6M/s82CyD
2Xtmycwymr1vltwsk9kHZiFmmc0+NAs1y2L2kVmYWVazj83CzbKZfWIWYZbd
zPxkUKRZDrPPzKLMcpp9bhZtlsvsC7MYs9xmX5rFmuUx+8osziyv2ddm8Wb5
zL4xS2GW3+xbs5RmBcwSmKUyK2iW0Cy12XdmiczSmBUyS2yW1qywWRKzdGZF
5CbBcpdAJ5P7BDq53CnQIXKvQIfK3QIdJvcLdLjcMdARcs9AR8pdAx0l9w10
tNw50DFy70DHyt0DHSf3D3S8OAQ6hXgEOqW4BDqV+AQ6tTgFOo14BTqtuAU6
nfgFukiQe6etVVGxzIBVMbHMiFVxscyEVQmxzIxVSbHMglUpscyKVWmxzIZV
GbHMjlVZscyBVTmxzIlVebHMhVUFscyNVUWxzINVJbHMi1VlscyHVRWxzI9V
VbEsgFU1sSyIVXWx/A6r78WyEFY1xLIwXjXF0vYPeBXFqpZYFsOqtlgWx6qO
WJbAqq5YlsSqnliWwqq+WJbGqoFYlsGqoViWxaqRWJbDqrFYlseqiVhWwKqp
WFbEqplYVsKquVhWxqqFWFbBqqVYVsWqlVhWw6q1WFbHqo1Yfo/Vj2JZA6u2
YlkTr3ZiafsnvGph1V4sa2PVQSzrYNVRLOti1Uks62HVWSzrY9VFLBtg1VUs
G2LVTSwbYdVdLBtj1UMsm2DVUyybYtVLLJth1Vssm2PVRyxbYNVXLFti1U8s
W2HVXyxbYzVALNtgNVAsf8TqZ7Fsi9UgsWyH12CxtP0LXu2xGiKWHbAaKpYd
sRomlp2wGi6WnbEaIZZdsBopll2xGiWW3bAaLZbdsRojlj2wGiuWPbEaJ5a9
sBovlr2xmiCWfbCaKJZ9sZoklv2wmiyW/bGaIpYDsJoqlgOxmiaWP2P1q1gO
wmq6WA7Ga4ZY2v4NryFYzRTLoVjNEsthWM0Wy+FYzRHLEVjNFcuRWM0Ty1FY
zRfL0VgtEMsxWC0Uy7FYLRLLcVgtFsvxWC0RywlYLRXLiVgtE8tJWC0Xy8lY
rRDLKVitFMupWK0Sy2lYrRbLX7H6XSynY7VGLGfgtVYsbf+B10ys1onlLKzW
i+VsrDaI5RysNorlXKw2ieU8rDaL5XystojlAqy2iuVCrLaJ5SKstovlYqx2
iOUSrHaK5VKsdonlMqx2i+VyrPaI5Qqs9orlSqz2ieUqrPaL5WqsDojl71j9
KZZrsDoolmvxOiSWtv/Cax1Wh8VyPVZHxHIDVkfFciNWx8RyE1bHxXIzVifE
cgtWJ8VyK1anxHIbVqfFcjtWZ8RyB1ZnxXInVufEchdW58VyN1YXxHIPVhfF
ci9Wl8RyH1aXxXI/VlfE8gBWV8XyT6z+FsuDWF0Ty0N4XRdL2//gdRirG2J5
BKubYnkUq1tieQyr/4nlcaxui+UJrO6I5Ums7orlKazuieVprO6L5RmsHojl
WaweiuU5rB6J5XmsHovlBayeiOVFrJ6K5SWsnonlZayei+UVrF6I5VWsXorl
31j9K5bXsHolltfxei2Wtv/D6wZWb8TyJlZvxfIWVvbDwDFpa+V5zvI2Vr7n
LO9g9Z7nLO9i9b7nLO9h9YHnLO9j9aHnLB9g9ZHnLB9i9bHnLB9h9YnnLB9j
9annLJ9g9ZnnLJ9i9bnnLJ9h9YXnLJ9j9aXnLF9g9ZXnLF9i9bXnLP/F6hvP
Wb7C6lvPWb7GK4HnLG0n9N55vcEqkecs32KV2HOWtq1VEs9Z2rZWST1nadta
BXvO0ra1SuY5S9vWKrnnLG1bqxDPWdq2VqGes7RtrcI8Z2nbWoV7ztK2tYrw
nKVtaxXpOUvb1irKc5a2rVW05yxtW6sYz1natlaxnrO0ba3iPGdp21rFe87S
trVK4TlL29YqpecsbVuvVJ6ztJ3ae+eVCKs0nrNMjFVaz1kmwSqdWCbFKr1Y
BmOVQSyTYZVRLJNjlUksQ7DKLJahWGURyzCssoplOFbZxDICq+xiGYlVDrGM
wiqnWEZjlUssY7DKLZaxWOURyzis8oplPFb5xDIFVvnFMiVWBcQyFV4FxdL2
d947rzRYFRLLtFgVFst0WBURy/RYFRXLDFgVE8uMWBUXy0xYlRDLzFiVFMss
WJUSy6xYlRbLbFiVEcvsWJUVyxxYlRPLnFiVF8tcWFUQy9xYVRTLPFhVEsu8
WFUWy3xYVRHL/FhVFcsCWFUTy4J4VRdL29/jVQirGmJZGKuaYlkEqx/EsihW
tcSyGFa1xbI4VnXEsgRWdcWyJFb1xLIUVvXFsjRWDcSyDFYNxbIsVo3EshxW
jcWyPFZNxLICVk3FsiJWzcSyElbNxbIyVi3EsgpWLcWyKlatxLIaVq3Fsjpe
bcTS9o941cCqrVjWxKqdWP6A1U9iWQur9mJZG6sOYlkHq45iWRerTmJZD6vO
Ylkfqy5i2QCrrmLZEKtuYtkIq+5i2RirHmLZBKueYtkUq15i2Qyr3mLZHKs+
YtkCq75i2RKrfmLZCqv+YtkaqwFi2QavgWJp+2e82mI1SCzbYTVYLH/C6hex
bI/VELHsgNVQseyI1TCx7ITVcLHsjNUIseyC1Uix7IrVKLHshtVoseyO1Rix
7IHVWLHsidU4seyF1Xix7I3VBLHsg9VEseyL1SSx7IfVZLHsj9UUsRyA1VSx
HIjXNLG0/Steg7CaLpaDsZohlr9g9ZtYDsFqplgOxWqWWA7DarZYDsdqjliO
wGquWI7Eap5YjsJqvliOxmqBWI7BaqFYjsVqkViOw2qxWI7HaolYTsBqqVhO
xGqZWE7CarlYTsZqhVhOwWqlWE7FapVYTsNrtVja/h2v6VitEcsZWK0Vy9+w
+kMsZ2K1TixnYbVeLGdjtUEs52C1USznYrVJLOdhtVks52O1RSwXYLVVLBdi
tU0sF2G1XSwXY7VDLJdgtVMsl2K1SyyXYbVbLJdjtUcsV2C1VyxXYrVPLFdh
tV8sV+N1QCxt/4nXGqwOiuVarA6J5R9Y/SWW67A6LJbrsToilhuwOiqWG7E6
JpabsDoulpuxOiGWW7A6KZZbsTolltuwOi2W27E6I5Y7sDorljuxOieWu7A6
L5a7sboglnuwuiiWe7G6JJb7sLoslvuxuiKWB/C6Kpa2/8brIFbXxPIQVtfF
8i+s/hHLw1jdEMsjWN0Uy6NY3RLLY1j9TyyPY3VbLE9gdUcsT2J1VyxPYXVP
LE9jdV8sz2D1QCzPYvVQLM9h9Ugsz2P1WCwvYPVELC9i9VQsL2H1TCwvY/Vc
LK9g9UIsr+L1Uixt/4vXNaxeieV1rF6L5T9Y/SeWN7B6I5Y3sXorlrewsn/Y
OSZtrTzfWd7Gyved5R2s3vOd5V2s3ved5T2sPvCd5X2sPvSd5QOsPvKd5UOs
Pvad5SOsPvGd5WOsPvWd5ROsPvOd5VOsPved5TOsvvCd5XOsvvSd5QusvvKd
5Uu8vvadpe1v/Hder7D61neWr7FK4DvL/7BK6DvLN1gl8p3lW6wS+87StrVK
4jtL29Yqqe8sbVurYN9Z2rZWyXxnadtaJfedpW1rFeI7S9vWKtR3lratVZjv
LG1bq3DfWdq2VhG+s7RtrSJ9Z2nbWkX5ztK2tYr2naVtaxXjO0vb1irWd5a2
rVWc7yxtW69431naTuG/87J21iql7yxtW6tUvrO0ba1S+84yEVZpfGeZGKu0
vrNMglU6sUyKVXqxDMYqg1gmwyqjWCbHKpNYhmCVWSxDscoilmFYZRXLcKyy
iWUEVtnFMhKrHGIZhVVOsYzGKpdYxmCVWyxjscojlnFY5RXLeLzyiaXt/GIY
8EsgbgnFK5E4JRafJOKSVDyCxSGZ3D+53D1E7h0qdw6T+4bLXSPknpFyxyi5
X7TcLUbuFSt3ipP7xMtdAjf5PyhKDd8=
       "]}, {
      1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., 1., Complex[0., 0.3887928757441071], -1.,
        1., Complex[0., 0.3887928757441071], -1., 1., Complex[
       0., 0.3887928757441071], -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, -1., -1., \
-1., -1., -14.769708993319936`, -1., -1., -1., -1., -14.769708993319936`, \
-1., -1., -1., -1., -14.769708993319936`, -1., -1., -1., -1., \
-14.769708993319936`, -1., -1., Complex[0., 0.3887928757441071], 1., -1., 
       Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 1., -1., Complex[
       0., 0.3887928757441071], 1., -1., Complex[0., 0.3887928757441071], 
       1., -1., Complex[0., 0.3887928757441071], 
       1.}}], $CellContext`testCase$$ = 
    3, $CellContext`u$$ = {{
     0., -1.9725061313490702`, -0.763772658328881, -0.37632524147505125`, \
-0.19598597830859957`, -0.11042565888424179`, -0.06714913552985022, \
-0.04407988332861648, -0.031236953818807183`, -0.023896272305994844`, \
-0.019734611642226656`, -0.017594080826931636`, -0.016933461295119318`, \
-0.01759408082693164, -0.019734611642226643`, -0.023896272305994844`, \
-0.031236953818807183`, -0.04407988332861648, -0.06714913552985022, \
-0.11042565888424179`, -0.19598597830859957`, -0.37632524147505125`, \
-0.763772658328881, -1.9725061313490702`, 0.}, {
     0, -4.943130938920946, -1.872236565356333, -0.9298390509009273, \
-0.48384915843131265`, -0.2728385335224602, -0.16598496114280548`, \
-0.1090052997351467, -0.07727160461825074, -0.059128055850973395`, \
-0.04883959661175111, -0.04354698261407798, -0.04191343168535205, \
-0.043546982614077974`, -0.048839596611751114`, -0.05912805585097339, \
-0.07727160461825074, -0.10900529973514672`, -0.16598496114280548`, \
-0.2728385335224601, -0.48384915843131265`, -0.9298390509009274, \
-1.872236565356333, -4.943130938920946, 0}, {
     0, -1.9224999053001706`, -0.7484505173755005, -0.36806826372297996`, \
-0.1917237328527042, -0.1080028901166077, -0.0656687102569223, \
-0.04310370670003875, -0.0305427045203654, -0.023363689614761825`, \
-0.01929390767022812, -0.01720071119263253, -0.016554712056478564`, \
-0.017200711192632532`, -0.019293907670228108`, -0.023363689614761825`, \
-0.0305427045203654, -0.04310370670003875, -0.06566871025692231, \
-0.1080028901166077, -0.19172373285270422`, -0.36806826372297996`, \
-0.7484505173755005, -1.9224999053001706`, 0}, {
     0, -0.9512368052270154, -0.3666639126316323, -0.18104906328518708`, \
-0.0942471015656051, -0.05311284983354135, -0.03229936613598466, \
-0.02120426807878366, -0.015027069840027676`, -0.011496185374208028`, \
-0.009494345766126734, -0.008464684536936126, -0.00814690243117052, \
-0.008464684536936128, -0.009494345766126731, -0.011496185374208032`, \
-0.015027069840027675`, -0.021204268078783662`, -0.032299366135984664`, \
-0.05311284983354133, -0.09424710156560513, -0.18104906328518702`, \
-0.3666639126316324, -0.9512368052270155, 0}, {
     0, -0.49527680654699646`, -0.19106783547027167`, -0.09429002626344629, \
-0.0490927453096736, -0.027664647744900163`, -0.01682368179533193, \
-0.011044528704110561`, -0.007827016938526766, -0.005987893635127829, \
-0.004945203559945784, -0.004408889173498592, -0.004243367802669957, \
-0.004408889173498592, -0.004945203559945787, -0.005987893635127829, \
-0.007827016938526764, -0.011044528704110561`, -0.01682368179533193, \
-0.027664647744900163`, -0.049092745309673586`, -0.09429002626344629, \
-0.19106783547027162`, -0.49527680654699646`, 0}, {
     0, -0.27929961774069273`, -0.10762408186243896`, -0.05313476192023387, \
-0.02766321808810046, -0.01558947449803655, -0.009480609145918546, \
-0.006224028694380999, -0.004410907124878779, -0.0033745151898151205`, \
-0.0027869265721413364`, -0.002484694283721866, -0.0023914167339368258`, \
-0.0024846942837218654`, -0.0027869265721413364`, -0.0033745151898151213`, \
-0.004410907124878778, -0.006224028694380998, -0.009480609145918547, \
-0.015589474498036554`, -0.027663218088100468`, -0.053134761920233864`, \
-0.10762408186243898`, -0.27929961774069273`, 0}, {
     0, -0.16993344648090447`, -0.06543649901276974, -0.032313044205227216`, \
-0.01682288532353126, -0.009480660945028682, -0.005765682036595321, \
-0.0037852287251880275`, -0.002682584805902885, -0.002052299829305774, \
-0.0016949531997720892`, -0.001511147305126127, -0.0014544193886900471`, \
-0.0015111473051261275`, -0.0016949531997720877`, -0.0020522998293057743`, \
-0.002682584805902885, -0.0037852287251880267`, -0.005765682036595321, \
-0.009480660945028682, -0.016822885323531267`, -0.032313044205227216`, \
-0.06543649901276974, -0.16993344648090447`, 0}, {
     0, -0.11160758288280391`, -0.04295004404797598, -0.021213342605741394`, \
-0.011043992149274841`, -0.006224060108398865, -0.003785226689110076, \
-0.002485070637785233, -0.0017611828218795432`, -0.0013473957885570304`, \
-0.0011127933169449672`, -0.0009921219303343682, -0.0009548790991981902, \
-0.000992121930334368, -0.0011127933169449672`, -0.0013473957885570297`, \
-0.0017611828218795436`, -0.002485070637785234, -0.0037852266891100755`, \
-0.006224060108398864, -0.011043992149274841`, -0.021213342605741394`, \
-0.04295004404797598, -0.11160758288280384`, 0}, {
     0, -0.0791217004517139, -0.030433110744011883`, -0.01503356285526588, \
-0.007826632228134378, -0.004410929940780116, -0.0026825834641638524`, \
-0.0017611829085308044`, -0.0012481699289733767`, -0.0009549204996763105, \
-0.0007886576225204294, -0.0007031374406748532, -0.0006767432833045696, \
-0.0007031374406748532, -0.0007886576225204294, -0.0009549204996763107, \
-0.0012481699289733762`, -0.0017611829085308049`, -0.0026825834641638507`, \
-0.004410929940780116, -0.007826632228134376, -0.01503356285526588, \
-0.030433110744011883`, -0.0791217004517139, 0}, {
     0, -0.06054694322847162, -0.02327943160234369, -0.011501189388438726`, \
-0.005987596419366251, -0.0033745328437054744`, -0.0020522987799261893`, \
-0.00134739585048215, -0.0009549204956922862, -0.0007305717195984914, \
-0.0006033727209356857, -0.000537945531916407, -0.0005177526609434249, \
-0.0005379455319164069, -0.0006033727209356857, -0.0007305717195984913, \
-0.0009549204956922862, -0.0013473958504821495`, -0.0020522987799261893`, \
-0.0033745328437054744`, -0.0059875964193662505`, -0.011501189388438738`, \
-0.02327943160234369, -0.06054694322847162, 0}, {
     0, -0.05001347743675684, -0.019224076378624187`, -0.009498500145082406, \
-0.004944956392523846, -0.002786941278558041, -0.0016949523247267364`, \
-0.0011127933690413165`, -0.0007886576194381929, -0.000603372721133192, \
-0.0004983214417867007, -0.00044428623682730625`, -0.00042760927037446453`, \
-0.00044428623682730625`, -0.0004983214417867007, -0.000603372721133192, \
-0.0007886576194381931, -0.0011127933690413168`, -0.0016949523247267364`, \
-0.002786941278558041, -0.00494495639252385, -0.009498500145082404, \
-0.019224076378624194`, -0.05001347743675684, 0}, {
     0, -0.044594659992237405`, -0.017138321856706832`, \
-0.008468400013508027, -0.004408667894782442, -0.00248470746280374, \
-0.0015111465201578613`, -0.000992121977088915, -0.0007031374378887565, \
-0.0005379455320815343, -0.00044428623681676705`, -0.0003961106653385121, \
-0.00038124215726397, -0.0003961106653385122, -0.00044428623681676705`, \
-0.0005379455320815343, -0.0007031374378887565, -0.0009921219770889147, \
-0.0015111465201578615`, -0.002484707462803739, -0.004408667894782442, \
-0.008468400013508027, -0.017138321856706835`, -0.04459465999223739, 0}, {
     0, -0.042922131028904256`, -0.016494622829260213`, \
-0.008150482159118197, -0.004243154536682085, -0.0023914294400004606`, \
-0.0014544186316518362`, -0.0009548791443051532, -0.0006767432806169729, \
-0.0005177526611036723, -0.00042760927036499853`, -0.00038124215726461047`, \
-0.00036693179383821383`, -0.00038124215726461047`, -0.00042760927036499853`, \
-0.0005177526611036723, -0.0006767432806169731, -0.0009548791443051531, \
-0.0014544186316518366`, -0.0023914294400004606`, -0.004243154536682085, \
-0.008150482159118195, -0.016494622829260213`, -0.042922131028904256`, 0}, {
     0, -0.04459465999223739, -0.017138321856706832`, -0.008468400013508032, \
-0.004408667894782442, -0.002484707462803738, -0.0015111465201578615`, \
-0.0009921219770889147, -0.0007031374378887565, -0.0005379455320815343, \
-0.0004442862368167671, -0.00039611066533851196`, -0.00038124215726396943`, \
-0.0003961106653385122, -0.000444286236816767, -0.0005379455320815346, \
-0.0007031374378887565, -0.000992121977088915, -0.0015111465201578613`, \
-0.0024847074628037385`, -0.004408667894782442, -0.008468400013508032, \
-0.017138321856706832`, -0.04459465999223739, 0}, {
     0, -0.05001347743675684, -0.019224076378624194`, -0.009498500145082404, \
-0.004944956392523846, -0.002786941278558041, -0.0016949523247267364`, \
-0.0011127933690413168`, -0.000788657619438193, -0.0006033727211331919, \
-0.0004983214417867007, -0.0004442862368273063, -0.0004276092703744645, \
-0.00044428623682730615`, -0.0004983214417867007, -0.000603372721133192, \
-0.000788657619438193, -0.0011127933690413165`, -0.001694952324726738, \
-0.002786941278558041, -0.004944956392523847, -0.009498500145082404, \
-0.01922407637862419, -0.05001347743675684, 0}, {
     0, -0.06054694322847162, -0.02327943160234369, -0.011501189388438733`, \
-0.0059875964193662505`, -0.0033745328437054757`, -0.0020522987799261893`, \
-0.0013473958504821497`, -0.0009549204956922862, -0.0007305717195984922, \
-0.0006033727209356857, -0.000537945531916407, -0.0005177526609434249, \
-0.000537945531916407, -0.0006033727209356857, -0.0007305717195984913, \
-0.0009549204956922864, -0.0013473958504821503`, -0.0020522987799261893`, \
-0.0033745328437054735`, -0.0059875964193662505`, -0.011501189388438733`, \
-0.02327943160234369, -0.06054694322847164, 0}, {
     0, -0.0791217004517139, -0.030433110744011883`, -0.01503356285526588, \
-0.00782663222813438, -0.004410929940780117, -0.0026825834641638507`, \
-0.0017611829085308049`, -0.0012481699289733765`, -0.0009549204996763107, \
-0.0007886576225204295, -0.0007031374406748532, -0.0006767432833045697, \
-0.0007031374406748532, -0.0007886576225204293, -0.0009549204996763108, \
-0.0012481699289733767`, -0.001761182908530804, -0.0026825834641638516`, \
-0.004410929940780116, -0.00782663222813438, -0.01503356285526588, \
-0.030433110744011883`, -0.0791217004517139, 0}, {
     0, -0.1116075828828039, -0.04295004404797598, -0.021213342605741387`, \
-0.011043992149274841`, -0.006224060108398866, -0.003785226689110076, \
-0.0024850706377852337`, -0.0017611828218795436`, -0.0013473957885570301`, \
-0.0011127933169449672`, -0.0009921219303343691, -0.0009548790991981902, \
-0.000992121930334368, -0.0011127933169449674`, -0.0013473957885570308`, \
-0.001761182821879543, -0.0024850706377852337`, -0.0037852266891100768`, \
-0.006224060108398867, -0.011043992149274841`, -0.02121334260574139, \
-0.04295004404797598, -0.1116075828828039, 0}, {
     0, -0.16993344648090447`, -0.06543649901276975, -0.03231304420522721, \
-0.016822885323531264`, -0.009480660945028682, -0.005765682036595321, \
-0.003785228725188027, -0.0026825848059028865`, -0.002052299829305774, \
-0.0016949531997720877`, -0.0015111473051261277`, -0.0014544193886900465`, \
-0.0015111473051261275`, -0.001694953199772088, -0.0020522998293057743`, \
-0.002682584805902885, -0.0037852287251880262`, -0.005765682036595321, \
-0.009480660945028682, -0.016822885323531264`, -0.03231304420522721, \
-0.06543649901276972, -0.16993344648090447`, 0}, {
     0, -0.27929961774069284`, -0.10762408186243894`, -0.05313476192023386, \
-0.027663218088100468`, -0.015589474498036547`, -0.009480609145918547, \
-0.006224028694381002, -0.004410907124878778, -0.003374515189815122, \
-0.0027869265721413364`, -0.0024846942837218632`, -0.002391416733936826, \
-0.002484694283721866, -0.0027869265721413364`, -0.003374515189815121, \
-0.004410907124878778, -0.0062240286943809975`, -0.009480609145918549, \
-0.01558947449803655, -0.02766321808810045, -0.053134761920233864`, \
-0.10762408186243894`, -0.2792996177406929, 0}, {
     0, -0.49527680654699635`, -0.1910678354702717, -0.09429002626344628, \
-0.04909274530967357, -0.027664647744900163`, -0.01682368179533192, \
-0.01104452870411056, -0.00782701693852676, -0.00598789363512783, \
-0.0049452035599457855`, -0.004408889173498594, -0.004243367802669955, \
-0.004408889173498593, -0.004945203559945785, -0.005987893635127829, \
-0.007827016938526766, -0.011044528704110561`, -0.016823681795331932`, \
-0.02766464774490016, -0.0490927453096736, -0.09429002626344628, \
-0.1910678354702717, -0.49527680654699646`, 0}, {
     0, -0.9512368052270154, -0.36666391263163234`, -0.18104906328518708`, \
-0.09424710156560513, -0.05311284983354132, -0.032299366135984664`, \
-0.021204268078783662`, -0.015027069840027675`, -0.011496185374208035`, \
-0.009494345766126734, -0.008464684536936128, -0.00814690243117052, \
-0.008464684536936126, -0.009494345766126733, -0.011496185374208033`, \
-0.015027069840027675`, -0.021204268078783655`, -0.03229936613598465, \
-0.05311284983354135, -0.09424710156560515, -0.18104906328518705`, \
-0.36666391263163234`, -0.9512368052270151, 0}, {
     0, -1.9224999053001708`, -0.7484505173755004, -0.36806826372298, \
-0.19172373285270417`, -0.10800289011660773`, -0.0656687102569223, \
-0.04310370670003875, -0.0305427045203654, -0.023363689614761825`, \
-0.01929390767022811, -0.017200711192632532`, -0.016554712056478564`, \
-0.01720071119263253, -0.019293907670228105`, -0.023363689614761825`, \
-0.0305427045203654, -0.04310370670003875, -0.06566871025692235, \
-0.1080028901166077, -0.19172373285270414`, -0.3680682637229799, \
-0.7484505173755005, -1.9224999053001706`, 0}, {
     0, -4.943130938920946, -1.872236565356333, -0.9298390509009273, \
-0.48384915843131265`, -0.27283853352245996`, -0.16598496114280548`, \
-0.1090052997351467, -0.07727160461825074, -0.059128055850973395`, \
-0.04883959661175111, -0.04354698261407798, -0.04191343168535205, \
-0.04354698261407797, -0.048839596611751114`, -0.05912805585097339, \
-0.07727160461825074, -0.10900529973514671`, -0.16598496114280548`, \
-0.2728385335224601, -0.48384915843131265`, -0.9298390509009273, \
-1.872236565356333, -4.943130938920946, 0}, {
     0., -1.9725061313490704`, -0.7637726583288807, -0.3763252414750513, \
-0.1959859783085995, -0.1104256588842418, -0.06714913552985022, \
-0.04407988332861648, -0.031236953818807183`, -0.023896272305994844`, \
-0.01973461164222665, -0.01759408082693164, -0.016933461295119318`, \
-0.017594080826931636`, -0.01973461164222664, -0.023896272305994844`, \
-0.031236953818807183`, -0.04407988332861648, -0.06714913552985027, \
-0.11042565888424179`, -0.19598597830859948`, -0.3763252414750512, \
-0.763772658328881, -1.9725061313490702`, 0.}}, $CellContext`westbc$$ = 
    1& , $CellContext`westBCconstantValue$$ = 0, $CellContext`westBCtype$$ = 
    "Dirichlet", $CellContext`x0$$ = 0., $CellContext`y0$$ = 
    0., $CellContext`zAxisScale$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Item[
            Grid[{{
               Grid[{{
                  Button[
                   Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}, {
                  Button[
                   Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
               Grid[{{
                  Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                  Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                  Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                  Text[
                   Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}, Alignment -> Center, 
             Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
           Item[
            Grid[{{
               PopupMenu[
                
                Dynamic[$CellContext`plotToShow$$, {$CellContext`plotToShow$$ = \
#; $CellContext`event$$ = "plot_changed", 
                  AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                "solution and contour" -> Style["solution + contour", 11], 
                 "solution and density" -> Style["solution + density", 11], 
                 "solution data" -> Style["solution data", 11], 
                 "system matrix information" -> Style["system matrix", 11]}, 
                ImageSize -> All, ContinuousAction -> False], 
               Grid[{{
                  RadioButtonBar[
                   
                   Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                  Style["plot", 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"face", "grids"}], 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
             Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
               Thickness[0.005], 
               GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
         Spacings -> {0.2, 0}, Alignment -> {Center, Top}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                  SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                   Alignment -> Center], SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}], 
             Style["source", 11] -> Item[
               Grid[{{
                  Item[
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                  SpanFromLeft}, {
                  Spacer[2], 
                  Text[
                   Style["a", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["b", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["c", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Item[
                   Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                    Alignment -> Center], SpanFromLeft}, {
                  Dynamic[
                   Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                Spacings -> {0.3, 0.2}, Alignment -> Left, 
                Frame -> {None, All}, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
         Center]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`testCase$$], 1}, 0}, {{
       Hold[$CellContext`angle$$], 0.}, 0}, {{
       Hold[$CellContext`systemMatrix$$], {}}, 0}, {{
       Hold[$CellContext`rightHandVector$$], {}}, 0}, {{
       Hold[$CellContext`zAxisScale$$], False}, 0}, {{
       Hold[$CellContext`centerGrid$$], True}, 0}, {{
       Hold[$CellContext`event$$], "run_button"}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`addFaceGrids$$], False}, 0}, {{
       Hold[$CellContext`plotPerformanceGoal$$], "Quality"}, 0}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 4]}, 0}, {{
       Hold[$CellContext`lenX$$], 1}, 0}, {{
       Hold[$CellContext`lenY$$], 1}, 0}, {{
       Hold[$CellContext`kValue$$], 5.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`c$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`y0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`stdy$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 1}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution and contour"}, 0}, {{
       Hold[$CellContext`northBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`northbc$$], 1& }, 0}, {{
       Hold[$CellContext`northBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`southBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`southbc$$], 1& }, 0}, {{
       Hold[$CellContext`southBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`forceGrid$$], {{-1, -1, -1, -1, -1}, {-1, -1, -1, \
-1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}}, 
      0}, {{
       Hold[$CellContext`grid$$], CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

       "]}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}}, Typeset`size$$ = {
    270., {201., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
        False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
        True, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = "Dirichlet", $CellContext`event$$ = 
        "run_button", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceGrid$$ = {{-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, \
-1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}, \
$CellContext`forceTermSelection$$ = 1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

         "], $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        Rational[1, 4], $CellContext`kValue$$ = 5., $CellContext`lenX$$ = 
        1, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
        1& , $CellContext`northBCconstantValue$$ = 
        0, $CellContext`northBCtype$$ = 
        "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
        "Quality", $CellContext`plotToShow$$ = 
        "solution and contour", $CellContext`rightHandVector$$ = {}, \
$CellContext`southbc$$ = 1& , $CellContext`southBCconstantValue$$ = 
        0, $CellContext`southBCtype$$ = "Sommerfeld", $CellContext`stdx$$ = 
        0.3, $CellContext`stdy$$ = 
        0.3, $CellContext`systemMatrix$$ = {}, $CellContext`testCase$$ = 
        1, $CellContext`u$$ = {}, $CellContext`westbc$$ = 
        1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
        0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; {$CellContext`finalDisplayImage$$, \
$CellContext`u$$, $CellContext`forceGrid$$, $CellContext`grid$$, \
$CellContext`systemMatrix$$, $CellContext`rightHandVector$$} = \
$CellContext`process[$CellContext`u$$, $CellContext`forceGrid$$, \
$CellContext`grid$$, $CellContext`systemMatrix$$, \
$CellContext`rightHandVector$$, $CellContext`finalDisplayImage$$, \
$CellContext`event$$, $CellContext`h$$, $CellContext`h$$, \
$CellContext`lenX$$, $CellContext`lenY$$, $CellContext`centerGrid$$, \
$CellContext`addFaceGrids$$, $CellContext`plotPerformanceGoal$$, \
$CellContext`kValue$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`x0$$, $CellContext`y0$$, $CellContext`stdx$$, \
$CellContext`stdy$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`northBCtype$$, \
$CellContext`northbc$$, $CellContext`northBCconstantValue$$, \
$CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, \
$CellContext`southBCtype$$, $CellContext`southbc$$, \
$CellContext`southBCconstantValue$$, $CellContext`zAxisScale$$, \
$CellContext`angle$$, 
          Unevaluated[$CellContext`gstatusMessage$$]]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray], ImageMargins -> 0]), "Specifications" :> {
        Item[
         Grid[{{
            Item[
             Grid[{{
                Grid[{{
                   Button[
                    Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}, {
                   Button[
                    Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
                Grid[{{
                   Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                   Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                   Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                   Text[
                    Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                 Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                 Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]]}}, Alignment -> Center, 
              Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
            Item[
             Grid[{{
                PopupMenu[
                 
                 Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; $CellContext`event$$ = "plot_changed", 
                   AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                 "solution and contour" -> Style["solution + contour", 11], 
                  "solution and density" -> Style["solution + density", 11], 
                  "solution data" -> Style["solution data", 11], 
                  "system matrix information" -> Style["system matrix", 11]}, 
                 ImageSize -> All, ContinuousAction -> False], 
                Grid[{{
                   RadioButtonBar[
                    
                    Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                   Style["plot", 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"face", "grids"}], 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
              Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
          Spacings -> {0.2, 0}, Alignment -> {Center, Top}], ControlPlacement -> 
         Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                   SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                    Alignment -> Center], SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                 Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                 FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}], 
              Style["source", 11] -> Item[
                Grid[{{
                   Item[
                    PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                   SpanFromLeft}, {
                   Spacer[2], 
                   Text[
                    Style["a", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["b", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["c", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Item[
                    Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                     Alignment -> Center], SpanFromLeft}, {
                   Dynamic[
                    Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                 Spacings -> {0.3, 0.2}, Alignment -> Left, 
                 Frame -> {None, All}, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
          Center], ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`testCase$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`angle$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`systemMatrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`rightHandVector$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`zAxisScale$$, False}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, True}, 0, ControlType -> 
         None}, {{$CellContext`event$$, "run_button"}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`addFaceGrids$$, False}, 0, ControlType -> 
         None}, {{$CellContext`plotPerformanceGoal$$, "Quality"}, 0, 
         ControlType -> None}, {{$CellContext`h$$, 
          Rational[1, 4]}, 0, ControlType -> None}, {{$CellContext`lenX$$, 1},
          0, ControlType -> None}, {{$CellContext`lenY$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 5.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`c$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`y0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`stdy$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution and contour"}, 0, 
         ControlType -> None}, {{$CellContext`northBCtype$$, "Sommerfeld"}, 0,
          ControlType -> None}, {{$CellContext`northbc$$, 1& }, 0, 
         ControlType -> None}, {{$CellContext`northBCconstantValue$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, 
         ControlType -> None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`southBCtype$$, "Sommerfeld"}, 0, ControlType -> 
         None}, {{$CellContext`southbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`southBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`forceGrid$$, {{-1, -1, -1, -1, -1}, {-1, -1, \
-1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, \
-1}}}, 0, ControlType -> None}, {{$CellContext`grid$$, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

          "]}, 0, ControlType -> None}, {{$CellContext`u$$, {}}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        ContinuousAction -> False, SynchronousInitialization -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{611., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`$forceGrid, 
          Blank[]], 
         Pattern[$CellContext`$grid, 
          Blank[]], 
         Pattern[$CellContext`$AA, 
          Blank[]], 
         Pattern[$CellContext`$rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`$finalDisplayImage, 
          Blank[]], 
         Pattern[$CellContext`event, 
          Blank[]], 
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`AA = \
$CellContext`$AA, $CellContext`forceGrid = $CellContext`$forceGrid, \
$CellContext`grid = $CellContext`$grid, $CellContext`rightHandVector = \
$CellContext`$rightHandVector, $CellContext`finalDisplayImage = \
$CellContext`$finalDisplayImage}, If[
           
           StringMatchQ[$CellContext`event, {
            "reset", 
             "run_button"}], {$CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`rightHandVector} = \
$CellContext`initializeSystem[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid, \
$CellContext`forceTermSelection, $CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`x0, $CellContext`stdx, $CellContext`y0, \
$CellContext`stdy, $CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue, $CellContext`kValue, \
$CellContext`angle]]; If[
           Or[$CellContext`event == "run_button", 
            And[
             
             StringMatchQ[$CellContext`event, {
              "reset", "reset", "k_changed"}], 
             
             StringMatchQ[$CellContext`plotToShow, {
              "system matrix information", 
               "solution data"}]]], $CellContext`u = \
$CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype]]; \
$CellContext`finalDisplayImage = $CellContext`makeFinalPlot[$CellContext`u, \
$CellContext`AA, $CellContext`Lx, $CellContext`Ly, $CellContext`grid, \
$CellContext`plotToShow, $CellContext`plotPerformanceGoal, \
$CellContext`addFaceGrids, $CellContext`zAxisScale]; \
$CellContext`gstatusMessage = 
          "ready.."; {$CellContext`finalDisplayImage, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`initializeSystem[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`nCol, $CellContext`nRow, $CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}, {$CellContext`nRow, $CellContext`nCol} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`u = 
           Table[0., {$CellContext`$nRow}, {$CellContext`$nCol}]]; \
$CellContext`grid = $CellContext`makeGridCommon[$CellContext`hx, \
$CellContext`hy, $CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid]; \
$CellContext`forceGrid = Which[$CellContext`forceTermSelection == 1, 
            
            With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, 
             
             Table[$CellContext`a, {$CellContext`$nRow}, \
{$CellContext`$nCol}]], $CellContext`forceTermSelection == 2, 
            Map[$CellContext`evaluateForceCommon[
              Part[#, 1], 
              
              Part[#, 2], $CellContext`a, $CellContext`b, $CellContext`c]& , \
$CellContext`grid, {2}], $CellContext`forceTermSelection == 3, 
            
            Map[$CellContext`a 
             Exp[(Part[#, 1] - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + (Part[#, 2] - $CellContext`y0)^2/(
                2 $CellContext`stdy^2)]& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 4, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] + 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 5, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}]]; $CellContext`forceGrid = 
          Re[$CellContext`forceGrid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue]; {$CellContext`AA, \
$CellContext`rightHandVector} = \
$CellContext`makeSystemMatrixAndRightHandSide[$CellContext`u, \
$CellContext`hx, $CellContext`kValue, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype, \
$CellContext`forceGrid, $CellContext`angle]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`getSolutionDomainDimensions[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]]] := {$CellContext`Ly/$CellContext`hy + 
         1, $CellContext`Lx/$CellContext`hx + 1}, $CellContext`makeGridCommon[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]]] := 
       Module[{$CellContext`i, $CellContext`j, $CellContext`nx, \
$CellContext`ny, $CellContext`grid}, {$CellContext`ny, $CellContext`nx} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$icfrom = 
            Floor[$CellContext`ny/2], $CellContext`$icto = -
             Floor[$CellContext`ny/2], $CellContext`$jcfrom = -
             Floor[$CellContext`nx/2], $CellContext`$jcto = 
            Floor[$CellContext`nx/2], $CellContext`$ifrom = $CellContext`ny - 
             1, $CellContext`$jto = $CellContext`nx - 1}, $CellContext`grid = 
           If[$CellContext`centerGrid, 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$icfrom, $CellContext`$icto, \
-1}, {$CellContext`j, $CellContext`$jcfrom, $CellContext`$jcto}], 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$ifrom, 
               0, -1}, {$CellContext`j, 0, $CellContext`$jto}]]]; 
         N[$CellContext`grid]], $CellContext`evaluateForceCommon = ReplaceAll[
         Unevaluated[#3 #^#6 + #4 #2^#7], HoldPattern[0.^0.] :> 
         0.]& , $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`i, $CellContext`j}, {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; 
         If[$CellContext`northBCtype == "Dirichlet", Part[$CellContext`u, 1, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`northBCconstantValue 
            Table[
              $CellContext`northbc[
               
               Part[$CellContext`grid, 1, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 1}]]; 
         If[$CellContext`westBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[2, $CellContext`nRow - 1], 
             1] = $CellContext`westBCconstantValue Table[
              $CellContext`westbc[
               
               Part[$CellContext`grid, $CellContext`i, 1, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`eastBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[
             2, $CellContext`nRow - 
              1], $CellContext`nCol] = $CellContext`eastBCconstantValue Table[
              $CellContext`eastbc[
               
               Part[$CellContext`grid, $CellContext`i, $CellContext`nCol, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           Part[$CellContext`u, $CellContext`nRow, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`southBCconstantValue 
            Table[
              $CellContext`southbc[
               
               Part[$CellContext`grid, $CellContext`nRow, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 
               1}]]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 1, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 
            1, $CellContext`nCol, $CellContext`nCol, $CellContext`nRow]; \
$CellContext`u = $CellContext`setCornerNodeCommon[$CellContext`u, \
$CellContext`nRow, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`nCol, $CellContext`nRow]], \
$CellContext`setCornerNodeCommon[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`nx, 
          Blank[]], 
         Pattern[$CellContext`ny, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Part[$CellContext`u, 1, 1] = Mean[{
              Part[$CellContext`u, 2, 1], 
              Part[$CellContext`u, 1, 2]}], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nx], 
           Part[$CellContext`u, 1, $CellContext`nx] = Mean[{
              Part[$CellContext`u, 1, $CellContext`nx - 1], 
              Part[$CellContext`u, 2, $CellContext`nx]}], 
           And[$CellContext`i == $CellContext`ny, $CellContext`j == 1], 
           Part[$CellContext`u, $CellContext`ny, 1] = Mean[{
              Part[$CellContext`u, $CellContext`ny - 1, 1], 
              Part[$CellContext`u, $CellContext`ny, 2]}], 
           
           And[$CellContext`i == $CellContext`ny, $CellContext`j == \
$CellContext`nx], Part[$CellContext`u, $CellContext`ny, $CellContext`nx] = 
           Mean[{
              Part[$CellContext`u, $CellContext`ny, $CellContext`nx - 1], 
              
              Part[$CellContext`u, $CellContext`ny - 
               1, $CellContext`nx]}]]; $CellContext`u], \
$CellContext`makeSystemMatrixAndRightHandSide[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`AA, $CellContext`k1, $CellContext`k2, \
$CellContext`i, $CellContext`j, $CellContext`n = 
          0, $CellContext`eqs, $CellContext`vars, $CellContext`uu, \
$CellContext`U, $CellContext`An, $CellContext`b, $CellContext`keepList, \
$CellContext`nRow, $CellContext`nCol, $CellContext`sin1, $CellContext`sin2, \
$CellContext`omega, $CellContext`sum, $CellContext`prod}, $CellContext`sum = 
          2. $CellContext`h^2; $CellContext`prod = 
          1. $CellContext`h^4; $CellContext`omega = 
          4. BesselJ[0, Sqrt[$CellContext`kValue] $CellContext`h] + (
             Sqrt[$CellContext`kValue] $CellContext`h)^2; $CellContext`k1 = 
          Sqrt[$CellContext`kValue] Cos[$CellContext`angle]; $CellContext`k2 = 
          Sqrt[$CellContext`kValue] 
           Cos[$CellContext`angle]; $CellContext`sin1 = 
          Simplify[(2. I) 
            Sin[$CellContext`k1 $CellContext`h]]; $CellContext`sin2 = 
          Simplify[(2. I) 
            Sin[$CellContext`k2 $CellContext`h]]; {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; $CellContext`U = 
          
          Array[$CellContext`uu[#, #2]& , {$CellContext`nRow, \
$CellContext`nCol}]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`eqs = 
            Table[0., {$CellContext`$nRow $CellContext`$nCol}]; \
$CellContext`vars = $CellContext`eqs]; 
         For[$CellContext`i = 1, $CellContext`i <= $CellContext`nRow, 
           Increment[$CellContext`i], 
           For[$CellContext`j = 1, $CellContext`j <= $CellContext`nCol, 
            Increment[$CellContext`j], Increment[$CellContext`n]; If[
              Or[
               And[$CellContext`i == 1, $CellContext`j == 1], 
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
               And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
               
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol]], {$CellContext`eqs, $CellContext`vars} = \
$CellContext`processCornersCommon[$CellContext`u, $CellContext`eqs, \
$CellContext`n, $CellContext`U, $CellContext`i, $CellContext`j, \
$CellContext`vars, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`southBCtype, $CellContext`eastBCtype, $CellContext`nRow, \
$CellContext`nCol], 
              If[
               
               Or[$CellContext`i == 
                1, $CellContext`i == $CellContext`nRow, $CellContext`j == 
                1, $CellContext`j == $CellContext`nCol], 
               Which[$CellContext`i == 1, 
                
                If[$CellContext`northBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i + 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`i == $CellContext`nRow, 
                
                If[$CellContext`southBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i - 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == 1, 
                
                If[$CellContext`westBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j + 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j + 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == $CellContext`nCol, 
                
                If[$CellContext`eastBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j - 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]]], 
               Part[$CellContext`vars, $CellContext`n] = 
                Part[$CellContext`U, $CellContext`i, $CellContext`j]; 
               Part[$CellContext`eqs, $CellContext`n] = -
                   Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i - 
                   1, $CellContext`j] + $CellContext`omega 
                   Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j + 
                   1] - ($CellContext`kValue $CellContext`h)^2 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == \
$CellContext`h^2 
                  Part[$CellContext`forceGrid, $CellContext`i, \
$CellContext`j]]]]]; $CellContext`vars = 
          Flatten[$CellContext`U]; $CellContext`AA = 
          CoefficientArrays[$CellContext`eqs, $CellContext`vars]; \
$CellContext`keepList = \
$CellContext`obtainListOfRowsToKeep[$CellContext`nRow, $CellContext`nCol, \
$CellContext`northBCtype, $CellContext`southBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype]; $CellContext`An = Part[
            
            Part[$CellContext`AA, 
             2], $CellContext`keepList, $CellContext`keepList]; \
$CellContext`b = -Part[
             
             Part[$CellContext`AA, 
              1], $CellContext`keepList]; {$CellContext`An, $CellContext`b}], \
$CellContext`processCornersCommon[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`$eqs, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`U, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`$vars, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]]] := 
       Module[{$CellContext`vars = $CellContext`$vars, $CellContext`eqs = \
$CellContext`$eqs}, 
         Part[$CellContext`vars, $CellContext`n] = 
          Part[$CellContext`U, $CellContext`i, $CellContext`j]; Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == Mean[{
                 Part[$CellContext`u, 1, 2], 
                 Part[$CellContext`u, 2, 1]}], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, 1, 2], 
                Part[$CellContext`U, 2, 1]}] == 0], 
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`u, $CellContext`i, 2], 
                 Part[$CellContext`u, $CellContext`i - 1, 1]}] == 0, 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, $CellContext`nRow, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, 2], 
                Part[$CellContext`U, $CellContext`i - 1, 1]}] == 0.], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0., 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, $CellContext`nCol]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0.; Null], 
           
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
              0., Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
              Part[$CellContext`u, $CellContext`nRow, $CellContext`nCol]], 
            True, Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
             0.]]; {$CellContext`eqs, $CellContext`vars}], \
$CellContext`obtainListOfRowsToKeep[
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := 
       Module[{$CellContext`rowsToRemove = {}}, 
         If[$CellContext`northBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[1, $CellContext`nCol]]; Null]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[($CellContext`nRow - 1) $CellContext`nCol + 
              1, $CellContext`nRow $CellContext`nCol]]; Null]; 
         If[$CellContext`westBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[
             1, $CellContext`nRow $CellContext`nCol, $CellContext`nCol]]; 
           Null]; If[$CellContext`eastBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[$CellContext`nCol, $CellContext`nRow $CellContext`nCol, \
$CellContext`nCol]]; Null]; Complement[
           Range[$CellContext`nRow $CellContext`nCol], 
           Flatten[$CellContext`rowsToRemove]]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`x, $CellContext`loc, $CellContext`mask}, \
{$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`x = 
          LinearSolve[$CellContext`AA, $CellContext`rightHandVector]; \
$CellContext`mask = $CellContext`setUnknownsMask[{$CellContext`nRow, \
$CellContext`nCol}, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype, $CellContext`southBCtype]; $CellContext`loc = 
          Position[$CellContext`mask, 1]; 
         MapThread[($CellContext`u = 
           ReplacePart[$CellContext`u, # -> #2])& , {$CellContext`loc, \
$CellContext`x}]; Re[$CellContext`u]], $CellContext`setUnknownsMask[{
          Pattern[$CellContext`nRow, 
           Blank[]], 
          Pattern[$CellContext`nCol, 
           Blank[]]}, 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`mask}, $CellContext`mask = 
          Table[0, {$CellContext`nRow}, {$CellContext`nCol}]; Which[
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`northBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -1]] = 1]; $CellContext`mask], $CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]]] := 
       Module[{$CellContext`tmp, $CellContext`finalDisplayImage, \
$CellContext`nRow, $CellContext`nCol, $CellContext`plot, $CellContext`n, \
$CellContext`dim, $CellContext`cond}, {$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`tmp = 
          MapThread[
           Append[#, #2]& , {$CellContext`grid, $CellContext`u}, 
            2]; $CellContext`tmp = Chop[
            Flatten[$CellContext`tmp, 1]]; If[
           
           Or[$CellContext`plotToShow == 
            "solution and density", $CellContext`plotToShow == 
            "solution and contour"], $CellContext`plot = Item[
             
             ListPlot3D[$CellContext`tmp, 
              PerformanceGoal -> $CellContext`plotPerformanceGoal, 
              ImagePadding -> {{20, 15}, {15, 1}}, PlotRange -> All, 
              
              If[$CellContext`zAxisScale == True, 
               BoxRatios -> {$CellContext`Lx, $CellContext`Ly, 
                 Min[{$CellContext`Lx, $CellContext`Ly}]}, {}], AxesLabel -> {
                Text[
                 Style["x", Italic, 12]], 
                Text[
                 Style["y", Italic, 12]], None}, TicksStyle -> 9, 
              SphericalRegion -> True, 
              
              If[$CellContext`addFaceGrids, FaceGrids -> All, FaceGrids -> 
               None], ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}]]]; 
         Which[$CellContext`plotToShow == 
           "solution and density", $CellContext`finalDisplayImage = 
           Grid[{{$CellContext`plot}, {
               Item[
                
                ListDensityPlot[$CellContext`tmp, PlotRange -> All, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution and contour", $CellContext`finalDisplayImage = Grid[{{
               Item[$CellContext`plot]}, {
               Item[
                
                ListContourPlot[$CellContext`tmp, Contours -> 10, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             40, $CellContext`ContentSizeW], $CellContext`plotToShow == 
           "system matrix information", $CellContext`cond = Part[
              LUDecomposition[$CellContext`AA], 3]; $CellContext`dim = 
            Dimensions[$CellContext`AA]; $CellContext`n = Min[30, 
              First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
            Grid[{{
                Style[
                 Text[
                  Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                Style[
                 Text[
                  Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                Style[
                 Text["eigenvalues"], 12]}, {
                $CellContext`makeScrolledPane[
                 Transpose[
                  Partition[
                   Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`n], 1]], 
                 45, $CellContext`ContentSizeW - 20]}, {
                Style[
                 Text["A matrix"], 12]}, {
                $CellContext`makeScrolledPane[
                 Normal[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`n], 
                   Span[1, $CellContext`n]]], $CellContext`ContentSizeH - 
                 140, $CellContext`ContentSizeW]}}]]; \
$CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       260, $CellContext`ContentSizeH = 405, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> True], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           2, $CellContext`forceTermUsed = $CellContext`a \
$CellContext`x^$CellContext`n0 + $CellContext`b \
$CellContext`y^$CellContext`n1, $CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 2, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a $CellContext`x^$CellContext`n0 + \
$CellContext`b $CellContext`y^$CellContext`n1], \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.53984020258309*^9, 3.539840288099449*^9, {3.5398406788210645`*^9, 
   3.539840690936103*^9}, {3.539840772642478*^9, 3.539840774568223*^9}, {
   3.539840807063349*^9, 3.53984087983959*^9}, {3.5398410649120913`*^9, 
   3.5398410672638903`*^9}, {3.539841106028813*^9, 3.539841146021891*^9}, {
   3.5401003093818417`*^9, 3.5401003389490967`*^9}},
 CellID->300009418],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
    False, $CellContext`angle$$ = 208 Degree, $CellContext`b$$ = 
    0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Sommerfeld", $CellContext`event$$ = 
    "run_button", $CellContext`finalDisplayImage$$ = Grid[{{
       Item[
        Item[
         Graphics3D[
          GraphicsComplex[CompressedData["
1:eJx1nXeUk8X3xlekSu8oXao0qUvnpS6gdBQQEHUBBUERQRD5UUS6gDRFel+K
IkEU6U8EgUiNECX6zUIIMYaQXRcQKUv5eQ7vPLs355J/OPmcOcPMnftmdube
+7zlE0f0GJwlLi6uVda4uCfjzCcN9r9W27l1zwybn2w9+p4aw1NsHiU/2XTS
m6vWhGweIX9ryzdJgQlem4fJ48QnRP7Oo/b29yD56Uf9298D5AmPxmN/98f0
b+bje0x7b+z47e8e8kQxHvdjxu8iHyTm6yQ/JezjiB1PTH8cv2lv6e2d5LJ/
F7kcjzumX/PxkMv5esmlfXyx4zH2j+nf2D/wmPZBcrm+IXLpD+HHjD9CLv0t
Gjt+48/k0p/TYnhyzDxSrRm/rj7tbd6upf2dfNHBYd0SkjrbPEo+aOzxb7bm
72jzCPmzG6de2tOxtc3D5AfSF+TOP62RzUPk8aei/1aaX8vmQfL8LWuE650t
b/MAedqT9xqljChicz95waq/3Zl8IbfNfeSNSm9PW3cmj8295KXfH+65k930
4yHPtaJ6ZG5qKZu7yddW+bx/5Q0VbO4i33/smWsLt1e1uZN8wU99BvRMrmFz
B/nzWSv17LPieZubT6o1tvfB+vM61DbtLb29k3yh6N9FDjEeN/lGMX4PeUEx
Xy95RWEfH3krYU8/eW5h/wB5SKxXkDyXWN8M/60p/CFMvlv4T4S8jPC3KPnr
wj9TyecJf04jnyr83zwXUWvXzuQdNeq2N/2Qr917L2XMi93M/0u+4VivtOTX
TP8R8uoDj4yZ3SzBzIs8/+DkInVPNDd2ID+eMuP8DxvrGLuRD0WBLpXyP2vz
AHnZtbXWL+pUwOZ+8qvVDrzTMvKkzX3kRYo06DPAl9fmXvLiFQc1rjbC+IOH
PCXxRIF1W6vY3E2ebfb4WeklzDhd5Mmt81TvUD7e5k7yES/vvfd9qyY2d5Cf
x66bnf5pZnPz+Y+/ccBZK2jsY56LqOUV7Z3ksn8XuV+Mx02eS4zfQ/6vmG/G
724lYR8feVlhTz95QNg/QJ5frFeQvL9Y3xD5IeEPYfKswn8i5BWEv0XJVwj/
TCVfKfw5jXy78H/zXESsHL9dXRg828L0Q/7DuEmFTh027aPkP/V/2Xe2hxlP
hLz2hC0PXne2NPMiP9Ov09kWi+sbO5Af6lx5S6HVxj5B8tKef6fUXnHTHneA
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
xPic/zP5NhHyWa7mbcYUZByfvHz68DVLKsfmR7ms9TM3NCpUxNw3BsmXdXh5
Rv+IiWMGMvovtLjZ1W7m3tJPXrzYMwP+yWXa+8h3WV2irgbmPsdLfrfW+aeO
zOB9PvnEgdsq1XOZ+I6b/J11xwZefK2gbTcXeS/HD/cTHprfbSd522MLZl3Y
bfzZQZ671+n+1gjz+2Y+LuvejusHHw4z95zmuXBZ2UV7J3lz0b+LvIUYj5u8
pRi/h3y9mK+X/KGwj498v7Cnn7yYsH+AfLpYryD552J9M/IfFwt/CJPnF/4T
IX9P+FuU/EThzP6ZSj5nd2Z/TiP3bc3s/+a5cFqvLPpzz6t/VDf9kPf68c+a
L/0eG+92Woum9toEn7lXjJCvmNOuWvLa1mZe5BXL+YtcnGTi8iHyFy9W/Hfd
SJPfFSS/kvvcvkvRF2weIP+59NVBnecY7if/d1Ly1AbPdrC5j7zN7Fx/Vjps
8ii85A+GfD2n/jwT//KQz9/V8UbJrMYObvLpEw9uSmt/3fg3ufXjlQ/+nhv7
XDitjY66p3qc5+8/eftW23sUmm72d/NxWnMHDdha7ajZx81z4bTaivZO8mWi
fxd5ZTEeN7lzQubxe8g3i/kyL9jKOTSzfXzk7YU9/eQ3hf0D5HK9guQRsb4h
8g7CH8LkFYT/RMg/F/4WJR8j/DOVvKnw5zTy54X/m+fCYW1ZsLndx+cbmn7I
+3z6v3E1ajD/hPy1tmenB4+bOGyEvHZ8nr9ffZvzInc8XFO00ESTxxUiH1v3
aJ/L9U0eV5D8+8mv1fjhjOEB8gvL7l1Bf8P95ElfHal0b57p30c+Jme9Jjta
mPXykl8/c+LP+Nrmd8yTMc6XJkd+L1LX5m7yXSv8ZeoW/cf8vpB3aVto05bl
sX9HOaxc5c7lW+o39zYO8hODUtqlTDP+bz4O61zXS3deSTN/95rnwmEdFe2d
5A/KZu7fRd5QjMdN/uHKzOP3kEPM10t+W9jHRz5O2NNPvkXYP0B+UaxXkHyX
WF/m48f4Q5j8W+E/EfIGwt+i5H2Ff6aSdxf+nJHXv174v3ku4uLGnBhU3t/d
/D6kkhcZ7D7ydZ3W5v8lHz9zxuSyOU3+VYS83cMjKYtOvWjmRV5/7ITmvhtd
jR3ID9TqX2r6u91tHiS/fat17vv3DA+QP1hQd8/S9w33k385YNnKcWNN/z7y
nEVvvtX0nLGbl7zOtUNTJg028/KQr22c0qXAbpNX4yZPdpT6ZE8Z3ouS+5cW
GVOveuxzERd37Nebr3hqmnsYB3nZmssrFz0f+1zExfXaXaVZmW7mHsY8F3Fx
pUV7J/l+0b+L/LQYj5u8xI7M4/eQbxHz9ZI3EvbxkecV9vSTrxD2D5A/FOsV
JL8r1jdEflD4Q5g8XvhPhFz6W5R8rPDPVPL8wp8z6jo+EP7P/QLf6fsF+uv7
BQbp+wWa6vsFdun7BT7U9wvs0vcLPGa/wGP2C4zW9wtc0/cLfKvvF9iv7xfo
pu8XyKnvFziu7xfw6PsFftb3C2Qpp+4X6KDvFzi4Qt0vsF3fL3Bd3y8wRt8v
sFHfL5Cs7xf4Xt8v8Jj9At/p+wUa6vsFBuj7BXrp+wW+VfcLJ4br5wv0188X
+EI/X2Cdfr5ANf18gc76+QJR/XyB4/r5Ajf18wUec77AY84XWKCfLzBBP1+g
uX6+wHr9fIEE/XyBOfr5IqY9zxfYoJ8v0F4/XyDrJPV8gbH6+QKpQ9TzBZrr
5wtc088XOKyfLxDSzxdor58vUEk/X2CFfr7ANP18gS76+QK91fOFC32T1Pso
7NPvo1BCv4/CQv0+ClX1+yg85j4Ky/X7KHyq30ehhH4fhf36fRTS9fsozNTv
o/CGfh+Fbvp9FFrr91HIpd9H4TH3Ucit30eho34fhaH6fRQ26/dRqKHfRyGg
30dhnX4fhTz6fRQm6vdR+Ey/j8I8/T4KRfX7KEzS76NwXb+PQsM96n0UHm7S
7qPcGK7HL/CMHr/Aw6gav4BXj18gSY9foKwev0AjPX6ByXr8Ap/p8Qt8pccv
0E6PX+BUTzV+gXF6/AIJevwCM/T4BYbp8Qu8q8cvMFKPX2CxHr/AcD1+gQt6
/AL/JKrxC+w9qMYvMEiPX6CDHr9AYz1+gduV1PgFdujxCyR0VeMXqKXHL1BF
j1+gmh6/wEdq/MKDHnq8G9n0eDfe0OPdyKXHu1FBj3fDo8e78YMe70YXPd6N
p/R4N37Q493Yrse74dPj3Wigx7uxSo93o5ke70a8Hu9GWT3eDUuPd6OPHu/G
UT3ejWF6vBuvt1Hj3Wi3Q41345XCarwb2/V4N1bp8W7c1+PduKbHu9FMj3ej
rB7vxtt6vBu59Hg3XlHj3V601/OjMEfPj8JVPT8KV/X8KHTS86NQV8+Pwhg9
Pwr99PwoBPT8KHj0/Chs0fOj0F/Pj8JePT8KTfX8KHTQ86NQWs+PQg49PwpN
9fwoTNLzo/Cpnh+FFD0/Cl/o+VG4oedHIV3Pj0Luump+FCbr+VGYpudHoaWe
H4Xeen4U/tHzo3BDz4/CAj0/Cp3V/Cgf5ur5tPhaz6dFbz2fFsl6Pi2K6Pm0
OKvn0+J9PZ8WbfV8Wnys59Nihp5PiwQ9nxZv6Pm06KLn0+LAQjWfFnHN1Xxa
HNbzaZHnBzWfFg49nxZb9XxaHFyk5tNio55Pi8V6Pi0G6fm02KTn02KBnk+L
nno+LSbq+bTw6fm0KKnn0+KSnk+Lvno+bYw/M58W89V8Wj8W6PUXmKfXX+A7
vf4Ci/T6C8Q1UesvcEWvv4Bfr7+AS6+/wFC9/gI79foLNNTrL5BNr79AzxS1
/gLFl6r1F1ig11/gmF5/gZzL1PoL/KTXX2CaXn+BK3r9BbqmqvUXqFlHrb9A
N73+Asf1+gt8oNdf4Kxef4GQXn+BqF5/gQeN1foLzNfrL+DQ6y8wS6+/wBy1
/iKA+Xq9Hpbp9Xr4Ua/Xw2Pq9RDW6/Xwl16vh2l6vR6e2KLW66GGXq+HzXq9
Hn7W6/XwnF6vh/zt1Xo9JOr1ekjX6/WwWa/XQ7per4dter0e7ur1euil1+vh
WoJar4eOer0ezun1etim1+uhll6vhye3qPV6mK7X6yGo1+shoNfrYYler4fd
er0ePtPr9TBLrdcLYqBe3w1Lr+9GK72+G2v1+m48rdd3I1Gv78bren03Gun1
3cjeUK3vxiW9vhv79PpuDHqo1ncjXq/vhkev78YUvb4bd/X6bjTV67uRrtd3
x/TP+m78qtd3o6Fe341uYr6s78Zevb4bPr2+G3f0+m48r9d3o69e341X9Ppu
5Nfru7FYr+9GPb2+G3X1+m70Ueu7Q5ir64Hgqq4HgqCuB4IfdT0QdND1QPCb
rgeCmboeCCboeiA4o+uB4DVdDwRTdT0QvKvrgeBrXQ8EtXU9EHyl64Eg33pV
DwQldT0Q5NX1QPC1rgeCeF0PBA5dDwTTdT0QDNT1QJCg64HgoK4Hgrd0PRA8
Rg8E+3Q9EFTX9UAwXdcDQZKuB4Ltuh4IRqt6IGH01vWjMETXj0JjXT8KpxNV
/Sikz1X1ozBd149Cpe9U/ShUT1D1ozBN149CjmGqfhQGFVT1o7BQ149CJ10/
Cs/p+lFooetH4bKuH4VfdP2omPbUj4rpn/pRqKnrR+ElXT8KSbp+FKrp+lFw
6fpRGKDrR+Gurh+Fq7p+FHLr+lG4oetHQeqVUT8KfXX9KMzS9aPgVPWjIvjr
V1VvEEm63iB26nqDKKfrDWKHrjeIabreIBqfVfUG0exLVW8Q75ZX9QaBE6re
IHrqeoO4ousNArreIOroeoNYqusNIp+uN4jyut5gTHvqDWKZrjeIeF1vEEd1
vUE81PUGMUPXG8S5c6reIM7reoOYq+sNwqPrDWK/rjeIk7reIGrpeoM4pOsN
4ntdbxBxv2l6g1Fs0vVpsUzXp8UXuj4tyuj6tLg9SNWnxU5dnxbNdH1auNeo
+rQYruvTwlFY1afF7QqqPi0iuj4tcun6tLis69NijK5Pi8u6Pi0u6fq0COr6
tPhQ16fFX7o+LfLq+rRI1/VpUUHXp0UxXZ8Wybo+LQrp+rR4XdenxVFdnxZP
6fq0qKrr02Ktrk+L1bo+LXao+rSpmKzrmWO2rmeOV3U9c5TS9czxra5njlK6
njluWaqeOX7S9cxxvIqqZ44sup458uh65sii65ljo65njkO6njmW6XrmaKzr
mWOCrmeOJrqeOZbreuY4puuZY6uuZ47iup45Kul65rB0PXM8Rs8cYV3PHHl0
PXPU0fXMsV/XM0d5Xc8cibqeOebreuaYpuqZp8HR/9aZJYkXuX6S/83fO8Pl
ew34/gtsWJvvuTeXZ5w3DJfvU+D7L3B0yDeNmx67ZH/n+y8g38vA918gZ9LQ
ZrtvZ8QP5DzMh++/QJ5H7WP+jkqDfE+Eh/znR+OxuZs85n0T5Osfzdfmzlj7
2NwRa09LjpfrYNpbenu+/yKmf77/ImY8bnI5fg+5nC/ffxFjH77/IsaefP9F
jP35/ouY9eL7L2LWl++/iPEHvv8ixn/4/osYf4vG2sf4c6w9Y+yd4f//D9wr
N4A=
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
abUj3w5wGsOTpjo5exO8Hz07gtcA6w9eI16/TtQL68od6PwHsLb+xF3INwNX
/i32/Ca4sIGY9tqc86gFtybcWvAH+jHdiz+Yb/QdSNedma3cHGdDwOr4sbfR
hTW+Ra42fHGlmync3WTfNP6xH9P5BN802R18AvaJH9NqS3rJ3gPTtzW+tDfR
2SS+PahvDW8ocQ96DvNNg0PhDCXuxvl3pWcP+ok/3Dct69sWfxJ76gl/Ev5k
9tsTrmpGUNOGfm3BpNupzqb5pr32YCN90/oU8r3pOYVcO+rlj/Jjete3A/yp
9OwA5318faU9aeFD7k3z+8Lvhz/d2Qdw3wcXNsM33XYkP9M37X3qbDR9O8ET
1p/aGfgfwIu+mdGsYzpzp1E3AP447kb30pn1fuSbfjV7Fv4A4oFgg+CNoe4j
aj8E6wKuvmOZ0wVfmPS+3dlc335+RN9HF+rHgs2GO4rzbU+sOml2A/e23jc9
DiEnXUgLC3zT/pd+TP+rfdOsePOoE7YGXNhQcOlurbN1YPPpK2wiNWvwP4Ez
D94CuPOZ+yVzom9JPcZz/jqfhb7pbjjztKfJ8Nfhr2e/k+GqZhGzFvqx9yBM
+t3o7CvufRTYYt/0u4H8VHpuIDeSevlLqNOf1fW7Nyf8jfR8H85SfH2lQeng
M990ofnT4c/A3+RsGdyl4MI2+6bZD8hv8U13XztbTt/R8IR9Su1m/GXworpf
zjr2MmcJdTPhf8Ed6PzHsN7PfdO4Zm/Fn0k8C2w2vBXUfU7tZ2BjwdV3JXPG
4guT9s87+8a3vzvNoedY6leCbYO7FX82seqk3xPc23HfdDeXnLQgTezyTXc/
+qY92RHfNCveDuqEHQUXNh9cuvvJ2TGwnfQVtpaao/hr4OyAtwvuTub+yJx1
8NVjFeev8/nWN90tZJ72tB7+Mfzj7Hc9XNXsZta3fuw9CJN+f3b2i28aXAK2
xzf9niC/kZ4nyC2mXv5e6qTN6fTZSN1XfB8wQ/ra55sGpYPvfNPFL9SLvxn/
pLP9cPeBCzvlm2aXkT/jm+5OOztA3+XwhH1N7Sn8/fCiuj/AOk4y9xfqtsA/
zB3o/Few3u9905tmn8XfQrwVbBu8g9R9T+13YCvB1fcQc1biC5P2nzq74Nu/
H2yn50rqD4Gdg7uUu9hHrDrp9z73ds833X1DTlqQJi77prs/fdOe7C/fNCve
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
+dKMdHs6MK1Jo98Rf03NKfzN9FtOz+/gH6CPas6Q3w9+gv0dh/89c7QH6ewQ
tarbSn5FENO94oPOzgWm37PYNvh72edSepwF307NefxtxCvoF519mLWId4Fz
PkT+IHs5wD5Xwf8B7AZ7Ut0OaleRlwZ/5KtY+r3o7BL+DuLLgWlGupUujwam
u0vkdsG/hL86Xm/xj1BzhT6XyR2BewSe/J/oLf567kR3s5ta9VgH5yfsGNhV
Z9cC0+hu4qher3MHu+mh3EZ6n6BuL/xjzFbPn+GdIH+NXuvhHedennLGFzk3
+dLvP84eBqb9f8D2s5Zfsd/AxHsUmJZPEsuXZqTbfwPTmu7zJvFpah7hn6Lf
AXrehH+DPqp5TP438Pvs7x7835kjHUlnt6hV3VnyB4OY7hX/z9l/gen3CXYO
/nX2uY8eT8DPU/MU/xzxQfpFZ99mLeLpP8ZwAfwQvBwOq+YsZ2hnr5/b0rkf
2n38/3/AAV+10vofgWnwT76KL1EThOZfJA5D04x0K13eCUx3AbnL1Ab4R+L1
Fv8vaiL0Uc2f4Ef4HsW/S2/xj3Mnuhvp9Qo9jsG5i/0dGJbA5RKGptGrxFG9
JgrtDq7SQ7mf6a37V5141+h3nJ4PAuPdp4946nUc3j3uJQdnnCq0s9SdSb+Z
XZwlNO3Lf4jutJbEoVmS0DDxsoam5YfEj9CMdJstNK1Jo8lCi4VnpU6++Op3
gznJ+P2vPwc8psez5MUTnjG0/WUIjZ+cObfRWUpqVSftKi/dRXWvOIWz7KHp
Ny40+w+tJ2Kfv9Ijjj46N9Xo7J6i/ez0Vr/obJ3pbc44J+ecknwKcj/wRnT2
4qdmb4XYk+p8asVJjQbT8E2N7nM5y43vE+cJTTPSrXT5TGi6y00uhJ8b/68g
1lv8tKHV5KWPapRLCzctPPnp6C3+Pe7kPlqO0ONvdC+uLD1YPvfNzxsQP18Y
02sB7iABPZR7gK4zUpcIfnpmq2cmeBnJ56eX8uJpfT+gFZ1rLs4tJ7ov76xC
aNovD5aEtRTEngMTryJazkKcFb1Kt5XQpu7zeeJs1FTEz0q/pPR8Hn4h+qim
MvnnwMuGtr8y8AszJxU6K0Kt6uLIpwhjulf8grOqoem3CpYdfgH2mZgeVcBz
UFMNPztxCvpFZxdlLeJV52yLkBdP/96mf6vXv22Kmxr+i6HdR3WwYqHpTtoq
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
                 "]]}]}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0SkwBAAUBuB13/e17t1139Z9n422Gg2NIdAoZmg0GpFGoxFpNBqRRqPx
GcI3L77/fy+8uB5biwsEAjv8zngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhi
SghSShnlVFBJFdWECDPFEruccsvr737hmphhhX3OueedXMGjxNjgkEse+SSo
1CDzbHHMNc98E1J4kgnGGWOUEYYZYpAB+umjlx666SJKJx2000YrLTTTRCMN
1FNHLTVECCf+Hf5FnhtO2GaBIUr50uWJK47YZI4u8vhwiwcuOGCVWZpJ482K
O87YY5lpIv///wEPTiqf
               "]]}, {
              
              Line[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
               81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                97, 98, 99}], 
              
              Line[{133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
               144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
               156, 157, 158, 159, 160, 161, 162, 163, 164, 165}], 
              
              Line[{199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
               210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 
               222, 223, 224, 225, 226, 227, 228, 229, 230, 231}], 
              
              Line[{265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 
               276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 
               288, 289, 290, 291, 292, 293, 294, 295, 296, 297}], 
              
              Line[{331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 
               342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 
               354, 355, 356, 357, 358, 359, 360, 361, 362, 363}], 
              
              Line[{397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
               408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 
               420, 421, 422, 423, 424, 425, 426, 427, 428, 429}], 
              
              Line[{463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 
               474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 
               486, 487, 488, 489, 490, 491, 492, 493, 494, 495}], 
              
              Line[{529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 
               540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 
               552, 553, 554, 555, 556, 557, 558, 559, 560, 561}], 
              
              Line[{595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 
               606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 
               618, 619, 620, 621, 622, 623, 624, 625, 626, 627}], 
              
              Line[{661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 
               672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 
               684, 685, 686, 687, 688, 689, 690, 691, 692, 693}], 
              Line[{727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 
               738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 
               750, 751, 752, 753, 754, 755, 756, 757, 758, 759}], 
              
              Line[{793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 
               804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 
               816, 817, 818, 819, 820, 821, 822, 823, 824, 825}], 
              
              Line[{859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 
               870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 
               882, 883, 884, 885, 886, 887, 888, 889, 890, 891}], 
              
              Line[{925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 
               936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 
               948, 949, 950, 951, 952, 953, 954, 955, 956, 957}], 
              
              Line[{991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 
               1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 
               1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 
               1022, 1023}]}, {
              
              Line[{3, 36, 69, 102, 135, 168, 201, 234, 267, 300, 333, 366, 
               399, 432, 465, 498, 531, 564, 597, 630, 663, 696, 729, 762, 
               795, 828, 861, 894, 927, 960, 993, 1026, 1059}], 
              
              Line[{5, 38, 71, 104, 137, 170, 203, 236, 269, 302, 335, 368, 
               401, 434, 467, 500, 533, 566, 599, 632, 665, 698, 731, 764, 
               797, 830, 863, 896, 929, 962, 995, 1028, 1061}], 
              
              Line[{7, 40, 73, 106, 139, 172, 205, 238, 271, 304, 337, 370, 
               403, 436, 469, 502, 535, 568, 601, 634, 667, 700, 733, 766, 
               799, 832, 865, 898, 931, 964, 997, 1030, 1063}], 
              
              Line[{9, 42, 75, 108, 141, 174, 207, 240, 273, 306, 339, 372, 
               405, 438, 471, 504, 537, 570, 603, 636, 669, 702, 735, 768, 
               801, 834, 867, 900, 933, 966, 999, 1032, 1065}], 
              
              Line[{11, 44, 77, 110, 143, 176, 209, 242, 275, 308, 341, 374, 
               407, 440, 473, 506, 539, 572, 605, 638, 671, 704, 737, 770, 
               803, 836, 869, 902, 935, 968, 1001, 1034, 1067}], 
              Line[{13, 46, 79, 112, 145, 178, 211, 244, 277, 310, 343, 376, 
               409, 442, 475, 508, 541, 574, 607, 640, 673, 706, 739, 772, 
               805, 838, 871, 904, 937, 970, 1003, 1036, 1069}], 
              
              Line[{15, 48, 81, 114, 147, 180, 213, 246, 279, 312, 345, 378, 
               411, 444, 477, 510, 543, 576, 609, 642, 675, 708, 741, 774, 
               807, 840, 873, 906, 939, 972, 1005, 1038, 1071}], 
              
              Line[{17, 50, 83, 116, 149, 182, 215, 248, 281, 314, 347, 380, 
               413, 446, 479, 512, 545, 578, 611, 644, 677, 710, 743, 776, 
               809, 842, 875, 908, 941, 974, 1007, 1040, 1073}], 
              
              Line[{19, 52, 85, 118, 151, 184, 217, 250, 283, 316, 349, 382, 
               415, 448, 481, 514, 547, 580, 613, 646, 679, 712, 745, 778, 
               811, 844, 877, 910, 943, 976, 1009, 1042, 1075}], 
              
              Line[{21, 54, 87, 120, 153, 186, 219, 252, 285, 318, 351, 384, 
               417, 450, 483, 516, 549, 582, 615, 648, 681, 714, 747, 780, 
               813, 846, 879, 912, 945, 978, 1011, 1044, 1077}], 
              
              Line[{23, 56, 89, 122, 155, 188, 221, 254, 287, 320, 353, 386, 
               419, 452, 485, 518, 551, 584, 617, 650, 683, 716, 749, 782, 
               815, 848, 881, 914, 947, 980, 1013, 1046, 1079}], 
              
              Line[{25, 58, 91, 124, 157, 190, 223, 256, 289, 322, 355, 388, 
               421, 454, 487, 520, 553, 586, 619, 652, 685, 718, 751, 784, 
               817, 850, 883, 916, 949, 982, 1015, 1048, 1081}], 
              
              Line[{27, 60, 93, 126, 159, 192, 225, 258, 291, 324, 357, 390, 
               423, 456, 489, 522, 555, 588, 621, 654, 687, 720, 753, 786, 
               819, 852, 885, 918, 951, 984, 1017, 1050, 1083}], 
              
              Line[{29, 62, 95, 128, 161, 194, 227, 260, 293, 326, 359, 392, 
               425, 458, 491, 524, 557, 590, 623, 656, 689, 722, 755, 788, 
               821, 854, 887, 920, 953, 986, 1019, 1052, 1085}], 
              
              Line[{31, 64, 97, 130, 163, 196, 229, 262, 295, 328, 361, 394, 
               427, 460, 493, 526, 559, 592, 625, 658, 691, 724, 757, 790, 
               823, 856, 889, 922, 955, 988, 1021, 1054, 1087}]}, {}, {}}}, 
           VertexNormals -> CompressedData["
1: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
nNBUs9zKUvJ7LJGNjpn+9Dh1UFLd2W2rnaSfvLCmk2Sdi/xKjdS/HaJF60Z9
HtRpD55qqmhoS173NgwdNEH+IC2pDFfum7YHZ/Weuc+VvP6+Ufnfa6sQ2j7G
883wesl5iMbAT5LPt3mkbjBu5WEyu+35bdB4d0z8MepfvKSv05apueF9/RLp
N70tGeYUhjlTZhxeKM6ak62/oLfz8RnJHaT/NGMSez9N6CR9P9T5+/nn04AE
6efDhH/+OfZ9aHe99PvAnH8f/v1pnoH0+0OHf3/+91I0+3sxl/+9/PmQblfp
88F/z4c/T1q+QPo8MZg/T/78KYA9f5zmz1+D/V4Uzn4v6PDfawr7faFrIP19
6Qn/faex9YAJbD1QC18Py9j6wfzN0vVDcnz9XGTrDaY/peuNtPl64+sTA/tI
1yeN4uuTr2cMz5OuZyrl6/k9W/8YytY/mfD1r8n2Cw1i+4UU+H7ZyfYXNYRI
9xeZ8/3Vk+1HkmP7kZT4fuzG9i/psv1LJXz/drKV7nc6yPY7ZfH9/oOdD7SV
nQ/UoZKdD8210vME/DwhWYGdJ6Xs/MF4dv7QOH7+DGfnFbqw84o8+HkVw843
LGDnG7Xy860zOw9xgp2HdIifh/z8hBY7P+m/85Oftwhm5y2F8/N2HzufYcTO
Z/rvfObnOeTYeY5Yfp7fZ+c/rNn5j1567PzfqCe9L+gBuy8wlN8Xi9j9QtvZ
/YIe/H75wu4jOlkmvY/w333E7y8qeiG9v8iS319L2H1H8ey+IzG/72az+5Ge
sPuRHvD7UZ3dp1TA7lPqwO9Tf3b/UhG7f8mb37/T2X1Nruy+Jk1+X9ew+50s
2P1O0/n9TqweQB9WD1BnXg/w+gG8fqD/6ofPrN5AF1Zv0A1eb2Sz+kTyu0nr
EzrL65MeXaT1DNr1pfUMhfN6Zg6rf1DH6h/qspDVP26sXoI/q5doA6+XZNdK
6ysyZPUVHeD11Q5Wj9E2Vo/RG16PXWX1G/mx+o1+8PptOKv36Air9+gPr/fi
WH1ICqw+JE1eH85n9SStZPUkLeL1pBmrP4nXn+TI68/VrF4FWL1KIl6vJrD6
FgNYfUuDeX0bwuphVLB6mMbzengoq58xhdXP1IXXzwms3sYPVm/TTV5v67D6
HNtYfU7/1ee8nkfDUmk9Txa8nvdl9T80bKX1P07x+r8b6xdQzvoFjOP9wqCV
0v6CNrL+Aht5fzGK9SP0Z420H0Ei70c2sv6FHrD+BT1/sv7lCet3SCdZ2u9Q
Je93nFl/RPmsP6JU3h/tZ/0U3WH9FCXwfuoU67/oOOu/KJf3X+6sX6NJrF+j
RN6vLWT9Hbmw/o5O8v4ulfWDxPtBsuH9YE6btH9ENusfScz7x1LWb2IL6zfp
Vx3rN8+w/hQvWH9KN3l/qsj6WUxi/SwN4v3sPdb/gve/ku/L+l9Z1i/jB+uX
qZX3y3msv0Yx669pF++v57J+nPRZP05tvB/PZP07BbL+nSx4/67I+n3i/T6N
5/1+MdMHqJ3pA+TN9YFcpidQAtMTyJzrCQFMf6ASpj/QDK4/3GV6BSUxvYIE
rles3yHVN9DK9A2q4/rGfaaHYDnTQ+gG10PmMP0ECkw/oSNcP1Fmegv2Mb2F
tnK9pYzpM7jN9Bn6T59ZxfQcrGd6DilyPaeC6T/ofF2q/2AY139imF6Ej0wv
wlauF91n+hLmM30J/+lLT5geRVyPQjTXo1Yx/Yq4fgVDrl/NZHoXpTO9Cyu5
3jWQ6WO05oxUH4Mh18dmMT2NjjM9jVS5nnaT6W90hOlvdJbrbw+YXke+TK+j
cK7XqTB9jwKYvkdvuL53gumB1GGsVA+kTVwPtGX6IXH9kNy4fviY6Y3geiMN
/U9vZPok7Jk+SY+4PklMz0QU0zNpPdcz25j+ib9M/6RbXP88xfRSlDO9lPy4
XvqE6au4w/RVUub6qj/TYyV1pVSPpTqux6ow/ZaymX5L/ly/VWB6L3G9l9y5
3qvC9GHi+jAVcX04lOnJdJ3pyVTJ9WQ7pj/TbKY/00GuP99lejW9YHo16XG9
2pzp28T1bfLj+rYu08OJ6+GUw/XwUKafYzXTzymA6+c5TG9HN6a300yuty9m
+jyuMn2exnF9fiLT86HA9HzK5np+EdP/ocH0f9rA9f+RbF4AOzYvQDKfF6xk
8wV8ZfMF/DdfuMbmEWhi8who83nESTa/ID6/gAqfX/xeJJ130Gs270ANn3e8
Z/MRsmfzEQh8PnKFzVOomM1TIPeSzVNk2fyF/rD5Cy3l85cCNq+hG2xeQ2v4
vEaFzXeI2HyHvvP5zkc2DyI+D6L+fB4UyuZHxOdH1JvPj/zYvAl83kTr+bzp
CZtPgc+naAKfT/mzeRZmsHkWTeLzrOoN0vkXPrD5F/03/8pn8zIsY/Myusfn
ZdfYfA18vkbr+Hyt3Vs6j8MPNo+jiXwel9FNOr8Dn9+RA5/f+bJ5H01m8z66
z+d9Hb9K54PE54PUnc8Hj7B5Is1g80S6x+eJvdj8kfj8kdz5/HEym1fSUjav
pBI+rxzL5pv0g803afB/8002D6XjbB5K4XweOoXNTymYzU+phc9Pxa7SeSv1
ZfNWEvi8tWaIdD5LfD5L/fl81pDNc8HnudTG57nL2PwXDWz+S5v4/LeYzYvh
xObFlMbnxUFsvoybbL6Mn3y+7Mrm0chj82io83n0Oza/RhCbXyOMz6+HGkvn
3cTn3ZjO591Fk6TzcTrL5uN4z+fjC9g8nTLZPB3/zdMz2fyd7rH5O4by+fsI
Nq8nDzavp0V8Xl/iJp3vUzGb79NiPt9XYH4AOs/8ACRwP0Ak8w+A+wdIk/sH
JjO/AbjfgP6FML/BCeZPgD7zJ1Bn7k/owvwMsGd+BhrO/Qzzmf8Bo5j/gaq4
/6GkWOqXQFfml6DT3C8xjfkrkMX8FXSb+ysKmR8D6cyPQXe4H8OC+TfA/Ru0
lvs3ejO/B3G/By3jfg8d5g9BPvOHUCL3hygqSf0k4H4SauF+EgPmPyHuP6E7
3H8ynvlV6A3zq9Ae7lcxYv4Wms/8LXSZ+1s2MD8MvWF+GDrD/TDrmH+Gqph/
hv7zzxxjfhtSZH4b2sf9NiOZP4cUmT+HFLg/5x3z89A35uehFO7nqWb+Hwpi
/h8K4/6feOYXosXML0S7uF9IifmLSJn5i1DJ/UX5zI9ETsyPBAXuR1KYJ/Uv
kQ3zL6FtMfMvDWd+J+J+J8zlfiezL1J/FHF/FL5vYv4o5TKpn4q4nwqLuZ/q
mpzUfwUj5r/CTu6/ms/8WnBjfi1E2DG/1gLm78JH5u9C1Hzm74phfjD0Zn4w
Os39YALzj2EI84+ROvePeTC/Gd4xvxmB+820mD8NB5g/jUK5P62I+dnwhvnZ
6A73s6Uw/xvkmP+NTnH/2zjml4Mv88tRG/fLGTJ/HfyZv47ecH9dLPPjYQXz
45EV9+OJd0n9ezBm/j36143595Ywvx9xvx8J3O83ifkDaQfzB9Iz7g/cqyv1
E+Ij8xPSWO4nVLwk9R/iLvMf0pJhzH/4fqDUr0g/mF+RbOYxv6Ii8zfSN+Zv
pM7c37iG+SHpKvNDUh/uh6y8KfVP0hjmn6Te3D95mPktqYj5LWk191vGM38m
3WT+TLLn/sws5uekiczPSTXcz/mb+T/pNPN/Ujn3fy5kflFaz/yi1Jf7Rbm/
lLyZvxTfuL90EfOj0hfmR4Us96OC+VdpCvOvogP3rzYxvyvNZX5XhHC/qwfz
x5IO88einPtj3ZmflrifFsu4n1Zto9R/i0HMfwtX7r9V2Cb160KB+XVRwf26
fZi/F2eYvxeB3N+rx/zA6M78wBjF/cDcPwz1K1L/MBXXMP/we+Y3xjPmN6Y5
3G/sy/zJMGD+ZJrG/ckBzM+MPczPTBrcz/yK+Z8Ry/zPZMj9z1eYXxoPmV+a
8rlfejzzV+MU81dTKvdXT2R+bNQxPzbd5n7spcy/DV/m3yarMObf/qEo9XvD
kfm9qZX7vQeMlvrDaQ3zh9OyOuYPn8T85CTH/OSUwf3kPZj/HOc/SP3n9M2W
+c9zmV8dkTJSvzo21TO/umM/qb+d5jJ/OzK5v30S88PTTuaHhyn3wy9l/nla
6yH1z2PyYeafz2F+e1rrJfXbY+J05revZP58Cn4k9efTJe7P12R+fvrF/PyU
z/38usz/TxMEqf+fPnH//2GWF6AHDdK8AC3heYGxLF9AvVi+ABN5vuA2yyPQ
KpZHwBGeR9jI8gt0ieUXEM3zC44s70AyLO8AF5536HVEmo+geSwfAQOej3Bi
eQp6zPIUmMTzFPPDpfkL4vkLTOH5i1ksrwGe14Asz2u0snwHGlm+A6483zGZ
5UFwnuVB8JjnQYJYfgRLWX4Ee3h+5AjLm6CA5U2QzPMmtiyfgo0iaT4FETyf
IrA8C8azPAul8jxLEcu/4G6ENP9C6Tz/sp3lZVBaJs3L0HCel1nL8jXYwvI1
ZMvzNftZHgeCjjSPQxd4HseP5Xdwul6a34HsapbfMWR5H+xQkOZ9kHSa5X0K
zkrzQeS1RZoPQibPB51geSLKZXkihPE80b6l0vwRfWX5I1zh+aMLLK9EsSyv
BAWeVxp9RppvIh2Wb8Jsnm/yY3ko8DwUinkeKrSD+f/zU5jL8lOw5fmp7vuk
eStazvJWqOR5KzuWz6I5LJ+FSTyfNZHluWgIy3OhryfLc91g+S9yYvkvdH/I
8l8ZLC9Gz1heDJd5Xuwky5fRQ5YvQzDPl21leTQyZnk0/OB5tIMsvybZd9L8
GtR5fm0Ry7tRF5Z3gyLPu7WxfBzpsXwcLHk+7inL09E5lqdDMM/TKVyT5u/I
nOXvcJ7n72ymS/N6xPN6+P2A5fX8WL4P9izfh5s83zeN5QGhyvKA8Od5wN0s
P4guLD+I2Tw/eITlDeHF8oY4yfOGsiyfiM0snwhLnk/cwfKM+MHyjPg6meUZ
x7P8I3JY/hH7eP7Rm+UlIWJ5SYTxvGRflq+EKctXoi2Q5StnsjwmMlgeE/k8
j7mb5TcRz/KbSOH5TZPT0rwnurC8JzrzvKcay4cSz4diP8+HXpKV5klpJMuT
YhjPk6qvl+ZPwfOnGMrzp7ksrwqeV8WX1yyv6sTyrdSd5VvxludbL7I8LOmx
PCxm8jxsFsvPgudnEcnzs2KWt8VolrdFCM/bRrB8LvqxfC5683xuPMvzIorl
eVHM87zqLP9L01n+F+d5/jeR5YWJ54VxmueFJ7N8MX1n+WKs4/nisyyPTC0s
j4wwnkfu9EaaXyZ7ll+GKc8vV7C8M6WxvDPCed55LstH03OWj8Yxno+uZ3lq
OsPy1CjieertLH9N71j+Gn14/nouy2vTWJbXxhie1z6cIM13kwfLd2MAz3eb
sjw4MlgeHJ15HnwTy4+jjOXHEcbz41dZ3hwfWN4cITxvPoTl07Ga5dOhxPPp
h1ieHadYnh3XeJ79JMu/4y3Lv2M8z79/Znl55LC8PObzvPw4lq9HE8vXYzzP
1/uyPD76sjw+NHge/wrL7+Miy+9jNs/vHxgvzfvTSpb3xxae99/I+AA0mvEB
kMv5ABcYT4DkGU8AyZwnsIDxB6iS8QdgyfkDwYxXgM2MV4BTnFdgxPgGeMr4
BlDifIPxjIdALxkPAcs5D8GQ8ROI8xMwj/MTAhlvAR0ZbwHXOG9BzlPKZ0A9
4zNgLOcz/GA8B0QzngNGcZ7DJsZ/wFLGf4Aa5z+M85XyIrCD8SKgyXkRuYwv
QfsZXwIXOV+infEoaDzjUcCO8yhCGb+CAhi/Aoc5v2IS411QE+Nd4CbnXaxg
fAzyY3wMrOJ8DGI8DVrGeBpo5DyNH4y/QV0YfwOnOX+jjvE66BLjdeAZ53Vk
ML4HTWB8D5zmfI/3jAdCPRgPBMWcB7KT8UMQyPghcOP8EHvGG8EJxhtBAueN
aDM+CWYwPgl6cD6JCeOZYDbjmWAU55kUMf4J2vtK+Sf42Z3xT1IYLwUbGS8F
DzgvJZ7xVVDD+CoI53yVUsZjwSHGY8FNzmMZzfgtSGH8FiRxfkvgXCnvhTjv
BaM472UB48PQV8aHwVfOhwHjydAuxpOBPufJrGL8GeL8GSzn/Bl9xquh3oxX
g/94NZxvA863wSrOtzFmPBzYMB4O3nIezjPGz6Fkxs+BGufnlDLeDnHeDgw4
b6eTqpTPg2eMz4M1nM/zlfF8EMx4PkjmPB8lxv9BHOP/IIjzfxQYLwhDGC8I
mzkvaBTjC8GY8YUwkvOFPHZIeUTEeUQYznlEyxm/iCIYvwg7Ob+ogvGOSJXx
jpDPeUfBjI9EloyPhDrOR4pkPCUKYTwl9OM8pVLGXyIlxl+CI+cvcV4TnWC8
JqhyXtMaxnciT8Z3ojLOd9JjPCjarCPlQZFoHuNBndWR8qNQwvhRpMn5UVqM
N4UTjDdFnpw31ZXxqaDaIOVTkTLnU3GeFbZ7SXlWVMt5Vk6Mf4XGdVL+FZ5z
/hXnZUGD8bKgzXlZboyvhVrG18INztcyZDwu1DMeF85zHtdPxu/CKMbvwjnO
73JgvC9w3hccOe+rgPHBKJjxwdCL88H+MJ4YLWA8MfzHE7vG+GPUlfHHoML5
Y/0Zr4xiGa8MnTmv7BTjmxHnmyGJ8826T5Dy0NDIeGho4Tw0JcZPg8D4aYjn
/DR/xlujRYy3hvuctzaP8dmI89lQw/lsxoznBs5zw2HOc9vJ+G9QZvw3rOf8
Nx/GiwPnxWER58WdZHw5vGd8OfTgfLkMxqPDQsajgwbn0f11kvLrsJTx66DN
+XV/z0h5d8R5d+jFeXfnGR+PrjM+Hv60Mj5eHePp0VbG04Mt5+lx/h7dzZby
9+DB+XvNjNdH0YzXRwGc11fP+H7UnfH96B7n+81jPEB6y3iAFMt5gCcZP5D2
MH4gHeH8wMalUt4gOG+QhnPe4HnGJ4Q64xNSPucT7mE8QwxkPEPS4DzDJMY/
RCPjH9Igzj+sZLxE/GW8RHrEeYmcr4gWXylfESqcr6jIeIwwZTxG3OY8RjB+
I8YzfiNsOL/RjPEesYvxHrGc8x57Mz4kcT4kkjkf8hDjSdJYxpOEI+dJihl/
8n813Hk41WkbB/CkTNKbhogyUbQQhlAay12yREMpaVp0YlpEC2IQskdIXq/p
yDJCI6SFpI7oRlle22RJhLKdEM4vjrKUes/refr3+eu+nut+vvf9x3N9sJb4
kyBH/UnqVeJq4lXCd6+yiviWeIL4lmBJfctu4mFiHfEwYYB6mCXEz4T7xM+E
KupnOhBvE7yItwk11Nu0ID4nyhGfE1qoz0k9T6SeJ2ymnmcX8T/hDPE/4Qn1
P6kXCs5Ds14ohFEv1JL4otBAfFFoor6oP/FIQXNm1iOFp9QjPUv8UlhqOOuX
Qg71S2uIdwqKxDuFbuqdLiQ+KlAfFSKoj/oT8VSxk3iqwCwknqoW8VfxrtSs
v4rp1F8dIV4rqhOvFScViNdaTnxXzCW+K/ZT3/UP4sHiJ+LB4mrqwbYRPxb3
ET8WN1A/Not4s8gi3iz2Um9WmPi0QH1aLKY+7dS5Wc8W/Ihni6LUs9Ui/i1Q
/xaVqX9rRLxciCVeLv6Xerk84usCEl8XA6mv+5R4vCBDPF48RD1eFeL3Qj7x
e/Em9XuBeL9QRrxfCKfeb5X4rA8M1AcGd+oD+xFPGKeIJww86glXEX8YW4k/
DCPUHzYkXjGKms96xWBNveIlxDdGO+IbgzL1jfOJh4wNxEOG7x4y9ZPxMvGT
YYL6yZ7EWwYk3jLMdSfeMvWZISNw1meG7z5zlopj6eGx95g1+WDEwKgbNe40
2rzzdYT1fEP52iu5IPlcfWnGMIOHZFXybLku4FRso61R0AXciZwKKYshbP80
ZBCq6giZMwtEbDf2wqZ6vXMbEwbxtzGpFJOmUzAn2/6N7VIuSJ4ONmBJDmBk
8tuomQhXkDjiILz5WD8Eqoxqvn/JxYwfjt/Tt/eB352mVGHJewj9uE2n42oP
tsp4KLs9C4ei1+IXvvKGQSzpQ2aTcTvK3cges9JOgVGvyMPv2aUobNQz8C9N
QV9d0w6pC6+A+MfHb6vodaHr6GKN2vNDOIcd8uKC2EP4y1/L0V7uLdYcEisp
+ziEv1QKOweGxcDNQ2oJa0vb8O4x7vVPFiPYMb1kuclwCCQui/h5s3cTmik1
btvvw8NUv+b4AtWLYLrqtup8wxpk5J6bqBozePrPM8kSjZ4w31fcub+pBGsq
3vBrHjP4zplhfdrpDovchEyHMu7g1V3lqSpjDA7oO082BLpBhyG7I1k+DM78
KKPw/3/9CvrtnZwpwV4hGr3r30758PxKUmgjl8ETSXr8F3FuIGtdu8/N7hmA
qpZOQiqD5rwDLpZB7uCbxtlcHVAHH45H8kwUGRwXSk/61cELMrYmBYlwmiE7
Jne7sykPq1c8WO1S5w/Bx86uE7boAI5/anP2g2E0lotiG90OA4ftr5M/O/aC
r+gx+T/ODmL2oivjvxy4BmN/rlM8uHwAHCpENyqO92GL3WGAyXtgKeFwmq00
gstuKUfHt7VhnQtfO3R5AfRc8vfzNR5G2ckdRo0fO9FfaV4LL44N+tcSD49l
DCL/0FedaIVeTO70mLNmxSWwGh02NJ15hwu/nY/WM3qHUd0xT8qNvUG43Fze
qq8PV1dWjqwwGMDqVybnuh66gNmqTRt+2taL9f1fJqWvDqKGxFWTrXOdQHtL
kPQJuS58q6ZuwP97CNcWNnjo3TwN6lyluKdijTBju+NpxAMejkYGjef0nYXe
pLigziNv4a58A+dw3xBmOq9TWFn/O+xSPJp+W7cSp8LsWhd7Mfifu7tT5Ph7
IW061rVnLBsyM+wq0scZjL+REJQwYw3az90kxPEhdNid7LHvYXDUJ35Rkast
7Gn+x9u9mQN5Qpx6tRYGMwM1J7zus6C/Qz5dLLgI+q1H9nyrZbCyxTZlSt8R
VvrzRxUmisGHm1t8rZJB7f07hD4MnocGrIjuNSiClEmtofw6BgPfz5Oq0A4E
PXOL0nrXXFg7fdJMVfBOzeUmNNT3RgH7UVK+xZIs7BVXSHglqPODVXDAVt9Y
MArs4AQ/fI7TQuo7x2IZZFXs3ufxJgZ2WJ68ZV9ajvXxnkq64Qw+YUVkXXQI
BynrRxM/epbiqpko1WUPGLxQHzQibRQImmPtc3TNOegCIscqXjHYWXg/remL
N4i4edy4XHsfCxxUpvV4DEYFiW+xWeYBw35H11TLpuPrwVvzNk8zWKj/VfHg
UTc4mPbSecDnMnoLcY7sFPT/WdHYfUoyriCy9W8rNVYoKPOlB30E5zfNdXXn
D7vA9fUvtjO5N2DNgtbRmM8MHr1kz0g2ukLD1Jn1joY5sGZDVtoZPoN6mms3
Gc13B0w08Firkw/siHTOzncM8i593NOu4AWKui9zOhIKYdXO6S0nmhhM8P5n
/aOj/qBjaaESoFMC657kpcYVM8hlGd7S7goFS4PuH+54lIB1WpvGYkEem/T7
7k5+Fg2RU8YnvzZkwoZrPDHhjwzOjVezH0mJhdL61iusoSLM6w8Yi6hmMN2U
qfWRiQF2Ij+xM7gSjQ09JVTdGRTLLd19XDYEygLkzrdXV6LNN+nw5a4Mws/j
nFMrPKF8KWv6q3s5GvVoiyyIEuRw2WXbG4XOINxfFnz9VBk6fQ4xrRLMjRdm
7Ef1zfaw/96Xizi3GAstHq/UrWHwDWs79wPnN6jJU1Eze3kHvdNsAiQF+WOw
Mc0v4tsemGypF2/dUgCSfQ4F4t0MLmSbdCts2QvchI3OwUfCsCvGCzwE938g
PqDoUdN++B+VsAk3
            "]], {Axes -> True, AxesLabel -> {
             Text[
              Style["x", Italic, 12]], 
             Text[
              Style["y", Italic, 12]], None}, BoxRatios -> {1, 1, 0.4}, 
           ImagePadding -> {{20, 15}, {15, 1}}, ImageSize -> {260, 
             Rational[395, 2]}, Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {All, All, All}, 
           PlotRangePadding -> {Automatic, Automatic, Automatic}, 
           SphericalRegion -> True, TicksStyle -> 9}]]]}, {
       Item[
        Graphics[
         GraphicsComplex[CompressedData["
1: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
kyuGx+z6BoSgFt/ijkdChz61K32tGiep8t5ixPz0HZ7s2rXGWxxyssTZW1HK
/fQ4zv/E2M25Y8Ap58SN90YZ4Fe+F4UWoR720f2k3Gi+cbt7jVoJMKdQxfie
A5X3YYK5Yj11p/8H6ufTYZ1pcct26GKgR4WHngmVTLCv1dqSz9rp4TSNlzzf
h8Zf4rP/aH8uwwCsYyuZrV2lGKhD749dX4OvmkecelAoBgIbH7S1KXQTC86N
6pi+JFrON3PXoKio2dFyvi2+fWHzqq7RcO9W/fWLTh3HPHlahLoHv1b4G7Zs
W/l08Wxv4MiObBc/LDgJxRodm5c5U14PEsX1zp0cv+XUDBteuN006Wa1N3J/
NEG3osDdtg5s3Zw5L2WVDg6+vupVsto9mHSjjjlHnhg5X7Xi+e/Nt076elWJ
z4oE3eq9hU8Wt+KQbzr9Hd0bKOWcHLj8WgqGxdedmf2AI49hVGJ44aJv30j8
aO+uobUHvYYF1g0e+w2OvLgjFeaUa1M9GZ8+LPtszY3Xcv7PcOswyt4nAto4
Fbjj5uPIs62xrmNM4CwzXv80v9vMSm/k/B+a7WfompEO/DN2XhX/XK+hZSH/
a05prwSNkeujvXj/A/ItH3y0ayK6Jf814NHM11B9QokvYRdey/uJ+YSXtzk1
q1Eh63n6FZwW76UTNBL2Fmw91G+1EV8b1/Xy/ib1AAxe/6BzBZc3EnvlOjtz
7Fkd5OzRTnthYIykyrwZI+Z70ZkHRv/YFI/RVV+2yWVz5BlbzOGv+y59DffL
v+xU/FisoA4+2kqst10Hcm7vnhSLMydmuN8oFSHXU2uPof6J3SNgX9/xZd4v
jYfaxwObmDKi4cayq/dmNjTAlO/jF8WOddRf9hPr/WXEYL8K9yKx8b++feI7
KP8nEr9NfR4xpvUbWBu48373rH1xnp1Vl+y9qjyPCR4J/jJ/TeGM08sTISVn
1fc9fkbD60Nfzh1sn7VPaZY26L91jnrOPQX/qkXjL/XKt6dmzWydYYZ73eL0
i98r17fAA8EfW9D8kOev7X140tO5Fsh9xCV0S1IkzKL5Jo+L+Y2Fb+/VbB/+
GspN7pujfoA/ZiSeb3O9z2u4TPOdne+H2zw7HWweqjyXk1Pfg+0uVra/hkZV
B08otMKOR+4M+C8ua33u8fAqYc1Mw8gSoeG1szvitGu4jFrWpfcbiX8dv/1j
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
3Lr9dcq9sIBL3vpDXbyU/2OFHmr9C74K/esc8QN5/WaxlTp27poCM/3bbdyS
NV8P+f1qb5xohWZjfq17/FLyN9gj9MPdxL/Y/PPD/vtuFXofHwr1/4kIP/cr
FUb1vnB6UBZ/Ptmp2vbimTbo7Nm1Qu0fYZCD+Cf7vR2mqPVbeCb0W6w9Nsnw
zA7LhjwOCdgu+Tt0FPz9fdL3uw132NFldKFCzVHhL+noaiv9uEu+l2DO0cuK
Xkr8nyOvduK01qPGVn4Ml50e/fI+exnqaNJ/JUl+6Ae9xf9pf7xNUvUxNvy2
OMe4yUueQr34t4lTpqWw69nwe41zR2IrPpN40wNNirXAQ/Dfd2K+V487MKJH
v5YvTr+AOvmORifmddSF+DG49oqUOilY5FT/v/r3fCT5v9OuzWnF2z2ReOup
0XNartTA82pTA46FJOOb6UO+LX3iqDNRIXrnv9k8HkG9srObjKwaLOnqZeeK
Nw4247c8g30bv1LsJGasd3fzkaZ3nkh8L2hVjf/KKXFlOpgo1o9hcafiHb5H
y+d9vTsxuWw7E573m+K64/tTOLFkSM5+vok4v/AJ891hATDCtNvju+U1Gx8T
Vh1ddEvZKs8knlawVLW1gx9Kft1V8I9Cc259ytwUJn//+MZhP/dqRnxXc2vr
1jOfwbu9D5yqjE/Alj45fi6Y9RDyNaiydnjb5+x+Wed/6T666+RnEpcrNGJU
u/8eQsiKZtFLW8TAkV8zr2d4KPqAHuar+Sd8E/xT36jcQM9RBtzRZPvl8FVP
Ya3V1Fa/Jh7fDZr+Y1t6APQ9vzPksQuy+xtw/PUEH53zU4lvtVz8d2hlDZTY
cHmf6bwe6hQcVTdoiJJ3ZciScyQ/Yquajyx/Goudbzd+nH3uY1j7tde1/R/i
8EvB8Qe0Mk5Fjz+0YQ+qVXgIOeZ3W9LnjQGKRFZPbT1CkUdGOCjkWSt6Pqk3
2PPXqt20bhRWN5/33X36Cex7794iyS0GX5Wp4Nmwq/L+I9FUb9yBwREPIX+X
DX81ikmARuXKFwycHgrBcWm2VnFGqL0Cr31YqtzPBLfV8hg6CHn8F70feX9r
+vuFlb/rsG6FMgXv53kKT/p9CXDt8wYXDC+8tPeYAMhP71+eL+YjTqmWVu5o
RACsHeQ9A7YkQuHBy27+bBACvds/Gul+1QTN8xRYEhCk3McMJ9T6BgwR+sYw
mp/y+rfCavermaHF3cN9Rlwu8BRcCmzsvML3Fe5ITJuT7aIGYmn+y/NdPWuf
mPw9CUbVvbTxRGoozLh/bmpGgyS4+uncucRHL2BV2r+NN080w98Pzr6oeVB5
vxYIV+tbUFStb8FAoW99rKSb8N/dIMwfV/vg845PwTxw/aVKu5PBa0Bp/9U9
Q6Dmst6zwp9b4OjH5ve71Q6GKadLNFib3QKn9g7TFMrr6F8yR61PwlGhTxLW
oEaTd9TcD0/hcIci5ar/TIFZBbu57/kYCrF5i077VCsF5tbueeH1+RdQIbyo
/xNXKyzo2sdSYpzyexs0V+u7kF3ou/8Qf5PjtcGwqZXH+VQos/qf99qLIfAu
29GdGwJs8CTXws4VcgZDDeKn7H3bob5aXweL0Nc7bV90cObUNCja2jzF3zeL
v3dZ22/fIDscrFi489DBQRBD/J5dLx16CnnQbe6XTR7eaRjbqEpk3dXKfE/H
6vdadY1f/kziH60SomfnUY7bcWNE6S89j9yFaVsLljvfVLGnaGCEbeP5gr14
nRcbnvFP3FY05y2Ys9Il6uM6hOZtD0//9lC5vgZOifGfO3pIZtHvvI6UFcf2
m5Z0b/A1sCxfO/GhW4CkpSqOXzY/VzK2zxVXrOfjW5L/d1517mXZnffgeeu/
6let/FzQhzDkWKvJVw1x7Ppm/LvtjOQum29Avk/93vxv31PSevJSn8oO/r9A
rLcmyRH954VHy9/7jGi8IaZCImqKTHhaNc8tWPjvz9SwHxHs+iYcklop9cBZ
JY8jEqyCnxTat/NLTB9HneZiyy8999r3SmKvnc1WhmUYsc3cDplzG96G/TOu
tfvneBC7vhG1n29k6Aoq/18PTmHED8sXXl7x5cAAeb59UZ6ooyPicXuD683y
FL0BPd1L1vc1xcIBQ72R/YMUeWuAcWp+DTcFvzY0/G/5F/9YXO1SO1eVYnck
/902fsCyJ3F+sGn+osEnX8RDjejEoVsbPYMvu1uWz5PXADF97B7Vajr6z9jV
8gjKCnlUoN/H4oWOROGLu/V80PMOHNZ6h+W1xOD2+yvv6Eb5QXH6P3LeFC3/
6cqwpwnQy0P3bGrpZ3BL7x84a4MR9HNSqmB5RZ6aoJJa3oIib3fQeMrrOd87
XluXPQIfOS/qd/njLShA70ceL0zvR2KD8/pB81cmwgooNTgq21PQNB8wI/ty
Ezgl9byR56vynGb4V61fwG2hX8yj+SKvh8Z+ffWttJhj3u0H2/JnrZNBXc86
3wvHcuffjg1wvgENaf7J84lqcXzUhdX1R9+GmIPa6JLlk2DmtPbTRnk8hoEh
ufx6NjND/+YVNY1iHf18ygj9yJXWg7ze06Xbfj0aG4QeOROcFra4DxfqLt7o
OyoUfU7lS7vQ9gqM/+e8yb4yGbYfubDr7l9PYb7P6oxPpywQcTyv+c1uZbyz
9OudKn0NNgp9bU7B1i/COwdguYR1k4bNuQ8n328c3SAqBbY+r7o6YPwzqHbx
UvCsr1bYdd2/HsY/gjOTdE0vl7TC/qP9Yu6NdPQbSlXrl7BU6JdziH/I/zMo
vVNJGJIK/QNKjvgx/Alk+9tizRhrg78LHTuf5BkAQ4lfsfF0cqo3r1zP3Yn3
JL8dIvTjgudMRb8lp0FTn119LGefwY9DG6p8DrXDu1kVNkfCIxhP/FBer13N
ZUM7u57HHyPzHTQfXS35byk1f4V3gr/OTHtyc9FnRT931MU5pim3O3jXQsgR
vzOyRrwXtFtY7WY3l5vwo9rDTov/S5Xnj6/3IOzxYUfdrSNvCrvnapCCI/I/
+Vn41wHYMP3S2lxnk+TxX56Rm52SAiCz5JXi2UKuSf5pH7Hc+d0EX+iYs2mt
dRODYGP+6QPzvrwq9yk3xHy7kXGm3vgujrqxi0+UXfF11StI2jTzR3yuB+Dv
fndu4DxH3Wnbgf5r5utjJL5mHH7VNve1xG9L/3v4+ooImD/plHt45h24+u7x
ePPWcHm8la+uV6f6QRK3Kf/UJWhYqMTbCi1ZmNQ+Cpq1t8UfyXdD8sODgj+d
W5i+44IuQJ6/NmbsrGG1DPiwS3ieocOUODsD6of1O3DXywfWDS4TfN/ltDx/
b95JbrkbxOH4ixV2f8zcBC3ouNwnETXCK8GPf4044NVydCTmLvRfy6qZF6DI
+XWaQ//E4Isj3dM25PeEE/Q87PeRGN2+SoNHTnshcveLFM90Izw+On7kqLUK
fzfBMCFPmtJ4yN+70HhIHHlBuyOxw2tsf2DxoleG01DzLJoO6t5goel1jm29
OgEu0fjK85e2vT8uyGiC2L+s5XuUUO5nhuxCPvrR+5Ln/zp525w0IByLaebt
WRVwEG7R+5bHrfS+JZ5viBi36moSXPrrVoV8e+5D6yr71xxfagZT4Tvl8ifK
+QedhPzO06b+ow8VgjA2V4cPDdaeB3+38rZFn0Jwcsdabcb4rIRrNP8c18+u
e5KePRkuFD1Wb31JR97kZKE/LF+bf+OxFwGY2/4ybtlLH0gt0r/zmaEpMGH/
jkaNXvpDQu20nd/aWaHYqEXbdc7KfLfBNqG/bKT1I+93pMEk10ZXUyFpbfNH
u3beh8h5R4skbbLBw0sf9rj0uQ4TaD2y92uHyUJ/8my6r+K3JDsMu37lhxZu
QQat5z/OL/SA1v904g/seDpu7hDqMs3zEjSBkm7Jxf+ss6Ul/oH6Z7/rAoFC
V7V9M3D/glQskNuj17xFZzF82+TgUl4p8vdLjtYZbEt31HkckZl0G4unYHji
im3f3Y7jy057Ol3KCIBXwzsONR3cDg+vZ29n98rSv7wGVwosv1v8zoJ1Rv7m
J9grdc3ubiWC4I2ujcuB8augY+bf+6e5hkKRjKLDL425CH3GFu54NDQJ06uV
aGfKuIBjKuY49+zTW3n/YW5BW90WhYM2uvtM/fOT8O7ekPVT/46Rx11NL8pq
nF5LvObk5RmztW8knn099L+itV9DoS7fhze+skvqYy060npLSGp+1q1NuDy/
1am4LuVyBUncsfTFRm/fhUgc2j+1YcXXMbB439TtGT6XoNS58MBG7wLY+Et+
Ir7P2p+6EX/Jpj8d+HX9BXl+TMxvLOXQK7o+7qPrY2G6PqivH4mBxC+wGT2v
PN6WnldiD/r/2JL+Pxrp/8rjg2n8JF5J4yfxCBp/NNP4o53GXx7vTe8P9PT+
5HrOTe8fRtL7lOf3p/mA1V7/ng/YneYD1qL5gGI+QXuaT6Cj+YYdR/yebzic
5iP403yEpTRf5fWX0/wGY67f8xuat3/s7pmRBjuqdsx/y+syPM1Ze3jE/+oU
eRYYfPvCKAij+c/GNx0GifVF2A5daT1iLZLH2J3kMTai9Sd/34ruh3fpfviM
7odtt/2+n3jv6ZhC18fZavkvqB13Eb/AoqRPwPVRv/UJ/KmW/3iM+BH+In6E
0cSPUEf8CCer9QNBbXiJ+BumET/EBcQP0UT8ECsQP0RPtf4gqBUXEX/FRcRf
oQzxV1xA/BjvED+W/GAg8XfMRfwdTMTf8SbxdzhM/B2ZfoELSH7gbZIfKOQH
Wkl+iPPMmIfkFWaSfIJqJJ/wrlofwVS1PoJC/qGR5B8y/URQE44g+YtvSL5C
V5KvWJ3kK6yc8Vu+ivMjIbwDrc8ran0GhXxHId+xtVq/QabfCGrEMNIvUOgX
kJf0CyxE+gXkPvpbv0Bftb6Du0l/gcOkv0h+FCf403K1voOz1PqN+F6PG0mf
QqE/wQPSn3A/6V84gvQvPKPWb7ClWl9R/p/ERtL/cBPpf3hVrZ/gdbX+gctI
38RPpG+iv1r/QJta/xDPr8WJpL8q8xHKCfnUg/Rd3Ef6rjL/5O9zbvmtL2P+
Ur/1ZTxK+jX0Jf0aN6v1A8nXa9B+Aieq9QFl/UOUWP+E7bBCrPfvan0A3dXy
H7eR/oCzSX+Q/GIy7Vdwhto+g660H8KRtB/Cv2k/hM60H8LRavuN5A8/ab8l
sSftt/AM7d/Qi/Zv+A/t3/Aw7d/Qh/Zv6E37N5yvtu9I/vE32fcl3kX7RZxN
+0WoQPtFnEj7T9xP+09cQPtP1NP+U/KXyrS/xUDaz4I77WdR7GdB7GeV+QDd
xXyIpf0zzqX9Mw6i/TMOpv0zuqrtR5LfCP+BxPdpf48a2s9Dpsfv/Ty2oP08
lKb9PDJ7EsaTPQHXkD0BA8iegNnJnoDMviT5UTWyb0g8g+wbWIjsGfCA7BnI
7E3I7E1YjOwp2J/sKSjsKfiW7CnI7E+SH70ne47E5cmeg85kz4HHZM9BYc+B
bWTPUfgJCPsRllPbq9CT7ElYm+xJKOxJKOxJCv/CCWSvkljYqzCe7FWwhOxV
2IPsXbiP7F2Sn/0k/wGmkX0MNpN9TPk/8FTw2/Jq+5PC3xX/AB4gex00JXud
8j5ggJAXB9X2Jiyiti9hKbV9Sfxeh1PJ/oi+ZG+Ee2RvVOabsj/DZWp7EhYm
eyZWIXsmNlfbjyT/6y7k8XC1PQhfkf1U0IdYnOyt4Er2VmW9wkwh/+1kl5VU
uc4dsu8q/AMOC32D2WtwMdmHsTXZh3G42j4j+eMYwd+mqO0teIb8l1iL/JdZ
+vJvew12JHsN/iJ7DWaSvUbqX7XJHiNx9ta/7TFoVftLJX8FssdL/JXs8biZ
7Pv4D9n38SPZ9zGM7PvYQO0vlfy0K/kPJC5E/gNl/EArxq+e2l+K3uSvwCXk
r0AD+StwOfkrsBL5K3AV+Sskf11B/hCJz5E/BC3kX8Hj5F/Bf8m/gmfIv4LT
yL+C58m/IvmtiJ+RuBz5cyQeTv4c/Eb+HMhJ/hwcRv4jnET+I5xJ/iO8Tf4j
XE3+I8xD/iPJX0X8jMQifgb9yX8FW8h/hS3JfwWbyX+lrCdwFevprdqfi+vJ
n4YlyZ+Gfcifhq3Jn4bD1f5cyW8fkL9P4q7k78NU8u9BdfLvYSD598Cd/HtS
P9QJ/uGs9vdiQfI3YjPyN+IL8jdiffI3Yh61v1fyX2/yd+I78m9CBfJv4gHy
b0II+Tcl//0g+J/wn2IJ8p9id7U/V/LXcPLPooH8s9CW/LO4nvyz8IH8s1K/
dFPzZ7gq+LPw/2Jd8v9KfryQ/M8SC/8zviX/M2wk/zOuI/8zpJD/WfJri1oe
QQkhj0aq/b8YSv5vPEr+b8nPO5P/HZ+Svx0s5G/H9+Rvh6bkb5f8vaxa/sIk
IX+Lqf29WELtz5X8fRzFF2TtB37HE8AJiifAUxRPALMpnkDy+3/U+obiT8CJ
an8uJqv9tbiG4h/gI8U/OPRfoS81pTgJSUV8BURQfIXk9z93qvQ1EPEYmEnx
G5CX4jckv/+k1h9hrdAfRTwIingQrKn2l8p9SA+KP8GOFH8C7yj+BIX/EmLI
f4m11f5TqV9XU/N3EP5MKU9c1Pwc3gl+PpPiIfEDxUOiSe1Pxa7kf8XK5H9F
K/lf0Yf8r1KejCR/q5QX7hTfI3EIxfco/xcGiv/biOKHcDzFD+EZih/CnhQ/
hMXU8ZdSfhym+CRsQfFM6EHxTHiU4pmwFcUz4VF1/KWUB/0pXkriXxQvhTkp
3grzUbwVVqB4K2xF8VZ4Qx1fKfn/OorvkjiN4rtwMsVzgRfFc+Ecih/DRIof
w78pfgzzUPwY7qP4MaxL8WPoq46vlPJAxLdLLOLbsRnFq8EuileT8qCdWH/5
KD4OS1J8HFak+DgEio/DUHX8peT3Ih5eYhEPj7EUnwedKT4PD1N8HgRRfJ7k
/w0Fv+lN8YJ4hOIFcQLFC+JzihfEpRQviF8pXhCj1fGbkv+LeHqJS1P8It6h
+EXYSvGLeJHiF+E0xS9KeTBRzX/BJvhvGYqfxP8ofhIvUPwkDqH4SSkfRHy9
xGUovhN3UDwnxFE8JyZTPCfUpXhOKR+eCvmyWB0PivkpnlTQrOt3VMV/Snkh
4u8RKD4VclB8qpQHe4R8FPGtgirPm6XPU7ws9qN4WXhA8bKSv19Ty3toI+T9
e3V8Jp6jeF4YRvG8OJjieeEsxfNK/n1Mrc/AIKHPJKjjLXE6xRtDX4o3xnCK
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
          "], {{{
             EdgeForm[], 
             RGBColor[0.293416, 0.0574044, 0.529412], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJxNVUtsTVEUvX23zuWe9rXRrxZNU6r1a6Q/n4dGUv0SaVptRYISUY0aMKER
A4kYmZgaIyHiE1SCigkzI1ESwkBotUZUtYS1slcTg5117j77f/bet7TveMdg
IgiCYVAIcmlBUA5aAdoNRi2oC1QD6vzv3KW7hz4IeoDDwDrxqPfcBUEZbFwB
5uIuB7wksB7YHZrOBtB6UC9oCHIJyPcDdwLXgHaARhHcL9Ab0KM4CH4Dn8QW
XxOoGfQR39/B/wR0URBsB28ecFx83j8F/cF5GnhEenP6/O5XzvyuUO6Mkznd
hM4UdCdj49WLP4hYQ8ieAJ4HRThfAB7zltNj4B7l2Su9HuUcQG6MNXeWM3M/
Brzmrc5Xgd34/gKZLuAz2RoBxpBdCVoFOuvszc45q1MRZGaAJ/GdDv4pYDd0
Gvhm3uqaAVot4tmDMlXztaA2yVNvgXzF8rda8nPfPHeqJ6pBn1GjH/A/Aezz
xtvg7R2n9ZZr5YvvPKJ34fvwbkZvnYLOJugeB76WLm3w/ZeEpnMXuVXBxgPg
C/Ub+64zsjftiOyOMved6S2VLu0sDo1XENr75odWv2LVkPezCftmTy0HNYKW
Cfl9N7b47ij+RbIxrfMv+ZqVvb+QKwGWIq8/OpPH+7fKf0Zn1uEofLSCWkDt
0NkC+VZv8TRpVg/HJnsEOCD5Ob1K6Tapv8vV383it0imQud+6d731uv3gO80
kx+c6fVLtlw1YCx9sb3PIWBaZPV56WyG16hvBmLLazA2W7T5HvgK1I5zFvQO
RpbD/sjkKP+Q+cnWKLAA9A1zUQQ8DZoH/hnZ2CFf7Nk29SjfY2No/bRIZ/Ic
dMZhJ3Y2kwWaUdpLV27bkH8KvAbN9HrN8A1vO/A6sBD4M2H6VzW/R73NQb56
i3G0KzbWe75qXqS42GOcOfbD1tB8s76MJS80W9xl9DMlX6uUI+3mhiZHGcry
nK+dy92b7c1uiWbgInLOgt4lZ/upULlxhrjTEsIy9fu+yPpib2RzxfnKiMxP
rvZ+rc41mnnO/jr5rxY/R0i5hfA9ifrnOYu1TvWv1Zm2eyPrt+7I5pgxJ9nP
sLsZ943edOv1ftwtVZIJ1Yfsx0zttqTeNV151alOeapBgeoQ6p5yldqH3IvF
2gmcUe5m7kfu8UzZZj6Mkf2Z1F7N0Axc1p4f0s7mPPKf0aG32QWckC3aod7X
wHZsUjbJp8xX3U8IqcNdxppwR3jpsr/HFGesWInjQq+zdyafCTyg3mCPVKhX
GWfSmb9sZ73p1J/0yd2W0j7doh4r0pz2avcu/i++rZJJiV+sOUjpHKk+9H/b
2//4FvAf9cjQPg==
                "]], 
               Polygon[CompressedData["
1:eJwtk0tIVVEUhtdx6z5ytqX2oFkiNWlShJMoKxFMKJMQXzeC6hJhihrUpCAa
BBFOmzoWQYmeolg5FRo0CjOwWVSm0aAXpOC3+Bt88LH3euy7zrqN5dGukQoz
OwKVUJWbncrM2iDgb6LZfnwfLOKvklkpmPXDHL6bs3XyvsMe/B5EYnO4j88V
Zh9o8A/m8WpqtmfqEfGnnC1x9x7K+BQ1e6jdDZP4BWIGib0GJfwONasy9biL
P4jqVQ1jeF+u2AHoztXTe2/AS3w26e19MOO9yPnC27+C4Yc5a+JuJ+zCJ6J+
ewWM43+psUmtvdxv4CEqd9XT8deFennMAl6Kmk0t+ZfxRmo2kNsCB5JqeC0/
28Q/wU9yf8FnfJSYY9wdhet4EdXrGyT8MWe9QTObxhfgfNA3GsZrcs3CZ+6z
v0FOwCvhJn6l0OyX4SreQk5zUM9mfJ2z39z9gR8eS85ZcjvgHV6by89APT4c
NSvvMYLXpf+zhHr8EjFDmb7pRfxt1K75jvmueYzH+gxW6TfD2SHuDsJz/FbU
230Hbnsu8ceD3tyKrxWanb/5Ef4wavZe4xn+EToz/YblqJpe289W8BdJu+Ez
fYKfhhNBPdrxgUKz8p0ewgeTdtV3pozXUWPN9J/YgfckfeuT0IWfS3Kv2YFv
i/qWnrMd3wKlT2pJ
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4159141590910367, 0.2703956161937195, 0.7015979815734359], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlV1ozXEYx39n2/md7fwPzoYohUMuTLS5kQtvI2ot5siFsNnRJooZY95K
ycW8XJCShSQlmWazFzNGpjEv40qRl2ZbVlLEDTLzeXqei1+f5/f8Xp/n//09
/0SqMrkjzTl3lpZO6/TO5YecuwfvRZ17x+BdWE17j703qn3x34HJwLlNLFwL
h1hTzNrP8CNjP5nTB68xtoc59XAyY985JwEdY7eZkw67ws69xDUGf7/tI/uF
YB9+B1uZ8wKzHS7w6p8B/7L+H/v8gkczcWJfhLOynCvAXgQ9Zye4w3Q4bPNl
XRv9ffjb4aSYcwexu7HjnJcX0ly85ozt8A2cRfvEEXnwsJ11HlaxZj1rn8DR
jD1naBRsDKvdAl3EuWXsM4L/OG0IVy1cw7q5tCStmv4A/t12jsQoOUhnbQUM
wwOMDeLfD98Sww/u8AEOmC2+P4wtZX6v5Mds8Q1nak5yszQvYotvA2teY1+H
PfQT2P2whHjyudc8uIJWgl0IV9MKsDfCJTCVrn2xy6xfxFgpLIbjaDnY+cZs
i7nI4iqM6DlJ82fS34I/BiN8l734PNxpea6Ej+w7dsOUaekWjAS6fxROjOi3
GwcfMzbCnKdRPUPmyJkNFvvXqOpbdN4B51iMEmsp60+wz6aI5kLWzQ5Uu3Lu
Zlhl72JXVPMoezbBDMuz6LEeHTzj2zXAqZYv0WV2oO8lDpdnaP4/Zepd5c6/
ozq3wObfCDQnjbDM7iDv6aadK9/zi71B2bvL7v8APkQHCewr8IHFex82e9X8
Ga+aFm0fgGX0v9FdJ7r2quFXstberLzdpOl5DVxs+lwGj5oGjgTaF38RLLfv
MhbWBaqXc/I2adXYzZLbmNaNNDhifhnPiembjcOTVn+OwYf2lmU8RqvBDuAO
qSmcux3mmDZEIxPo9+IfD5sCnd8q51qtkJoReP1eUa81S2rXeq96Fd1mwWHi
f4L/T1jrkbzZXDjf3vJCqal2h3lwitUZqTfFpvOVEc215Fxq2KVA38JWeNje
3SF4JtD3dRp6WytvJcdrbYzDPV7rZbnXOiY1LDuktlBiqLWcS+5bmLcKfxsM
W7yi0wvY0/Bf9RqbxDgCP9h8WTdo9oDXNybfVL5tj+lE9FJn95F7Xba4JD7x
iQ6lvqVMn6LTVKA1cRucGeg7ScAKr/c/5VXHMr8MdpmeRdet9v/qNM3GLd5D
lsOaQGMK2dkdYdVAZ1j3lf3Pwf8Kt927
                "]], 
               Polygon[CompressedData["
1:eJwtlFtoz2EYx1/7b+/YO2yLlCLjCtHmRgrNHC4QGsMwbDHnKeaUmJBDSckN
xYUIRSLmsGaTcsjp3nmb443zlXL6fD3Pxaf/9//+nvd5n9P7FteurajPCiGs
hGw4lEKoyYSwGA6gs/JD2IBugL/874ghtMMreA0/81jHwQC+Z/E9Yb8JvRFy
0QWwOWNr+fm2R3ufwjO4kBPCA859CBfR71mb0SWE6fAWvRKfM/38M+gh3UIo
57ximETAd7AZiG0x3Ebfg/HoCXAfvRt2wR7YC3eI90+WxXwXvYO1RreR7WEo
YW8BHEQ/dn86Q2etZs8qqIe1MIqYRmQsxlr0CtaWu41s18FzznoBDegj+CjE
Vyk0oc8lq6/qdR59MlouAY6ir0arhWpyDV2QG0JPKIQiWIrPJVAHy+AmNXzM
9ifQhm6JdpZyakbvT9bbRbA72Z46j1mxb8dmm9dEtanmjAVQBfNgZ7K9C6ER
3TPaWV+gH/qU96sCTqALWHvk/e2Bvpysl7KRbV/fr5j7RPMhX1+hP7rK/8tG
ti+J8Tu1/AGv8iynEq9PJzobMhAhF+o5Yw3chFY47fOinmpWWvOsN+pRC7p7
tFg1kwk9GyohQBfYql+fh2O+FvxMnX2EM2ozdocOo8dBGYyGMTA/Wm6agTrF
mW+91wxk0J+J4RN8hW+Qx55CvhVBSjaTmk3VpCZaTsrtBjTDLWjznJV7CTYd
2HZCqWYhmS/NrGZ3EBSjy2G45jdZ70rV42Rnyl41f6O77vddd+g3emQ0329g
FHqKcs7YezBY/U/WK+3vkQxp+eyFXh9tr3zUo1d4vKqxar0F3rr/Bt2NZL4V
g2IZz/9yr7FqvTTa3WnnZwy6KdnbozfoKvpvtLdB/f8V7c2SP9Uggz7elY3+
vtxHX0zWH/m4hJ7h8687VIGexp1Ypl7CVPSQaGcrh6Ho3tFmW3egCD0Xmzkw
Cyr9TlX5mr5d8/dPM31Zte1qsejNy+btG5asN/9nAn09x3zrjGZ0h9srh0b0
JGwmeo1Uq7Feb9W0DD052V1WTlPRc/z9Vw/VyzXeX+Wj3uTkWq7KOaLf04N3
8AE+Qid0+Jq+VXquFTATqpPNmu7IvmRveoPP/1n0lRy7f8qpCV3p75ViUmz/
AJ7uz+U=
                "]], 
               Polygon[CompressedData["
1:eJwt0EsrhFEYB/BjJjMZirKx9T3YuWwUjbBwnXFbMVkRsUT5LuRSzGxmhqRs
rJRruRUJGxsr/N5mFr/+p+e853nec1qzufR8LITQQi2n9SGsxEM4lkVK1CVD
mKkJIS5riDHFJBNs2cvKnkQIL3osy1XWEpVvozMX1h2+C9Y31tdcMafWotZP
mgZm1fqi/qkQDv1cVk4xzS6Xatvyky/KlPjh196JbE5Wel+a0WjdRE59njy3
vluQSfsJUpxHbyDb3bmNHMPeYkEuMmbdLTvp4s+DnTkz5MwAgzzo+a33u3zk
iUz1jcblCKMcqO+zV71jRr7xykf1jjuyYE6eI5bML8sNc9bZ5NX8tHym14z7
6B94pOD8nT7F6vtE7/QP7ANFEg==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4884405606543322, 0.39649944166949935`, 0.8035426127077251], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtln1M1lUUx388wO/38Pyehdlq0kYalm26UjP/KpdE09ZaU0FXERoC+TLF
l9Z6fxNZWq5mTSPNmoo1e50phUwEQ41GZik1agMUydycJtqb2aTP2fn+cfY5
v/Oce+69595z7nP93CUzqhNBEBxDMpHXc4KgHMNr8FB2ELRiOwI7kX3oP8MG
5CP0XXAL0o5eD4dEQbAoIwiugsOQavRfQh9jY8/APr6nY2+CzzJHFXNthe38
1oJPByxkbCU+d8Imvj/G3gi/Rg6jX8nYheifoC+GAX5V+CeM8p8Pp+L3K/q9
8H7kJPo0+CgygF4Krws9Zj6cjwwlzlq4DBnEXgFf1tiVMEK+Qc+CfyN34f8X
PIfMQP899D3b3nvhcWQJ+gm4XjEtdrH2bjl4Xuu8D37PHlrw/we+GjM/h/Iu
vAO/yfjfBHssNrIXyeW3XDs4OJAKgp/wOQuP81sGegIpTPiZzhXt22IdYI41
+O2PPN6xDJ+7WbE3IVE6CN4ifgxjm4NxKXgi5brZzL9HY+7GVpnwvV3kt8cY
+zlMIgXoo+DqpK9rM3yH7+nYN8A1yEvoa+GbyAr0OpgZ++VMwOXIw+gH4SCy
zuxpn9PmLkIqtAbTLQfHtbezkfYGN2tt9bHHtfgX2dOLOgs7k2ydtZ15vu5J
LuzD7yhxj8H9fE8gZlvoebf874CfIZ3op+BQ1YXVx/DI70M+3KCxu2GL7nMz
/FG57YJnVC+nYT+yFP0knKMarIAX+C7Efj70WBbT1rVf9WJ185Xu6oHQ68rq
K4L/ha4PwgbkVvQ6y4Hus93rU9rLyZRqDHsOfJvfRqBvhTdGvraCyOewuQ5Z
fcluv/eqxq3Wr1V/yIt8vVZ3Nvdi5WEnnBV6bxnM9n5hedgDM2S338tZ0xes
bRdsT/p5b4JVfDfaXYBTsvzOj6Z2lvHdhL4EvoDfCLsf8EPl0/I6PvR+NQ7e
jvSiD4eTpFfBMaH3xtHwBvWTUaGL6WUwi/kKiN9H/OFwkPVftr1qDQthqHVG
sA3pRt8HO9QHrB/MUP+xPtRFzFqr65Sft537t/Ag3z1W03APY16xHgtXyN4M
56reK+HCyOt7HexI+f3/Ds7kezX2B+B7uuf18ALz1qAPwFXqS2Vwr+7AFvhB
ttfLdriIMbvxXwBvS3oNlsA3NO9sWMT4MuJMgRPx24b/g/BJ2R+Ht6hvjIR/
IjXo52ET8hT6XutFstvv4zWXzTlPubW7kNJ60vAh5acM5uos7EzaGP80cfLS
3hesP+yEY5Ei9BL4A37n8O+E16R9DVfDUn4bhz4x9rgWvxwexS8D+yV4WLrZ
tqmmtsMx6uHWy3v4PoK92/Kg+/BMyvuZ9bWV6uM1+q6RrUK5sxxe4oyGEmsI
MW+OPdeWczvzWvXmSr3x9h4shxs17ya4lNx14z816bFr5d+v/twFf5Nutvc1
1mI8p/tm965XubKc/at82ptgdWD1YLX3pe5bQ+S1Ye+IzT1b78KC2N8Kq6OR
SJneo9K030Xbf4fexEG9i5P0RhTGXkuWwyaYyZj12EM4THEsnp2b5crOoFp3
oDX2mJcVtzjtb8102Jh0e13Sc2TrzUv6b+aTm/b32OJlwVmad2ba359u7bNF
b6atuVbnaOd3KOl77Yd/qHf0yFakd+4R9b05KbeNVI7s7C3GBOyfktNVxC6N
/L23fFusVu3xANwhH/O9Isdjj7U+qRxaLqfJpzjyORJ6V/epBq0WS1Qjc2Kv
Z6vfJ2J/1+0c58U+/2T9/7hH78gUeFZv/Wn4P7owav0=
                "]], 
               Polygon[CompressedData["
1:eJwtlW1oVmUYx+/nPM9zzvGcp7SZgb2wtcjAkZoiZa+a5gdLYy5D0hW5piax
yWqKlmg6w9mH0nBNY4lvBGmWH0ZztBcdgblU0AV90Tnf+iBaZkgkun5/r/vD
D/7nfr3u6+08vKB2dk3gnPsEctAaOdeYcW4DHECPgHuhGhbCdGnm3oEp6Jnw
CsyAlyFInFvPgXtgIvpVxmb5NVpbz9gHsAyWQwRtrD0ICToDDrKQg/ehzu/R
3uOaz7IOTqBHD8EO9i6AW7FzvXyv89+b0RWRvUVvmoPexVh1YDb+ji5lbClz
tVCMbmKsIbAzrqOHF5wrgmFwD4zkjtOs7YCrrD8Ucj/6RTiM7oEJ6PHQjX4y
dW4ctpbDm+jLsBb9MfyBfiiyu2vgfvRZ3nSKu0/CGXRv3rkuntwNx9CV7Kli
71SdiW7Bngxrz7K/AR1g4xbmmiCLHh3aXp3xKPpGaLbK5uvoHPzC3BHIoHdC
CXODfDeh93HnXtgP38MU7pzP2ZWyIbUxzf0AB+ASNvcF9oZz6A7OmO390Yru
YM13nL0P2tFHeXMnc13Qi+6Bw9AF3ZqLzNctsBk91+fnRngDnWDDNe76CyL0
v5GdJX+Mwx+V2DAfvoW98DOcYe1p6EksR5Qrb8Nn6J+wsTxjNsv286HFRzly
IbQcUC4U4C7YxFhRxmK+Db07b76UT79Bj+XMaYHlXAW6JbHYyj/b0b/6/JHP
O9G32XML/oOb8AJ7qlg7FcrQ53hTaWAxP4K+AI8EdsfdzO/2+aMY7EEPhlar
qlmHb7bio3VZy6EN6LBgufIlROi//bxy9Cq6PTJfy+c/RlZj8pdskm2ySbbJ
phy6PrTc0Xu2oj9MzNfy+Sp0s89/3SFbZrDmIusvwSx0f2i1IJ8PoB/jzMns
LYZ/uPtPn0+K0ZXQYq7YD+O8InRfYt/Kid/QaxhbDR/BKijhjcXwADwIJ/NW
H4egDz3R1+tQKEPXp5bryvm61Gp6vM+Pi+j1jDXoTfIbbIRGP6a5XGpnyb68
X7PW2yTb5nj/q2Yr0GFqvU09Love5etROaJe0+zvV859jr6Z2PpSiFk/KjWt
/jBWvUL16+utGt2WN62x1rzZJNvks37O2pRab1KMvtDbueOas/sWo7/2/Ufx
O49+Sj0OJsHTUEisl7fDUNVabLG7zf622GpStTkATyh3vb16g95eN8RqUTF/
Fv2uP0//iEXoYuWI72f92D+vYLkrH76OHuDMksD+CdP5oU1I7F+knn6nt/v7
+2FlbEgPwlfoHeqhgdXUsdjGNKczV6Nfi812rWlEL0qttytn5qFrE3u7bH4P
3cnYCuZWQo1yK7RcU86VobdE1tvUA9UL30otdvLxp+jHfXx0vv4l6uF33g7P
oat8ven7mdByQrFSzBaqt8BkmAYvwWIff/XgJeovjD3v12httfevzlQtN8cW
O/3zlsYW40l+j/aWe3sVwzHK+9BqWTW9Bj2yYG+XD+5D/w/ENA6u
                "]], 
               Polygon[CompressedData["
1:eJwt0ktIVVEUxvFt1pXUiFLBKATFQdNGNg5DsSi1ZiqhaVGEZYKP0EGzEqfR
JOgxCPQmZUVEFKbXZxGBSFRggyILooGj6FrZb+MZ/PkWa317nbX22eVt5xs7
N4UQ9mILPuaH8AHLWFS4S9cUsljHPM8dur0whGu5cgUh/MU/jMgvxD6pENLi
e6gQl6MJq2qVdAfeisuSWvTMOt+sXxedwzz2+MZuzIgvqWVoXl4I7Tkh/HEm
izW8l7+sPkyvYgi7+Dr5SmkxSvDKLgv4jcD/mh6Sr8NWdPDX0peYQCuG5J7T
JlwR19MjOIqf9pvUap8ZqrAfL/T85N5mk2/Fb/aiB8/ivar10RN4Im6NsyAn
f+MO410+Qrf5snSzfC5O4il/ip6NvcRd9CK6cSrOjyKcM+dpOuj8AHrRol8f
TfOOYhzv9Bij07zDzrTRKWQwbrcHeIy0EUfpNv+iEAW4rl8pLUG/eFLvneIi
ZHin4htJ/vO0+GGy0216E7dwUL0ah/GVrya1kY/1M2jgvxHvw/kx9Ymkb+xf
z7si10iP4Xh8B3ZZtdOX5A3Ht/xDvsFun+k3fE/eTHw7b3BA7VeSj/UVXJAr
cwcjzi/pd582owX/AaI0dQo=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5609669622176278, 0.5226032671452792, 0.9054872438420144], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJxFlnlslkUQh98W+n1fv7YYgqBQDoFWUInFQCNBA5qgUfBAW+5wKyDIYRuC
EVRQjhQUBEpFbFpaWsopKmdSIIWWcmtNIFQgFEQJoEAERA6pPr/MJP6xeead
nd2dnZ3ZfduOmvzmpNggCCIxQdAArokGwT4UZbB1OAjeQ38xFASXaT2RL8G/
aaOR74WsTza/w4EJQZDGJF1hPd/90N8PmZ3sw8x3A3kU8i34TNj03eEW2grk
HPhdXBCsw5dNsJLvDeir4CFaAfIyuJO2HrlCenytw+dd8CG+P0SfDNfR5iGv
gZ1Y7zpzDoMt+F6EvhUcgq998XksHMv35+jHwPz4IMhjzgJYS5uLvAp29Jh0
gEv4/gT9YfiYz6912tFqkBvDBRHiik0pfJ7vSvQ94QF8vYr+CGzE+BTkX7FJ
Y96RzP8krGD/u7DfB//weCquC/D1LXweDvvTeiGPhFHGfIBNAvyXOZcx5314
nL6PsanRHhOD4Cvkt2El837D/Jvh6x6rIfAl2lzkPrCQ9dKRi2CexyoXnqXN
RD4Dx/neh8I65tqN3Ab5PH2zsSmAL7NeCfKLMMXjozi9wvdS9L3hSuyykL/X
3O7zp/Bnl7WPFYxpgj+L4ZwGFgetcYC+GbAaVtCXgU1lyHyVz2PgamL9EzE5
CXfT9xw2R2AOcf8FOROOxI/l2I+A3ejbi59X2NNk5Hrk4cpb34v2tM5zVTmb
whpJ6BPlC7FbyZwlsAS7bfIVLlFuod8Nx9EWIlfD1n4uOp8k96ExLPWxmiPD
5X5wGi0fORt2dz/l7ztuo3H/JFiM7sGDHp9U9Jddr/58j7lif8lr/CAsJW++
JFZxxOoufbnY1MOJXjuT4Cz6i2OtBrrGWH4qV8o9Zw6FrKa/jrG8lO0qt8/x
en8DZhK7tfg/AL7qeah8vBhn9XJd+ZloPryWaLminIkm2rqZvnY57TRtJy2J
8dPhsZDdGR/F2L0gX6a7P9Kpr5B23tfSmsWe/4Vh66uIsbPsHDH5Nvoqrx3V
UChqsWoYtbm1hs74YJzl+YOea21iLL61Xteq73TGrGZsLBzE92fok+FvnsPK
5ath21Nz1m8RsXtvT9jOQGcxAf6JvjXznIIdaRvRp8LBnp/D4C0/603wdJzl
zDl4g7MuYWwenOp5q/w96fVSC5t4fjaFV/ApC5trsFPY5MfDdmfp7moYtjpX
jXSDZwK7E7TnDX7Wa2E+bTVyEWzM2i+wVme4x+OtWCd7TFrCXK9B1WLXsL0j
XcKWl8qNB1hrHnOMibX7OsV9k4+FvpbWPOp3chHMZK5q9H1DNkZnURZrNaCz
2qF6D9keRofsHPL9jO+ELPduw4e9ZlW72ayxCfvt8LC/WXq7sr1m28O2Ycu/
XnpP3F7jmvqd0By2dBvZZtFXgM00uBm/76PPhRket7R4q6dy963c60Byd/p6
YtMOpvsbobeiKPR/vf7l+XYzZDmsPc6gNQobm8E5fufPhzURe7MuwC/IjwPI
O6Lmn/ycD9/neyf6aTDCmFjdRVG7H3VP3kUeStuCzVq43PNtBSymVSHPgk/4
f0V6guWocrUL+mW0c8h7YUzU3uvhcCNtK/J6uI22H3krHO+5NE654Hmou+dZ
5hyBTRZcil2NagFO9hqfAhf7WlrzTrz5PBB5lfspf0tpm5FL4FN+V+jO+Dbe
8rIOVtF3BXk/7B21OzEV9nFZOuWf4rlGMfW6PgPr6LumO5k4ZCOXI493+/0+
Zo7HX/lyM2Ln3oF1L8fbfb0PVru9cr3I96t9t4/Yv9YjEesvcxv9p8jnRpxB
M1+3BWzld5HupMP+D6Z/sfm0s8iLopYT8ms7POr+18DBHquMqM2r+ZUT2vM8
XzsvZHdmsddmmfcNiLcanwnbeY5NUfz9XdP71sr16j9Na6D3SzkQsTeiF+wR
tfUmwiJ/7/TupXp+6j2f7fvKgYv8f0//fSd8Ts09wf9JlujfOM7uk9txVieq
l9oEOzPtvSGc6jHUGdb7PEnon/b/kEHwR4/hD7p7I1bPF/QvHLXzGxa1OlDu
6X+90N+s/vBE2O7QgHELPLffjbc7VPk/VPet772H52+Jv83HPR+OwTR8ao9v
j8JTnrfK3+SQ3eV6x7r4/6f+Q6f4vbQ8Yueq8+0ftbrXPNrnf10wuCQ=
                "]], 
               Polygon[CompressedData["
1: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
H+1MpIQ=
                "]], 
               Polygon[CompressedData["
1:eJwt0ctLlFEYB+BTMU6kEHRfpBmZ1n8QtCgXWas0JSNDi64mqGWbQCupKAjB
jXTRoRJkqhF0IbTIWlQgRS2maFER2CKXYU1FiyJ6DvMtHn4f73nnPZdZf7i7
sWthCGETKU4tCeGxwlnZSx/50hAuLAqhX57jPHN84T391j7LUQOyZvyTf/jL
03QI4wvMlI+YZrmZy+hg2l6rZI36aX0VciPVrC6zxkpu2aNCblffRpoj+rfK
EXsPc4IGfdflJD2+M8la7LnmPLed74V8xWvOxD5m6NP/UjabecXsXbKOndzX
e48HkRlZWam+jnIG9XfKvLvMu9OsfMNbhuO3WlaOkKHg98/NqS0JYQd1XFK/
yBNm9V+WXfo6mWJCf7c85B1uOusa2Uob+2hmLw+tnSwr7h3P8C7+h+aNyqPJ
epPcQyPf7f2NeXrco8o96n3vpoEZ+/6270/fTdbnkv74u+Pqx2hnQN9+uUI9
77tKVlNDm3pOLScPxjukivW43krB2ma5xXnGnO+X/6HAD1LOfcP5S2SaxWzQ
l9FXKddSHt8iOUNH8mbx7e7qvcMYU2a0yI/qH/jKM/2f5KQ7T3CAq+6YSxff
Jr7RUobsVS//A1Aybi0=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6150462716884224, 0.6098704074907393, 0.9106665227616719], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
7cmcMvcgu0uT4T+AmAke
                "]], 
               Polygon[CompressedData["
1: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
                "]], 
               Polygon[CompressedData["
1:eJwt0l1ozWEcB/AHzWxcKKIotZ291lmk1HKpRUOps42ZGk6xedvZnJOXi8mN
G2Q2IztoG21GYZbixoUyzY2Xi7mwS9HkjsTk7fNv5+LT9+l5+f2e/9O/KJlK
tM0NIcTJo2tRCOPzQqiVG9lEwsKItWFZTwNbzG+mkB77a+S7hSFM8oZT5t7K
vsIQrpLloUYN8rL5Xvazzb4ueUPN6wxyW69auVvNR9a35npFPZfNV9d6pYxT
xT3nO+y7kqsb1f/u/Lh9P+RPZvJm90ZnmvlmbbWszA+hgnK656gjd9nbRDNn
7auTGb3TxLimV5HMmE/zmFH7jskkF4w7cmvRngNqtvKC+3pMyEMLQjhIDVPm
9skT9h6PetKvxkl53vwH6+fkEMOU88pchSyljJh3Laadp965TCYYM26SddRH
a3rfcXZMPmCUNaTNlcg4VVQXeH9n18tiYqxzn073Opq7Z3TfpHfYyx6eeJeU
bLR3B6dpUWOnbFfzoh5HZBspetzntfVBeYlehu0dIi/6b6yNGBcY9xkvlktY
yoDz/WznjLrZ/Nl/Nfpnq7nlLhvkWm4aT/snPvKJEnOd5l4alxqX8UufGRqj
e+j12/iz75vmK8999xfZzYDxpHzPFCu9/wqeucNdd1lufFjNrB6rZAut0X+j
Zkbtf/IPf/kP3d5zCw==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6683699588584976, 0.6955467352992784, 0.9118821385899485], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
iWJB76duPkvdYSNz9GbcSPLD/wHjvxMP
                "]], 
               Polygon[CompressedData["
1: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
VcOkLJYV00Xo/wF/3uQE
                "]], 
               Polygon[CompressedData["
1:eJwt1ElsjVEUwPGLR7WGHYmprSExVKgqKaobUiyUNLFAE1UkJIYqqsaaW0HN
Y7VpS70akppiShqLbsSwsSCxISEStsaFhd+X9y3++d/ce+45597vvjeyYlPp
xp4hhEL0xuz+xshDa68QZvCv9BDOCvrHf/AXFX1C+Cm+iquxHZfMX0Qjtokv
5qdpISR7hHCNW9CKggEhDE2EsIyXowy71elSr4a3YhuOodtcUdxT1FuHOkk8
R4G8N3mj+Q1Yj2fiq3md2mtRgCK9TOPHeIRPOGruCS/KCKEEpThj7nc05yJK
UIp6Z1zIN/TdjkO4qG4zb0EVKnHX3Buean+xPEt5BcqjO9HjYOvtce/RGU6L
PYWTuG7tAX+N+xqilyxkY77ah/XQwk1oRllf94bjSIhv4InO3OLsH/qF8A7v
USvnBbmLuBCzcVbsP3NruAKrMFPOWjX28n4cwGS1JyEfzWoMykjNR+un0Sr+
IDeocwKrUaJ+HY+Xs1ONF+pNMM5Bk+99FY2J1FtLcq7YifZkcyay8AovMcZ5
mqyN5Vn2d8s3Mz53dP6seE86MsSN4AY9noi+Izr1vJhb3Gm1cRvfQDI9da/R
/c7BbWsj+Zb9lfKcjM8TnWuUOq/VzeRhGI4FYu/Ys48P4wjm4q65JVyMeZjg
TY9HDvo4axYfVLtWXF38NqM3OlDOAehyVx1qpRl/NH5qnIzfXPT29pjfjbF4
Y20X37f/HtLVuyLvQ+N+5jPwOc6RMB7ivb1155N5KvKRZ30KcqM3Ia6Gz/me
beK+8Dd8x0C5G+XO5NEYg1Xxt17EC6NxTDTOi7/pAv5p/w/8Qru8l3mPOmfU
28w7sDMt1U/UV3n8nzKd693ZOOMKLsfKROo/JvqvOR//nmr4P/zDkPQ=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7216936460285728, 0.7812230631078172, 0.9130977544182249], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
                "]], 
               Polygon[CompressedData["
1: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
1op5Hjo/arVR+w1Gn4xZrVXNPYX+H1JExgI=
                "]], 
               Polygon[CompressedData["
1:eJwt01toz2Ecx/Fns7WDcTeJC020kR24IGZuyLaLCbl0vtrVxIWNsSlt5My2
hJ1klByiUVuIsdw4bkpZyo0ImUPigpXXrz0X7z7P//s838/3+31+zz9v67a1
NakhhBKkoyI7hHJU4aSNn1khPMB9fMAhsQHakhPCKRzGwwkhnKCZDA7wqKLZ
mBhJ1pNRbS+Dfk0LYaP1XOtCFGGQ5yNMVrddjcfWr3m+590WayU1X2SE8BxP
8TJFfmYIzc5Wy+mLfSb9FkXvJdinVjH9Lv4Nv7DD+Ta6Qnw5KtDs3JjeSmPO
/iSWzIQf6l1Ur5d+xheM4R/6ccneH1qP3ajFTbEhOt9MJajENXUX0B61a60v
0yu4mvRklu2YiSdya+hRtY+gFRf0dJzOiPtTaS6m4JX8YbxBA99+utd9dbq/
fNqARpyW38PnDD2LcxhytkNObva4R+L1MX7rPLECzMFbs/Sp20nb0RHvIbmP
Txi0l6OXg/FNLKYLsQil8q/zW02Xoiy5E/FizEOX84V0mfwRPmk0BamJH+9W
sTrahOakD2fvyNlJb+F2UmNSCNOTt0U3Ywua/M437ya6HhswHL/Ns/iWkjd1
O/r0YoTvvWQGDGAP7ortoq3OtqARbTyO0dGs8f/K7/i+kneWGvt/F+/sL10l
XoXu+O3X0HKss15JK1CJ83rsRhfK9H6DzjbLLBQg3e9ptIH/KO96Wos6/Afw
24RN
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7737547678860411, 0.8507074801867031, 0.9090475619554249], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJxFln1MlWUUwN/gfnDvfclVrpXZrJwuV+E0gyZKhjqFPiYU5ZjMNMrQzLQo
lbBQUUwU1Eq3ck1tzjUqBakcyaTIQq8T5ENvhmOIgRIg9oGGzX5n52z9cfY7
7/Oc85zn65znvXf+kvTXohzH+Q2JRgZiHGcIDd/Da67jnKPxT1gPLyP9yPP0
/XyT42TAUQHHmYl9PEznO0L7JLgVuYA+D07Avwa/BJiL3TvYL4eHPY7zDDHD
sAJJR38TDiLZ6Fdh2OyPwSy+R9NeCGcx7k+M/zSc5XWct2gfCffTl4S+C75C
3zFsXoYpxM9BFiIbbJw1cDl9PdisgrmmS9uPzPUstpfgzpD6LoIb8ZmBb7NH
1yZrnAJTkaPoKXAadk9g/wJMRFLRk+Bu+v7B5lMYx3omsa47ArpOWe91mGk2
W6Ar80Dv9jvOA0FiYz8GnuS7gfZTcC1r3opvDmzhu5z2ZrgT+Qb9V7jM0b1N
Q6LsjJLgIVvvCjjo13bpz2JOK4g1H8bwXUf7EHjDr+fus/2UvZS1PRSj85F5
Zcs54ZsPN9i5F8JM23M5w7k2ZhZs8+i89nn0zOTs9sDNjPU1Nh/AL7HzMWZE
4jDe/mi9jzV2V2tjdB9lPy+gX0QvRe+GZ8y3TO4L8jB6HZwY0jXcCd9lftXo
+XAd8Q4StwhG+fBnPjEwztY4FgYZN4NxUmEHUoLeBXfIGWB/D/ad6M3ovbAQ
n35818B9rq7hNEyxcWbAAuJViA1c6uiZyrktpi8PmzfgBMYqoC3BqyJ6Epwe
0HVFwRZkE/pZeI6+CmyqYZrliORKm7VL/xxkB/pKuNHaa+AIy2vJ75NIMXoT
vJ+1RbCZDRvsvuXB1XwP0F4Ay/E/hH4StuKzGd/2gNqJ/So4wPr72Idj8G6v
rjUePo6sRU+GC2wOE+Qu2XrXw+f4Xk57JuzGv4dxzkF/rNYoH2ykLx+bBjgW
n7n4xsE+OyM5q48t1nav9olND3fvJXxW4rtQ9pWxBhmzj/HHefVshsEeiyvx
b+H7bdpHw/F2/yUPmq1WROAj2JVIgYUhWZvcK1hpuVYBqy1uFYw2mxZ8t/G9
lPZSGGuxJGZdQGvCCTgNSUNPhk/avZL7VW81W+6c38aU+LW2//Wu7qnsbaKQ
fFhM+17YFaM5dRfj1CA56EfkTIKaX9Nha0jX1Q5vt3o7Ag74tT7/C7+wO5br
1TdAakIRnOhqLs+G89jn4aw1ER6xvJb8vmK5LDFPEONV7MPwKuNdczQ/220O
HsbZhpxHb4HbrQZKLbzV5iZzvGz72RvQt03euOMw2+Ygc5HzlnPvcrVeSH55
sb/Cd6+8hfAxq/NS71dbjj8IP7KaI3Wrk9iVtHfA8UHNo3EwYvl+BsZb3Mmw
zepPK3yRGJ8z/kxX9132fx38yu5/GRyGjwffUfCSR+9wL+yz+vm7X/cpYns1
xt6RTnxHWn2TOpdn5y7nnxzUmjYFTrV7dV3Owq9v3N/wF1fjSvy/bJ//gJOD
mu+JskY7iyYYbTVKatXukL4d34VURK+CpWYvZ7jF6qTUyy57F+RtD9sd2AMb
+c6g/TRssvk3hnQvZG73waG2h0+5Wo+kLrms97yreTE0VvNZ8vqiR+uX1LFs
eACb49h84moMidUBy61d+qvtPuTBvfaftN7VN1ve7n7Yb/851dAh1rPgBvqj
Qa3VCXK3Pdp+Cr6Of5hxdsFiyxd5S8vs3D8L6HyXOf+/ncIDcI69a/K+HbZ/
mEpX/znkv6IETvXp25QMf7Bck/++JXbHiuDN+GyQfz/GWWTzkXm9b/d5k1/3
TvbwNvievaFhWOjT/EyDR+39qoUfWt5J/iXbHIbDBT69o8U+jSdxD8Iq+z+R
/5SA1TR5eyttXd+66iO+G+Ehq/lS+/8D8cCLFQ==
                "]], 
               Polygon[CompressedData["
1:eJwtlmlsVkUUhi/1ft9377couCQShWhICIqgxYhGFJFNdmhtpSEQBNFa2lLZ
bVGMbIqVVUF/6A81ogFxaVlSFEQFVIQogoVKMEQwAgqlmFA3wOf1nB9P7ntn
OXNm5syZuXFiVeGUvCAINkEIUTIIDvFtghg9GBrRP0A//dNoEPSD/vBvFAQF
GMiHi+jliSBYBivhJZgJr9J3NjyUMJuy3QC7+b+FPi1tgmAfdIusTHXqsx59
JmFjy4dmdI3bU5s69FJY4mNq7ANxELyIL0ugMTYf5Ws11ITmk3xbBashzNL3
siD4EO5GH4R96BY4hl6EjTJsDYJS9G/4eAo6oDvCc7T5zvsXoaspe5q242AC
+kl4Ks/K/q+LrU7/DegCfBoFw2A4PJ8Kgg2sxUZ4AV1HWW/mOh5OoafTZ06e
2ZyJPknZVOoK4Ch6ImXV1NXAo+iSrPmmOa1Af0+bItoWw350C2X/UHc9umcu
CH7i/zT/e2Az+hP/PwPb0COxOUJ+QyGM0RzzbMxx6LNZa6s+p9FHfD710IS+
jjb3+Pr0QP9B2WbqNkEz+iBr2wjvwLuKDcp2UrcLzqVsTI1dBMXwe8r6ar1+
RScTNjfNMUC/h40kY/1C/Ur0VTnb27OQQm/IBMFidBm8nrE9GOYxrlgv1nr5
HmmvJvj+aQ7d0UlsfoXtryFCd05YrCtGx6I/xuZkt78Z/Rpr8g16LTyCvj+2
s6Mz1B99gTl82cZsXkJ/QZvPFVdQAyd8vw7DVvQbWdsrrbf2KsOc0tAW2sET
UAUzYGbO9lTt5UMduj1l10IH6JizMTTWp7DdkW6ALTCUNkN8DI11Ap+X4fty
OIme7PPTGOXo4Vmbq8pUl8zZ2jdDK/+j+B/pNmV7d9bqFEPn0B+FFtuFUI9+
H9bDWlgHh1IWW3XQiJ4RWtsHYSv6eMpiQzF4FP0ZZduhAbbAyx4/isFX0A+z
R0MZuwJq0Dtps8P7qO8Vke31brgSfT5lsak9a5Ut2mx0H+XrttB8kU/N+icm
6tErYQH61shyn3Lgwsh8anAbstUeHwbjyxDohZ7h/um/At07Y1pl96F3eH7Q
+d+G7pWzs62YuV3r6/lIbXahE5SFvgfai0G+XzoTl6O7ws3QBW6C7tDNy1SX
D7d5merqPf8oJ3yAbvXzJZtXZy0m23rMKfYGwgCYDwvgcGy5eykcQT9D2Vxv
o7ZFns+Us+9AL/H91R4uTVmMK9arFcuQn7b7oBa6ok9l7exoPZT7yjN2NrXG
YzO2plpPndk30Y9joxTKocIp9zOlszUgbbGvM9AX3YjNY/QNWfMf0X3SVqf5
3Iu+Jmd1atNE/Z1pm6987IHulba2KrsrbTmjzPdDaznH86vOyA7dVVk7T7qD
1ugu8vOjMtWt87PyNqyBbNLuTt3BXXSfRxa/yrEDI4tRxeo06KD8FVssaU83
ogdQ1h8u0O4idELP8vtEubdnbHel7swq9HKY6vmtH/p0aHeZ7rQTOp+h9ZWN
LP0n+3iKz8rY9rDaY0CxsDe2vdR6fYvuG5ttjbEKvZ81qvTzuxfdiP1SbD8A
B9xn+d6GsfIc6RAScMnvR53ZFnQta/QX+k9YiB6eNK03Uid0ib9n1KYUXZGw
s60zXove4+dfNveif45tfxUTx9E9E7bW6qO+c1OWy5TTnkVPwmarv3/0FmsK
bS6aU4r2+/y9oTO9J7Y31mxfzwL0Df5+k43z/Be4//qfl7SyVp+f5lbm/utN
kZ+wPZnl77ccuooYmQIVUAnFfv8p/41Cv5WxtVc+Uq5STCm2dP9OQpfg/2i/
U3W3zvf3Xzvlo8j2SPPrDItDy8Gypz2dg14YWp3a1KJ3RtZXNuZF9sbTW28W
zIY+kY0tH7Lo6TDN56C5zPf7Q/fDIvRjkeV25fjx6N7QhP4bxqBHRDZXnZkh
kc1J9vXGWI1eFllb9SlEj/P7Qms0Gv0fr5SUfw==
                "]], 
               Polygon[CompressedData["
1:eJwt0l1ozXEcx/HfHs7Z1rbkwt1scSFKmO0OK0WTRMmQGyW1KSOkuCBCTWwm
4d7DuJ4LT1lmOB6uxoa1kdJMZrtQyjbh9ev8Lt59fn0fPt/v+Z7/vF37N+8r
DCEsRgZtZSHsEeilObxAr8Qduc90FF8xVRrCbzzFLPV9pfna2DOGc2Iv6V/x
Wu+ZVB/7rui/jKs4zXd18ozeVdkQBsXGvEv0Z9GIJh5ldFT/Su9v9B3eY1FF
CAtxDD1FIZygQ+JZdR/od4wjo79OrCj5Rv+j4hMFIRymB3EIgyUhdIv107cY
wBmevbzr6TLUVuTjMf8G/eqX6J0sDmGn/ZfafznqcEpsgdgOug3bMa1nCiO4
q/cXnbDPD0zigD0v0Q5z2tGW5p+nz82ZLV8g/8870GrMRT3WydXQAbVf9HQm
j+j1JP1fj+kj9MR+8QvqPpaHMIyR8vzecf8VOKmkPpOvjT3H080eptlxh8J0
25z3A373cQ/DfJ/RLr/5Jq6jQVs3bdKzBTdwRO9WOo5O75/pFvEmrTz3ogav
zG2J3wCGvGfSHeM9M3YsRimazSii1ZXugvkoNnMO/UN3yzfKr8FarE/f2Aa6
EZvw2t6f7J+Ld0Mfbpt7Cxcxbf41uopnVfSkzWipzN8w3rILrTwGaEO65Vna
jg78B5AWgA4=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8216430581003347, 0.8666769489444897, 0.8875936508536808], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJw1lV1slFUQhg/d3fbbdFeN4oUxIEqMMZriDzRqQINEEo2NSqR6wYUaNQir
aKAieEMsiJTaYFrKtZgQk1JsiGWNmIKigFWoSstPAjcaUfkRkaCxqa3Pm3m9
mH3mO2fOnDkzc87e+NyyBa/UpJT6kByytT6lpSgV2JSldHxSSo9mIdLvgYuR
s+gvw6+LKS3BwUH4PN+nGZ8Pr2bsGuRPvvf7uxV2lFL6Ef/D8EnkI/T1cBsy
hP497C5gSyyd8DTyMfrncLgupR/wNwKLtSl9wngGBwuha6whCxvZ1hHTTPYt
wH8YvwN9HE7m+yn0x+ENyC3oU+EF/PTj53e4Pov4B+FLPtcWuI/4ThHnN3AA
OYT+GSyzvhn7K4vhSz7PYv+Yxx+BO523PlhFzqHvggPIFdh8Ab/NIuYM+32O
WbEXfRadaYZir4m5RXwvgrfDla5FG1zl8TfguizqMANeros6jsKjyBH047DB
9s/COznPXs61DjZY19hVzpvyN+7YxuAcxzSaxXr50f4d5PEt8nk/vBt5RrnN
84PeAmrhSr5vQl8Nn0ZuRm/NRx+oH76Dr/lcOt825h7ApgeOuJeOwJ0e1/xC
+5G/E8zl4LVletS1uwQvImPoZ+CnyEn0vaWopWr6PnyP/Zax7wY4wXfCzyT8
rEWmoc+HZ7yv9v8Sm8OsfROu9l7ql/uwm8L8XPiV99Ke44y9wNqHyMPUcsR5
HbzsftgD5xWj1puKcceUh3cUl/tnOex2f+r+NWZR01nwLusaO4Zcz9qfYbPr
uBBuco1UqwXuVfXseeRV9TBsd551d0eRCfR/S3HPte/D8EP71z5brWtMZ9MZ
xzjbCr8tH9RH/6kPZ2NzKov7cj6LOyP9RKYLHe+G3o8DfkM0ttv50b35yXuN
wOnc/2OYNNVGXpSfVfAXvyF6S5YQdw8xNMGK67IYXoDLsRmAfxNfGzZVeK/z
Mxse4vtd9RtsLEf/qI+qzG9BupFB13TIfuV/Tjn6T/VVnZ8ohH0zXOp4FFcH
3JGLN7HXuvYbVq9hfxRu9j66P+rTw7aVP8Whd/BWfO1h7DY4XB9+T8KuFOtX
IBsZa89FPX5zn/8K5/rt1RusfHSmWNfttbssVY/N8huut7zfc7LbYJ/txThD
u+Os2kZ16nSPqdeqzvlu+Fch5qdRx16/7Xrjt+fizPLT4nNsdr1lr3W1flum
u+ZdPsNMvz96hyqFGGssRO6VizbnSLlKpaiNctoCpzgX6hHZbvd5djgW1eBi
PuKZgJeQB9H3wwJrX0SvgWtcF9Wnz/8Fr8OcbWR7Lh9x/gEnlyIu9WPFd0d3
SPsNef+3/T63liLGLudFcx3un40+b8U57HX8B9hjHuMHfa4en22t3881+fCn
PPbbd///9XVPqjeH3LPa8z9QDCmC
                "]], 
               Polygon[CompressedData["
1:eJwtlW9ol1UUx697fs98fvyeZWlvB5rYG2ETzAmRqDOVXLNtopPCJYoLHDpF
txfuRZqpmFrCIH3XP+iNfwaRmzix1GIUU+efTaab2XLM3JzWtEQk+3w558UH
vs+9555z7znn3mfKmvqqjXkhhEbIQGsSwsi4EIbhO/QvMAmDidCBHhwfwh24
Db/DQ3gAI3Af7sKQ28j2S9Z8AZ/BQVgJ1bAcVsAjbMbcx0P3Kd/9cAtqsFnl
a7R2NbzvY5r71ff3GnSiO3Mh7I9COAAXcranEd+T9laJTQUshXcSi6FYvXAD
vmFNXWQ+5KuyAHsog7cL7Aw6SxUsg4tZ4sAl6IIDsIm9VMA89FpYA+ugVnYk
eR15roXL6Ks52+uncA09hxiFjD/juwTdhH4F2wXQkbEYinUNuqE8DeEItp/A
y+gaxlZ5TMU+zZq5rF0NI+gzsAW9Ff5CV0EllMNS+AfWMlcKYxmLoVg9cB2m
xiE0MPc5VKDfY+xdj6nYXaxZxNw0+Bi9BN6CN2EhtEErHIcWaIdTPqa5c3DW
xzQ3G58lUK+8Cs54NLIz16W253KPoVi1nuv1UAf7tTbPaqLabIUt0ACNOhs+
BvAVsbYXfZoa7IusB75Gb8Rmg6/R2vac5Vo2su1kzW/oH2B7aj2l3loCZYnt
Yb37kK8PGKv1HlYvN7HmonoVzqBHoS+y+j9B93g+1S8R+R5jrD8yG9neS81W
3z+jL/h+dJmfo7vp6Svc5avQgy4osLPqzN3M70zsbv/N/K7EelKxFFO1PEzM
VvQJeIB+lTNM85qoNkl+CCeZa4O8fLvTy/2O6a41EW8bfAjbdX+ydjdUj2bV
AZ+Hgvk4hk6xycFLMBG62OOlyHL0E3ozY5ugARrhq9Ryp55Qb/zo+VOOtqF3
pFYb5US5+Zc9FRN7BpxHT2APK9DV8CL6WWJz2uMCvuOsvS16Y/QWzkwsn8rX
7sRqpPzrzr7OfkYzdtd05+6h9zDfEtkZvlW+tUfvF+1tMWsmq1Z8P9V8xu6O
8r9XD3Jqb4N8zEJP9/PIR1FqOWjwHCvXqoFqcR2mopvJ6U70R3AQfYvz9MMA
/JG1M+gsOt8e9POMvQ264wH7Pmxu+hqtnev+9EbordiQ2L9C/4x61T5ruVRO
q7L2RuitUI0rY3tDetynfJcw1hzsTSpE58XWf3oj/8P/G7HtXTEVe9jfV93p
P/0MOssdGIRZifW6aqRazfN+U83noEtj27v8zUePxtbb38NQbG98mfegerHY
8yN/RejJ+ZZb3QndjXOMveD+1VtPvb809hh9NjbfOuM+9P8d9BEQ
                "]], 
               Polygon[CompressedData["
1:eJwt0klIlVEYBuBjKl7LG9QqiWggcyMtRMggimZUAr2RQbkQIa0Ih0WStiiC
oqRNm1oWbQVbhhU0QGGFbSTQwE1pBBUEKigp+hz+s3ju+9/zfWf4h50dPYXu
dSGE3ZRSlPdT4lo200JNeQhtmvbKLVQyxGVjH+U4XzidC6HAASaLQjglm42f
1dcqz3GeWWb4RY/aA3nTPjc4wQ77n5SPzP9pnYdyhGc00UhDql2S/eZf5Vo6
Z5vsN/5b/aLspIuvbFV/Kh/zhA/2OuKW38u3vGOMo8b+y0WWSrK94xmmqLbG
dDyP8RGGOaT/lczZu069XK5nA8eNH2OQXfquy79pne3qVexJvXFOI61q+fhc
9FaZc0a2UOBbmXMwyYR7rM1lZ4xnXeaC/k9ys2e4iUqK/c/Lf7Jdvc7L3kd9
Eq8Pckttv+yN74a76T33ycPmbzP/iuylj9f23qj+Uo7ygomKEL4Xh3Bf3mOI
FVaNLcl5FpJ4/ZlptTFZn76dBfc2x3xZNj+uc5s3+u5UZPvE/Qb4o/95Lvsu
4/c5m97zD7kG21FgeQ==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.869531348314628, 0.8826464177022764, 0.8661397397519367], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlF9ozmEUx5/3Ne158/4ipCzRIlG4sMb+NLb0JsNmU5o/LX+KtJmttJsV
u1ijZcWVuFJccbFSrFgpF5Rk8+e1EmOtZWSzMoVSPt/OuXj6nHOe85zzPOd3
zq/4+NnGtnQIoZU1jzVeGEI+FcIkrGSjiFXBmokhZOEQ7MyEcBj5HCyfH8Ix
zpXBk+gHsZ+A62BkFaZtTz6zBSH88DiKdyhtcRT/bzaEVezvTELo4nwrtvPw
iOdSzl+c2SRfuMJzFcPN6G+583vu3IG+C3s7bGY1KQfsJf44D+yDr8iT4z7D
cBF7W/BZCBNWKfIC+DqaPYs8gF81/oPwfrR3fYYT0Wq0HJ8G7p1iPwVvYP/N
fa7DKvbq8amG61m1yBthJ34r8e9ITJe9EtalzV/vPMr5b8Q5FS2Hcm2Ag+gJ
8kPYRYzV3C0H61hrkBvhFLV4x9lpmIsm74Bz6KPIZdHup3v2w1m3a/82+lfk
W/BLyr6h3ixZnPJaq+ZjcNhrpZrNYfvJWop+MZrcC/ez/iBfiabLXhLte+i7
vMnae/Sux3AgWt5r8EW0eM91X/z+4T8D86w0b0289pIVa4/r+ibak31xYmd0
9mfWdNmzidVLdeuG/f69LsN73qsPovWEeiPCisTi6C5j6Gewf4BPOF9DnKcF
9r0VR/GWZKzHPxFnyHtJPaW+rvT+3+21rodNXv/maL2rHt4HR30u8vC0++tc
znugFr5krwWfvozl0dzpTpPoGvQJeNVl2bZ5z5XDZZ6rCI74jGhW1vo8T5Nr
xOMrT0O0XjgA2zI2zy3wkvdBH9we7X9SBb/721WDvd4P6gvNvGa/G/Z4XuUv
8T4phY+8tqrxM3+vev9mtH9UHt71ebkTba40XzXwgn+jnozlUK6uxOZK/p3w
o/eb+q7d/yFb4X/4XaJQ
                "]], 
               Polygon[CompressedData["
1:eJwtlElIlVEYho/XK/f8cC8taiVRSBIG4SLIUjOVEEpMKSJsQBpACBsIIiEj
G4xKCmoVREhQq/blokVbh9LIzE1ZIpFFkuRQGg3Py/ctXu5zzv+N53znFh05
tftkKoSwB6XRjSSERja0eQe+yGYx+3WoC+5FNXAtegZPxxBKsM2g9/DdaPw5
L4RjcBcxTni8q4lJrBxb4SViLKIBNIh+pC32YTQPz6SNlfMb3I/63Ee+P9EC
mkVzqIycc+R+gzbA58jRRq7jqAO+z94i336he/BN9pq8HvV+278Xsn4Aj0Rj
7cl3OxqD36I6uClar1NoF9wQLbbsd8Ll0WpRTdfhh+iL2/fofLIhXEGX0GW0
LVrsUVQN741mK59muCMXwmr6XIXO5sxHvi/RkITNRuotQ8Pwp4zFUswpeDpj
rB5m4MfYfPX4j+BBtCJlMRSrx/NH1k/gobTNgmaiE77l/SqezqYqWj71rN4H
PN4s62vRfOS7Bp1PW82q/R8K9DPC70R+CCm+jcKjid2d7vAVPOnzo5kah39j
8yffzqMa/5oCfgtsJjQbtTn7JpsK+J3Po2KOwVXYbnEf+Xb7/KhmncVRbPbB
zaglsRyKpzuogbM5qzUPNcAf8KlI2cxodj5GOzu9kRm42+exHrXDC9Q/j/pQ
P4qJnb3yv8D+r/pzG9kuS+xuZZODZ7HJwVn0HX7u61I0D5/B5gC8X28QLkys
F/W0El6PKlNmcxDe7POtO9UstyXmK/tW1RbtLnVGemvl/n+hfAusl6Kx3lQV
34rdX2eyHH4arVbV2AvXp20WNBON8HDWzlIz8BquTOysdGZ6y+2+3oFOJ5az
1OPpLEoS+yabdfB4xmZRMzmht+DvWT1Pwi3+HvUGDsEXfN40I52J3VmJ51Ps
TR5fe2vhIp8P9ahe/wP4yrZt
                "]], 
               
               Polygon[{{3328, 3327, 3329, 1025, 3279}, {3392, 1055, 3322, 
                3325, 3326}, {2225, 2224, 2166, 490, 2219}, {2325, 2324, 2384,
                 600, 2326}, {1268, 1267, 1222, 65, 1266}, {1227, 1226, 1231, 
                69, 1230}, {2316, 566, 2320, 2324, 2325}, {3282, 993, 3206, 
                3203, 3204}, {2236, 524, 2226, 2224, 2225}, {1148, 35, 1223, 
                1224, 1225}, {3273, 3272, 3315, 1021, 3323}, {1269, 97, 1337, 
                1340, 1341}}]}]}, {
             EdgeForm[], 
             RGBColor[0.9411759999999998, 0.906538, 0.834043], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJw1U8tKAkAUnUxhJnUVakYboUVlrUvCFCoItE2f4AfUviIhDCLoByLc1KpW
Ldr1AyIo1AfkHxTmAxKkc7inxeHcuffOfc2dXO3k6DjinKsCs0A34VyPQtK5
NRgCsAosAAUgK3lL529v9p43XQbYFCingQ9v9z7BqWC2BLjLM+QOeIS8U+Sd
gueUl/njQB5Ylx/92+ClYPkWwV84b0D+8QbKI3BauZjzxVusN/CzZOpG8i/A
ZyVYL+zp0VsdT+DlYL3mwPOSqTsFKpC3weOoczWMrRxDDMVhvLz6qAhV9VNV
T/+9HUasjobm/54wfVU2xmX8YsxmxFmV9UaMwVpfvc2tCb7TzO+92ePyuVR8
5mkpDmffkZ52vj1l6pqK+QA+R497MNejVh99uC/XsA1nMBfwATCGfAvuyL8N
3gnWx1UwUG4E26WM9ulX/q2o9cbaSknrIas9qgebyUUwG30mCdsJ7saNt/uM
w3r3VQ/rGuqN+uAS3x76XW91s/6it32lnuczvS/fuaj5Mwbj0Sej2inzXl/x
B/LJ6K9MNGfOu67aOJu2ZPY90F3uUUr/hjX8AdfLblo=
                "]], 
               Polygon[CompressedData["
1:eJwtkD+OQVEUh8+8KM5F50+YaF5JvBoRFBOV0ViCBbAACY1CJBYw046KWmcP
EhtgBVRG6zs5ii/53r3n/PK7Lx5PR5NIRPKQgj8VCRykYYsvg8gQ/4YFvlO/
y8Ae78DjQ+QfenjMTIu7JlTwNgzwGiT4UX23Djf8B0p4GX7VZ2y2auBf6tlP
6Kvv2G4Cd3wNhcg7rPCN+qxlWvZn8C4NKOJnzoqR75zwefC3WceZdQ+ebW/u
4hf1bvamHN9X9W72jw54NryzI89+AbaxIcU=
                "]]}]}}, {{}, 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{1225, 1148, 1151, 1230, 1227, 1274, 1225}], 
              Line[{1269, 1266, 1268, 1271, 1344, 1341, 1269}], 
              
              Line[{2184, 2105, 2109, 2111, 2115, 2117, 2120, 2189, 2201, 
               2202, 2204, 2259, 2271, 2323, 2340, 2337, 2332, 2330, 2326, 
               2325, 2316, 2258, 2255, 2254, 2251, 2186, 2184}], 
              
              Line[{2206, 2229, 2272, 2288, 2344, 2345, 2349, 2363, 2426, 
               2427, 2430, 2431, 2436, 2437, 2366, 2361, 2294, 2291, 2287, 
               2286, 2236, 2225, 2219, 2218, 2212, 2211, 2206}], 
              Line[{3278, 3202, 3204, 3282, 3279, 3328, 3278}], 
              Line[{3323, 3273, 3318, 3326, 3392, 3391, 3323}]}, 60], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1223, 1224, 1273, 1226, 1231, 1233, 1232, 1156, 1152, 
               1106, 1102, 1098, 1093, 1147, 1223}], 
              
              Line[{1212, 1199, 1207, 1211, 1218, 1222, 1267, 1270, 1343, 
               1340, 1337, 1336, 1264, 1260, 1212}], 
              
              Line[{2098, 2010, 2014, 2017, 2021, 2024, 2029, 2032, 2036, 
               2104, 2124, 2125, 2131, 2192, 2208, 2261, 2275, 2329, 2348, 
               2396, 2422, 2420, 2414, 2411, 2406, 2403, 2398, 2395, 2384, 
               2324, 2320, 2319, 2317, 2315, 2312, 2252, 2250, 2183, 2182, 
               2099, 2101, 2102, 2098}], 
              
              Line[{2153, 2123, 2127, 2129, 2134, 2136, 2142, 2144, 2151, 
               2166, 2224, 2226, 2230, 2231, 2234, 2239, 2293, 2298, 2365, 
               2368, 2445, 2444, 2441, 2449, 2533, 2531, 2526, 2524, 2519, 
               2517, 2512, 2510, 2442, 2423, 2417, 2416, 2359, 2342, 2285, 
               2269, 2223, 2199, 2153}], 
              
              Line[{3277, 3201, 3203, 3206, 3210, 3283, 3285, 3341, 3346, 
               3340, 3404, 3409, 3329, 3327, 3277}], 
              
              Line[{3272, 3315, 3310, 3320, 3386, 3393, 3441, 3446, 3451, 
               3456, 3399, 3322, 3325, 3317, 3272}]}, 48], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1221, 1217, 1210, 1206, 1198, 1195, 1190, 1202, 1258, 
               1262, 1331, 1332, 1335, 1342, 1422, 1424, 1427, 1430, 1345, 
               1346}], 
              
              Line[{1275, 1272, 1276, 1349, 1278, 1282, 1285, 1283, 1238, 
               1236, 1161, 1155, 1112, 1109, 1105, 1101, 1097, 1092, 1146, 
               1143}], 
              
              Line[{3276, 3200, 3113, 3115, 3118, 3121, 3205, 3209, 3212, 
               3214, 3284, 3289, 3349, 3358, 3353, 3345, 3339, 3403, 3408, 
               3333}], 
              
              Line[{3321, 3316, 3275, 3267, 3194, 3264, 3258, 3269, 3306, 
               3313, 3382, 3389, 3432, 3436, 3440, 3445, 3450, 3455, 3398, 
               3460}], 
              
              Line[{1263, 1214, 1265, 1279, 1280, 1286, 1315, 1360, 1361, 
               1366, 1397, 1453, 1482, 1545, 1544, 1538, 1571, 1613, 1526, 
               1568, 1432, 1519, 1518, 1511, 1510, 1473, 1419, 1388, 1334, 
               1309, 1263}], 
              
              Line[{2094, 2004, 2005, 2006, 2008, 2009, 2013, 2016, 2020, 
               2023, 2028, 2031, 2035, 2037, 2042, 2108, 2130, 2191, 2207, 
               2210, 2216, 2263, 2277, 2328, 2350, 2401, 2425, 2424, 2421, 
               2419, 2413, 2410, 2405, 2402, 2397, 2394, 2390, 2389, 2386, 
               2383, 2378, 2314, 2313, 2311, 2309, 2249, 2247, 2304, 2246, 
               2179, 2181, 2095, 2094}], 
              
              Line[{2148, 2118, 2121, 2122, 2126, 2128, 2133, 2135, 2141, 
               2143, 2150, 2152, 2157, 2159, 2163, 2169, 2233, 2235, 2238, 
               2242, 2295, 2243, 2297, 2302, 2300, 2371, 2448, 2451, 2541, 
               2539, 2537, 2536, 2532, 2530, 2525, 2523, 2518, 2516, 2511, 
               2509, 2505, 2504, 2440, 2415, 2358, 2341, 2335, 2334, 2283, 
               2265, 2222, 2198, 2148}], 
              
              Line[{2978, 2924, 2932, 2979, 3020, 3021, 3027, 3028, 3036, 
               3072, 3125, 3156, 3207, 3238, 3281, 3280, 3268, 3195, 3262, 
               3260, 3233, 3184, 3179, 3178, 3149, 3092, 3063, 2999, 3003, 
               3004, 2978}]}, 36], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1351, 1348, 1277, 1281, 1284, 1288, 1291, 1287, 1241, 
               1237, 1163, 1157, 1117, 1114, 1111, 1108, 1104, 1100, 1096, 
               1091, 1145, 1142}], 
              
              Line[{2245, 2178, 2092, 2093, 1999, 2002, 2003, 2001, 1915, 
               1918, 1921, 1923, 1926, 1928, 1930, 1933, 1934, 1940, 1943, 
               1949, 2012, 2041, 2043, 2050, 2110, 2138, 2193, 2215, 2262, 
               2280, 2331, 2354, 2404, 2429, 2489, 2515, 2513, 2508, 2506, 
               2502, 2500, 2494, 2491, 2485, 2483, 2479, 2476, 2468, 2388, 
               2385, 2382, 2380, 2377, 2375, 2310, 2307, 2373, 2306, 2303, 
               2305}], 
              
              Line[{2299, 2296, 2244, 2241, 2240, 2237, 2174, 2168, 2165, 
               2162, 2158, 2156, 2079, 2070, 2066, 2063, 2056, 2054, 2047, 
               2045, 2039, 2038, 2034, 2033, 2027, 2060, 2112, 2145, 2194, 
               2220, 2264, 2282, 2333, 2356, 2407, 2438, 2496, 2497, 2503, 
               2535, 2601, 2603, 2609, 2610, 2615, 2616, 2619, 2621, 2624, 
               2626, 2629, 2632, 2546, 2540, 2542, 2544, 2453, 2370, 2372, 
               2369}], 
              
              Line[{3271, 3266, 3193, 3263, 3257, 3256, 3253, 3261, 3304, 
               3311, 3379, 3387, 3425, 3428, 3431, 3435, 3439, 3444, 3449, 
               3454, 3397, 3459}], 
              Line[{1220, 1216, 1209, 1205, 1197, 1194, 1189, 1187, 1185, 
               1200, 1256, 1261, 1326, 1327, 1330, 1339, 1415, 1417, 1421, 
               1423, 1426, 1429, 1431, 1435}], 
              
              Line[{3199, 3197, 3112, 3114, 3117, 3120, 3124, 3127, 3208, 
               3213, 3216, 3219, 3286, 3290, 3354, 3365, 3362, 3357, 3352, 
               3344, 3338, 3402, 3407, 3332}], 
              
              Line[{1201, 1203, 1140, 1213, 1228, 1229, 1234, 1235, 1239, 
               1252, 1292, 1293, 1297, 1318, 1372, 1402, 1458, 1487, 1548, 
               1576, 1624, 1639, 1676, 1675, 1669, 1617, 1666, 1665, 1636, 
               1609, 1603, 1602, 1564, 1509, 1504, 1502, 1470, 1412, 1385, 
               1329, 1306, 1257, 1248, 1192, 1201}], 
              
              Line[{2908, 2874, 2841, 2875, 2878, 2879, 2884, 2912, 2938, 
               2939, 2945, 2982, 3035, 3037, 3042, 3076, 3130, 3160, 3217, 
               3240, 3287, 3299, 3348, 3347, 3335, 3334, 3319, 3274, 3314, 
               3312, 3309, 3307, 3294, 3255, 3250, 3249, 3228, 3171, 3144, 
               3086, 3060, 2996, 2973, 2923, 2908}]}, 24], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1141, 1144, 1090, 1095, 1099, 1103, 1107, 1110, 1113, 
               1116, 1119, 1121, 1160, 1166, 1240, 1244, 1289, 1296, 1294, 
               1290, 1357, 1359, 1356, 1354, 1438, 1352, 1347, 1350}], 
              
              Line[{1434, 1433, 1524, 1521, 1516, 1514, 1428, 1420, 1416, 
               1414, 1411, 1410, 1338, 1325, 1322, 1321, 1259, 1255, 1191, 
               1181, 1183, 1184, 1186, 1188, 1193, 1196, 1204, 1208, 1215, 
               1219}], 
              
              Line[{2177, 2173, 2171, 2167, 2164, 2161, 2082, 2076, 2072, 
               2069, 2065, 2062, 2055, 2053, 2046, 2044, 1977, 1953, 1947, 
               1945, 1937, 1971, 2026, 2025, 2018, 2057, 2107, 2140, 2190, 
               2217, 2260, 2281, 2327, 2355, 2400, 2434, 2487, 2488, 2495, 
               2534, 2592, 2593, 2600, 2602, 2608, 2633, 2694, 2696, 2700, 
               2702, 2640, 2620, 2623, 2625, 2628, 2631, 2637, 2639, 2550, 
               2543, 2548, 2452, 2549, 2552}], 
              Line[{2458, 2456, 2374, 2376, 2379, 2381, 2464, 2471, 2473, 
               2475, 2478, 2482, 2484, 2490, 2493, 2499, 2574, 2596, 2599, 
               2605, 2607, 2581, 2514, 2521, 2522, 2492, 2435, 2409, 2357, 
               2336, 2284, 2266, 2221, 2195, 2147, 2114, 2059, 2052, 2049, 
               2015, 1958, 1950, 1948, 1942, 1939, 1919, 1853, 1849, 1847, 
               1842, 1912, 1925, 1922, 1920, 1917, 1914, 1911, 1907, 1997, 
               1998, 1996, 1993, 2089, 2091}], 
              
              Line[{3198, 3111, 3019, 3023, 3026, 3031, 3116, 3119, 3123, 
               3126, 3129, 3133, 3211, 3218, 3221, 3224, 3288, 3292, 3359, 
               3370, 3368, 3364, 3361, 3356, 3351, 3343, 3337, 3401, 3406, 
               3331}], 
              
              Line[{3270, 3265, 3196, 3189, 3106, 3186, 3182, 3190, 3252, 
               3251, 3247, 3259, 3301, 3308, 3378, 3384, 3420, 3422, 3424, 
               3427, 3430, 3434, 3438, 3443, 3448, 3453, 3396, 3458}], 
              
              Line[{1133, 1169, 1182, 1246, 1254, 1303, 1319, 1320, 1324, 
               1383, 1407, 1468, 1495, 1561, 1588, 1590, 1596, 1634, 1655, 
               1656, 1660, 1687, 1704, 1705, 1706, 1707, 1673, 1708, 1710, 
               1711, 1712, 1713, 1691, 1677, 1642, 1626, 1582, 1555, 1489, 
               1462, 1404, 1377, 1323, 1305, 1301, 1300, 1253, 1245, 1243, 
               1242, 1178, 1162, 1159, 1158, 1154, 1153, 1150, 1149, 1139, 
               1138, 1137, 1136, 1135, 1134, 1133}], 
              
              Line[{2860, 2837, 2838, 2839, 2802, 2840, 2842, 2843, 2844, 
               2845, 2847, 2864, 2888, 2889, 2894, 2915, 2950, 2951, 2958, 
               2986, 3049, 3077, 3135, 3161, 3222, 3223, 3226, 3245, 3291, 
               3300, 3366, 3377, 3415, 3414, 3413, 3412, 3411, 3410, 3324, 
               3394, 3390, 3388, 3385, 3383, 3381, 3380, 3374, 3305, 3303, 
               3302, 3293, 3246, 3242, 3241, 3225, 3162, 3141, 3081, 3057, 
               2990, 2967, 2920, 2906, 2872, 2860}]}, 12], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{5, 1115, 1118, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 
               1128, 1129, 1130, 1131, 1132, 13}], 
              Line[{21, 1164, 1165, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 
               1175, 1176, 1177, 1179, 1180, 29}], 
              Line[CompressedData["
1:eJwVzbFKAgAYBOA/qNYgIZwqxcYoih5CggZDCHQQ16QiQopQ6gmkoVFoKJpa
3KShrTGswAaLyFqiRZCGtj6HbzmOu1R5N7czFhF5LiYimmRZZ4McebYosEmC
GZJM8T4e8UGfT6Zlc8yTocwBVY5p0xltTEYsssQqJfbYp8o5l1xxzR0PdHjk
iRue6fJCj1fuadGkQYUiKyRHff+3nLDNMrOkSLPAGoccUaPOKWf0eKPPF9/8
MGDIL3/8A1XrMDc=
               "]], 
              
              Line[{2090, 1992, 1897, 1900, 1903, 1904, 1906, 1910, 1913, 
               1905, 1833, 1835, 1837, 1840, 1841, 1846, 1848, 1852, 1854, 
               1859, 1861, 1865, 1924, 1957, 1959, 1965, 2019, 2058, 2113, 
               2146, 2149, 2155, 2197, 2228, 2268, 2290, 2339, 2360, 2408, 
               2439, 2498, 2529, 2588, 2618, 2617, 2614, 2612, 2606, 2604, 
               2598, 2595, 2590, 2587, 2583, 2580, 2569, 2481, 2477, 2474, 
               2472, 2470, 2466, 2463, 2461, 2558, 2459, 2455, 2457}], 
              
              Line[{2551, 2556, 2554, 2647, 2644, 2642, 2638, 2636, 2630, 
               2645, 2713, 2711, 2708, 2706, 2701, 2699, 2695, 2693, 2688, 
               2687, 2682, 2681, 2627, 2591, 2585, 2584, 2528, 2486, 2433, 
               2399, 2393, 2392, 2353, 2322, 2279, 2257, 2214, 2188, 2139, 
               2106, 2051, 2011, 1964, 1927, 1931, 1932, 1935, 1936, 1944, 
               1946, 1952, 1955, 1961, 1963, 1968, 1981, 2061, 2064, 2068, 
               2071, 2075, 2078, 2081, 2084, 2086, 2087, 2172, 2176}], 
              Line[CompressedData["
1:eJwNzjtLggEYhuH32zpt7ZEhDo0OTSF2gAaRonBoCqTCoZSgoT8RQtQUadgQ
UYFTP6IhaGloUSOEiEjotHYN13Y/8KTKtdVqEhElDsYi9kmxxy47VNimTI0b
rrnkjhd6dOnQ5oImDTYosMgCQwxGI245oc4hm6yxTJEsU0wywTB/IxG//PDN
F5+0eeeNVxLtONPMsM4WR1zxQeJHnhWOaXHOGafUWWKeOXLMkqVv36PDM088
8sA9aU2Gf+U+Mio=
               "]], 
              
              Line[{1065, 3376, 3375, 3373, 3372, 3371, 3369, 3367, 3363, 
               3360, 3355, 3350, 3342, 3336, 3400, 3405, 3330}], 
              
              Line[{1081, 3416, 3417, 3418, 3419, 3421, 3423, 3426, 3429, 
               3433, 3437, 3442, 3447, 3452, 3395, 3457}]}, 0], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1528, 1527, 1615, 1611, 1608, 1606, 1522, 1512, 1507, 
               1505, 1500, 1498, 1493, 1491, 1486, 1484, 1418, 1399, 1394, 
               1413, 1478, 1477, 1472, 1496, 1563, 1589, 1631, 1647, 1684, 
               1696, 1720, 1737, 1769, 1770, 1774, 1796, 1838, 1839, 1843, 
               1844, 1850, 1851, 1856, 1858, 1863, 1878, 1951, 1954, 1960, 
               1962, 1967, 1970, 1974, 1976, 1979, 1985, 2074, 2077, 2080, 
               2083, 2085, 2088}], 
              
              Line[{1991, 1990, 1896, 1899, 1902, 1901, 1824, 1827, 1830, 
               1831, 1832, 1834, 1836, 1828, 1777, 1780, 1781, 1784, 1785, 
               1789, 1790, 1772, 1738, 1723, 1697, 1695, 1694, 1682, 1643, 
               1630, 1580, 1577, 1575, 1556, 1481, 1463, 1395, 1393, 1392, 
               1391, 1390, 1373, 1308, 1307, 1369, 1382, 1380, 1376, 1374, 
               1370, 1367, 1364, 1446, 1448, 1445, 1443, 1532, 1441, 1436, 
               1439}], 
              
              Line[{2559, 2557, 2460, 2462, 2465, 2469, 2565, 2568, 2571, 
               2573, 2576, 2579, 2582, 2586, 2589, 2594, 2672, 2684, 2686, 
               2691, 2692, 2697, 2698, 2703, 2705, 2709, 2754, 2774, 2775, 
               2780, 2814, 2829, 2855, 2867, 2902, 2913, 2960, 2981, 3050, 
               3068, 3067, 3064, 3131, 3145, 3142, 3128, 3059, 3055, 3052, 
               3048, 3045, 3040, 3038, 3033, 3029, 3024, 2942, 2937, 2934, 
               2931, 3017, 3109}], 
              
              Line[{2651, 2648, 2553, 2646, 2643, 2650, 2720, 2718, 2716, 
               2714, 2712, 2710, 2707, 2721, 2770, 2768, 2765, 2764, 2760, 
               2759, 2756, 2779, 2810, 2828, 2852, 2853, 2856, 2868, 2904, 
               2918, 2964, 2966, 2971, 2991, 3062, 3082, 3146, 3148, 3150, 
               3151, 3154, 3172, 3236, 3237, 3177, 3159, 3164, 3166, 3168, 
               3169, 3173, 3175, 3102, 3095, 3098, 3012, 3101, 3107, 3187, 
               3191}], 
              
              Line[{1805, 1748, 1806, 1814, 1815, 1819, 1820, 1825, 1860, 
               1908, 1909, 1916, 1956, 2007, 2048, 2103, 2137, 2187, 2213, 
               2256, 2278, 2321, 2352, 2391, 2432, 2480, 2527, 2577, 2622, 
               2669, 2704, 2744, 2743, 2742, 2741, 2732, 2654, 2728, 2727, 
               2723, 2722, 2689, 2641, 2635, 2634, 2597, 2538, 2501, 2443, 
               2412, 2362, 2338, 2289, 2267, 2227, 2196, 2154, 2116, 2067, 
               2022, 1972, 1929, 1873, 1845, 1802, 1803, 1805}]}, -12], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1534, 1531, 1442, 1444, 1447, 1449, 1452, 1455, 1457, 
               1450, 1375, 1379, 1381, 1384, 1386, 1389, 1459, 1475, 1476, 
               1479, 1553, 1570, 1572, 1574, 1629, 1640, 1681, 1690, 1721, 
               1732, 1731, 1728, 1765, 1776, 1775, 1773, 1771, 1768, 1822, 
               1829, 1826, 1823, 1821, 1818, 1817, 1813, 1894, 1895}], 
              
              Line[{1989, 1988, 1987, 1984, 1980, 1978, 1975, 1973, 1969, 
               1966, 1883, 1871, 1869, 1867, 1864, 1862, 1857, 1855, 1799, 
               1787, 1783, 1782, 1779, 1778, 1740, 1726, 1698, 1686, 1649, 
               1635, 1595, 1567, 1503, 1480, 1483, 1485, 1490, 1492, 1497, 
               1517, 1592, 1594, 1599, 1601, 1605, 1607, 1610, 1614, 1616, 
               1620}], 
              
              Line[{2656, 2655, 2561, 2564, 2566, 2567, 2570, 2572, 2575, 
               2578, 2666, 2675, 2677, 2679, 2680, 2683, 2685, 2690, 2749, 
               2762, 2763, 2766, 2767, 2771, 2811, 2824, 2854, 2863, 2900, 
               2911, 2955, 2974, 3043, 3061, 3058, 3054, 3051, 3047, 3044, 
               3032, 2954, 2949, 2947, 2944, 2941, 2936, 2933, 2930, 3014, 
               3016}], 
              
              Line[{2733, 2731, 2653, 2729, 2725, 2724, 2719, 2717, 2715, 
               2726, 2778, 2776, 2773, 2772, 2769, 2783, 2821, 2820, 2816, 
               2831, 2859, 2869, 2907, 2919, 2970, 2972, 2976, 2994, 3065, 
               3066, 3070, 3087, 3153, 3155, 3157, 3158, 3163, 3165, 3096, 
               3085, 3089, 3091, 3093, 3094, 3097, 3011, 3100, 3104}], 
              
              Line[{1982, 1938, 1886, 1898, 1941, 1994, 1995, 2000, 2040, 
               2096, 2097, 2100, 2132, 2185, 2209, 2253, 2276, 2318, 2351, 
               2387, 2428, 2467, 2520, 2562, 2613, 2649, 2555, 2611, 2454, 
               2547, 2545, 2507, 2450, 2447, 2446, 2418, 2364, 2343, 2292, 
               2270, 2232, 2200, 2160, 2119, 2073, 2030, 1982}]}, -24], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1619, 1618, 1671, 1668, 1664, 1662, 1612, 1604, 1600, 
               1598, 1593, 1591, 1585, 1584, 1579, 1578, 1573, 1597, 1637, 
               1653, 1689, 1699, 1729, 1730, 1733, 1741, 1786, 1788, 1791, 
               1792, 1794, 1801, 1866, 1868, 1870, 1872, 1875, 1877, 1880, 
               1882, 1885, 1889, 1983, 1986, 1890, 1892}], 
              
              Line[{2740, 2657, 2560, 2563, 2659, 2661, 2663, 2665, 2668, 
               2671, 2673, 2674, 2676, 2678, 2746, 2753, 2755, 2757, 2758, 
               2761, 2809, 2818, 2819, 2822, 2851, 2862, 2897, 2909, 2952, 
               2969, 2968, 2963, 2961, 2956, 2953, 2948, 2946, 2943, 2940, 
               2935, 2886, 2883, 2881, 2877, 2929, 3015}], 
              
              Line[{1533, 1530, 1535, 1622, 1537, 1540, 1543, 1541, 1451, 
               1454, 1456, 1460, 1461, 1464, 1466, 1469, 1471, 1474, 1551, 
               1565, 1566, 1569, 1627, 1638, 1680, 1688, 1717, 1725, 1724, 
               1722, 1762, 1767, 1766, 1764, 1763, 1761, 1759, 1754, 1816, 
               1812, 1893, 1811, 1808, 1810}], 
              
              Line[{2801, 2798, 2737, 2730, 2652, 2735, 2792, 2790, 2786, 
               2784, 2782, 2781, 2777, 2787, 2827, 2826, 2823, 2834, 2861, 
               2871, 2910, 2921, 2975, 2977, 2980, 2995, 3069, 3071, 3074, 
               3075, 3078, 3079, 3083, 3084, 3088, 3090, 3009, 3002, 3006, 
               2926, 3008, 3013, 3099, 3103}], 
              
              Line[{2175, 2203, 2170, 2180, 2205, 2248, 2274, 2308, 2347, 
               2367, 2301, 2346, 1094, 2273, 2175}]}, -36], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{1623, 1621, 1536, 1539, 1542, 1546, 1547, 1549, 1550, 
               1552, 1554, 1557, 1559, 1562, 1625, 1633, 1678, 1683, 1715, 
               1719, 1718, 1716, 1757, 1760, 1758, 1753, 1752, 1749, 1807, 
               1809}], 
              
              Line[{1674, 1672, 1670, 1667, 1663, 1661, 1658, 1657, 1652, 
               1651, 1646, 1645, 1641, 1659, 1692, 1702, 1735, 1736, 1739, 
               1743, 1793, 1795, 1797, 1798, 1800, 1804, 1874, 1876, 1879, 
               1881, 1884, 1887, 1888, 1891}], 
              
              Line[{2800, 2797, 2734, 2796, 2791, 2789, 2785, 2794, 2833, 
               2832, 2830, 2836, 2865, 2873, 2914, 2922, 2983, 2984, 2987, 
               2988, 2992, 2993, 2997, 2998, 3000, 3001, 3005, 2925, 3007, 
               3010}], 
              
              Line[{2928, 2927, 2876, 2880, 2882, 2885, 2887, 2890, 2892, 
               2896, 2898, 2901, 2903, 2891, 2857, 2849, 2815, 2813, 2812, 
               2808, 2752, 2751, 2750, 2748, 2747, 2745, 2670, 2667, 2664, 
               2662, 2660, 2658, 2738, 2739}]}, -48], {}, {}}}], {
         AspectRatio -> 1, Frame -> True, ImagePadding -> {{20, 15}, {20, 1}},
           ImageSize -> {260, 
            Rational[395, 2]}, PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}}]]}}, 
     Spacings -> {0, 0}], $CellContext`forceGrid$$ = CompressedData["
1:eJztmvtTj3kUx6MSadoifbdctu+2EiXZ5BZ9TyIsckk2ZVRuuW6RNoS+rdpc
thCjwhi3anbTuhR2XIq0u64z2k2xtEIUuSe525ndXs9Oz79QzfTDZ87t/X4+
53PO+TzPVzstfMLMlgYGBtqG/55llTVV/k9lwbFHozvtq5C+dUUBE34tlsii
1VMcz56RF+6JBuM/HpHzFwtPVNRki7NTq32Zubukl2HlldsRqfLKZdecGPcN
ct9v3qCOcxJlVkJqVnVWnGz+7ma3zpdjJMHiUPLVim8lz2RE0tysSFm8JnKj
2e6FkmR2wSExIUK+HmRRdaxHhLJGjj72+MM/8YgPHvCBF/zwgR981fzfvPFI
1RgVS861FTts7Avl5LmaZT+45smGQDfjnCVZEno2o6J/7HYxz7980MIyRVZe
mu685WGiXNz5cr/ROr287GOSkFEZLV38Rx+xMl4k82OGnr09bb50TV//+6bJ
YbLf6ckd7Scz5MUXbfJsPobKsqGjSo/cCJHazjYRbfUhyho5+tjjD//EIz54
wAde8MMHfvBV7z9yixqXdCP/XFkycriLdUKGHJ/o22mjUbqUzV+ruRWcLJaZ
JjEXvFbJGW2QX2f9UmX/zBb6FmRGz5Htbm+CjN2nS379LrMcr6liOip/4rw7
AWJiGlIXHeovUYGyLMPFT8KsK3PsXo8XbSvNwMAt45U1cvSxxx/+iUd88IAP
vOCHD/zgq85/nhf6IZke0WtepEqSb7lP0LV1EnYi5+ijKr20+bTU4UB4lMxs
2J9z9UPyKndOl6QzUUbRk6dIiwb83u3MXLuUjRPTubEuUXmjJH6DVdCdi8PF
e8HaWcGBw6TkUsr6P1sMlfZJGv3NTd7KGjn62OMP/8QjPnjAB17wwwd+8FWf
f/KH54f9navF3raueuW8pq8ZlXmgZraSz09Kri3PLp4kPYx81m1cNk7OR9w9
7Xh9hFg38Htb1jsuy1Zki1u8r3e2h4SdKXtY/Ud/uV+ScS9oSD9Jsf5s+erC
vsoaOfrY4w//xCM+eMAHXvDDB37wVdc/zhP5xPPE35ifh+mP3ghT8jN767Md
S1tPFMuG/WI/W1pVtd3W01OMLe71f1/UT3I3xdmHJLmJ7y9BUc8vuEplbE/T
VHsXSSxdFO0z2FkuFBXEWO12UtbI0ccef/gnHvHBAz7wgh8+8IOvuv5TXzhf
5BfPF/+cX92wcMPCWSPlgG5z/aoNXrLocsE1v6kDZHjcbfOHWjepbuBzNWBf
SfZ5R9F9dSrAfXRXCfYsW5XS0V68wzev8KrSij4zx6s8XquskaOPPf7wTzzi
gwd84AU/fOAHX3X/o95Sbzhv5BvPm3iGjj4zE4tFyWf279zrCcur/bvL2PJC
8+QX9pKd9O60y1w7+bDFrleVWyfpYurxIHaMjUyyaFnc/7BG/ir9sevjLzXK
Gjn62OMP/8QjPnjAB17wwwd+8FX3f/oP9Zf6w/kj/3j+xLdxPzFkbAdXKR47
MH/PwG7K/j4oczlcndZRjvqXJITnWkvRlYJbYfr20qHc4JJZrKXM3rW9y4kZ
FpJRl6DZa2qhrJGjjz3+8E884oMHfOAFP3zgB1/1/EM/ph9Rj6lHnEfykf0A
T/ce+4ODf7NT9jPF8Pq2x4/aK/ySzTWG63qYiVP62s9th7UR5xnr1wTmmMj7
fNtOHk4myho5+tjjD//EIz54wAde8MMHfvBVz3/MJ/Rn+hP1mfrE+SQ/2R/w
5b4aaeXRob2cdFj+Ie0TcwlyCCwbcKy1nH895ICVp7Ec25NYcNfcUDQO1YND
r7eQcRcn+HgubaGskaOPPf7wTzzigwd84AU/fOAHX/X8y7xGfaFf06+o19Qr
ziv5yn6Bl/3tWdH17eOlhvLKb+spz+MGEnp/7PMdxh90bevHPO+tfae7Yrt9
xNbv3ypr5Ohjjz/8E4/44AEfeMEPH/jBVz3/M78yvzG/0L/pX9Rv6hfnl/xl
/8Cvt0vrPt7YQOAbYTb9qdGhV7p5Gbk719rX69L04zaF7H2prJGjjz3+8E88
4oMHfOAFP3zgB1/1/Yd5nnmWeY55hvNHP6OeU884z+Qz+wkfz907/l6ZUa+r
nWJeYdKvTjc0bcaYIxW1unZ2iwYuiaxV1sjRxx5/+Cce8cEDPvCCHz7wg6/6
/sf9hv7LfMt8x3xDf+d8Ut+pb5xv8pv9hV/AN+XxKa1rdXWOP7VbfOWZrk/c
x30LI58pa+ToY48//BOP+OABH3jBDx/4wVd9/+W+x32Heks/Yt5j3qHfk5+c
X+od5518Z7/h63yz3v3g4ae6eQtLvW9MfqqskaOPPf7wTzzigwd84AU/fOAH
X/X9n3mD+x/3H+Z/5l/qM/MP/Z/+R/0nnzn/5D/7D3+Df//+fx7I0ccef/gn
HvHBAz7wgh8+8IOv+v1HU8+H5vrQ+P1XU+8XzfND4/efTX2ebL5fNH7/3dTv
m83vHxp//2jq76Oa3082/v7V1N9XN3+/aPz9s6l/z2r+vtn4+3dT/97d/PuH
//j/A4R+K0I=
    "], $CellContext`forceTermSelection$$ = 
    3, $CellContext`grid$$ = CompressedData["
1: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
    "], $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    4.440892098500626*^-16, $CellContext`h$$ = Rational[
    1, 16], $CellContext`kValue$$ = 7, $CellContext`lenX$$ = 
    2, $CellContext`lenY$$ = 2, $CellContext`northbc$$ = 
    Cos[(2 Pi) #]& , $CellContext`northBCconstantValue$$ = 
    1., $CellContext`northBCtype$$ = 
    "Dirichlet", $CellContext`plotPerformanceGoal$$ = 
    "Quality", $CellContext`plotToShow$$ = 
    "solution and contour", $CellContext`rightHandVector$$ = SparseArray[
    Automatic, {1023}, 0., {1, {{0, 961}, CompressedData["
1:eJwl12PXEIgWBtA327Zt27btJrsmN9m2bdt2k227ybbubt0Pe53nD5x1npOo
cfvK7QIHBATsDxIQEMj8k8WAoAQjOCEISShCE4awhCM8EYhIJCIThahEIzox
iEksYhOHuMQjPglISBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
PerTgIY0ojFNaUZzWtCSVrSmDW1pR3s60JFO/E1nutCVbnSnBz3pxT/0pg99
6Ud/BjCQIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZ
wEIWsZRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznE
YY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMxT
nvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+bPEgQhMEIISjOCEIDRh
CEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQhLelI
TwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUoqylKM8FahI
JSpThapUozo1qEktalOHutSjPg1oSCMa8xdNaEozmtOClrSiLe1oTwc60om/
6UwXutKN7vSgJ734h970oS/96M8ABjKIwQxhKMMYzghGMoaxjGM8E5jIJCYz
halMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9HOAghzjMEf7lKMc4zglOcoqznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84T/eMoznvOCl7ziLe94zwc+8onPfOEr3/jOD37y
i9/8OcCBCEwQghKM4IQgJKEITRjCEo7wRCAyUYhKNKITg5jEIjZxiEs84pOA
hCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkISvZyE4OcpKL3OQhL/nITwEKUojC
FKEoxShOCUpSitKUoSzlKE8FKlKJqlSjOjWoSS1qU4e61KM+DWhIIxrzF01o
SjOa04KWtKI1bWjLn7LUng50pBNd6Eo3utODnvTiH3rTh770oz8DGMggBjOE
oQxjOCMYyShGM4axjGM8E5jIFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2Mo2trODnexiN3vYyz72c4CDHOIwR/iXoxzjOCc4
ySlOc4aznOM8F7jIJa5yjevc4Ca3uM0d7nKP+zzgIY94zBP+4ynPeM4LXvKK
17zhLe94zwc+8omvfOM7P/jJL37zpzwHIjBBCEowghOCkIQiNGEISzjCE4GI
RCIyUYhKNKITg9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSj
OjWoSS3qUo/6NKAhjWjMXzShKc1oTgta0orWtKEt7WhPBzrSib/pTBe60o3u
9KAnvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnM
ZA5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexl
X5D//4YHOMghDnOEfznKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OIu
97jPAx7yiMc84T+e8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4Hwim
5yw=
       "]}, CompressedData["
1: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
pq//D/0XDHM1OA==
      "]}], $CellContext`southbc$$ = Cos[
    Pi #]& , $CellContext`southBCconstantValue$$ = 
    1., $CellContext`southBCtype$$ = "Dirichlet", $CellContext`stdx$$ = 
    0.3, $CellContext`stdy$$ = 0.3, $CellContext`systemMatrix$$ = SparseArray[
    Automatic, {1023, 1023}, 0, {1, {CompressedData["
1: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
dGIRQAKCSEZK0pKBLGQjF3kpSBGK81+YKh1h
       "], CompressedData["
1:eJxd21XUrWUVR/FnrQXSKF0KHI50N0gLCAgIktLdLQKKpCDdXQIK0imdh+7u
bgSkUTAo3zm+b4z5si/+Y6x5u5/f1R57j9h0p9V2zNbaUhO1Fm1odA3cI3v3
aN1+3LtH7zZ97/5etxl69xjdZuzdY3abqXeP1W3m3j12t1l69zjdZu3d43ab
rXeP12323j1+tzl69/e7zdm7f9Btrt49Qbe5e/eE3ebp3d1H0+bt3RN3m693
T9Jt/t49abcFevdk3Rbs3ZN3W6h3T9Ft4d49Zbef9O6pui3Su3/YbdHe/aNu
i/Xuqbst3run6bZE756225K9e0S3pQZ6ujb05rxzDvQyTRM0b79s0wXN+/+s
aYPGwHJNHzQOlm8aobGwQtMJjYefN63QmFix6YXGxUpNMzQ2Vm66ofHxi6Yd
GiOrNP3QOFm1aYjGyi+bjmi8rNa0RGNm9aYnGjdrNE3R2Fmz6YrGz1pNWzSG
1m76onH0q6YxGkvrNJ3ReFq3aY3G1HpNbzSu1m+ao7G1QdMdja8Nm/ZojG3U
9Ecv2W3jpkEaa5s0HdI/7bbpQC/dhqxha+RAb9G0SGNty6ZFGmtbNS3SWNu6
aZHG2jZNizTWtm1apLG2XdMijbXtmxZprO3QtEhjbcemRRprOzUt0ljbuWmR
xtouTYs01n7dtEhjbdemRRprv2lapLG2W9MijbXdmxZprO3RtEhj7bdNizTW
fte0SGNtz6ZFGmu/b1qksbZX0yKNtb2bFmms7dO0SGNt36ZFeuNu+zUt0ljb
v2mRxtofmhbpzbodMNCbtyFr2FpmoA9qWqSxdnDTIo21Q5oWaawd2rRIY+2w
pkUaa4c3LdJYO6JpkcbakU2LNNaOalqksXZ00yKNtWOaFmmsHdu0SGPtuKZF
GmvHNy3SWDuhaZHG2olNizTWTmpapLF2ctMijbVTmhZprJ3atEhj7bSmRRpr
pzct0lg7o2mRxtqfmhZprJ3ZtEhj7aymRXq/bmc3LdJY+3PTIo21vzQt0lg7
p2mRPrDbuQP9xzZkDVtbDPT5TYs01i5oWqSxdmHTIo21i5oWaaxd3LRIY+2S
pkUaa5c2LdJYu6xpkcba5U2LNNauaFqksXZl0yKNtb81LdJYu6ppkcba1U2L
NNauaVqksXZt0yKNteuaFmmsXd+0SGPthqZFGms3Ni3SWLupaZHG2s1NizTW
bmlapLF2a9MijbVRTYv02d1ua1qksXZ70yKNtTuaFmms3dm0SGPtrqZF+q/d
7h7o89qQNWwdNND3NS3SWLu/aZHG2gNNizTWHmxapLH2UNMijbWHmxZprD3S
tEhj7dGmRRprjzUt0lh7vGmRxtoTTYs01p5sWqSx9lTTIo21p5sWaaw907RI
Y+3ZpkUaa881LdJYe75pkcbaC02LNNZebFqksfZS0yKNtZebFmmsvdK0SGPt
1aZF+rZurzUt0lh7vWmRxtobTYs01t5sWqSx9lbTIo21t5sW6Xu6/X2g721D
1rB1/kC/17RIY+0fTYs01t5vWqSx9kHTIo21D5sWaax91LRIY+3jpkUaa580
LdJY+7RpkcbaZ02LNNb+2bRIY+1fTYs01j5vWqSx9kXTIo21fzct0lj7T9Mi
jbX/Ni3SWPtf0yKNtS+bFmmsfdW0SGPt66ZFGmvfNC3SWPu2aZF+rRtfPIzq
NdYitEhjLUOLNNYqtEhjbbTQIo210UOLNNa+F1qk3+k2Rny3321D1rB130CP
HVqksTZOaJHG2rihRRpr44UWaayNH1qksfb90CKNtR+EFmmsTRBapLE2YWiR
xtpEoUUaaxOHFmmsTRJapLE2aWiRxtpkoUUaa5OHFmmsTRFapLE2ZWiRxtpU
oUUaaz8MLdJY+1Fokcba1KFFGmvThBZprE0bWqSxNiK0SGNtutAijbWRoUUa
az8OLdJYmz60SGNthtAijbUZQ4v0mN1miu/2WDFkDVtY6/esoUUaa7OFFmms
zR5apLE2R2iRxtqcoUUaa3OFFmmszR1apLE2T2iRxtq8oUUaa/OFFmmszR9a
pLG2QGiRxtqCoUUaawuFFmmsLRxapLH2k9AijbVFQos01hYNLdJYWyy0SGNt
8dAijbUlQovTDFtbMrQ47bC1pUKLI4at/TS0ON2wtaVDiyOHrS0TWqSxtmxo
kcbaz0KLNNaWCy3SWFs+tEjP3G2FgZ4lhqxha+yBXim0SGNt5dAijbVfhBZp
rK0SWqSxtmpokcbaL0OLNNZWCy3SWFs9tEhjbY3QIo21NUOLNNbWCi3SWFs7
tEhj7VehRRpr64QWaaytG1qksbZeaJHG2vqhRRprG4QWaaxtGFqksbZRaJHG
2sahRRprm4QWaaxtGlqksbZZaJHG2uahRRprW4QWaaxtGVqksbZVaJHG2tah
RRpr24QW6Z9323agV4wha9iadaB3CC3SWNsxtEhjbafQIo21nUOLNNZ2CS3S
WPt1aJHG2q6hRRprvwkt0ljbLbRIY2330CKNtT1CizTWfhtapLH2u9AijbU9
Q4s01n4fWqSxtldokcba3qFFGmv7hBZprO0bWqSxtl9okcba/qFFGmt/CC3S
WDsgtEhj7cDQIo21P4YWaawdFFqksXZwaJHG2iGhRRprh4YWaawdFlqkt+t2
+EBvH0PWsLXSQB8VWqSxdnRokcbaMaFFGmvHhhZprB0XWqSxdnxokcbaCaFF
GmsnhhZprJ0UWqSxdnJokcbaKaFFGmunhhZprJ0WWqSxdnpokcbaGaFFGmt/
Ci3SWDsztEhj7azQIo21s0OLNNb+HFqksfaX0CKNtXNCizTWzg0t0lj7a2iR
xtp5oUUaa+eHFmmsXRBapLF2YWiRxtpFoUUaaxeHFukjul0y0EfGkDVs7TDQ
l4cWaaxdEVqksXZlaJHG2t9CizTWrgot0li7OrRIY+2a0CKNtWtDizTWrgst
0li7PrRIY+2G0CKNtRtDizTWbgot0li7ObRIY+2W0CKNtVtDizTWRoUWaazd
FlqksXZ7aJHG2h2hRRprd4YWaazdFVqksXZ3aJHG2j2hRRpr94YWaazdF1qk
sXZ/aJHG2gOhRRprD4YWaaw9FFqkL+328EBfFkPWsHXUQD8WWqSx9nhokcba
E6FFGmtPhhZprD0VWqSx9nRokcbaM6FFGmvPhhZprD0XWqSx9nxokcbaC6FF
GmsvhhZprL0UWqSx9nJokcbaK6FFGmuvhhZprL0WWqSx9npokcbaG6FFGmtv
hhZprL0VWqSx9nZokcba30OLNNbeCS3SWHs3tEhj7b3QIo21f4QWaay9H1qk
sfZBaJHG2oehRfqRbh8N9KMxZA1blw/0p6FFGmufhRZprP0ztEhj7V+hRRpr
n4cWaax9EVqksfbv0CKNtf+EFmms/Te0SGPtf6FFGmtfhhZprH0VWqSx9nVo
kcbaN6FFGmvfhhZprPGDj1G9xlqkFmmsZWqRxlqlFmmsjZZapLE2emqRxtr3
Uos01sZILdJYGzO1SGNtrNQijbWxU4s01sZJLdJYGze1SGNtvNQijbXxU4v0
x92+n9/tT2LIGrYeG+gJU4s01iZKLdJYmzi1SGNtktQijbVJU4s01iZLLdJY
mzy1SGNtitQijbUpU4s01qZKLdJY+2Fq8athaz9KLX49bG3q1OI3w9amSS1+
O2xt2tQijbURqUUaa9OlFmmsjUwt0lj7cWqRxtr0qUUaazOkFmmszZhapLE2
U2qRxtrMqUUaa7OkFmmszZpapLE2W2qRxtrsqUUaa3OkFmmszZlapH/Qba78
bk+QQ9awhbV+z5tapLE2X2qRxtr8qUUaawukFmmsLZhapLG2UGqRxtrCqUUa
az9JLdJYWyS1SGNt0dQijbXFUos01hZPLdJYWyK1OM2wtSVTi9MOW1sqtThi
2NpPU4vTDVtbOrU4ctjaMqlFGmvLphZprP0stUhjbbnUIo215VOLNNZWSC3S
WPt5apHG2oqpRRprK6UWaaytnFqksfaL1CKNtVVSizTWVk0t0nN3++VAz5ND
1rA14UCvkVqksbZmapHG2lqpRRpra6cWaaz9KrVIY22d1CKNtXVTizTW1kst
0lhbP7VIY22D1CKNtQ1TizTWNkot0ljbOLVIY22T1CKNtU1TizTWNkst0ljb
PLVIY22L1CKNtS1TizTWtkot0ljbOrVIY22b1CKNtW1TizTWtkst0ljbPrVI
Y22H1CKNNX54PHuvsbZTapHG2s6pRRpru6QW6dW6/XqgV88ha9iad6B3Sy3S
WNs9tUhjbY/UIo2136YWaaz9LrVIY23P1CKNtd+nFmms7ZVapLG2d2qRxto+
qUUaa/umFmms7ZdapLG2f2qRxtofUos01g5ILdJYOzC1SGPtj6lFGmsHpRZp
rB2cWqSxdkhqkcbaoalFGmuHpRZprB2eWqSxdkRqkcbakalFGmtHpRZprB2d
WqSxdkxqkcbasalFGmvHpRbpXbsdP9C/ySFr2FpjoE9KLdJYOzm1SGPtlNQi
jbVTU4s01k5LLdJYOz21SGPtjNQijbU/pRZprJ2ZWqSxdlZqkcba2alFGmt/
Ti3SWPtLapHG2jmpRRpr56YWaaz9NbVIY+281CKNtfNTizTWLkgt0li7MLVI
Y+2i1CKNtYtTizTWLkkt0li7NLVIY+2y1CKNtctTizTWrkgt0li7MrVIY+1v
qUUaa1elFukTul090CfmkDVs7TbQ16UWaaxdn1qksXZDapHG2o2pRRprN6UW
aazdnFqksXZLapHG2q2pRRpro1KLNNZuSy3SWLs9tUhj7Y7UIo21O1OLNNbu
Si3SWLs7tUhj7Z7UIo21e1OLNNbuSy3SWLs/tUhj7YHUIo21B1OLNNYeSi3S
WHs4tUhj7ZHUIo21R1OLNNYeSy3SWHs8tUhj7YnUIo21J1OLNNaeSi3S13R7
eqCvzSFr2DppoJ9LLdJYez61SGPthdQijbUXU4s01l5KLdJYezm1SGPtldQi
jbVXU4s01l5LLdJYez21SGPtjdQijbU3U4s01t5KLdJYezu1SGPt76lFGmvv
pBZprL2bWqSx9l5qkcbaP1KLNNbeTy3SWPsgtUhj7cPUIo21j1KLNNY+Ti3S
WPsktUhj7dPUIo21z1KLNNb+mVqksfav1CKNtc9Ti/Qz3b4Y6GdzyBq2rhvo
/6YWaaz9L7VIY+3L1CKNta9SizTWvk4t0lj7JrVIY+3b1CKNNf5cNarXWIvS
Io21LC3SWKvSIo210UqLNNZGLy3SWPteaZHG2hilRRprY5YWaayNVVqksTZ2
aZHG2jilRRpr45YWaayNV1qksTZ+aZHG2vdLizTWflBapLE2QWmRxtqEpUUa
axOVFmmsTVxapLE2SWmRxtqkpUX6390mq+/2f3LIGraeG+gpS4s01qYqLdJY
+2Fp8athaz8qLX49bG3q0uI3w9amKS1+O2xt2tIijbURpUUaa9OVFmmsjSwt
0lj7cWmRxtr0pUUaazOUFmmszVhapLE2U2mRxtrMpUUaa7OUFmmszVpapLE2
W2mRxtrspUUaa3OUFmmszVlapLE2V2mRxtrcpUUaa/OUFmmszVtapLE2X2mR
xtr8pUUaawuUFmmsLVhapCfvtlB9t6eoIWvYwlq/Fykt0lhbtLRIY22x0iKN
tcVLizTWligtTjNsbcnS4rTD1pYqLY4YtvbT0uJ0w9aWLi2OHLa2TGmRxtqy
pUUaaz8rLdJYW660SGNt+dIijbUVSos01n5eWqSxtmJpkcbaSqVFGmsrlxZp
rP2itEhjbZXSIo21VUuLNNZ+WVqksbZaaZHG2uqlRRpra5QWaaytWVqksbZW
aZHG2tqlRRprvyot0gt3W2egf1JD1rA15UCvX1qksbZBaZHG2oalRRprG5UW
aaxtXFqksbZJaZHG2qalRRprm5UWaaxtXlqksbZFaZHG2palRRprW5UWaaxt
XVqksbZNaZHG2ralRRpr25UWaaxtX1qksbZDaZHG2o6lRRprO5UWaaztXFqk
sbZLaZHG2q9LizTWdi0t0lj7TWmRxtpupUUaa7uXFmms7VFapLH229IijbXf
lRbpdbvtOdDr1ZA1bC0y0HuXFmms7VNapLG2b2mRxtp+pUUaa/uXFmms/aG0
SGPtgNIijbUDS4s01v5YWqSxdlBpkcbawaVFGmuHlBZprB1aWqSxdlhpkcba
4aVFGmtHlBZprB1ZWqSxdlRpkcba0aVFGmvHlBZprB1bWqSxdlxpkcba8aVF
GmsnlBZprJ1YWqSxdlJpkcbayaVFGmunlBZprJ1aWqSxdlppkf59t9MHeq8a
soat9Qf6zNIijbWzSos01s4uLdJY+3NpkcbaX0qLNNbOKS3SWDu3tEhj7a+l
RRpr55UWaaydX1qksXZBaZHG2oWlRRprF5UWaaxdXFqksXZJaZHG2qWlRRpr
l5UWaaxdXlqksXZFaZHG2pWlRRprfyst0li7qrRIY+3q0iKNtWtKizTWri0t
0li7rrRIY+360iKNtRtKizTWbiwt0li7qbRIn9Ht5oH+Uw1Zw9beAz2qtEhj
7bbSIo2120uLNNbuKC3SWLuztEhj7a7SIo21u0uLNNbuKS3SWLu3tEhj7b7S
Io21+0uLNNYeKC3SWHuwtEhj7aHSIo21h0uLNNYeKS3SWHu0tEhj7bHSIo21
x0uLNNaeKC3SWHuytEhj7anSIo21p0uLNNaeKS3SWHu2tEhj7bnSIo2150uL
NNZeKC3SWHuxtEhj7aXSIn1Lt5cH+tYasoatMwf6tdIijbXXS4s01t4oLdJY
e7O0SGPtrdIijbW3S4s01v5eWqSx9k5pkcbau6VFGmvvlRZprP2jtEhj7f3S
Io21D0qLNNY+LC3SWPuotEhj7ePSIo21T0qLNNY+LS3SWPustEhj7Z+lRRpr
/yot0lj7vLRIY+2L0iKNtX+XFmms/ae0SGPtv6VFGmv/Ky3SWPuytEhj7avS
Io21r0uL9CvdvhnoV2vIGrZGDfRtvRtnt/dujN3Ru/F1Z+/G1l29G1d3925M
3dO78XRv78bSfb0bR/f3bgw90Lvx82Dvxs5DvRs3D/duzDzSu/HyaO/GymO9
GyeP926MPNG78fFk78bGU70bF0/3bkw807vx8GzvxsJzvRsHz/fuL0sfXw6/
/4u9++vSxdfD7/5y7/524P4/J724eg==
       "]}, {
      1., Complex[0., 0.29097111587198393`], -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., Complex[0., 0.29097111587198393`], 
       1., 1., Complex[0., 0.29097111587198393`], -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 
       3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., -1.,
        3.8086404445629265`, -1., -1., -1., 3.8086404445629265`, -1., -1., 
       Complex[0., 0.29097111587198393`], 1.}}], $CellContext`testCase$$ = 
    4, $CellContext`u$$ = CompressedData["
1:eJyFWnk0llv71oiQEnIylylTxjezbR4yKyRN0shJI6nPcCo0IFOTlMhc8kpH
5nc3UalUNB6S0mBqVkL5nfU91+OP1vrWr7Va1l577/u+rvd9n73v+7oexcBQ
r9Xj+fj4FPHfNlGvOTi53ZL522952zR6zanTbyzXFp3Pfxn5xHLKgVMuxhHF
tX8yY95dZp5nz6zn8f3338exMfbzArGeP0BcXyU/xSwI8e4gPtZbYv/YmJ1n
17P72Xi3/5/8LD4WL4uf5cPyY/my/OMfZt19Ym5H0uqDPezzXUlQ+K3zxaJO
ZHbe3s4qJ2tSN5wiJBprRDh3+r4pJ2sTUaL5Tv+BIvk4YcSoP1ScTFd79CPm
uRAxki39mNMsTGS3hLT+mCxOBDM1ehLfy5Bs1cMBKrlzSG3jrE+ppWok5Zrf
Mu92TTJvorK3X+Y8Eu5bb5DkqDM2TsU8D+vzsH864ikhvhXyCSH/G+ARBD4t
4K0EfjnwWQF+SeC7F/wrytvLNPUcSHb1SH/YAg+S2+jzsX25K9FYdT3sgJk9
EV3dLq7XZE5u9cc/vpSnS9bzprkpi84m8tnaZ9JcppFe9bo/Sc8EIi5u6Les
TYTMVAoyVg+VIf2BTdNyilXJpAO79g9L6ZJ2a2ENR0UOCV1UPfK3lQl5zKsY
cPlqRh6vrKPaXebkCcbs/AusF8T+b4injPjyyPcS+UWBJwD4rgDvROCfAz6Z
4HcSfEvBn/9Rb2rXAwtyKSJa7M5VB3ItYFHbAy97ohNZ9GsFJaR5icsDi3QD
csVVpUgsazaRbf22WydzwHL9Uf7gqVmTaJVCbmLuAn4a3rpAwdvxtmXEy12T
z2bMJD05LrIOHuqkeuIrG4XPBkStSbpiopUZSbmXv+/OTCsyaXOMyoZJNkSq
ko9vG9eG8GOcjnltrL+M/cOIdwjxfR8y+W4gfyrw5LYw+LjAexX4VcGnBvxK
wHfwIcP/tt0UNeUeabLfJpR/xjwD4uv1ltsYo0+EV9XzL2lRJcNJKesOeo4n
k7gu8TU9UrSjvHFvfrEq7bMT3OS7SoN6+Fx54h2iSms2vBnf6fwHnSTWpy8T
MWSZbB/uKbdIhdiI/7JuEzYk0l39Cv5zLYiB7DOT6jpr8sS/JT9U2o40StyN
buizI88wNsK8Mta7Y38h4u1BfC7yLUT+78DzHvjUgDcH+D8FMnycwW8H+GaC
/6ah01KZInr0nJbkrW08RVosL3DmXKgiPTBQFZLQrE41nx/6T0GyPq3M0bDf
XGlEV88qtAm0N6VLSzScdoSY0PLd5/OWCHCo0dO6ignjtehKUf/pwwfF6JJO
6s43dRbJKtm8eeS6LpHb9LP96ZApyarL6o0UtiajOZXX9AptydR1H+J8kuzI
+DPMOBfzWlhfiv3HEI8gvj7yVSB/IPCEAt8V4OUAfz743AK/R+AbA/6+vfMy
8q7bUL1rElvuqVtRQ8MlaVdlrOjRintaTmus6fT707Rdv9pQv1NaEoPdtnRh
efVtSa4tVe9WPJ32w5p2cz56tkda0rvZXpu3ruXQYgdJdbWXKvTGr8H+qtXP
LBWE9sT+UlIjV6K+858I55DgXXO/N+dZkL6TU1RjP/z7+7+b9dXxoTX5gPFW
zDdjvSX2t4378d94WYjP5vuE/FrA4wt8/sA7A/gzwccc/EzBdzn47w9863zS
ZAFNpsmKCl7OtKZSVePpVmd6eueaQq8hZ9pVPu3aDecFtCN1IN3ilTONWP/X
sbgNTnSgMDf8XaU9VThmHLntiTU9cifdlfvz3+9hxmVZicm6VE9OhuMXL0k7
7QvyRWUkiLlYwIShAi3y+pxvZxnhkASz6CH1gX/Pw9Ccl8kpZiQN437Me2G9
hAOzXwDx6hH/KPIpIf8P4IkEvhfA+wb4s8HnKvgdB99U8D944ef3Wyfc6D4v
9zUnutwo98v5E96z3Wnq7om3vYXd6ajx426HQDfa9YM3++hHF/qk9JSbVoYz
5fF9q7q+zIEGHlE1PbTEhhZ3FO97mWhOOUrvBEIf6NNpuq/fPXdXopLvLaYZ
GH7hNR+bfpHe/oMETT4RWXtEjRzOlT1Z0j2PfD6ukSNooEtOYxyG+Z9Yb9vP
7B/VYeIZIn4J8q1B/gbg6QC+buCdYMLgPw4+1eCXBr6HwT9h0408ySZXWpQ2
e2hXthtdZHa0ZlWtG22Tmpf0VtSNzkjP2515yoXe0y1rLdzmTDee3zNJt8iB
ml+SoZzltnSXkFPvvauE7pbcWystbkJtxvl0JDTp0eB7g2+EpNVoxMrbI7VF
UrQg7ce0X+O+8TaaJe1t1BlHdoZNzxAymE7uVQyWJ0uJkwMYl2L+fSqz3hX7
lyKeHeLHI99fyG8PPOHA9xR4ZYH/HfisBr8q8D0O/o4D419E2DjRRKmtbttG
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
fhYPi4/Fy+Jn+bD8WL4s//8DpcQcbQ==
    "], $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Sommerfeld", $CellContext`x0$$ = 
    0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Item[
            Grid[{{
               Grid[{{
                  Button[
                   Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}, {
                  Button[
                   Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
               Grid[{{
                  Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                  Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                  Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                  Text[
                   Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}, Alignment -> Center, 
             Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
           Item[
            Grid[{{
               PopupMenu[
                
                Dynamic[$CellContext`plotToShow$$, {$CellContext`plotToShow$$ = \
#; $CellContext`event$$ = "plot_changed", 
                  AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                "solution and contour" -> Style["solution + contour", 11], 
                 "solution and density" -> Style["solution + density", 11], 
                 "solution data" -> Style["solution data", 11], 
                 "system matrix information" -> Style["system matrix", 11]}, 
                ImageSize -> All, ContinuousAction -> False], 
               Grid[{{
                  RadioButtonBar[
                   
                   Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                  Style["plot", 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"face", "grids"}], 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
             Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
               Thickness[0.005], 
               GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
         Spacings -> {0.2, 0}, Alignment -> {Center, Top}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                  SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                   Alignment -> Center], SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}], 
             Style["source", 11] -> Item[
               Grid[{{
                  Item[
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                  SpanFromLeft}, {
                  Spacer[2], 
                  Text[
                   Style["a", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["b", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["c", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Item[
                   Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                    Alignment -> Center], SpanFromLeft}, {
                  Dynamic[
                   Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                Spacings -> {0.3, 0.2}, Alignment -> Left, 
                Frame -> {None, All}, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
         Center]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`testCase$$], 1}, 0}, {{
       Hold[$CellContext`angle$$], 0.}, 0}, {{
       Hold[$CellContext`systemMatrix$$], {}}, 0}, {{
       Hold[$CellContext`rightHandVector$$], {}}, 0}, {{
       Hold[$CellContext`zAxisScale$$], False}, 0}, {{
       Hold[$CellContext`centerGrid$$], True}, 0}, {{
       Hold[$CellContext`event$$], "run_button"}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`addFaceGrids$$], False}, 0}, {{
       Hold[$CellContext`plotPerformanceGoal$$], "Quality"}, 0}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 4]}, 0}, {{
       Hold[$CellContext`lenX$$], 1}, 0}, {{
       Hold[$CellContext`lenY$$], 1}, 0}, {{
       Hold[$CellContext`kValue$$], 5.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`c$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`y0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`stdy$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 1}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution and contour"}, 0}, {{
       Hold[$CellContext`northBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`northbc$$], 1& }, 0}, {{
       Hold[$CellContext`northBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`southBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`southbc$$], 1& }, 0}, {{
       Hold[$CellContext`southBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`forceGrid$$], {{-1, -1, -1, -1, -1}, {-1, -1, -1, \
-1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}}, 
      0}, {{
       Hold[$CellContext`grid$$], CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

       "]}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}}, Typeset`size$$ = {
    270., {201., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
        False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
        True, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = "Dirichlet", $CellContext`event$$ = 
        "run_button", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceGrid$$ = {{-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, \
-1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}, \
$CellContext`forceTermSelection$$ = 1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

         "], $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        Rational[1, 4], $CellContext`kValue$$ = 5., $CellContext`lenX$$ = 
        1, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
        1& , $CellContext`northBCconstantValue$$ = 
        0, $CellContext`northBCtype$$ = 
        "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
        "Quality", $CellContext`plotToShow$$ = 
        "solution and contour", $CellContext`rightHandVector$$ = {}, \
$CellContext`southbc$$ = 1& , $CellContext`southBCconstantValue$$ = 
        0, $CellContext`southBCtype$$ = "Sommerfeld", $CellContext`stdx$$ = 
        0.3, $CellContext`stdy$$ = 
        0.3, $CellContext`systemMatrix$$ = {}, $CellContext`testCase$$ = 
        1, $CellContext`u$$ = {}, $CellContext`westbc$$ = 
        1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
        0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; {$CellContext`finalDisplayImage$$, \
$CellContext`u$$, $CellContext`forceGrid$$, $CellContext`grid$$, \
$CellContext`systemMatrix$$, $CellContext`rightHandVector$$} = \
$CellContext`process[$CellContext`u$$, $CellContext`forceGrid$$, \
$CellContext`grid$$, $CellContext`systemMatrix$$, \
$CellContext`rightHandVector$$, $CellContext`finalDisplayImage$$, \
$CellContext`event$$, $CellContext`h$$, $CellContext`h$$, \
$CellContext`lenX$$, $CellContext`lenY$$, $CellContext`centerGrid$$, \
$CellContext`addFaceGrids$$, $CellContext`plotPerformanceGoal$$, \
$CellContext`kValue$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`x0$$, $CellContext`y0$$, $CellContext`stdx$$, \
$CellContext`stdy$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`northBCtype$$, \
$CellContext`northbc$$, $CellContext`northBCconstantValue$$, \
$CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, \
$CellContext`southBCtype$$, $CellContext`southbc$$, \
$CellContext`southBCconstantValue$$, $CellContext`zAxisScale$$, \
$CellContext`angle$$, 
          Unevaluated[$CellContext`gstatusMessage$$]]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray], ImageMargins -> 0]), "Specifications" :> {
        Item[
         Grid[{{
            Item[
             Grid[{{
                Grid[{{
                   Button[
                    Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}, {
                   Button[
                    Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
                Grid[{{
                   Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                   Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                   Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                   Text[
                    Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                 Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                 Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]]}}, Alignment -> Center, 
              Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
            Item[
             Grid[{{
                PopupMenu[
                 
                 Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; $CellContext`event$$ = "plot_changed", 
                   AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                 "solution and contour" -> Style["solution + contour", 11], 
                  "solution and density" -> Style["solution + density", 11], 
                  "solution data" -> Style["solution data", 11], 
                  "system matrix information" -> Style["system matrix", 11]}, 
                 ImageSize -> All, ContinuousAction -> False], 
                Grid[{{
                   RadioButtonBar[
                    
                    Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                   Style["plot", 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"face", "grids"}], 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
              Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
          Spacings -> {0.2, 0}, Alignment -> {Center, Top}], ControlPlacement -> 
         Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                   SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                    Alignment -> Center], SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(1.& 
                    ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                 Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                 FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}], 
              Style["source", 11] -> Item[
                Grid[{{
                   Item[
                    PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                   SpanFromLeft}, {
                   Spacer[2], 
                   Text[
                    Style["a", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["b", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["c", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Item[
                    Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                     Alignment -> Center], SpanFromLeft}, {
                   Dynamic[
                    Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                 Spacings -> {0.3, 0.2}, Alignment -> Left, 
                 Frame -> {None, All}, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
          Center], ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`testCase$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`angle$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`systemMatrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`rightHandVector$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`zAxisScale$$, False}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, True}, 0, ControlType -> 
         None}, {{$CellContext`event$$, "run_button"}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`addFaceGrids$$, False}, 0, ControlType -> 
         None}, {{$CellContext`plotPerformanceGoal$$, "Quality"}, 0, 
         ControlType -> None}, {{$CellContext`h$$, 
          Rational[1, 4]}, 0, ControlType -> None}, {{$CellContext`lenX$$, 1},
          0, ControlType -> None}, {{$CellContext`lenY$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 5.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`c$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`y0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`stdy$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution and contour"}, 0, 
         ControlType -> None}, {{$CellContext`northBCtype$$, "Sommerfeld"}, 0,
          ControlType -> None}, {{$CellContext`northbc$$, 1& }, 0, 
         ControlType -> None}, {{$CellContext`northBCconstantValue$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, 
         ControlType -> None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`southBCtype$$, "Sommerfeld"}, 0, ControlType -> 
         None}, {{$CellContext`southbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`southBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`forceGrid$$, {{-1, -1, -1, -1, -1}, {-1, -1, \
-1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, \
-1}}}, 0, ControlType -> None}, {{$CellContext`grid$$, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

          "]}, 0, ControlType -> None}, {{$CellContext`u$$, {}}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        ContinuousAction -> False, SynchronousInitialization -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{611., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`$forceGrid, 
          Blank[]], 
         Pattern[$CellContext`$grid, 
          Blank[]], 
         Pattern[$CellContext`$AA, 
          Blank[]], 
         Pattern[$CellContext`$rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`$finalDisplayImage, 
          Blank[]], 
         Pattern[$CellContext`event, 
          Blank[]], 
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`AA = \
$CellContext`$AA, $CellContext`forceGrid = $CellContext`$forceGrid, \
$CellContext`grid = $CellContext`$grid, $CellContext`rightHandVector = \
$CellContext`$rightHandVector, $CellContext`finalDisplayImage = \
$CellContext`$finalDisplayImage}, If[
           
           StringMatchQ[$CellContext`event, {
            "reset", 
             "run_button"}], {$CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`rightHandVector} = \
$CellContext`initializeSystem[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid, \
$CellContext`forceTermSelection, $CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`x0, $CellContext`stdx, $CellContext`y0, \
$CellContext`stdy, $CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue, $CellContext`kValue, \
$CellContext`angle]]; If[
           Or[$CellContext`event == "run_button", 
            And[
             
             StringMatchQ[$CellContext`event, {
              "reset", "reset", "k_changed"}], 
             
             StringMatchQ[$CellContext`plotToShow, {
              "system matrix information", 
               "solution data"}]]], $CellContext`u = \
$CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype]]; \
$CellContext`finalDisplayImage = $CellContext`makeFinalPlot[$CellContext`u, \
$CellContext`AA, $CellContext`Lx, $CellContext`Ly, $CellContext`grid, \
$CellContext`plotToShow, $CellContext`plotPerformanceGoal, \
$CellContext`addFaceGrids, $CellContext`zAxisScale]; \
$CellContext`gstatusMessage = 
          "ready.."; {$CellContext`finalDisplayImage, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`initializeSystem[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`nCol, $CellContext`nRow, $CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}, {$CellContext`nRow, $CellContext`nCol} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`u = 
           Table[0., {$CellContext`$nRow}, {$CellContext`$nCol}]]; \
$CellContext`grid = $CellContext`makeGridCommon[$CellContext`hx, \
$CellContext`hy, $CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid]; \
$CellContext`forceGrid = Which[$CellContext`forceTermSelection == 1, 
            
            With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, 
             
             Table[$CellContext`a, {$CellContext`$nRow}, \
{$CellContext`$nCol}]], $CellContext`forceTermSelection == 2, 
            Map[$CellContext`evaluateForceCommon[
              Part[#, 1], 
              
              Part[#, 2], $CellContext`a, $CellContext`b, $CellContext`c]& , \
$CellContext`grid, {2}], $CellContext`forceTermSelection == 3, 
            
            Map[$CellContext`a 
             Exp[(Part[#, 1] - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + (Part[#, 2] - $CellContext`y0)^2/(
                2 $CellContext`stdy^2)]& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 4, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] + 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 5, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}]]; $CellContext`forceGrid = 
          Re[$CellContext`forceGrid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue]; {$CellContext`AA, \
$CellContext`rightHandVector} = \
$CellContext`makeSystemMatrixAndRightHandSide[$CellContext`u, \
$CellContext`hx, $CellContext`kValue, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype, \
$CellContext`forceGrid, $CellContext`angle]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`getSolutionDomainDimensions[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]]] := {$CellContext`Ly/$CellContext`hy + 
         1, $CellContext`Lx/$CellContext`hx + 1}, $CellContext`makeGridCommon[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]]] := 
       Module[{$CellContext`i, $CellContext`j, $CellContext`nx, \
$CellContext`ny, $CellContext`grid}, {$CellContext`ny, $CellContext`nx} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$icfrom = 
            Floor[$CellContext`ny/2], $CellContext`$icto = -
             Floor[$CellContext`ny/2], $CellContext`$jcfrom = -
             Floor[$CellContext`nx/2], $CellContext`$jcto = 
            Floor[$CellContext`nx/2], $CellContext`$ifrom = $CellContext`ny - 
             1, $CellContext`$jto = $CellContext`nx - 1}, $CellContext`grid = 
           If[$CellContext`centerGrid, 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$icfrom, $CellContext`$icto, \
-1}, {$CellContext`j, $CellContext`$jcfrom, $CellContext`$jcto}], 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$ifrom, 
               0, -1}, {$CellContext`j, 0, $CellContext`$jto}]]]; 
         N[$CellContext`grid]], $CellContext`evaluateForceCommon = ReplaceAll[
         Unevaluated[#3 #^#6 + #4 #2^#7], HoldPattern[0.^0.] :> 
         0.]& , $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`i, $CellContext`j}, {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; 
         If[$CellContext`northBCtype == "Dirichlet", Part[$CellContext`u, 1, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`northBCconstantValue 
            Table[
              $CellContext`northbc[
               
               Part[$CellContext`grid, 1, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 1}]]; 
         If[$CellContext`westBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[2, $CellContext`nRow - 1], 
             1] = $CellContext`westBCconstantValue Table[
              $CellContext`westbc[
               Part[$CellContext`grid, $CellContext`i, 1, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`eastBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[
             2, $CellContext`nRow - 
              1], $CellContext`nCol] = $CellContext`eastBCconstantValue Table[
              $CellContext`eastbc[
               
               Part[$CellContext`grid, $CellContext`i, $CellContext`nCol, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           Part[$CellContext`u, $CellContext`nRow, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`southBCconstantValue 
            Table[
              $CellContext`southbc[
               
               Part[$CellContext`grid, $CellContext`nRow, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 
               1}]]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 1, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 
            1, $CellContext`nCol, $CellContext`nCol, $CellContext`nRow]; \
$CellContext`u = $CellContext`setCornerNodeCommon[$CellContext`u, \
$CellContext`nRow, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`nCol, $CellContext`nRow]], \
$CellContext`setCornerNodeCommon[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`nx, 
          Blank[]], 
         Pattern[$CellContext`ny, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Part[$CellContext`u, 1, 1] = Mean[{
              Part[$CellContext`u, 2, 1], 
              Part[$CellContext`u, 1, 2]}], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nx], 
           Part[$CellContext`u, 1, $CellContext`nx] = Mean[{
              Part[$CellContext`u, 1, $CellContext`nx - 1], 
              Part[$CellContext`u, 2, $CellContext`nx]}], 
           And[$CellContext`i == $CellContext`ny, $CellContext`j == 1], 
           Part[$CellContext`u, $CellContext`ny, 1] = Mean[{
              Part[$CellContext`u, $CellContext`ny - 1, 1], 
              Part[$CellContext`u, $CellContext`ny, 2]}], 
           
           And[$CellContext`i == $CellContext`ny, $CellContext`j == \
$CellContext`nx], Part[$CellContext`u, $CellContext`ny, $CellContext`nx] = 
           Mean[{
              Part[$CellContext`u, $CellContext`ny, $CellContext`nx - 1], 
              
              Part[$CellContext`u, $CellContext`ny - 
               1, $CellContext`nx]}]]; $CellContext`u], \
$CellContext`makeSystemMatrixAndRightHandSide[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`AA, $CellContext`k1, $CellContext`k2, \
$CellContext`i, $CellContext`j, $CellContext`n = 
          0, $CellContext`eqs, $CellContext`vars, $CellContext`uu, \
$CellContext`U, $CellContext`An, $CellContext`b, $CellContext`keepList, \
$CellContext`nRow, $CellContext`nCol, $CellContext`sin1, $CellContext`sin2, \
$CellContext`omega, $CellContext`sum, $CellContext`prod}, $CellContext`sum = 
          2. $CellContext`h^2; $CellContext`prod = 
          1. $CellContext`h^4; $CellContext`omega = 
          4. BesselJ[0, Sqrt[$CellContext`kValue] $CellContext`h] + (
             Sqrt[$CellContext`kValue] $CellContext`h)^2; $CellContext`k1 = 
          Sqrt[$CellContext`kValue] Cos[$CellContext`angle]; $CellContext`k2 = 
          Sqrt[$CellContext`kValue] 
           Cos[$CellContext`angle]; $CellContext`sin1 = 
          Simplify[(2. I) 
            Sin[$CellContext`k1 $CellContext`h]]; $CellContext`sin2 = 
          Simplify[(2. I) 
            Sin[$CellContext`k2 $CellContext`h]]; {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; $CellContext`U = 
          Array[$CellContext`uu[#, #2]& , {$CellContext`nRow, \
$CellContext`nCol}]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`eqs = 
            Table[0., {$CellContext`$nRow $CellContext`$nCol}]; \
$CellContext`vars = $CellContext`eqs]; 
         For[$CellContext`i = 1, $CellContext`i <= $CellContext`nRow, 
           Increment[$CellContext`i], 
           For[$CellContext`j = 1, $CellContext`j <= $CellContext`nCol, 
            Increment[$CellContext`j], Increment[$CellContext`n]; If[
              Or[
               And[$CellContext`i == 1, $CellContext`j == 1], 
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
               And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
               
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol]], {$CellContext`eqs, $CellContext`vars} = \
$CellContext`processCornersCommon[$CellContext`u, $CellContext`eqs, \
$CellContext`n, $CellContext`U, $CellContext`i, $CellContext`j, \
$CellContext`vars, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`southBCtype, $CellContext`eastBCtype, $CellContext`nRow, \
$CellContext`nCol], 
              If[
               
               Or[$CellContext`i == 
                1, $CellContext`i == $CellContext`nRow, $CellContext`j == 
                1, $CellContext`j == $CellContext`nCol], 
               Which[$CellContext`i == 1, 
                
                If[$CellContext`northBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i + 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`i == $CellContext`nRow, 
                
                If[$CellContext`southBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i - 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == 1, 
                
                If[$CellContext`westBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j + 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j + 2] == 0\
; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == $CellContext`nCol, 
                
                If[$CellContext`eastBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j - 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]]], 
               Part[$CellContext`vars, $CellContext`n] = 
                Part[$CellContext`U, $CellContext`i, $CellContext`j]; 
               Part[$CellContext`eqs, $CellContext`n] = -
                   Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i - 
                   1, $CellContext`j] + $CellContext`omega 
                   Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j + 
                   1] - ($CellContext`kValue $CellContext`h)^2 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == \
$CellContext`h^2 
                  Part[$CellContext`forceGrid, $CellContext`i, \
$CellContext`j]]]]]; $CellContext`vars = 
          Flatten[$CellContext`U]; $CellContext`AA = 
          CoefficientArrays[$CellContext`eqs, $CellContext`vars]; \
$CellContext`keepList = \
$CellContext`obtainListOfRowsToKeep[$CellContext`nRow, $CellContext`nCol, \
$CellContext`northBCtype, $CellContext`southBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype]; $CellContext`An = Part[
            
            Part[$CellContext`AA, 
             2], $CellContext`keepList, $CellContext`keepList]; \
$CellContext`b = -Part[
             Part[$CellContext`AA, 
              1], $CellContext`keepList]; {$CellContext`An, $CellContext`b}], \
$CellContext`processCornersCommon[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`$eqs, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`U, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`$vars, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]]] := 
       Module[{$CellContext`vars = $CellContext`$vars, $CellContext`eqs = \
$CellContext`$eqs}, 
         Part[$CellContext`vars, $CellContext`n] = 
          Part[$CellContext`U, $CellContext`i, $CellContext`j]; Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == Mean[{
                 Part[$CellContext`u, 1, 2], 
                 Part[$CellContext`u, 2, 1]}], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, 1, 2], 
                Part[$CellContext`U, 2, 1]}] == 0], 
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`u, $CellContext`i, 2], 
                 Part[$CellContext`u, $CellContext`i - 1, 1]}] == 0, 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, $CellContext`nRow, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, 2], 
                Part[$CellContext`U, $CellContext`i - 1, 1]}] == 0.], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0., 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, $CellContext`nCol]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0.; Null], 
           
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
              0., Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
              Part[$CellContext`u, $CellContext`nRow, $CellContext`nCol]], 
            True, Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
             0.]]; {$CellContext`eqs, $CellContext`vars}], \
$CellContext`obtainListOfRowsToKeep[
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := 
       Module[{$CellContext`rowsToRemove = {}}, 
         If[$CellContext`northBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[1, $CellContext`nCol]]; Null]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[($CellContext`nRow - 1) $CellContext`nCol + 
              1, $CellContext`nRow $CellContext`nCol]]; Null]; 
         If[$CellContext`westBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[
             1, $CellContext`nRow $CellContext`nCol, $CellContext`nCol]]; 
           Null]; If[$CellContext`eastBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[$CellContext`nCol, $CellContext`nRow $CellContext`nCol, \
$CellContext`nCol]]; Null]; Complement[
           Range[$CellContext`nRow $CellContext`nCol], 
           Flatten[$CellContext`rowsToRemove]]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`x, $CellContext`loc, $CellContext`mask}, \
{$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`x = 
          LinearSolve[$CellContext`AA, $CellContext`rightHandVector]; \
$CellContext`mask = $CellContext`setUnknownsMask[{$CellContext`nRow, \
$CellContext`nCol}, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype, $CellContext`southBCtype]; $CellContext`loc = 
          Position[$CellContext`mask, 1]; 
         MapThread[($CellContext`u = 
           ReplacePart[$CellContext`u, # -> #2])& , {$CellContext`loc, \
$CellContext`x}]; Re[$CellContext`u]], $CellContext`setUnknownsMask[{
          Pattern[$CellContext`nRow, 
           Blank[]], 
          Pattern[$CellContext`nCol, 
           Blank[]]}, 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`mask}, $CellContext`mask = 
          Table[0, {$CellContext`nRow}, {$CellContext`nCol}]; Which[
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`northBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -1]] = 1]; $CellContext`mask], $CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]]] := 
       Module[{$CellContext`tmp, $CellContext`finalDisplayImage, \
$CellContext`nRow, $CellContext`nCol, $CellContext`plot, $CellContext`n, \
$CellContext`dim, $CellContext`cond}, {$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`tmp = 
          MapThread[
           Append[#, #2]& , {$CellContext`grid, $CellContext`u}, 
            2]; $CellContext`tmp = Chop[
            Flatten[$CellContext`tmp, 1]]; If[
           
           Or[$CellContext`plotToShow == 
            "solution and density", $CellContext`plotToShow == 
            "solution and contour"], $CellContext`plot = Item[
             
             ListPlot3D[$CellContext`tmp, 
              PerformanceGoal -> $CellContext`plotPerformanceGoal, 
              ImagePadding -> {{20, 15}, {15, 1}}, PlotRange -> All, 
              If[$CellContext`zAxisScale == True, 
               BoxRatios -> {$CellContext`Lx, $CellContext`Ly, 
                 Min[{$CellContext`Lx, $CellContext`Ly}]}, {}], AxesLabel -> {
                Text[
                 Style["x", Italic, 12]], 
                Text[
                 Style["y", Italic, 12]], None}, TicksStyle -> 9, 
              SphericalRegion -> True, 
              
              If[$CellContext`addFaceGrids, FaceGrids -> All, FaceGrids -> 
               None], ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}]]]; 
         Which[$CellContext`plotToShow == 
           "solution and density", $CellContext`finalDisplayImage = 
           Grid[{{$CellContext`plot}, {
               Item[
                
                ListDensityPlot[$CellContext`tmp, PlotRange -> All, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution and contour", $CellContext`finalDisplayImage = Grid[{{
               Item[$CellContext`plot]}, {
               Item[
                
                ListContourPlot[$CellContext`tmp, Contours -> 10, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             40, $CellContext`ContentSizeW], $CellContext`plotToShow == 
           "system matrix information", $CellContext`cond = Part[
              LUDecomposition[$CellContext`AA], 3]; $CellContext`dim = 
            Dimensions[$CellContext`AA]; $CellContext`n = Min[30, 
              First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
            Grid[{{
                Style[
                 Text[
                  Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                Style[
                 Text[
                  Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                Style[
                 Text["eigenvalues"], 12]}, {
                $CellContext`makeScrolledPane[
                 Transpose[
                  Partition[
                   Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`n], 1]], 
                 45, $CellContext`ContentSizeW - 20]}, {
                Style[
                 Text["A matrix"], 12]}, {
                $CellContext`makeScrolledPane[
                 Normal[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`n], 
                   Span[1, $CellContext`n]]], $CellContext`ContentSizeH - 
                 140, $CellContext`ContentSizeW]}}]]; \
$CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       260, $CellContext`ContentSizeH = 405, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> True], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           2, $CellContext`forceTermUsed = $CellContext`a \
$CellContext`x^$CellContext`n0 + $CellContext`b \
$CellContext`y^$CellContext`n1, $CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 2, $CellContext`forceTermUsed = 
           
           HoldForm[$CellContext`a $CellContext`x^$CellContext`n0 + \
$CellContext`b $CellContext`y^$CellContext`n1], \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.53984020258309*^9, 3.539840288099449*^9, {3.5398406788210645`*^9, 
   3.539840690936103*^9}, {3.539840772642478*^9, 3.539840774568223*^9}, {
   3.539840807063349*^9, 3.53984087983959*^9}, {3.5398410649120913`*^9, 
   3.5398410672638903`*^9}, {3.539841106028813*^9, 3.539841146021891*^9}, {
   3.5401003093818417`*^9, 3.5401003389490967`*^9}},
 CellID->471470465],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
    False, $CellContext`angle$$ = 5.403539364174445, $CellContext`b$$ = 
    0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Sommerfeld", $CellContext`event$$ = 
    "run_button", $CellContext`finalDisplayImage$$ = Grid[{{
       Item[
        Item[
         Graphics3D[
          GraphicsComplex[CompressedData["
1:eJx1m3t0TNcexwfxWrdCW+1t692WxONej0q9opsiRVqUFFdSmpdEVVUvbT0q
y/uRoFmR9nonvYmFSDKoeFz1m8QjQ5AREw45SSZjTMcYY6IkQnC7ltm/OXuv
X+aPZp1PtzP7/Pb3d/b8HrtL1NyJsY11Ol3fv/7TRMc/Hnjx18JGbuhXPPun
cvbi2i3xu17uQn5hSMLMnWl2L3cij9ubs9v6o+LlDuQ64WNHPufFeO+1Dfml
F/f3XluRh7yYD7+W7s+fR21gvCLP33ttRh4lzMfUwPyNyGOE5zUgvyjYRy/P
R7ofzp+PZ/R4A3Lx/kbk4nxMyMXvMyMXn1dBLtpHlecj2UW2v7WB8Tbk4vra
kYt6cDQwfydyUW8uef5cz8hFPXskXi49h8pCg56cHaRwfbuRZ//W/uqR5ae9
1y7klepgv8kFXK9O5KWvHWrU4i7XkwP5cvWVu6nsf97v9dn7eFHUjD2dzkl+
obLIqPoTP5kyJb9Q2VepsZkPBu3mz+P73hHdl3zT+rrkFyrLqRyT4l54RfIL
lU15OO3JssWHJb9QWdfsvkeqdl2W/EJlhxcPWp176Jj32oj83hc9q3Pzuc4M
yPd3bpc8+kyJ5BcqC9s7/bdqyJDWWWXHWhq+2nh3n3cc9wuV1WVrxxt8XLi/
EblNmI8JeTdh/mbkPYTnVZCzWq19VORFgj0tyL8U7G9F3mqzdr1syMfGadfX
jnyyoAcH8poKrX6cyK2C3lw++wj6dCNvIejZg3ywoH8P2iMqSmesuMR15kY+
+Gbkm8nxhZJfKExfd+29AZ/clvxCYS3nt+7cZ8UpyS8Utq1XedrH1suSXygs
e2mKf+e21yS/UNijsoIxd6/+4h1vRR67oG3IqpTrkl8o7Mwzu2PIJtQf8oo9
JU1Onr/gHe97L9bM6z/rpexKLzcjb1TfrbogIU3yC4UNGzpv08bl+ZJfKGzq
LcunQW22Sn6hsIAmC7tUzzrDdY48NyzdnZlywXvNPwo72LluSaMM/u+5Xyhs
lDDegLxIuL8ROavQzseE/G6wdv5m5J/UaZ9XQV4g2EdFfl+wpwX5nHqt/a3I
44T1siFPNWvX1458naAHB3K7oB8n8oeC3lzIbwn6dCPfadXq2YNc1L8H7bT3
w21hOQdKJb8ws1U/tC2ubMnt4EL+dat995d8XCz5hZnlHxjlGje61DvegfzL
Z5+13x9zQ/ILM/OsWh/0ZWWF5BdmFpc+4ESOPYvbGfnipGbF3f0uSX5hZsr+
DmHL2uB7H/m1+o71oYGrJL8ws8BBLZKyml2U/MLMqnOCBpQpJyW/MDP31jjj
+fszJb8ws8jCMDZs+jquW+R+kb3Tnp7getYj73dLNy5vS573e/nHzGpheOiQ
eVw/3C/M7KRNO96APFm4vxF56TntfEzIO23Qzt+M/Gi29nkV5G8I9lF993mo
tacFuUuwvxX5FmG9bMj3pGnX1468XNCDA/kEQT9Onx0EvbmQjxb06UbeZaFW
zx7kmwX9e9B+iw2DqwrW3pT8wsQSRiSoOd/9KvmFiSXXB3dcG3BD8gsTm7/n
xC/DCzP4cyEPUia13V64TvILE3OVvfL3erVM8gsTe8exr+75QK4DK/JRUztW
Db15VPILE3u5abtdz7bz+6jIoyvWJVmH8PcJxg0sq+/ORvPDL3GdIO/1OOaP
I2tKJL/46z6x5e2Nq7jOjL75Z215O3VPIdct8jXjU3tGbD8k+YWJfaRbMMUY
wn8P8I+Jre/cNDz6P1yH3C9MrIcw3oA8bJz2/kbk5fu18zHh34HC/H2/s6YL
z+uLS+YK9lGRfyvY04J8tWB/K/IgYb1syN3C+tqRN1O1enAgb27S6seJ/Eam
Vm8u5IMEfbqRbxmu1bMH+VJB/x60q6n7V/qe3QskvzCyJyk3LYG7+HO5kI+/
2uKDI/v4/J3IleVLDwWO5fuUA/n5ZXeg40h8PyC/l12p5D3eLfmFkTWv2rPk
cGmZ5BdG9mHlnJI3NnOdWJCnTa0aPS2YP6+K3HKgYGNm+yovV5C/+jC0WeyT
XVwnyB/fepSlNJL3CyPr13ptr1798fc88rbnfzwT9RmfvwF5THWnjZ6p+LsI
eWJAn/Wprc56r/nHyDr0KHirn8Lnzf3CyGqF8QbkrYX7G5G7C7XzQT9mmf7a
+ZuRB7m1z6sg7/NEax8VeeBBrT0tyBOnaO1vRT5AWC8b8hHC+vryB8P1Wj04
kO9cqdWP0zdPQW8u33MJ+nQjv/yTVs8e5H17aPXvQXsXnZzWb5cf14Eb+Zhx
0xavidzMvxf5Gcf23/Wv8PeGE3lv5fmFbZbz3u9zILeMOJpTMvsAtwPyFeNn
tVuaKPuFgV0p8b/ol/Cb5BcG1u1B+PPXUzEPhfzioogZi3qf5+835D/U5Y34
9E/8fYy8cT74527gv8/NyLOT1c/XDpf9wsBm9crY8trCY5JfGFjQ2T2u5oPx
vsizQkqSvm97jr//kU+PcZyY+pzv+/zz1/dG/Dn7eGSR5BcG9oEw3oB//ync
34j8+GntfEzIXUHa+WOegA39Wfu8mFdjSae09lGR/yrY04K8z2Kt/a0+LqyX
DfmbV7Tra0f+vaAHB/Jjgn6cyNcJenMhjxX06Ua+ZKJWzx7kBwT9c7/Qswen
zx3q8irPM7iR9yocERqzjOcrXMidI4pbJTbmdnMi3xR6+Iu0tcWSX+jZ8ayf
Sydv5XkAO/KR/vH2gUauMxvyJyHhb82+USD5hZ5Nf/LetZKhmG9FrtQYgxP9
eVzpe+8GGAK31XU9JfmFnoUcXB2/4ECl5Bd6ZohT5/7enr9PTMgjJur8Awp4
3GdEDqUt/JJt6J/IRyd9Uzuz7RXJL/Rsb1To3E4Z/D3JP3rWovz1zLUDr+M4
/rdptHa8AXmj9dr7G5HPvqqdjwn5sDDt/M3IQ+O1z6sg3y7YR0VecVJrT4tv
PrVa+1uRjxbWy4b8grC+mM9m0EqrBwfycEE/TuTqWK3eXMj9Rmr16UZedlar
Z19eXBX0z/1Cp5tYuvCLxCvcf93Ip9xfWNLkAv+d6UL+3pLy/au/5nGfE/n2
S4nzk0PzJb/Q6UbXZPZpeofrz4484FHfDcfiuT1tyHOn7tz4dmNuXyvy6jFv
9l9Vyd8PFuQdUuNKS9Mx/+i7/5KB45tHcT0oyIN23R66pg3G58ivD7w8Y/0M
Hv+akHeaPb1gVAX+bkBeM8cWUp6E+xlyU8yW8GN3+O8HPfLisIt5ceOzJb/Q
6d6ft+PdnPs8z6/H///nFO14A/L+0dr7G333m6udjwn5AGH+ZuTi8yrIYwX7
qMibCPb01RXOC/a3It8xVrteNuTfCutrR+6s1erBgbypoB8n8pUXtXpzIU8R
9On2ja/W6tnjm4+gf9wvoOUZcr+Az+n9At4fSe4XkEbvF/ADvV/A5VbkfgFh
H5H7BXxH7xcwuZbcL+BrIPcL2EDvFxAZT+4XcJreLyCL3i+gG71fwM/0fgG1
KrlfwO0ocr+ANknkfgHppeR+AdETyf0CSuLI/QLG0/sFJAG5X8CmGnK/gCX0
fgGuUeR+AQ3sF5C4j9wvIDaU3C+gK71fwJBCcr+AkWeo/cIAEXR8AfM+JuML
yKLjCxhOxxcwkI4vIGkCGV/AdTq+gAbiCwim4wu4QMcX8MxAxhdwl44vYBId
X0A0HV/AODq+gDl0fAGD6fgCIuj4AhqIL+Cjs2R8AXk9yPgCcpPJ+ALeMpDx
Bcyi4wvoQMcXEEDHF5BcQsYXEEzHF2Ci4wvoSccXEELHF9BlAhlfwGUyvjDC
LjofBV3pfBRE0/koyKDzUXBnOZmPggG5ZD4KHlvIfBQkVJD5KFjxLzIfBc0P
kvkouPyAzEfBcTuZj4JmdD4K8ul8FPyDzkdBHJ2Pgi50PgqaB5L5KHibzkdB
YzofBc1bk/koCLCT+SiIp/NRoB4g81Ewhs5HQbKFzEfBYjofBbpcMh8Fz1eT
+SjouoLMR8HLdD4KdClkPgqOdafyUSZIpesX8Nlwsn4BDdQv4GkmWb+A+jKy
fgH5dP0C8un6BRRNIesXEE3XL+AyXb8AD12/gPZ0/QI20vULmLafrF/AgnFk
/QLW0vULeNaJrF/ApufzqfoFnKLrF5BO1y9gGl2/gBi6fgHX6foFFNL1Cwij
6xcwka5fQBJdv4A/ysj6BdRdIesX4KHrF8Do+gVcGEbWL+BHsn5hhkV0vRvq
6Ho3TKDr3dBAvRsC6Xo3vLaarHdDzS6y3g15dL0bLtH1brhK17shnq53wzt0
vRtWbyfr3XDyIlnvhnC63g3t6Xo3dDCQ9W54cousd8NKut4NO0xkvRtm7iDr
3WDNIevdEEzXu2GrXyeq3g0H6Xo31CaS9W44lUHWu0Gh693wK13vhod0vRsm
0fVuuP09We+Gc2S9W4EQuj8K7lnJ/igw0v1RMI3uj4J/0/1RYKf7oyD9Otkf
BQ30R8GNp2R/FIzZS/ZHQT3dHwW96f4o2E73R0FEFdkfBQl0fxSY6P4oWEb3
R0HRJLI/CvLo/iiYUUn2R8Feuj8KPnhM9kfBFbo/CuL3kv1REPyU7I+CdnR/
FKy8SvZHwQK6Pwq20f1RoFtA9kdBId0fBTV0fxTMIfujVAij+2mhnu6nhRq6
nxbS6X5aiKkg+2nhXbqfFv6g+2mhMoXsp4V7dD8tnKP7aSGghuynhSC6nxZq
F5H9tDA+kuynhZZdyH5aOE3300K7v5H9tHA2i+ynhSN0Py146H5aaLeI7KeF
QLqfFsroflp4TPfTwiG6nxYSUsl+WkiMJPtpwXme7KeF3SrZTwvvv07200IR
3U8L4YfIflroT/bTWkAfUVv8SxTPy7klfk/yCwuIffV4/gIy0v27z9zGr/H8
BYj9/Hj+As7G5wwaUlgl+YUFxHMBeP4CWuyeFXz0EZ5/kP7yD56/gJdejPe9
X7xcPKeA5y/g3Iv5cF0hl847IP/vi+eV/ALtI/kF2lPyC3xP8fGMHo/nL6T7
4/kLaT54/kKaP56/kJ4Xz19I9sH8k2RPPH8h2R/PX0jrhecvpPXF8xeSHvD8
haQfPH8h6c0l20fyC1nPHolXwv8BRRYDUQ==
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
AHuEb2vC9wt7Drwx99KLfXpSN0Gj39cT3n4DfdF1RNsLbk/6TeF0hDecOX3o
9WJmY3rP8y1649EhXvDmqVe8+UrxqjdPjvDmw85gr4F3ZsbzxAgf873ykSFG
efPKSHT90Q4gn0L0pz+AeipzRqKXr2Z488iTnPNVeNO8+XkA9UCwQeTd+T75
cDr4NL5bvW5EV847Bu4L5GO9+XUw2unwRqMbDDaDmMk5U5kzBvwjevJvWziz
qGfG9YQPIVdfPpSnXwIXNtub11+M6z1GrfxlH/O98nFopZO353jz6VCwOeSv
g89B15M58sw83nmFt9/Acm9+lmYu+bPUw8DkRf2+5cPeYG+Aq5Yvx7PPOOo+
aPT7muztNzAJ3XC04+GOo98XznB485gzkd5Y7iuV3ny+RW+8KMRb3jy10puv
FKu8efJNbz4cAbYafAQz5hNv+pjvlS8IsdCbVxagm4J2KvkaYgr9qdQfMGcB
+kf5hhc520rOIt5ab36eSj0NbDr5C3yffPgh+Fq+W73RxCjO+zbct8gXs/cM
tB/CW4RuBthHxMfevDyWOZqhv8vo7/NVmPci/XXe/CyN/CbvvkM9izniLonr
vUQ9G/36EPu8+XIv+Cx6G7z5cQ68DeSa8y57ah3nY78T1UtDbES7gZnr0Y6j
Lw9u9uYneW6ZN7/Ju3PRbqQW9z1iGdgm9G/A3wg2l/UN+OPZT7+FSXznROYs
J19O7314KziX5m8JcT7E5yF2ggubz3t9xX1v9eY3eVf+OuDNY2/C/YTYCnYw
xCFvvl0F/yD5QXD5UX4+TKxBs4A5n5Jrlae2sX6KVpojnPcTzrEojqvzy3vH
vPn1M29++wCdfL6dXvR3vh3eMbRH4R6FfxR8LXtsR/sRGt3XDvbRnMXkO4id
YOId524P8e2r6S+B8yffqL58J19+gW4d2iW8XbT3DrX8+HWIEyF+9fYbuAy+
jt5Jb77aAO8kueZ8yZ5al/qY71XvCnEK7UlmnkC7lL68+S1vI5/t8eZD+XIT
2lPU4u4m9oB9g34z/FNgm1g3w3+P/eTtFXzncubsJd9Lbz+8fZxL809zF+u4
1y1gn3C3O7nPs958J1/Ky7978/FWuGeIs2B/8H6H4P0OdpBV+BHe9wpxGM2n
zPmOXKu89j3rd2ilucp5z3CO7XFceUyevO7Niz948+ARdPLyOXpR35+Ddx3t
NbjX4F8DP8oe59B+heavED+yzw/c3w4wxXkw8f7mzr+iPs5di3PB25/ti3mH
v3kncU6Q3/DmR/n1J3Bh/zDnQlzvC2rlP/uYj5VfRCud/HzTm99Ogt0kvwV+
E90u5uj+/+MNskbs95YYMZ9K86+3/BT1N2Dy3y/e/LkH7Da4avn7EvtcpN6L
Rr/l37x5+ld0p9FegnuR/j44p+H9x5zL9C4xcw89/c+dZ3i/tCFPiJh/s0fM
u4ocEfOqj5gfz4LlBD/Lffz/fxSNGC/qaeWREGki5qEIOvlZWvlNea6IhXL1
r4LlZs8IenknX8Q88gfnzAEvTyTm4dzkwuTVa3yjvk/ezAuuvr5bvXOE9tF5
08FNIE8fMb/qDNeZkQb9OXBh+Yj8nFMazdEMeVZ+Fq55F+gXoCfNz3g3IzNu
wBc3QyTW+4n6H/QFQ1SKmC8rgt+gVyhifpSfC1LfZE4m9tR60cd+J6rvCHEn
2kLMLIhWHPXlqSIR85M8lyVifvsFn0urGb/gv8wRiyxghSOmvw1fXGH/0ruN
5hL7/YbHs7KP5iSSJ/KbzAYvK+fS/KLkRfGp1mLkF3iPDGDF8XEJ3vgu3jkN
WAQsDdxIJOb14vTEK4muNB4qxW+sJLnwMnirJL201OnoJ8BNxx6OM5bhvNFz
l43Ye+qOynPH5cDK8s4ZwRRJYEloou+dhD6ZGeWZX4Y5wivwflngRLFEsGz4
sBJYBTyZyKpeZXji/A+sXd9d
                 "]]}]}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0DdSQgEQgOGHGEAM5JweKghGrgAddtzA0OHoJbTTY2AHx8AOj6GdHoGP
GYtvttx/N7x7Hj9FgiC4ZT03iLLJFtvsECPOLgn22OeAQ5KkSJMhS448BYqU
KFOhSo06DZqEDLjnhSkLvtf7xXUZMeGNGUt+SQrvc80Vl1xwzhk9upzSoc0J
xxzRIqRJgzo1qlQoU6JIgTw5smRIk+JPyxdz3nnkhh5xftzyyQevPDCk9f//
FR5hF8o=
               "]]}, {
              
              Line[{34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
               48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
                64, 65, 66}], 
              
              Line[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
               81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                97, 98, 99}], 
              
              Line[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
               111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
               123, 124, 125, 126, 127, 128, 129, 130, 131, 132}], 
              
              Line[{133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
               144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
               156, 157, 158, 159, 160, 161, 162, 163, 164, 165}], 
              
              Line[{166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
               177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
               189, 190, 191, 192, 193, 194, 195, 196, 197, 198}], 
              
              Line[{199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
               210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 
               222, 223, 224, 225, 226, 227, 228, 229, 230, 231}], 
              Line[{232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 
               243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 
               255, 256, 257, 258, 259, 260, 261, 262, 263, 264}], 
              
              Line[{265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 
               276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 
               288, 289, 290, 291, 292, 293, 294, 295, 296, 297}], 
              
              Line[{298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 
               309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 
               321, 322, 323, 324, 325, 326, 327, 328, 329, 330}], 
              
              Line[{331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 
               342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 
               354, 355, 356, 357, 358, 359, 360, 361, 362, 363}], 
              
              Line[{364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 
               375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 
               387, 388, 389, 390, 391, 392, 393, 394, 395, 396}], 
              
              Line[{397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
               408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 
               420, 421, 422, 423, 424, 425, 426, 427, 428, 429}], 
              
              Line[{430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 
               441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 
               453, 454, 455, 456, 457, 458, 459, 460, 461, 462}], 
              
              Line[{463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 
               474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 
               486, 487, 488, 489, 490, 491, 492, 493, 494, 495}], 
              
              Line[{496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 
               507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 
               519, 520, 521, 522, 523, 524, 525, 526, 527, 528}]}, {
              
              Line[{3, 36, 69, 102, 135, 168, 201, 234, 267, 300, 333, 366, 
               399, 432, 465, 498, 531}], 
              
              Line[{5, 38, 71, 104, 137, 170, 203, 236, 269, 302, 335, 368, 
               401, 434, 467, 500, 533}], 
              
              Line[{7, 40, 73, 106, 139, 172, 205, 238, 271, 304, 337, 370, 
               403, 436, 469, 502, 535}], 
              
              Line[{9, 42, 75, 108, 141, 174, 207, 240, 273, 306, 339, 372, 
               405, 438, 471, 504, 537}], 
              
              Line[{11, 44, 77, 110, 143, 176, 209, 242, 275, 308, 341, 374, 
               407, 440, 473, 506, 539}], 
              
              Line[{13, 46, 79, 112, 145, 178, 211, 244, 277, 310, 343, 376, 
               409, 442, 475, 508, 541}], 
              
              Line[{15, 48, 81, 114, 147, 180, 213, 246, 279, 312, 345, 378, 
               411, 444, 477, 510, 543}], 
              
              Line[{17, 50, 83, 116, 149, 182, 215, 248, 281, 314, 347, 380, 
               413, 446, 479, 512, 545}], 
              
              Line[{19, 52, 85, 118, 151, 184, 217, 250, 283, 316, 349, 382, 
               415, 448, 481, 514, 547}], 
              
              Line[{21, 54, 87, 120, 153, 186, 219, 252, 285, 318, 351, 384, 
               417, 450, 483, 516, 549}], 
              
              Line[{23, 56, 89, 122, 155, 188, 221, 254, 287, 320, 353, 386, 
               419, 452, 485, 518, 551}], 
              
              Line[{25, 58, 91, 124, 157, 190, 223, 256, 289, 322, 355, 388, 
               421, 454, 487, 520, 553}], 
              
              Line[{27, 60, 93, 126, 159, 192, 225, 258, 291, 324, 357, 390, 
               423, 456, 489, 522, 555}], 
              
              Line[{29, 62, 95, 128, 161, 194, 227, 260, 293, 326, 359, 392, 
               425, 458, 491, 524, 557}], 
              
              Line[{31, 64, 97, 130, 163, 196, 229, 262, 295, 328, 361, 394, 
               427, 460, 493, 526, 559}]}, {}, {}}}, 
           VertexNormals -> CompressedData["
1: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
pA==
            "]], {Axes -> True, AxesLabel -> {
             Text[
              Style["x", Italic, 12]], 
             Text[
              Style["y", Italic, 12]], None}, BoxRatios -> {1, 1, 0.4}, 
           ImagePadding -> {{20, 15}, {15, 1}}, ImageSize -> {260, 
             Rational[395, 2]}, Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {All, All, All}, 
           PlotRangePadding -> {Automatic, Automatic, Automatic}, 
           SphericalRegion -> True, TicksStyle -> 9}]]]}, {
       Item[
        Graphics[
         GraphicsComplex[CompressedData["
1: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
nk1IoZyzJGt9wIVUyi9zr7/EpDTmfIVYRPQ9KvgA0feUf3Zu0feUE4i+x+c9
P8a/sc2HufdafzfVvAztj8930Y4qgGMTpu1MHPwIDmSm7bT5XQhm9ieHT+Yr
7DEf/C8QvXhz0KWg73bxdDx/rzer5GOxlI/U9e1usymactm6PXNWLIikfMja
7brh5zIULso/46XzGrP+5D8rOFSGA4tv9X9Y64lTT/UM3VNTih/Ejle0Drrh
w3qj3O8WpWg2vOlu4x87eT+l+LV1i36nrEP0O6akR+3/5i+AnVaaW9+e8oCo
qFF/31TyYbrp9Nht325S/b6cq/9hkRHR/3MPu3x+aWVOxzssvG/v6Cx7yrPr
4/vIrjyg/N4gcs1sx+eUl9k9fqi6yUtpPzPPlSWO8KecRMaHRmR8GEvGh3fI
+FCHHJ/ui7/CWo5PWZMcn7IrOT5lHXJ8ygHk+JTl1xMDrFquJx4h1wPaLm65
HpBDrgdsINcDZpLrARsrW64HPCXXA9qMbLke8n6FoPqE42/CY66/Cce4/iYY
uBF/042sR7x7t2U9YiuyHrEbWY+4i6xHHEnWI04g64+eTxBZf5T1yfqjHEXW
H+XH5H6FNHK/yv8uAslLTvwAenDjB3DkDYkfRJP7m/ZnT+5vymvI/U25H7m/
KZeT+5uyD7m/KbsQ+4RviH3ClcQ+4SFin1Bun3ANsU8ot094h9gnlNsnbCL2
Sb7ueHiM7A+UV5H9AeX2HdSIfQc+se8QQuw7WBD7DhbEvsNnYt9hOLHvcJ7Y
d8j/HvE/9p36L8Fk/4IfxN7T8xtB7D3ldcTeU75G7D1lub2n3Jbshzia7Ieo
SvZDHE/2Q1xM9julziT7HeWpZL+jPI7sd8z9kYFWOS37sXy+qsCS7P+whuz/
6N+zZf/HTLL/41XPlv0fV5L9Hw+R/R+Tyf6Punkt+3+zLmvZ/1FnQ8v+L+8/
ARtut+gftCf6BcyJfgEZ0S8gJvoFVhP9An2dW/SLfNwS+DCaxDdLiZ5Rrk+i
Zyg7En2GUx1b9Bk2EX2GpZUt+gz3EX2Gnrtb9BnK9Rj9fkeixyiHEz1G2ZLo
MWY+I/AW8V+wgOhJ0CF6Uv45KfQnehWGEn2pvL9Ht+hX3G/Sol9RrleV64no
VeZ4AbiY+Cuo4EHEX6F2OJ34I5QnEX+Ecj7xR1CP6G3av4DobeZ49aDD9Tdg
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
13NtzEwmZ86539n3/v0wVe6vRhbvJ6d/eD852vJ+dszi/exYzfvZ8bVm4X52
3Of97PDg/exIjhT7o7FY7o82vf9q3if3R6t8GMT792HF+/XJj/frYybv16fz
vF8fIbxfn27yfn0Y5H5mhMv9zAiW+5kxgPsD2M/9AUSdF/uXMZb7B9SU+wco
xf0Desb9A5XX5mvr4/+474Cl3HeAvdzfjAi5vxl/yv3NKm+Vml3Yz1B5K4b3
b8BifzP85P5mZMj9zWgp9zdjD/dHtOMtDOL+iHa8g1LNCvsj2jEYN7k/oh3v
w03ub9ZeXwi2cn9NzfbcX8M07r9QHPdfYLF/GVfk/mV8lvuX0Zp7OOq4jHs4
6rhE7k9Wnwtv7gepOYf7QWjCfSAK4D4Q5nEfiFZyHwiz5P5jBHIfCXHcR0Jr
7iOhGveRTPd7i+c/BwP3odQ8l/tQ+MR9KOrIfSjs5P3BNI/3B6v8dYf7aqgm
9zOb8ojF8+VQZd6/jAjuw0Prw+Nv7sMjkPvweMl9eCzjPjxKyf3LpvyGBrx/
GUdl/x5jmTdAR5k3gE/MGyA35g3Ak3kD5My8AdRm3gBpvAGVv0Ll+0PTtffH
T/bxUVH28eEu+/joyv1AfOB+IH7jfiAqcj8QA7gfiObcD4Sj7Oej/tvCviLl
bijsK8KJ+4oUwX1F0/lDu+T5ZOqboZ7s7+Md9yHxlPuQKo8VY74TanE/k5K5
n4lt3M+kBdzPND0OrZafJ7LWPk87ZD8fR2U/H9dkPx8jZf8ek2T/XuUvG+6v
YjL3U8mH+6kqT9lr16OL3H9FeEBh/xVVZf8er2T/3nR9xHDu66q5M/d14cj9
XNrD/Vwc434uXeR+Lq7L/j2ay/49PLlfDAfuF2Ma94uxm/vF0PrF0PrFqMz9
YozifjFyuF+MIO4XY5/s56s8Fs39aDX7cz9a5a0l2v3KW/bvMUT27zFW9u/x
XPbvUY372/SM+9t4y/1tqsH9bZU3JnMfXc1XuI+uZivmI2E+982pNvfN8Z77
5lSV++ZYyn1zsuG+Ob5w35zKct9c5ZN6N0XeoSgt7/wl++54JvvuOM19fIzh
Pj60Pj7qch8fi7iPjzTu4xf8XQr7+AjgPj46cR8fi7mPjwTZf8dY2X835UHY
MX9AzVuZP6Dmb8xvwhrmD1Bx5g9gA/MHKJ35A/Bk/gA9Y/6AKZ/SQJlf6ZHM
r9Rby68tmI8AZ+YjqHxThvkNah7N/AbT+UWRcj1AQdp6oI3s4+Ou7OPjI/Mi
kMO8COyT/XwMk/1803oGW5i3hGfMs6AHzLNAR+ZZUBXmWeAY8yxoOvMssED2
7ZHMvA3cZ94GitYt5G2gWLdC3gbqMG8DXZm3gUuyf4+Wsn+P8cz7oI3M+1B5
KHMrrxetZd8eSbJvD1/miKhjOnNE1NH0cx+Yh2I+j5mHAm/mm9A55psgnvkm
tIv5JqbrO/WV63EaINfjNFhbj/eV/X2MlP19/MP8Fu34GBOZ36IdQ+El+/s4
Ifv7uC37+6jHPBlazjwZ7fVk0QL5/QVlad9fVJD9fJVfzjMvB4nMv6FVzL/B
Hubf0HHm36Ar982pDPfNC87zwr45GbhvrvJNF+YpqXk985TU/JR5Smquwjwl
dJT9flNeoXFaXvlH9vNhI/v5cJP9fPjfLORTIpP5lPCXfXtkMy8AF5gXgPXM
C0AF5gWgJvMCMI95AbjIvACEMi9A5ald3NdX80zu66u5O/f18VbyNtFE8jYx
WfI28bfkbZryIH5k3hSeZxfySMmDeaT4+kshj5QmMo9U5a8w7e9rwedEjORz
YrTkc6I587cwjvlbaMr8LYxk/hYaM38Lg5m/hYbM30If5m/BgteJiZLXaTo/
0YJ5YjjCfDBqwXww9JR8Tmg8MmxnHhm2Sh5nQS4TPE7YSB6nymsaH03NPZmP
pvLYDXm9oKum64Xkc6Kv5HPim+RzojLz2fAL89lUHrvF/Dg1f2N+HFIkXxN1
JV8TzpKviRPMt8Mw5tuhP/PtsIf5dtD4dtD4dtjOfDvUZr4dWjHfDpOYb4eH
kseJ8ZLHiUXM3yM75u/Bjvl7FMr8PdP9hjZp95sOkreJBcz7Qwrz/nCXeX/Y
wLw/2DLvD78w70/lsUrMI4TGI6R2zCPEOuYR0kfmEaq8VkXef+kv7f7rKvma
CJB8TbyRfE1cZj4iZjMf0XT/h8ZzxFHmN9Jl5jdiKPMbaTzzG5HP/EYqxfxG
nGB+IwUwv9GUV6iKzDO0TuYZeqvlmT8lnxOlJJ8TH5lXiRzmVaIo8ypRlHmV
KMu8StgyrxK2zKtEY+ZVFpy/gtep8mZN5m2iLfM1aRfzNVVenCLzKp2VeZW+
MD8J1YMErxPXmO+pHcMw4Irgdao894H59JjA/FFax/xRaPxResL8UXRi/ijZ
Mn8UjyRvEyWLFfJQtWMYejIPVTtGYJnkaeKD5GmqPHefea5qtmOeq5pdmeeK
GOazki/zWfGe+azUmvmsKv9ZrD8oRFt/LGTerHYMgz/zZrXjc0Qxb1Y7RsCC
x4njkseJV5LHqfLhY+bjojjzcOk983C1/55K/eT6jjpo67uFzN1Vxzzm7qqj
g+Rxqr97AvOF1ezNfGEUZ14w5TEvGOuYF0xvOhTyglU+PKKtZ59I3iYmSN4m
vJh3jD7MO0ZP5h3jCPOOkSx5nKgjeZwYK3mcKj82ZX6zml2Z34ypzGOmBcxj
xlHmMZMr85hVXuyofV+wU/I40VvyOJEveZzav7+FCOZXoyLzqukK86qRwLxq
Wsu8amyTfE6ESz4nbCWfE0WLFfKzsZb52fBnfjZOMD8bjSSvE8WZ3015zO9G
BvO7aRzzuxHK/G4KZn43DjIvkrYzL1Llv5HMf4cFrxMWvE6VBw/JvEVzZN4i
0vIWzznURstLFvxNREn+pin/qDmEfT/Yz74f+LPvB+/Z94Oi7PuB5vtBSGSh
7wen2fcDC/4mLPibpryn5v2Sv4mNzBOFNfNEofFEcYN5oipfGpjPqeYHzOfE
Kuk7Qq70HWGy9B2pfPmVfaFq7sP8fTV7M38fq9nXRGHsa8LEqEJfEw1kXxOq
S58RfpQ+IxSVPiNY+Ipg4SuCha9I5cds9iGoeTb7EMz/nX0IGMD+AspeW+gv
MH2e6LH2eeoofUZwZZ8DotnngMnsc8A99jlgDPscEMg+BwxhnwMOs88Bvdnn
gO3sc0BX9jlgFfsccFb6jpArfUdoIX1HmCt9RzgrfUcqz65kP4aaW7IfA+3Z
f0Ep7L/AtxGF/gtyY/8F7rH/gmqz/0Ll35/k9Y6WaNe7HOlDQqD0IWEq+z0Q
wn4PaH4P3Ga/B5zZ74Fr7PeAg/Qh4aT0Iam8fIZ9JpjBvhJ6wr4SVGJfCX1g
X4np/kIW9xvy0O43Fv4kVJD+JPhJfxK82ceCxuxjQQP2saA3+1gQyD4WTGcf
C3qwjwXr2ccCX+lTgoVPCcPZF0Nn2Bej8nSCdn8eIX1LqM5+Gjiwnwax7KfB
BfbTwFr6lvBU+pZUvu7DPhzYsg+HstiHo/LzPZl3qJrMO6T5djCLfTuIZt+O
ystn2AeE6+z7od/Y9wPN90Oa70flXaOW9/pIHxP82U+EPuwnwhX2E2Eu+4nw
iP1E0PxE0PxE0PxE6C99TfCWviaVd/3Yx4T57Fui7exbQhT7lqgJ+5bQmX1L
FMy+JZV3bbS8nCN9TkhwEz4nTGcflHZ8geaPhK8J7d2Fr0nl4Yrsq0Io+6lo
Mvup8P1koZ+Kip4s9FOZ3n96pK1XfpU+JgRIHxNGSt+SyrO12KcFHfu0qC/7
tFReffUDr89c2NOljmvZ06WOe9nTpY6T2RdGXdgXhuXsCyMr9oWhsvQrIVz6
lTBM+pTgxH4z6s9+M2h+MyrHfjMcYL8ZPWa/mcqTN+V6nHK19fi/0pcEnfQl
ma4faraVPiQclz4klRe/s08O8eyLo/7si8ND9sXRHPbFIYh9ceTFvjiVH6vL
7y+ItO8vGkr/EXyk/wh5vQp9d1jBvjv8y747vGDfnel6rn7+tPQdqfz5mX2c
eMy+P3Jh3x+S2PdHndj3h0/s+yNr9v3Bhn1/lMC+P9P9mapr3/9Y+IqQJX1F
aCZ9RXCVviKckr4ilJpT6C+EO/sLMVr6irTnP4f37OtUs+ZjxDD2K5Iz+xVx
j/2KtJT9itB8PeTIvh7MZl8PNWJfDxaxr4eqsa8HK9jXQ+XY1wM39vVQPvt6
VB4uzX5O88x+TjWXYj8n7KVvCUOlbwmLpW9J5eM4mRcpWsuLPOeQRf4jkvmP
3LT8V1P6k1BJ+pPwg/Qn4fCFQr88RrBfHn9KXxIypC8JTtKXhLnse4KBfU8I
YN8TxrHvCZrvCZrvCc3Y94TR7HtS+VjHviWksk9UXee03w957DuF+xWvG4nW
fmTzcGBIAx8zB8kqSpwvNEA7XwLYd6oeT/Odqrkj+07VHMs+WFxgHyzC2QeL
w+yDxUP2wcKLfbC4xT5YrGUfLM5L3z0OS989vKTvHmul717l4w7sx1V5uAr7
PTFW+ugxV/rocZx9vBjEPl4kso8Xt9nHi+rs44UD+3jRQPrqUVb66vFW+uoR
K331Ks9OYd+wyqNNvvP1NEb65/Gf9M/DV/rn8Y19x/jKvmNMZd8xQth3jEfs
O4Y3+46RJX31OCN99SqferC/Gc7sZ6bn7GdGhPTVI0/66mHhq0cb9kdjOvuj
MZj90fBhfzRc2R+NSPZH47n00SNA+ui1YyrKTij0WyNf+udhYD82brAfGwvY
j41k9mPjhvTNw8I3j4HSN6/yZQb7unGW/dw0lP3cqMZ+bkpjP7fKkw21vNGe
/eCYy35wzGE/OHTsB4c/+8HRh/3gSP0gfPMqf/Zhn7maNZ85HrK/nNqxvxy2
7C+nLPaXqzxaVstbe6Q/Hu/Yn46X7E/HNemLV3lyGPvd1ZyvK/S7I5d97lSB
fe5oyj53imSfO2awz532sc9d5UvNF4qL0g+Pq+yj147xaM0+eu0Yh9Pso9eO
sfiJffTaMQbNHIUvXuXNES7vLv5ZPl7NByZ07OwYGKvmxJFud9/8HoMnK6oO
uDAngVzKhP9xoH40epV3KXP9SCItTrTP3XzN9PdNosfaemC39MnjR7dtuFrw
OTQdv9QtP7jm8jh1zLi13bB6V6w6Rk+0mZN4OkYdT0rfvHpf+r280NrTNV7N
7+vsfV3XPk7N/zitCLiYE4Px41et2n4nmXr+WrJk4vKCHDs4/qrPxyRqPqmv
xx2bKCzq1uHDmWZJVG2NZyX/Y6a/Rwpt0dZPCdJHr3L+gA9O3YbOiUOnQPdb
tute0pb9n1dHfXyBzf8b6h/xNIVyrMddGT01CtFd6m3aWTWFhq27kRsXFo3L
0j+Pv6R/HoOlfx4Vpx1p3YHCtWMsPksfPRq+aTRoepFUulrr3JQ236MRNn9/
wD9LU2lizadHbtlEY+XbsuVjc1KpdI3MxIH1o9B44cq5Faen0dlqpevFt4lE
5Lvs0P76NPrdruHEGb+p9ThFa+vxWOmrxwXpq0d6j6ykVj4Psajekjd2oQX3
O+mrxwfpq0dN6atX+Tl1UZLvugqmv18mLZXfd1Br7fuONOmjx3Hpo4dzwpGB
2UF30GJe+LEl42IxsW/L/g+O3cO5hvuOTomIQ5L01QPSV4+D0lev8vFqjy7H
Xy807xsfutnTqm6JeCR5zbjaeX8mddE199zwVH0/RTny+yuaI7+/ItP3V7Wk
vx6lpL8eOdJfj2jpr0dP5xfNi4w6j6FVL5W7NTIGRzbcsBueeRn/Tmpx3/ta
wes9d6zYsVUF16/TJ9a61InHaOm7xzzpu1d5ue7ipHqvjpvngceG605Pjkfw
irDxUQ2y6M8yE3oMD4rGeuuPVjXXZNGHpAqpD4oWXB8O17o+KS6LFt0I3ty5
fxRKO/R0Oe6YTW/3LrU/7x2JkPszq2bvyKZ5C5qE/2Qo+LyM8brXOiubsgfo
F/3d6AXOcf5Rr+cfzj9q3sb5R82rOP9YvP7XdFvLgzzn0EUt/wVIfz0s/PWm
PKfmMxXfH0q2nomf0js9qOWgwy2/oc/mh3qgtueCbStSdZhZb5fTbs/9qNr6
xMjYfXqsCPqWGjTmCGyijTXb9TegW0Jg3eNZx1FmZZUU73wDkqTvHs17XYt0
8MvFWI9Fp1x6xWNCvcrRQVVycaNHk4D5BdezHV/nxnTekoM6n4znltmazr/X
6Oc+pWTEijg16yp8Nv7UMgZuTm/7Djxmyr86/Oe7tJRbbfP8MfXrnYt7ctTc
2t59Tbq1edbeL/Qc+3vtFgeMau4SVOag5zWDmttWvl4tK1av5hYLZu/t98n8
7xuF1ql8wk6H6wNelzmZfJxcPiTe3FLczC0tLs8v6qSdX5v73JywrV2Wej29
3SeWTyufreYS/xUDpZvnrSW2LG+6NxtVf7DN+725EZ1muHXfdyYLS8OK/dVy
rB5VdeVXL7j8Sv287Y6n10vsy7T4fbPwPuyHKO8rRjU/a3/838Dderx+PbDM
rdqBFPxXVv7g9mbO/Tp5PSAn7XrgF/EtcPrWDPX4aPPxRvbOdDUnhEyevzj7
FW573UvKjDOicqWtpy9MeoWmP1cZM+2uAf2cA9NyIzPhfW16qPGUHmuOx9e3
75eJ/EFXfnPy1iG0qPWUTTVS1eNtdy7p/al/msXvk4lJPz5KPdvWqOaKf/vk
HHijV/Odnxd+2Hhah43bSxp7Tr5LXdqv2qEfZPYkvdOux++Mx6bfffhSPf6G
kb0cf76bAatTHjMHbDDiYd8iY5InZmDnriIX7t82wKrrtZW+39Jht3LRp275
egxuvcjX+WA6fKamd7veXo+dPzcPrt4xHQ0HjtvkuEiHp6c3HJhaLNni9afD
NviJ/Ul7o5pH7B4eV62/Qc27p8dt2DxDr+aodpPafFqvQ+bvS5rN9X1KW18E
u4S0iMWwZXZ+X9c+olF3Fwa4IQ72rdq1bPxTgnq+x6X99pT+ZJ5dDNb5qU8S
1ZxTYdhG99Fp0DXwty553oAwnwHP7fxT4dtlv3+rPnpcnOHg/5enweL1p+J3
jz34J8Ko5qUhfYYfem56vS9ohJYfLv+re+1y05y7rnY+6Lb49UvMX9a++KsE
I9LXO1o96fwSoeVc7fYtM6Bq6LM99TenwN7nkP1vFfUobr+rd91vkRbPn4K8
oP9uXrhuVLPb1SKJgYf08DP0XPJ49Qtyrnd9s4NbPGwzz0+uOCeSsioPOpTt
FYd1ebUHj3GOopVlE88dOxKLvCIenXwHRFO57wuDJwSq/EUk8xdlyfxF+7X8
9euIqC/Pw8PV6wup1LbfzZRkbG80y3vlQyO8Vu8qscgqGfXyf/4h3c4Ap4zX
N39xSELg88RVw2focOak1cTEGuZ9oRX7l1j+6soji983CX07VAx2hFHNc95G
/Tr5mg55jYZmtq8SS+ViAio/yIiD6+Sw58Vc42n3oRb2+d4qD9MQmYdpv8zD
lKTl4W5t62T3GJaANbO6xq33L/g8O5yKqf8iyOL1JOBYSHM3z2HmefjUvbd6
/WLAuEMBXTpXMpD/5KF37maZHj+BnOV6gkrpeT2Rdx6rgiseUY9/ffe2jCFH
9OrYhv87yefXIWbGqSFp38zz7D0udb/MNZ+nxYMbvbZONGJD4o9bZ9smUF7n
lIyG0fE4mZyXkr4pgc60t23bPCcOz17qu07NT6BpDj3d25WMw9u0e/uM8xOp
VstFz7rVjEWVzDNvnVITKbKpf/V+bdT6jPrK9RkN0NZnr/n9Uq/3iUP3bl/b
xGpHPdyGVTt7KCReO5rXva867VjwS5B53Vs+aNmNlr8a1OzgMKVM+2fqfKdY
bX0ayOePer6SfP6oudu+p7Nmeb/QjjoM3tS457rTkdpRj/F//lXjYHCUdjRg
1gzD20BdtHY0Ygif3xbv/ws4Zdu+37LYPKct/KnduOHq84/Fnx2X27cy/3+j
Ym69bnyzNqp5R+lRRcKyjJix8/Pg0gV5tVV82Ylvisbg66uIx231KVSm8egZ
O38zvb+pZBzP6/9KfD1Qr+dDRf9PVw+GaUcdyrbKc7xyKVw76lF7cK8FF589
144GtJm9N+B8WoR2NMKHr08Wv18Yvjh8PD1kjXk+Vqdx2s4pejUPLTumXmRv
876zr+83j63azIgkvwz79RVSqVNQM/88XXzB9bfjC4pIJZfXW0etHROHi65b
ln/2TqO9jV+VLac4JOm0Qvv+5S5fb9XrWd+owajkmyG4s8vr1PwJOriPOTYx
1+0Jbjcbfu5jNwN+4eu9+vkHfL1X83S+3lv8fiGw8h1Wrmwf81wzqFXIikBz
T6JpmM367NpGnHpcZZX783Q6MeN5yS9O5vVLU+37LCPf39Tjv92ZVyI+/xaW
PVzunr26ID92sGkfefIuLtUsc3BmpB5JxiauoaPu483c3ZfSmhrxie+/Fq/v
FkYdjb82fJZ5/tz+cgPfHeYe7KEnOzyyLhrgfaOPZ6frryhm3ZyXmzYXvJ/D
Tz6salWQp51OzQpLi8Ws9HKl3o/LpMYt0t9V7WW6/mRRS+37wyecN9Tz7+a8
oeaMcj4DgzZcwGf3PyoFHNbhmv7FtbEPL2FOu0s5vy/Qw+Nsucbfy11F8qti
j773MGC8W4/dRwb9h1G+Q47+W8mIvZyX1ONd4rxk8fuew70Mx6ov95rnpJUn
K2eP1av5e/k6tnl1zBycmn67KuYnG3DLcdPJ0x2zyM079+SxLfFYtsLDukmd
bCr/Q1rSqdux2DfLM6iNXS6F/vxy277QWPQYYme4UiOHVk4I/XVHiJnbOa7S
vo5N2ujUPLbhtaW9ksyzk6Pu4mQvvZrH9Pr2ZnU3g5pHj6rb4kCuATU5j6rf
70fOoxa/72saIPM9PdPyPc851Evmc+oh8zl1lfmcOsp8Tu20fO7OeVs9f2fO
22rOu16Yt82fN15fqPkOry/U/J3XF+bH4/WF+Xp0afv5h465eOVaZ8ouVwPa
dexQ/WjtHMxetMChXxf1+yM9t5thtLNezSfK3OjSZY4Ry/+z6Tl6hGm9koDJ
LeMO9rLJVXNff788hyfm+ayfla39mFO0xXW1c1zB9X1770n1R44+StbRgWPz
Ruihj3Kd9DnAh3b2yBhjU9kAn9qVV/c7s5OqBNQe3TTS7HG4Lc8/Msrzj/Ll
+Uc1tPOvU4VPMedXvFKvJ6KJ69NtC25Sf8ejA8ZN0WFd4+VNGva4RsbFk/KW
zNWj7c+bN16tcJkWXq7l47XC7PEaLz/v9F1+3slX+7wfGDfxoa1junq+8GBn
Xd0ND2hfrXCv3M46XFjltqhXnXvUuDvujZunx662R61mBd2hK1PPfHroZ/ay
VpHXP6ovr3/UXLv+vf1hj09y+Ev1fLv/WFWk6p1kNad4LMsf0yCUtnX4tejw
OTrsXFL8tzt7n9KVnqv1tR306DbR06OJ1RNKGHz1auYnPXL6Vn2xsyCv/zD2
/e7LMOBgm8M1vrwPodbTWyxwX28638Pof/L+Q/7y/kND5P2HTPef3Jy89dMU
bysB9evbvncYbM5pj32+ttxzMIIcJxUPdSn4+/Q5tWTEl4TnFDRi86kSdfS4
d+X10ok/PadOfcpv+idOjx7BMw/ccwmnm512T+24xwCEpdxsEhBG3VvU6B45
VN3PaYzMA2SRB8giD5BFHiBTHohuWfJ7+Arz99C1syLutB9n3udQ5nvGQt9l
0fS/IlU8JmwoWK8dqdhm2pgoWu6c/eTvYwXrhV6d3v7SIZLyrwb/GHXfgLUZ
U87n2L2gtVUODqqQpvIWfZR5i6rIvEWmvLXXc3Xc6aah6vntsr6PD+wVT+mV
ihwecFUHn6NlXf7oGEeTnfL27LunR8MJlRfWaB5LOt9Mj5RwA07Y1V0VWi+G
RqUZ3VsaTM+vI53MrzRP5lcy5dfQqctGp4YYqdWBDcertdOh5vkiXpe3GShl
0Pc5fefr4ZK/8eGGEXraW+zPtstOGXC5b/lio6rrqN/l1/n/vjQ9XwIdknmd
Bml5neck6ifXF7RMW180verkfKp1Ep3y7Pfbib/N+fODXH/RBm39pb1fZHq/
Wk3rW2ZQ1xQ65Dg7d8pfar1Io+T6kZZr60ft763+vXY+qPn3gSnBZa1Safi0
dksyC/6eBx84tei+N5UezOt3eFXB+53UPXz/0vpp1Gml8xOb63o0/q93iYAz
aXR247yPfv5q/U0V5fqbhsr1N+2Q6296pq2/tc+Tej3a503NB5aVQr/b6fTI
6p3bzFUGbPzsO26NVwa9K3uzV1G9+v6CxsvvL6is/P6CLmnfX2jXG/X42vVI
zZ2a3I+4nJ5JW04tHL2zuen1Z1Ge/L6HYrTve7Trp/r3PcaVvlTMJotW9H6z
+7PRiMyaL6tc2JRFze47Pj+QY4CX/s6fk4pmk77ncusu+Xp08PGNs1meTdvu
3uxnKKdHwvjVnW+9zSbqUXzjmuo6TLRue8utQS51T9615muQ3nR/UM/Hx9eU
IO9/9K+8/6mf1+5/atbuf2r+P7Z+PXI=
          "], {{{
             EdgeForm[], 
             RGBColor[0.293416, 0.0574044, 0.529412], 
             GraphicsGroup[{
               
               Polygon[{{1935, 281, 2039}, {648, 10, 644}, {567, 281, 2031}, {
                824, 26, 821}, {2125, 281, 567}, {624, 8, 617}, {622, 10, 
                648}, {617, 8, 610}, {2039, 281, 2125}, {3161, 531, 3168}, {
                682, 26, 824}, {791, 24, 673}, {3146, 530, 3157}, {796, 24, 
                791}, {3332, 560, 3456}, {812, 25, 808}, {1924, 281, 1935}, {
                3168, 531, 3359}, {3457, 559, 3448}, {3448, 559, 3451}, {3456,
                 560, 3460}, {3348, 530, 3146}, {639, 9, 631}, {2031, 281, 
                1924}}], 
               
               Polygon[{{3451, 559, 560, 3332}, {631, 9, 8, 624}, {644, 10, 9,
                 639}, {808, 25, 24, 796}, {3157, 530, 531, 3161}, {821, 26, 
                25, 812}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.3704813848386359, 0.19140029157106891`, 0.6377367212222478], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtUaEKAlEQXO9d0jsQMQsaTGIQg8WgqCCY/AMNJlGwCH6H7UDQYBBMhvsA
m02MJpMiCIfJ6Ay7YZl9+2Z35u0rjufDmSciZYRDdAKRJCXSAi5CkSoul8Az
sIT7C/AAYhf5C/k3LXIF/wecoCeP2hT4RnxQfwZ6Zr2MOZuM8iPgzvJ9Rudy
/g1490VGyFvAlXmglyHObdT7wMRTDyd4qRu/CeyZ/1yo/sght2mcga9zmbOv
bzMjp17puQZsWM537M0nvd/M5xb8ABpZnL1Q90Vd6hestxKoP3qInWpT9+Gr
BjnkUpse1k57WKd+ZLrccWxzjk6DOf/hYTO5s5/9Bff6B3pAP6Y=
                "]], 
               Polygon[CompressedData["
1:eJwt0LkOQVEQxvHJRSjoCBEKHQml7RUIhYSEylJRWCqEhOJKqHgFSh6OjtJ/
cqb4JXc5M9+ZyY0XnbknImkEseBFP5xxQTYgkkESKVRQRhEl7GMiOwQRwhYb
+6b/bmGRK774oU5NzXpUrIf2yqNgGZp1J/uBQVSkjyFGUddDe7UiIm1sOLPG
EivUUMWbMx+cePZxwNFzNVpbtbNNejbQRc90LVOzC3Y33YHuYmVZU8w8l6FZ
vmYZ32bW2RPsIB5zGZo1s9oxJnjh6bmd6G4utnu988nufLAZddY/EX4tYw==

                "]], 
               
               Polygon[{{3458, 528, 3456, 3460, 3461}, {3333, 3332, 3456, 528,
                 3340}, {3169, 3168, 3359, 532, 3174}, {3447, 558, 3457, 3448,
                 3449}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4434906967910278, 0.318343767796292, 0.7403601413275351], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtkj0vg2EUho9Xv7XEoAYWiVGHatJBIiQMBpOBxCSNdCCoDhUkHZqYpPET
LIgQif4UsVoq4gdYjFx3zhmeXPd7nnPuc/Kcd65xsnWcmNkiZ5RzmDUrj5id
wsmc2Sy6DS/GzF7QHwWzq9CKPXF+0DtFs3rOa6vwl+9xjPMlsxtImvXhEvV9
curwLm12T/wRbnI3j/6GB9RUYAs2OAvoJtwteq9tWGLYafJvE/eS5zLsRL7q
OtFX/TfIn0Gvw9fEtWJdvMp89+B5yWc+gy3uVsnpwmHMtpb4kda8fyneAp1J
e57y+3CfO57P9uBEzKl5ryNH3l/hI+9qyuO6b0atPFJp91efXsxZKXk/xZ/T
vie9+RC+h9YOtSft6K3g76L3+YQPWd/pALbxnMLzsug7U608VjK+l1rGfRXX
bmsR194G4aN/JB//ibyPQivWDq3YP1isPuQ=
                "]], 
               Polygon[CompressedData["
1:eJwt0rsvQ3EUwPGT3nqE3oUQBhVjRQ0klISk4hEUSf0FDJV4hol4xCNtwkTC
RIjaCAsJO5OObCwsjMrC5nvyO8Mn95ffvefxO79bNz6XnA2ISBOC+CsR+UW2
VOQMfSGRXpT5IuVoZt2EMGrRg27E0YVKvqnAIOsEllFBgUqssT4h5zEOcYQb
T+Qat7jDXpHILn7xhygxDYihTZEnhi/e5fHJ3of1pL2NYwwpTFhPcTtDn/Uc
tpyae5VeV1CAQt/V1NrDxSIjxa4n7e0SV57LqbmnMRNyMRobgu+7M+nZvpnh
j/m2mepsw+SoQRWqPVdDa+mZ9GwPuMcjcsggjXVsoJGYKCKoRytabE/fHeEQ
+zjADjHblkNz5XV2ATdznX3Oaj3hOeByRqxH7TXFmRrYj2KS9QLPeV1jCktY
tL0F63Hd9vTdOz/VG17wanQdR1fQ1dTap9TKem6GOssAPN/dsd51Gpkidwd6
F+e4wBbfbCKNDAbI2R90M9BZZCxW/yn9t9rZa7OZ6exG+TZpMRrbiQ4kMGQS
dgY9yz+qhmLa
                "]], 
               Polygon[CompressedData["
1:eJwtkD0LwVEUxg9/kryVEjIp2QzKgCJkYzJQNpTBewwiPgDlK1CUga8lZMJi
9bv97/Dree495z7ndKPtcW1kFRE/2KFkEylCCgqck2jZEIngrzRm8FkQj4iX
88st8oAnhLkPwZH7IC0+/A7vwo/RDWxhxtspzHWGyppAAr/UNdWzM8wd1C45
yEONOV+LyJnQPRygyl0F6rqmeq68vcCTzBgZN9Sp5y3QFaxhSO8A4vgAtSn+
RObRZc5QeRe0T60HHXCQ11V/QW/abf6Byv2hdz1PzX3DBxp6rybagjb8AcZX
Kuw=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5165000087434197, 0.4452872440215152, 0.8429835614328226], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtln9olWUUx1+3e+/73nvNkKCbNVizqGxtNakmhrIYwiSLNpUc6kRbjBXd
If3QmKNk+KONylnTqK0cSzRKkpbWUsuWK5qWQhv9zsCEHIvVstLKa58v5/zx
8P2+5z3vOec5zznneYtWNdVk84IgOMPKZyWiILhsUhAcDINg8SVBEPFyeHIQ
7IgHwX7enwfTrE3whpg9S74N3MLqhXeDLzh/Om5LXO/j2BrFfhFYmQyCGvgM
cC6rAv4j/iucS3aX60i3PBEER7BzNGFL/FPwVGT6+m4JPrqRt4DVziUrZT0D
vxv82GO4Aoyx6SrkSTCFrR3wDXHbj/a1F2whB6gGnWCI3uXwODjg38rGafS+
gI+Bv7vfZvDRuNlsA7OsJ+Ffk7fpafJKDH3gY+S5GNt14EMxy+3UuD1LvhKs
IIBx9G8H3+XdbnTeAb8j5nPwWZzXTM+VcraInMyGvwnGk8Yl63O5ZFeysooB
3OM8AxZiK4fNZeB0nucg/4TvZhHrTvjbqSC4ntUGLwNbWZ3wFSnLl/J2MW56
0m9L2RLvABtcfzPYgc3j8G3gQXxUwo+B9/C8G/4BOkM83wr/CNysM4a3Jm2J
V4HVzvW+023K9gNJsznGt7vI1QSxhewri7weeTtYwqqDr05aTSv/OodjHs9v
kflWDG3gNOz2wXPEdm9o/TII/hFZDIrlztB85YNnkJcjfxF8389OZ9jvXLKl
Casf1dHz8J/UR+B11NaN8KvBWu9H9WW363yYsHfSucC7p3geh/8Hvuz71b77
XV+2H3Ff8vnVZLMp213wc8S5FryPd9+isyJhS/w1cB9rGP54wvYm+/KzhW8y
2CnFTovbeQUsJbbZ6JSDMxNWG5olr7tf+T+ZtHoYBXtcrvdfem2rxn/1GLYn
rPfUgy+hV+DxFIGlPhM0J/I9J8rfsNuU7YzXuWq/yL9dB573/lKfDfFuK/wE
eEPCZpfm2UWvbe1jZmixKcYRj1Oyjey/DF+t4Pdpy8MpcIbPn66YzRHNk63g
Tcjb4NPAV4m1Et4LtsdMXoi8J2bfaoat5BvcBcvBc5B/4QtCOw/tRfm4xW3K
drPPIs3C97BTBy8BD8dsFv0MzvfYFONJfDfCn0C+33v2jrQtcc2A7X4WqpGk
z8Cj+TaLlf8ycID1p/KvnHhtqEZ2kdN12BlPWn0oP6q7KX6n6G4Zwe8byLNp
27/2oj3pWfIH0zbHFbNizxHr/fAJcH2enftGMOP9pT6bcJ3qmM1o1X99ws5D
dpTjZV6rOfAf57Xgs977mkNjPhM0q054ndQSb4Hn9raYxac4jyPPuFzv55OL
SdoX+A2rDH4aHPT7SPfSWymbe0eEziW71O8m3VGrfV4dAhfi6zN4U9pmpfT1
XWdk9tdENpfVX+qzOT6LeiK7k2RTtmtSthfVfq/X4SJi7vbz0rkt97tDd0if
31+D4BS/L3RvLObbAvhCcF+eccmWuI50rwptRk0NbU6JS3bB99IArvJ4FNfO
yO413W/1odVVJrS+Uv1o3nR4rapm1/jelePP3a/8n/acr48sbsV/GOwNrY/m
hfYs+R6wy/8r9H8xN7T5qTla4meqs13rNaxeb47srhyJbG/a11n0r/G7Unfm
qM863YG/eG6V47zIaiMXWm+rx5eCxSnT6UGnn/UcfAGyEe87/YPkvK4awb/9
XjsLDnkfqZ9yXs+q66zry2dVymzO013McyH82sj8ya9i/CE0ebHuZdfXdxnv
C/XHuOsr3pt9v9p3u8ejuA553R4A//K5pH+lAy5vTNo/gfKjf4q9Pqv1b1Lk
PaJeGXD78rMhZvOqKWZ5UWyKscXty89Zj2ET+HDK7u4U5/U/WVp0Lw==
                "]], 
               Polygon[CompressedData["
1:eJwtlUtsVGUUx7+Wmbkzt0x9LWpdWCUuVAJJabWhhAEpxKK0Me0CTAyLUiil
dko7bHhIfaSStAJCgqs2YoAEHRTlkUBioiFlofiI2ibGtCoDipgYlWIEjOjv
n3MWv9xzv/t95zvv+2BHX1u+PIQwBAl4Kx1CQ1kIa2AGeXtFCNtgKg5hGubP
DmEeLIRGeJVvQ75He5ejrAlWQQuUZVEKv7D3KozNCmEUDsAb0MWZT7jrKLQi
N7FnGTwJzRBxNgVZqMyaDumqg3oYj+2sdLRz/jV0jsBm6Jd+bNgAnbAe7mTt
DshCJTyAjhr3Sb71c8dmKMCWrOmQrp0wCNvQsRUGoFBuewruo3x9JBNCG7bU
wgHi9xl7LsAETMKpJPayfRdUIj/Enhr23ub98yiEBSShNmE+yJcTrH0Ad7Hv
bpjL2qNwP9TAMGv1nL8HUsgb8aELeiEPTeha5jqlu9Fz9zfcgB2wHXbCICwi
no3wODRAFXf/hW0TcDoVwr3s+dXj/S/xLvA+4Dqkq8HPLoYczHX/lsJo2myW
7dVwH5yPzHb5UMX3XcSvE7kJ1iOfhDzyXjiLfB0bfseWL6CAfJs7TvJtP3Qg
f8Taj3wr430luldyRzMshxWeQ+VyN+yB79Nmm2zch/yh23MNHU9EdkZnG2GR
zpLjF7wmVZunWTsFZ+AsrCMGHZ6DjZ6DXo+RYnVB9qC7G37wGFR7Tao2u/Fx
LfcvhjnIaziz2nVK935s2gc34ZbqImm1pJqqQh5grR8uQimyHlQv/gxXoJb4
jLP3EDyMvDVhtgzDSMJqQLXwMryi/kNnCopwDN4l5xNlFvNq5C5isAE2QQ9M
ps12+TAP+5dyxxKog3q4xB0lmILphK3p22F0H4GxpNkmG+ezXktOh9FVhE9j
i7Fi/R4c9xwqlzl0LYGX0tZ76sEjyK/j817YDXscycMwAmP4MAoz6L7uM06z
7iv4OrYeUa9k8C2Gx7hjLbYNwsfIK2KrTdXo+/jbHVntqQZzqh/4B/k7+A1/
qpMWa8V8iPNJ3hPwn4YvzyE46PrzyE+z/lTCZqZmZ/C9yolyczlhe3VmC++d
KesN9ciLKYupYnsU3obmjM12zfirxOdbPy+fziDvSFmvq+fPIf+Rtl5UT+Y5
2+f1ohqexJ5W3ls8p8ptFFnvqIeeiSwnOd/T6jmf8pmk2XSL+N2EQ+TgsEhZ
rBSzGymrqU0+kzWbfyJnl+EilHwGaxb3wPPlpkO63oEiPBfZbFV/T0eWw4z3
sHr5ivfGn3ANjuFTcZbdobuKrks9qF5cx5kOr3nVfslt0T9P/77zMO4zX7P/
uNeqdEp3nnj2QgZiWKB6hW+wbSIyG2SLZopmi2pyxmOkWLVgwypog/bZ5nOP
/+P0r+vz/6lmdJLvB3l/02tctd7uZ7Wmb8/GNjvVz72a/ehYKBtkC3wZW++p
B88hxxW2VzNgToX9g+v8H6p/ac5nfwkuwf+HlhEs
                "]], 
               Polygon[CompressedData["
1:eJwt0b0vQ1EYx/GHg3u93EZJarFYDG1IGJQrXTSipSJ0kpDoi0m00aEJJiQd
GNBBbE1ITB3wR1gN2j+Af0BIJEokvifnDJ/87nl7niftSLa4VmgXkWF0osmi
gRslEmddIxuOyAt28MVenlztEMnxnSYXsYSrXpHnNpH5PpE5xLFNrTy20MX9
DJnxRCJkmcwih7QyM9yzn+A7iXX47I2TYURQ5ZyyUibPcYEU8/yyd0c+4BE9
rki3a/b02S35gxZW2PeZc5NMUGwBg8wQpFY/GaCPhxrrEG8dvuv2jX47w76P
M5yigjD3FPdm9cyI2tk3lKmpa4fIFL2W8USdGPVK5C4KmGa2b95UyEtU8YZX
THEe5X6M/GT94Zh7+n6TH/aEmscYo8eQnonvAe4GXdND9zok/+ysR+Q+DjBq
/1f9/+6hhGvbT/edwCQC1Pag8M5Zix7/gqE+fA==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5827078224700544, 0.5579115178660257, 0.909929305723278], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
Vq9TxeBkZP85TVl7e72v3rnH/VoK/3/B5HhJ
                "]], 
               Polygon[CompressedData["
1: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
mXz3FIy1M9lj30gzrCZUbdiPM+gPNcjV8C78JeTOSGe1HXYEXc2p2lM1agny
M/gwF56GHPgi4GpP1aDfBNw3xkCbU3PvsLmadY/5naq1bD7VvhkWW3qT9DZ9
QNu/Q+4bQ98a/wm5+lffFJeQn4NnoUrfaPbNc8POoNj2/JTpSHcePp1rPpav
59i3nGoq1VYNIbc/raG1bsOtkPsm0bfJRlvrlvWl2beL7ojuinKucu9IyFQN
gM/awV180wwxZN9iRrFTleBqT9WgYwLum3S+3UHdxcv2FhUj/xzOM+YDuAiX
LCYVm0H2EoIXYWai05Fuqb5H7JtU36bSkW5n6AKb0DnCXhtUc1qMKdZ+D1tj
LmcqdzZpD0aT1RiqNdZifwUshxVQj63n7U3R2zIZnUkxF6OK1dnIs2LuDugu
aE/F9g2tb+knrXY5TN87sCrmbJONqcj1QfetpW+uWuQMSIcH4SF7I/VWtoUk
eJsx28wH8kUrcmJLuM2eGuGo9m860s0036Xb3FuwYTP8QffSdzVn2ObQXOm0
jbCcrdy9hzG7oaX+JxB0Ppfv8+CnVmOq1pwKBYZkxYRiY7utpTfvhI3JsxpJ
tdJ0znia1USqjfZbbtGaWnsQcyTDTnR3+c4G2RKDRJhH21yrcVXrlkEp7IV9
UAKLrE19Uy2XT4T8eFcjDraaQLWBfHTYzmiLrbnT5tBcfa1WVk2s2vh/2t56
Og==
                "]], 
               Polygon[CompressedData["
1:eJwtlWlsjWkUx19uL3oXzAdLDGMZy6jYaiaWyaggQdAoWhVaUaU3rrQxS5go
M0NDiTS9rSIZpbULoVIqnSFBGSORGYntgzWuNWpkWp1YZvv985wPv/zPe57z
PM95tvP2zimYmd/a87wI+CHN53kj0baoH9pAVYhvgq6j1bAbJid4Xg5xU9FK
YnbCGmJWQwUMpm0begsmYj9GH0IcxtEnBVJtDI2Vin86PIV++Gahe5nnbSvG
RHfCLqhinl2wx+fG1fh1cBLS8X2BLxN9z5hF2P+iTdBsyE6zeV+hb+g3ADuB
PokQgGEwCJ8P7Q8D4J1ygXHwBzmNRCP0zYPFNobGihKbgr0ZXQ5fQrO1L0Sz
IBti9C+FIWHP66o903iWv9YxC2ZDH/y94SIEibuKXibvQp0VB5YJcyHoc3uu
vS+DcnhhfRYxRx5EYAF9lxBXT/wxqNFeaX0wF0bT1oRG6dvCOr9D10ERvKDv
Wtrj6F24B12ZuwvUwyHauqN/WdxG7FKIwQLmzoaFYZdTnPEyg573C3N8jo6C
0RAJkCsUQx1tJejXxH4FhZZTLprS1vPGQn0bz7vPXMOxOwddH/VdB0VwSuME
3Byaazw6ne9pkAo1+NICbkyNfZH2s3AOsvE144ug+VAAN4m9Afm0X6FtJVoN
VVAJV/FtQ9dau+KWQhSOwGHItHGPYz+CeNDdcd31Z9gnoDboclFOl9AG5jwP
Q2EjvjPoK8v/NfoO3gfcvdT9fIMGtNewn/3fp/PxuzfxI7qefbuFnYxW8V0N
H2E34PsE3cJ3BbyERsjF97vejPnVrvPVORejZ+z8dQ9+gp9VTOjzn9/Nobkm
oSM4p2S4Zr4x6K9wCYbb/KfRMtYcg622p09Z2yM4il1hbYopgd/wrUdXQSHs
b8d6ITmRd0TbQewfLP/v0b/hH9hsOSiX23AHYnafdK/KtQ+wyc6yl94rDDVk
j7H93kDMZ9ifhlyc4nugc+xN9US7wYeQxJ4MhB28k2W0bUczOKf0sKuxqrUz
w+5t6o0esVq31+dqoGrhjpCrG6OIG0L/wdAlwdWPTnqbtIdpf245KbdlxEZh
edi1/Ymv2HJQLtWwG0ZAcoKrYaplSdgN2Od9rk6qlnk+V7OUg3JZCd/CB/g7
Qnv7j2T43FvXm1cNa4ALkEUOSfi+sbqg+tBitb9J9Zx+dbDCaqLW1h16QEj1
DvKsluWgMfqUQklrV7vbaa85/25QCwWcR0/0BHehFvzY8/B1QFO4V2Mhbvfr
Adpob0s1YjJMCbh3rbs4Qf8/mALz6b8I32K0kXFfQrrdO92/qTANsmw+zTtb
MdCC/Ro22BhPEt2atXbVZ63tHJpr69R6ozovSIdc/bP97sfdSu/O1lmf6Oqb
6txz7GdQafOH0D5WQ1RLPoa+kGPtijsAB6GQMVf53X9G/5sZ6P9nIg+t
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6363865605176624, 0.6441583136408026, 0.9111530156179907], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
                "]], 
               Polygon[CompressedData["
1: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
NobG0hmks+i9mJ2Fem/MRX7f7zfK8cuiNkfNtZn2HHTW20+qvbHqrfXqVJu7
bDAybmuutX9FZzAsi9tbot4UX0OuTf1aMBy5EBpjk5vhYrgkzd5w9ZbbRLme
I/kLxYy4+bR8+zV0nQ+1AtsL2hM3yM+xwW/uk/LNJYHF8l3wamAxcIff7+XL
IX2mes6l3OtJfGIwDIGhcAgO+hur3lrbeT6inKYTcl/K+kBnvcHB3tByh7GQ
6n2orxHKy2Bawt5ytV7KPQ57LHkaxoT2Bqq30DbQFgqxyXDYi7wPJqfbW5Te
ePTWs8dzO71Z6+26DFan2R1Jd6WUwOauM+2rmN3xdNdTTqfc7hnmHCRZDl4c
tzXQWjxHn887knvBIzCKb0/BN8gHEpYDKRdSzFHsGRe3va0+x8ftDVpv0boz
6O4Q8bdY2ayv50yt3MaydQ/IgScgHxIQwjDlom6TNn4G6iz8jD53hdZGbT/0
8/Rlnam6G4WWS6pM394PzfZ6U9+IvC60uvq+JrQ5aq6KWYpdJcgT9L4OpTAj
tLNOOfYsP2NL3Ofke5P97VI2kq30hq+9pZxQuaHuUGqvM7OGbChb+pmgs6G2
xyedObGE+bx8vx/0j1tOoNxgunRJWFk/z+GUy3UJLPfUeFnI1wV2F9QZVRc5
OWG+qRx3R2hzmuoxVrH2/7S4ZhQ=
                "]], 
               Polygon[CompressedData["
1:eJwt13vY1/Mdx/Gfuu+7+3ffd9sYzVTooJLoQCdcckqWSwfWLGSyad2Vckgp
RI51qWS71tGSTKVCieisTOVSLuVii3XQSpqQzKG0tcd7n88fz+v1/r0/78/n
8/5+zr8GNw25anCNQqHwDkpRVlYoLKW/pjeiL76sWSh8gWvQQdkn9DeCb0Bb
TODrRS8X+yq7Cx2H8fhRVaGw95hCYRadh/nox38zRuOA+LG0Edawf0IrUYXn
SwqFBahGL2X96Tp9X8ZeQ3/n9824Vd9DsJU9Stnv2Qcq5Y3R+jus/3+z+6lz
vvKu0Qa6hIp9kq8HfTPax0vsRf8fjPQ9i9l3sYejPhbz1aV1+Mew69GGaIRN
/Lv4rqll/NA3E/bdKJHLTfQ4ee1n16cPyO3BQP1Z6o6hn8ljP66vXShchz6o
MFE7xBewW9376RiMxVD1t/F9RIdhOE5V/zrhR33nDziC8fw7xO2izdU7Awfl
/BWOxnwpK5PfBjnMU3cFXYXV6IxLcUcesxi7BepsY/9YnVPRALv4/sW3m36K
fVgmlxF856jTEefiQb4HcEheVyj7lg5Xf1itNH4xjr+KNsWeitaYz9eOXsvf
u1bqN/qvTUeo35P9Pb0H9+IW7Q/CcXmuhrKfEjsD38lrP9/XZen74jtX4i2+
K/imGZupmJnXcGVVmuOY6xV5fBrTTvppwS6nbXA2FuV1F+tvNubgEm1ejM7Y
IP5FdT8WuxMj5TWAbw/7EPsV9mHlkzEFL2A236W5jWhrFt/TpSku4lvw9cZG
djUdjCG4zlxfi48r03d8Fr/10RsluFp8ZzpSjiOwTfnfxH1Iy9Vfrvx9fWzB
exiHx0rTXo09+zPaTd5XojKPxUW0ea20v/+jvB67Ptppsy2q83qNdTtc38Ow
EMPF30Wr8p6vzmURM1CfA0rTGoq11IZ+FHuVfQvtj+rSNCcxN2fSk1AXv9V3
QX+taUu0wtaKQuHvFWkvxJ64rzLNSczNazGmWIJlxmQpHs5zujjms2Yatxi/
uezn8I79uQkfoFHkR5fH2scZWMu3kN7JPxS3oFnMMy3Tdym6YI0+ymkvuU1k
96Rf4gCGYDAqlb+s7Fb2hbEGS9MYxFjcRv/C/wwGYrS4ajq03N7FI+jBN54+
hAcxCGfxjaSTxT7F/rYi5RS5HY+1fKdUpnaj/dVFffG9TTdjCybx/wmDMEnZ
RHpyMfX3SO4r+ryY/16+A8pasM9Eec41cr4Nt+OXuLoi9RF9rafrjf8R9uN0
FVZXpb0ee36VsWxjDFrmfRj7sVU+Xz6kj+d9Nq4knSlxtjTX/unxTdoeoN2Z
tAv/H6OOuPfxAdqKGae8VY6Pes+InYV9uFtZk8hdPt+yH6VP4A/4Of+JaIhq
ZTPET+Yvk+/b+ZyJ82ZJVTrn/xp1cBLqqDNGndNyG9HWDvlsx6W4UZ6b6VZt
DhdXoryICtyNkVgQ36dsFF0ibhR7RXwvBuIO3I5VuE/Zm8U0dzGHE2h9834y
LjR3jfka0ZNxCubUSvfGq/R1rMGofNe1Ut4eHdAkr9lGoXgFPWMt4jKUKetM
z6xMuUbOzdinY2U+k9rT1miDrtjA152uFvt6rDv2QLzLnqesL7t/XtsL5TQf
C2Lv5/MnzqGb422AafxTMR0tYh3USv4ob4XlfH3oRO09jrfRi29recoxcm2K
N/h60O/5v8O2PGb/oOfyd8TiPB8tY38Z68vZR5QfwmEc4fsBx1SkOX2f/TB/
G/ZcuggvRWwxzVHst4iPemNz29HHY7FmsZ//M/TPc/oVu441cwL653fRsSVp
jmOu2+fxvoAui/3K/pyuxKryuOy8F4zPgHyufk6PRA54Vp0tfDVph2Iaoxir
tXgj5pq/c2U6X+Kc+YbuVf8TPJC/cR+7K/sX2Bt1+L6gy+W6DMV8P6xkN9bW
UuWztTMTT1ek/Rr7djJuE7eRfmlffYFvaqQ35CG62Xm8J8rjTsZbWBVvynj7
lKRzNc7Xifm8L/Cdh/Oxk38HtpemO/LYuGvt148jVzn1YPfEaHXvj7MHF4l7
pGZ6s8XbbV0+A8bRF0rSWzre1IviHYoN2lkfazqfKRtj3+R37lJ6Flpinr63
8M2l5cauiPO8Gc/FSnVL9HEO+6j6/409kffOYfq1/g7invyu20c/zfYd+Rvj
Wzvms6Y5bYpmeCOvk3gz7MYeNNHfaVXpLRp7rC776vw/oSXthu64QK7r4q1A
26IdOuW785+0c8wTmvC/zNeQ3otRmIopZel/Svxf6VWW/h/Emoi10Qc3oCN/
h7I0vzHP79I+8a5in0B/iuNRGucVnlS+WdmksvTei/dSvJu2xxsBu8xdN+VX
5fdOvHvm5vW+iC7Bq5Xpf0T8n5iR3+B/plvyPdSUNkBDNMrlETcn3hJ40Z55
ASfiSu0eT28Q26dmestHfFlJus+ivXg/H+N3DRyU81fYnv9fbKM77IfteC/f
X5voCiyvSHdK3C2L4s4wDuV4Pr8159H74z7A9cV0BvSm7XEjuxPdYU/uRHdr
q1vtdJfFeu7Kni6faSXpDo27dB/dI3Y3LlK3rza60bfyWb0y5xS5nZC/Pcag
LuoV016KPdU9/gPp41n6qNjp4tbQ9dgQd4bYpngNtyprQT/CCPZY+lCcpaiq
md5fFXQjNsUe57+qmOIifgIdps07K9L5EufMvLj3fcuskrSeY13Pzvs19u0S
DOEbTy+rncYj9nkn9oWYqM1+2rkr2o47u5jGP+ZhIX0T6yrSOyTeI83YbXA2
puZ3RhXtE+uimO69uP+ew6PK5tAn8lkzg07GFMwWO0j5+co7oGPU4ZtbTO+w
eI/Np1Pye3gvnRr3Iv4H5gUhkg==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6900652985652705, 0.7304051094155795, 0.9123767255127033], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
/gf2iKF+
                "]], 
               Polygon[CompressedData["
1:eJwtmHl01dURx38kL+/lvSQtJWE3CrIGRVGDEkAJSNlCDcqm0MpqqEIQZCsu
7CAKASFRVuHUDQyQVApCURJkkWAJVuwRAVsRFExEBFlEhdN+vmfmj8/J5L57
586dO3fu3F/j4U8+NDYuCIJRNYIgxN9/JwTBpzAaxsDn8UFwBPbCPrgrKQju
hLpQD6LhIEgM2xiNvQUWomcT5CQYkksgF7mcScogG7kzDEYeBL+HbrCXtj1Q
CYdgIG0DIA45Hu5IDoI2MJ+5X4CPXL/m7IJ8WyQIWkMruAUqYD/UTwyCBomm
U7rD2ByBzrRlw03QCN5G53rYBtuTTId0pcON8BFjDsBOKIOm2NYE1sPbcADd
FVon7IKn0DEeIticCIcZ84nrkK7pMA32wr6wjdHYHOTeYRujsU2gKfydOTZD
ASyCYvpcZO2fwlPI/4X/QHts7QDV7FkVTKPvdFgCL8EOeC9ka9LaUiENFjG2
wHVIVydsLyc21kB1LAhqYEMAL8CL0A4d98Bu2BOyNWgtLdGVAR8if8WQOMYP
4P8z2HIa6tG3vsax1g98z7X3LzHfYngOpkEefR6DfBgL/4SPFDOKHe03fVpD
BrSCEbQNd53S3QIbm0NDuAHKsaEM7oeu0ECxAduwczuMi5itsjkHOUv7gvwG
tEE+BSehCqrDtoZ67lP59jxtP8AKWAmTaJsIz8CzsC7BdEnn3fxeSluJ76n2
9gvmPC4/wbcRs1m214G6cInxF6EKqqEDtId74T5Yz5h18AHshuWMWQYrYVWy
nWmd7TvhLmhLn0zFCrZ0hDnYMBuusEc/wWV8egkO6Kwl2RiNbQEtE+zM6ewt
gHsSbIzGHoZP4y3GFGvt3daWPrYZNIcSWMfYeVCM3Ji+jeAaY687ki/CJajG
hio4DxeSbE1aWxIkQwvOcHP4mDX9C4pCZptsfBn5XILlIuWMM8jXo8QX+z0X
GhLf12m7Bnn4YpRiAp3bYDJMSbYzvt5jULFYzRxVcBmuRCynKbeN19mHBGwJ
QQA1YDZ9ZsFUeDpiZ0hnaSEUwHnW+IOfEZ2VI/T5DPJglJPnMavY7cccr6B+
EsQSzEcXXYd0pSSYb+Xjmsj5+GwMDIPhynXMuQ7qcwlkpdgea69zoDfMgdk+
RmN7MGf3iMW4Yr09PsiClpARsjOvsz8RJsFa2iYwd5HyP3If5smFftA/znwg
XygnKjcqZyl3FcHL8Bg+a8jeNIChyDNZwwzoDj2U+0O2dvkgTTkEG/fAN3Aa
XqftNbgV3a0hH51jYBpMh6H8NgT6wwD4BX0/w3LkFfBbfPMb2AAbIY+2Ncy1
Vncm8uPY9GfYiK5NEfOpfPsoDIGesA7b34KuyMeIsaMwHXmG32HzPecp923C
xo3QGF03RyyGFEtfwUlIxYZaybYn2ps5tM2Gs9j8vefIfM85yj1f89sp95l8
d4a20zAZeQpkoKul65TuD2nbp3sfjkIZc+z0O193/1XG/gRL+a0QcrHxAdgC
W6EHvqjHWutqvcgLGbMgye5s3d2fcd4K+W0C7EZOQ1cqnCRWT8XbGZzr/lqN
3ApfZEBzaAHH6XMM4hgTH7IYVaw2hWZJlsOUy56H+WGLgW88Zyh3KAZudZ3S
3RSaQDKk+BzN/U7W3XyWMd8lWQwoFi547lFOVG78Iwz2Pup7xuuRSvhT2HL4
Gc8RyhUFftaVk5WbF/ldLh/IFzcyPt3vMN1l5xjzPXwHZyMWA4qFWuhODZvP
5fs0fF070XJqM9chXVex6SfdizASriu3wiW4HLIzqLNI1+AR/l7VngcW49OR
V0fs7OkMvoocClvsl8NNyM+yR8/ANMU0NID6sIa9XQtHkDcydgEcRL6LOe6E
TpANu9jLcvgQ9kMpY/Lpuwg2I2+EDbAFtkIJPosyrorf05DbsubMRMuRypWp
zFELjtP3C6iNnOZt+m0zY97xnKfcl0RbDCbDFHgLG96Mt5pTtWe229oNusMx
dB6N2hiNrQt1fM1a+42Q7nNq7npeK89Fngcfo+OQ+0C+KGOunVABB2AWfWa6
Dum6h7k6sdYhMClqd6ru1puhCdwRtd/U5xh++B3/14QRMBJy6fMAdIYuMJA+
A6AESuFunW+dNaiI2Rk86WM0thk6mkIFfQ9AHfkUboB0yNSbwM/kcd9D7aVq
NtVu6d63ETSGMTDadUp3Qczmlg2ZyJXsyUHYDxXwLnNuTbQ1aW2lYat1VfPW
ZL8/57cjcDu/tYGnmHN8yN4sertM91zfjj5ZWnvUcs9EeBg5mT490ZUBv7Af
O7DhH74H2ova8fab+hyK1yUbBP9j3ED+PgzXsPFX6AAdYYtqdI8xxVorr037
wIOQjY5O7jP5LkpbItSCVPgiwXKHcojeNleYa47XJz8jz8JGrulgNX9fhVno
mAnz4Hm4gE3nZZdqGfieMWfhAvwYNR3SpZqnALkcn5TpXaSaCb6Kmm+KYBjj
t8csF2tMIXIjuAkSIAxf0/8UzICZ0A/j+kIu9IEU1pTsbyq9rUIQ7236rcL3
uhx2wW3Y0BrWwFqYBs/5Hmuvp0IbbHkQliFH0BF2H8qXz7svlsDSeMuJaa5D
ugr9fpFPF8bMh/JlKn3TIMIawvALfX9NNB3StRxW6JzSd7+fYZ3lfNrGwASY
CEUxeyvpzXQZeQM6imEHvJdoOaSb10CqhQbQp7/v2QXfM+1dvPtqouvWHmuv
/xKzvdEdOs5jULG4DJbrfcaYQLke+TF4Ah6HOOmMmQ07fM+19+cUI9ALcmJ2
h+ou/SvyazF7c+rt+YnervAwezrQ97if77H2uhfkwHbWtA0+h6NxlrOVu9+F
bVCFzm99Ts29zX8b7blhtcebaqY1WitzFnpOUG7YpZiFw8qFcD99ukBruA2y
aGsHe1jb3kRbs9Z+kLZKGIuNGXG2Bq3lfb1RPAcrFw+hz6NRy5HKlZNhktd4
qvV+JP+c8/v9SeQb8FVD97l8f4Tc8xkchEr4GA55jaxaeWnY7k7dsXP9jaG3
xgvwIozEhhEeU4qtXX42dsB7yaZTuvdDBTzNmKleM6p2rPDf9I1F31o2o+Md
v9N0t/Xw2lk2ytarrKmr54MpUbsDdRcWK3ZjdofqLp0L86L2htFbRjWJapNV
yCv9DtZd/GzEaj/VgDMiVgPJV/LZJOQ30fmGx6Ri8zA2fOI+kq+6+F2lHKlc
Wep3VUf27F6dO3xcmWTfIPQt4kHPrWrTb/qmo287w2B42M60zvYgGKy3Kbou
Q1/lKmgbs9pENUplzN7serv3hwH+DUbfYh6CvmH7xrHba+gzXnOr9v4SToRs
jMbmQh94g7le9zk193I/q8pZyl19XfdJ/7Yw32tXvVn0dimiT2GSnRmdnRM+
l3wm352m7ZuY9VHfZH8Lf4l8Qm9kfZPwml21e0909/BvPPrWc9lrQfVR3wdo
+4P3Ud/eCfZ20xuuKmRryvU+6lubOdKSbE+1t82jlpuVowsS7U7Q3fAIDILu
nLlukA2dU+wOUuwpBsd5zajasRCKYBhzDg1ZDCuWOzKmA2RC2xTbQ+3lIlgc
tZhV7G6CkpidmR1+J+tuXux9l8BS1UjYOAKegNH6Fhiz2lM1aFbMclovt7m7
25ztNsiWff5ttIbeJDAKnXmeg7J8DYV+p+huSfW7Xj6T70rc1i2wNWY1lmqt
cTAeeqMzR/cY/r9G/C9DxyuwAlaq5sGG21PsG4W+VYz02u9tKFZuTbZaWTXz
l8k2ZoXnOOW6v2FDqecw5bKl7hvNoblGu29U86n22+q2qkZSrVTsc23wWv19
5knH1vtgaLzdIbpLVsKqmO1Zptss2/8PjKbzag==
                "]], 
               Polygon[CompressedData["
1:eJwt1nvYz/Udx/Gf+3zfbh2WMbVriInL5dBVps2hFWqxJYqFuJ1dWbbIoZvC
5dTIYnMzKYdFzAizNbZCKY0mFa05XqVQzNqKWjnMHu/r8/3jeb3e3/fn9P5+
Pu/Pof7An3X/aV4ul3sOhbinOJc7Q7vTv2InqiGH1UW53CHmefp6fi7Xk/02
7YIf5id/lJ+jd6rfFX34e+M07lJWQe/mv8jOy/qN/k/jnxiES9zv0xMludyP
q/HTRXgK+QXaYSZGRMz0tPHK1TtDT+AjDMvG+5zej+HoqM8OKMSnytrRiuq5
XD/sKvN/+ujJvlyfl2GoNm0iRHaVsVspP0SP4gM8U5zGXRZx+x6MjqjNdzNd
jhVYrPwavmfp7fgBXuV/BbNxg7LN9BZjb2K3p6/gVZSp+4kYiugq/Bb9xdWe
bwIdhMHYW24tcBrlFnQfbZ395//MRzN2c1yL+uiXzXNDekX8Mxrh78ZvSq8W
Tx3Mzf77myWpbrRpSTfq8w/4Hn8j5Z3oFP6peMR8TUAtCTVT/cnsXWLcifKC
lDeRP/W0qYtx2uTp4zJ2O7G3xVm+b/B14VvrX9bgAEqVraMr9DNGP/1ob/RB
e33ewLeavoAXcRt/J8xlP6RsKftezGAPov0xoCCtZ6zrraUp5yL36rC7ssez
x2AsRuJBlJekNR0W626+BqEzVvHdQf+dzcsn9BJy+tob+cF3mH4/1hvfxU3o
nNWP+axRkubjQXNQwC7Em9iDz7I+oq992VofoY3RBE39S1/DXZnlcORyd/Hs
0KYFbYbmqKnvq/BFUcqvyLPVEZN6H9PfYQ3642q+Cvo8/oTJ2k/CQmyLXKfP
ab8WS7M9EXtjeLb3KnG9Mb6dn/I88n0jvdGctEJb7bfwjaMH7MODmFOUcncB
/QkewM+1uVm9eTFXuK4ktY9+7sVoZf1pe3nXDp0wQR9bzMEB9n700s8bfIfZ
3dh/Y+9m78Qu7NF+rH5G0KEYhhmYjs5ZbjxamtYz1nVi1OGbRfto3xuTsESV
++iV1uSw8hp0Hqpw3po1Uv4V3WZOXsKT6i7ERiyIc5j2RA/cjXV8b9E8davh
bNZH9DWF/zfsJ+hUTCtMY0cMQ+k+//9OYF7XiqXSPD+O2bjKHHwNo7BP/Vp0
nja/wlKs4FtE38UG9hBagf6oXUMsxn82/gkXylPdaPM0vWDMi1hSlvbFKloX
9VBb3Vqxp6un+Yl5GqfNWMzO/qcy5tO89ipNORm52bU0zX+sQyU9gIOoKe4X
tRlJKzEem7EJD2f/tp7OF89s9pN0KqZhEiZiDh5XVkXvF88HcaeI7z52X5zS
/iQWZTke985ADMDK7O4bRMepOzbmpHrqYzh7QUHKxcW0HupjcnbG/UObG9mt
0N0/V6k3h36lzjm8r5/30Cvbx/urpzsu7rp+WQ73pi/wn1W+na7HBryNtzBS
DP9V9g77GXWParOGNkDDohR3xD+clqC0KOVM5M7z2Znyx4LUPvo5GHsWWzEr
u4tX0nVYj63ab4mY8KGyPbQutrHn06VYVpTmNea3T3nKpQ10Fv/MonRvxRkQ
Z8Ft1rgTmqKb8duWpvsn7qHp2KreFPrn7A7bnf13/P+ybLyXs/+O/6+vfT00
zs74OOtrxDsCj0Xuq1dQlPIt8u5OOh4TsMf+u0P5cXoSp/Aaf4V6O+JciPNB
jo+xnqNxrDi9CR6me9Eyclc+H2IfxkQxPhprnO3P2Kd7snkbqPwBjEBHdVYq
70D7RF6ibkF6C3yLtsZNeEr7RVhQlt4T9aunuCP+/ZjCd4S+gd0Yk8Ue//AZ
PsW57ByM83CSfiZiJqbxXUGLUIi5yofwXaTb8RD7R9laxZqd95/n0C273+Je
XIolOJ7t6WV0Z3Z+H6Wn8a/SNE6M9xH7QxwrTe/CeIO8R5tp17wkvc/inVZE
G6BhnDvF6Z4pUb6VvQ374g6Oc1q/85S9y/6C/3NMz+6laLcdL8falaS1er04
vQvjfdgj9hJGRX7xv4ne2Xv2L8XprRNvnsfoSIzC7/PS/ddCnmxib8ZieX4p
3lq0Ea7DLeJ6IuaAHscJNEczLBfr08p+wS4vS2s4mk7AIzglZ0/i48J0DsZ5
eMA4+2Ps7F10JC/tm9g/beg2vBT3r7HbYHkW05nydA/EmXlN5KE+j6Glui1i
jbN8uZ420Pe1uKTvJup/nb0wuxMvF1etOOvL0v0d93h+UbpHqtHWhem8/Q7d
gddQqW5V7JWy9CaNt2kXdmfcns1PzNMMTMeArH60m4Ml7I70VnRAE/PfuCC9
lWOfxH4Zwj8Y9+CX6velm+PtjYrydIbGWVqTfZJ9Ls48fIn51rgKF4rTu+jX
tE52/nwp/jM4G/dv1vddtAd6lqX7O+7x/8TdiIvIjzsdpYXpTRpv0/8DVnTL
Ww==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7437440366128786, 0.8166519051903564, 0.913600435407416], 
             GraphicsGroup[{
               Polygon[CompressedData["
1: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
dKsZ
                "]], 
               Polygon[CompressedData["
1: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
                "]], 
               Polygon[CompressedData["
1:eJwt1FuIz2kcx/HHfwZjxjDD0Ia0RGGm2AyJIdktygiDlMOONIwortSS8w22
0C7a2TJyQXI+NKPBBeVUxEys8V8XXJDDnxHSDmLzevx/F+8+357v4fk+3+f3
ewYsXlW1MhVCmISOaMsJYQVtp/fwD17lh5DBLtR3COEOLcgNIR+/Y6X4QlrX
OYS/sA+frU2kzQUhXI05tEPXEFJ4wG5FVeKLMT8VhjACTfw5GhrGPim/iL8/
LUEv/Gg9xX9aXF92PxTLvyeuX9wDKRzVzxHcwnq9HKONchpwFn3U+EXuNLGV
GIwmNabQGWKno8pA9sp9wy63PhI/oFFcGb2ln5u4m/QZ+21Xd5ScL7QOf6ey
sTGnlJ7HhdhnlxDmWZubF8IpnEZG7EtMMPNyNV6ze4grRg0WiO9JM/rZzH+X
NqMFy1FrbTVdF8+crEf/WFTzXc3NEu0r9DleoIt55GEQXtkjnz7SQ2X8JpJ7
jvd9WD8jrA3mO84+gTdi21CP/+U+peOcZSD7Em1GS152hnGW+WZ6kH0Iw62P
FjeKPjC7NH5WexImJvvHPpa4pyH2mk1nYCYq5UzFFIxR4zAd3ymECmxDq9zm
Ttl7j/ffQEtRhq1iJ8h5SLdhO4ZhKPYkPcXelumnFn3wQY1qetl6BX8tXYKl
mJ/4i+hszMFa51yDLR2zdxXvbKPYDUgn+2+ij/WYjuek4+RV4L4ZfuXfQ2/j
DrqL7YbCZLZxxufFNmEWvqhxjq6O3yX/YlqNRWjDDWuvaXe1irATO1CHZ3y5
8e7NOoONudk3IL4Ffdnz2B/Yb/EO/yKNa5jM15KTfRPi21BOK+wzviBbM9ZO
J/97/O+7oRBHkn82/rvtcs7EHhLf95jkXSmhT9R/ijLn+8/ab3Qd1mO/76Ie
JfzD+Q6wf1VvIRYkdWP962qm2Rn6Du/xCR9Rk8wnzulcMsvG+N6YcW/8qYc/
cBFr+XbTb8/FsE0=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[0.793876375, 0.8574174999999999, 0.9000331], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtlm1o1WUYxh/Py/7nv3M21JwftpRGjiIGfYnoxROCgREKMzIpRzVBGYEF
LUGq0U6DIgSJhLDAWkQEWSlhhZamWIYNOltYS6P1xcFwbJDRhl+k39V9fXi4
7vP87+d+7pfrvp/TvfO5R54tpJTOsoqs2ysprV2W0hvgZBay9potKS3xvQ6+
35rSa+wfBi+gswp5G/hjOaVP0bkH7Cql9DjyQXCj98fBUc5PIx8Hf6mm9Btn
T4K/WtbeOOsS8iI4x5lT6P8LFjgzgbwHvIV1BrkMLq+lNIv+PPqb8fVe5AcI
ar/1B8GOlrAjexvw9TryITBzLN3g9WrY6cBeH36/gM4Y+KbtyN4UOjPolNBZ
wZlR5BHwZtu5kaf0Az48inwf8g7WTuRXwWkSvAU7G8G92PmJ/VbsNPm2F/mf
PL5Jp68YS/IVsFCLe5ucO4ve88j1POJUvMe4805WB/Id4HfOp/L6kmNXDq7Y
ZlspYpDNA2Cv9e8CL9q+7rk7j1hOVKKuqqPq+XsWd+nORdfrmnKTR06Um++5
YwT9iVIsyVfBLdZXnV92fvp0VxYca4BznD/N/gZ0HrK+zr1lXnWW4pt0GuDP
1te5D82ND8CPXMcF8K+WqPsM+I25LY6PO64/wR6flY26OS+/zhDn/ejfhJ9D
rt12sBe7/egcKcU36awE/7A/dXR2+6xsbHO/7MjCP90lLh93X/Sw/7E5LC4/
7bvEl65KnFXPLZgzF8A13tf3k66j6lm2/XZwNd/WsP8VZ2/Yvu752r4NgLOu
ker2lOs7mMWSrJq/7d5ZnwUnxA3xfcF5Vt9UnJPl4K1ZxPV5S9wtH05kwTP5
KZ6qZ9Q76sUR99QwuMk2+8Fhc6M3i9mk2r1eCT3pt4Fb21K6jX7YBb5Yjlj2
lWN2iP+d+DCAfBR5qhz9phwql+/SF92aV8Xgn+7SnU1+P4y8GlyBr1+g3y6f
bWdS9zi3r1RiSVa+262/hG8Fy7KhnldN81rkXfkXR646//JdZ6T/ZGvcLR/W
gX8Xg/+ar8+wBtVfxeCuOHwZ/MzzUHPxUjF0htAdcC+rp+dsU/HNW9Ze0/NN
c+5LzneRz29rUUvVVHzX7NAMqYLbnQflddD51DzrdJ/OYvOo/ZFfPbYjjkzY
N/nY7fmpt+Wi/ZFfVd+l2flgW/gjvxruffXZpH2QL9c8K85Xo5fEPXHwsO1r
Th/w3NtfiyVZ83WT5965PHpbNVL/1b2v7/N+I/RW7PG7oPehz3NM8/6ya6H3
cMwcFpcHiGEt8qlC9KR6U/NmxnNJ79I+81a9eN6xaP6tc06Um/XuQc2zDudW
Oc7NK82nZXn0uHp92r5p1u6yD/LlnOOayqNOqpf4NWReNcDd5qH42+9YNFMP
ur6ax08QD5AeK8SSvBV8T3EijxaCx7Ije+/wexX7S4XoZ/Xa//8vvL8IfmKe
iC/D9kd8b1jW3jHPMcW60rNX82zKcekdO2I7slc3Z/RWjNk3+XjI+dRs2+wZ
olnyH2f5M6I=
                "]], 
               Polygon[CompressedData["
1:eJwt0r9Pk1EUxvFDgdpX2sggRo01vEqCwQkjmKg0sSy4EjcGAxMTTLiwGEoi
/h0qKgklkQmNgz8W1GCJIElJCiawgOKio8Tvk3OGT3p77r3nnvfek45NDk9k
zOw2WvSbM7uFGtaxgW8oYzBitYhpbjzLf/Yt4bjV7OMJsw/4jC+YJ/kzPMcL
rKOG6+gLGt9BGU/xJPbMR0xzQ7iLrVY/S2dmOLurYHYZnUixwJkvowbVsp83
28MufuA7NrGGr7jKnh504wpmErOxJrMK9hOvWbUvooplvMIKXgeN69hWjeQY
QhmDWCXHFLnuYTTxNVrbwE7kXIycyxHT3AEOM55DuQZQKnhMcz/xK+MxzfXj
RtC4F9dCb3yjvnWy2WwCU3jQ7Heiu6ljO+9vrLdOcQkr3GGR2i/iDeMz6EAb
8iic9LvSnTX4vnb2nIoeUi+d543e8lYNVLJ+Rj3eQG/xKOe5dcbDnOdsizdc
iB5SL1WxhBGcZm0H7kesGjWptp6cz2lNkfHNxO9ebzCe+DelUaNqrWa9NtU4
zfgvNf3BEX7n/Y50VxXM4hOxVbzD++ihtYhpbjbWzuExjon9wwBKkfMoelK9
mUbvXkAxerA7elq9XYq9qkm1FWPtWZwLGusMnfUfneSC0Q==
                "]], 
               
               Polygon[{{586, 1, 713, 720, 721}, {749, 748, 758, 20, 662}, {
                3266, 3265, 3260, 539, 3397}, {3428, 551, 3404, 3400, 3401}, {
                585, 584, 593, 4, 599}, {703, 30, 869, 878, 879}, {647, 14, 
                672, 675, 676}, {905, 904, 915, 33, 705}}]}]}, {
             EdgeForm[], 
             RGBColor[0.8420835249999999, 0.8734933, 0.8784363399999999], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwtTzEKwkAQHGORFB4RhBSiiIp+wUYsDBa2NvZibTq/4A98gVjY+ARBrCQg
gvgJyR+cYbdYZtjdmZ3tb4rVLgLQZtVZ1xhIa0BJHCTAkDwnNp2rd6Sgxd2K
eGal5CdiQYMe+Y18GZnfPLKZdg7Eh/tfiPcG0GHvScwDMJaOOPVbuvnirMv+
l7h3f91puE8Wm0babbCs0n4SK/F3YiUu77VnU8bMffT3hPoRe7Ng+dTXncr/
/REXwTIre+k7+ukPQBsfiA==
                "]], 
               Polygon[CompressedData["
1:eJwt0DEOAVEQxvEJSnoEiQ1CqAjlKnR0juAAXIKCk9BQUFFRaoSWBJvQrsaW
+E9M8ctuvpl5b/KyvUG3HxKROCJIxkQS+ERFvsjwn7ZMa3nkkIWDC8NnXHHD
BmvLtFaip2gzOltB2TKt1VC1TGuTsMgYW2Z3of8OuouLJlZkS7tD7wrI3vDx
woxsijkWZm4zOuvRc8cZFzzxsMyzO1w7M7AzfevR3j1SnJPGgf8Ruw5tZ93d
sbfRN9O3O9F3RB0NdNC2TGuuvgvfAlr8/wAMWDht
                "]], 
               
               Polygon[{{736, 735, 747, 19, 660}, {652, 15, 678, 680, 681}, {
                566, 565, 578, 3, 594}, {704, 31, 886, 900, 901}, {3292, 3291,
                 3286, 541, 3405}, {3424, 549, 3383, 3378, 3379}}]}]}, {
             EdgeForm[], 
             RGBColor[0.941176, 0.906538, 0.834043], 
             GraphicsGroup[{
               
               Polygon[{{3302, 543, 3312}, {681, 16, 652}, {660, 18, 736}, {
                3327, 545, 3354}, {594, 2, 566}, {3372, 548, 3379}, {3379, 
                548, 3424}, {736, 18, 732}, {699, 17, 692}, {3318, 544, 
                3135}, {687, 16, 681}, {566, 2, 722}, {901, 32, 704}, {3405, 
                542, 3292}, {906, 32, 901}, {722, 2, 587}, {3365, 547, 
                3369}, {706, 32, 906}, {3358, 546, 3362}, {3292, 542, 3298}}], 
               
               Polygon[{{3298, 542, 543, 3302}, {3369, 547, 548, 3372}, {3354,
                 545, 546, 3358}, {3312, 543, 544, 3318}, {692, 17, 16, 
                687}, {732, 18, 17, 699}, {3135, 544, 545, 3327}, {3362, 546, 
                547, 3365}}]}]}}, {{}, 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{587, 722, 566, 594}], 
              Line[{652, 681, 687, 692, 699, 732, 736, 660}], 
              Line[{704, 901, 906, 706}], 
              
              Line[{3405, 3292, 3298, 3302, 3312, 3318, 3135, 3327, 3354, 
               3358, 3362, 3365, 3369, 3372, 3379, 3424}]}, 0.72], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{599, 585, 578, 565, 721, 586}], 
              Line[{647, 676, 678, 680, 686, 691, 698, 731, 735, 747, 749, 
               662}], 
              Line[{703, 879, 886, 900, 905, 705}], 
              
              Line[{3397, 3266, 3274, 3279, 3286, 3291, 3297, 3301, 3311, 
               3317, 3134, 3326, 3353, 3357, 3361, 3364, 3368, 3371, 3378, 
               3383, 3390, 3395, 3401, 3428}], 
              Line[{1962, 1804, 1814, 1967, 1996, 1988, 1962}], 
              Line[{2108, 2064, 2082, 2115, 2260, 2257, 2108}]}, 0.54], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{643, 670, 672, 675, 677, 679, 685, 690, 697, 730, 734, 
               746, 748, 758, 759, 665}], 
              Line[{701, 865, 869, 878, 885, 899, 904, 915, 922}], 
              Line[{713, 720, 564, 577, 584, 593, 598, 602}], 
              
              Line[{3396, 3253, 3260, 3265, 3273, 3278, 3285, 3290, 3296, 
               3300, 3310, 3316, 3133, 3325, 3352, 3356, 3360, 3363, 3367, 
               3370, 3377, 3382, 3389, 3394, 3400, 3404, 3409, 3429}], 
              Line[{975, 790, 804, 980, 1005, 1003, 975}], 
              Line[{990, 835, 848, 996, 1037, 1035, 990}], 
              Line[{1130, 976, 985, 1139, 1153, 1149, 1130}], 
              Line[{1050, 1000, 1009, 1051, 1171, 1170, 1050}], 
              Line[{1061, 1032, 1040, 1068, 1195, 1194, 1061}], 
              Line[{1104, 1184, 1095, 1116, 1189, 1262, 1104}], 
              Line[{1256, 1220, 1232, 1258, 1402, 1400, 1256}], 
              Line[{1479, 1336, 1347, 1483, 1501, 1498, 1479}], 
              
              Line[{1489, 1367, 1377, 1495, 1538, 1645, 1680, 1675, 1640, 
               1534, 1489}], 
              
              Line[{1557, 1515, 1525, 1562, 1667, 1716, 1829, 1827, 1710, 
               1659, 1557}], 
              Line[{1568, 1541, 1550, 1573, 1699, 1697, 1568}], 
              Line[{1743, 1597, 1846, 1921, 1917, 1836, 1743}], 
              Line[{1852, 1759, 1765, 1856, 1944, 1942, 1852}], 
              Line[{1961, 1803, 1813, 1966, 1995, 1987, 1961}], 
              
              Line[{1993, 1877, 1883, 1887, 1896, 2008, 2095, 2090, 2077, 
               2075, 1993}], 
              
              Line[{2070, 1974, 1977, 1979, 2001, 2088, 2185, 2183, 2176, 
               2175, 2070}], 
              Line[{2107, 2063, 2081, 2114, 2259, 2256, 2107}], 
              Line[{2215, 2124, 574, 2224, 2305, 2302, 2215}], 
              Line[{2231, 2145, 2150, 2240, 2323, 2322, 2231}], 
              
              Line[{2358, 2233, 2245, 2362, 2408, 2511, 2547, 2542, 2505, 
               2401, 2358}], 
              Line[{2497, 2365, 2375, 2499, 2519, 2516, 2497}], 
              
              Line[{2428, 2384, 2395, 2434, 2533, 2577, 2688, 2685, 2573, 
               2526, 2428}], 
              Line[{2588, 2558, 2567, 2593, 2719, 2717, 2588}], 
              Line[{2807, 2654, 2662, 2818, 2833, 2830, 2807}], 
              Line[{2877, 2766, 2795, 2880, 2945, 2779, 2877}], 
              Line[{3002, 2860, 2868, 3007, 3029, 3026, 3002}], 
              Line[{3014, 2888, 2893, 3019, 3062, 3058, 3014}], 
              Line[{2931, 2903, 2912, 2933, 3082, 3081, 2931}], 
              Line[{3074, 3023, 3031, 3076, 3214, 3211, 3074}], 
              Line[{3088, 3053, 3065, 3093, 3247, 3245, 3088}]}, 0.36], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{601, 597, 592, 583, 576, 563, 719, 712}], 
              
              Line[{664, 764, 844, 970, 969, 958, 956, 830, 745, 733, 729, 
               696, 689, 684, 805, 874, 871, 863, 859, 788, 669, 642}], 
              
              Line[{3385, 3240, 3250, 3252, 3259, 3264, 3272, 3277, 3220, 
               3089, 3095, 3100, 3111, 3229, 3309, 3315, 3132, 3324, 3351, 
               3355, 3248, 3165, 3177, 3178, 3191, 3256, 3376, 3381, 3388, 
               3393, 3399, 3403, 3408, 3412, 3416, 3438}], 
              Line[{700, 864, 868, 877, 884, 898, 903, 914, 921}], 
              Line[{960, 763, 770, 965, 984, 1138, 1152, 1148, 1141, 1134, 
               1126, 967, 960}], 
              
              Line[{974, 789, 803, 979, 1015, 1156, 1173, 1172, 1151, 1002, 
               974}], 
              
              Line[{987, 820, 832, 834, 847, 995, 1044, 1166, 1203, 1199, 
               1162, 1034, 1029, 1027, 987}], 
              Line[{1111, 934, 946, 1121, 1112, 1283, 1111}], 
              
              Line[{1049, 999, 1008, 1012, 1021, 1057, 1174, 1213, 1342, 1339,
                1211, 1169, 1049}], 
              
              Line[{1060, 1031, 1039, 1067, 1204, 1236, 1372, 1371, 1227, 
               1193, 1060}], 
              
              Line[{1080, 1055, 1065, 1082, 1231, 1234, 1248, 1261, 1412, 
               1410, 1401, 1399, 1255, 1219, 1080}], 
              
              Line[{1103, 1183, 1094, 1115, 1188, 1290, 1364, 1433, 1274, 
               1362, 1103}], 
              
              Line[{1345, 1215, 1224, 1229, 1239, 1352, 1409, 1508, 1558, 
               1555, 1506, 1394, 1345}], 
              Line[{1272, 1265, 1269, 1277, 1434, 1427, 1272}], 
              
              Line[{1379, 1310, 1318, 1320, 1331, 1388, 1492, 1545, 1635, 
               1634, 1543, 1486, 1476, 1474, 1379}], 
              Line[{1478, 1335, 1346, 1482, 1500, 1497, 1478}], 
              
              Line[{1488, 1366, 1376, 1494, 1537, 1644, 1679, 1674, 1639, 
               1533, 1488}], 
              
              Line[{1581, 1443, 1672, 1596, 1845, 1920, 1916, 1912, 1909, 
               1833, 1733, 1663, 1575, 1578, 1581}], 
              
              Line[{1612, 1472, 1481, 1617, 1626, 1767, 1772, 1770, 1763, 
               1619, 1612}], 
              
              Line[{1556, 1514, 1524, 1561, 1666, 1715, 1828, 1826, 1709, 
               1658, 1556}], 
              Line[{1540, 1567, 1696, 1698, 1572, 1549, 1540}], 
              
              Line[{1678, 1609, 1614, 1616, 1622, 1690, 1776, 1864, 1949, 
               1948, 1943, 1941, 1851, 1758, 1678}], 
              
              Line[{1711, 1808, 1876, 1992, 2074, 2076, 2089, 2196, 2274, 
               2278, 2203, 2101, 2007, 1895, 1818, 1720, 1711}], 
              
              Line[{1742, 1726, 1738, 1746, 1914, 1923, 2106, 2105, 1919, 
               1901, 1742}], 
              Line[{1871, 1787, 1793, 1875, 1976, 1978, 2000, 2087, 2184, 
               2266, 2353, 2352, 2264, 2174, 2069, 1973, 1871}], 
              
              Line[{1960, 1802, 1812, 1822, 1835, 1838, 1847, 1853, 1860, 
               1983, 2045, 2038, 2026, 2024, 2012, 2002, 1994, 1986, 1960}], 
              
              Line[{2148, 1954, 1965, 2153, 2166, 2329, 2337, 2333, 2326, 
               2155, 2148}], 
              
              Line[{2094, 2016, 2028, 2030, 2049, 2053, 2061, 2062, 2080, 
               2113, 2258, 2255, 2239, 2235, 2219, 2217, 2208, 2207, 2094}], 
              
              Line[{2212, 2116, 2120, 2123, 573, 2223, 2135, 2399, 2458, 2455,
                2450, 2447, 2388, 2294, 2212}], 
              
              Line[{2230, 2144, 2149, 2151, 2161, 2249, 2341, 2412, 2487, 
               2485, 2476, 2474, 2404, 2321, 2230}], 
              
              Line[{2357, 2232, 2244, 2361, 2407, 2510, 2546, 2541, 2504, 
               2400, 2357}], 
              
              Line[{2304, 2287, 2299, 2311, 2452, 2463, 2586, 2583, 2456, 
               2442, 2304}], 
              Line[{2496, 2364, 2374, 2498, 2518, 2515, 2496}], 
              
              Line[{2427, 2383, 2394, 2433, 2532, 2576, 2687, 2684, 2572, 
               2525, 2427}], 
              
              Line[{2522, 2429, 2438, 2524, 2579, 2581, 2590, 2690, 2746, 
               2741, 2734, 2731, 2679, 2571, 2522}], 
              
              Line[{2560, 2502, 2509, 2563, 2666, 2725, 2837, 2835, 2825, 
               2823, 2712, 2648, 2560}], 
              Line[{2557, 2587, 2716, 2718, 2592, 2566, 2557}], 
              
              Line[{2701, 2606, 2627, 2703, 2794, 2879, 2944, 2778, 2876, 
               2612, 2701}], 
              Line[{2790, 2625, 2635, 2798, 2793, 2964, 2790}], 
              
              Line[{2801, 2646, 2652, 2653, 2661, 2817, 2844, 2992, 3003, 
               3000, 2985, 2829, 2820, 2813, 2801}], 
              
              Line[{2832, 2681, 2694, 2840, 2867, 3006, 3028, 3025, 3001, 
               2859, 2832}], 
              
              Line[{2849, 2715, 2722, 2853, 2892, 3018, 3061, 3057, 3050, 
               3046, 3012, 2881, 2849}], 
              Line[{2956, 2772, 2942, 2960, 2953, 3121, 2956}], 
              Line[{2897, 2858, 2862, 2898, 3030, 3032, 3040, 3084, 3227, 
               3224, 3213, 3210, 3073, 3022, 2897}], 
              
              Line[{2908, 2884, 2889, 2916, 3064, 3092, 3246, 3244, 3087, 
               3052, 2908}], 
              
              Line[{2930, 2902, 2911, 2914, 2925, 2948, 3091, 3113, 3283, 
               3282, 3108, 3080, 2930}]}, 0.18], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{5, 596, 591, 582, 575, 562, 718, 711}], 
              
              Line[{751, 5, 607, 756, 769, 964, 983, 1137, 1159, 1307, 1316, 
               1315, 1302, 1147, 1140, 1133, 1125, 966, 959, 761, 751}], 
              
              Line[{13, 668, 787, 858, 1004, 1058, 1062, 1013, 873, 889, 893, 
               815, 695, 728, 817, 935, 937, 955, 957, 968, 1036, 1143, 1144, 
               1042, 977, 843, 21}], 
              
              Line[{29, 888, 1054, 1079, 1218, 1254, 1398, 1420, 1559, 1560, 
               1422, 1411, 1260, 1247, 1233, 1230, 1081, 1064, 891, 867, 876, 
               883, 897, 902, 913, 920}], 
              Line[{2131, 2137, 2308, 2313}], 
              Line[{2139, 1934, 1930, 1932}], 
              Line[CompressedData["
1:eJwl0DsoBmAUBuDjfvspi8IgKSXJYpNSijIQinIbqN/mlgjFKEUpu0WiWJBL
UkyUbBZKsSgyGoiBpwxPX53v9p5TPjTWOZoSEXMUp0ZsJyL2OeSMC665ZZ18
7vIiBkjyQJFaKZVUs6q2aa3nhy066KOfD/sHnPPDtNoJtfkRddTTSDOttNNF
D1Uy9lsfnN+lgHdv9NHEaa6crLDMAvNMMUk29zn6pY2X7IgNanjKihiknL3M
iFkmGKeQ54yIV9744ItFerlJj9ihgkwG0yIaaCFJgVohRdRyxB1Jd0cYZ4mE
fyrY5YpuWWYok6+RR76YkX2NDP2Usc0lrWYwzCff/FJiRsc8Jf5n9wfZa0HJ

               "]], 
              Line[CompressedData["
1:eJwl0DErBAAYBuCXc+dwZTQz3GIzSBmNBiGDDKIoiaMoSRbZSBmUX+AXGJGk
DJSulJhuMCgLg+FSPGV4lq++r/d7e+drE6stScZptiab7PBLXyGp881eW3JK
fzEZZYxJpphlgSVeKZSSZU4oticjXFIuJwfcMNSRLLLCBk/80OSTDxrMdSb7
9HQlA1zwwnbFfY5Z59HsnjvOqdLNlt01asxQd/OKYaocyrLBtXxnlPiSu8Y0
z/65ZZBejnSwy7tO3mjwQKXw398fCpEviw==
               "]], 
              
              Line[{986, 819, 831, 833, 846, 994, 1043, 1165, 1202, 1198, 
               1190, 1187, 1161, 1026, 986}], 
              
              Line[{1084, 912, 1093, 1114, 1118, 1128, 1197, 1300, 1373, 1459,
                1458, 1432, 1273, 1423, 1421, 1356, 1257, 1179, 1084}], 
              
              Line[{1110, 933, 945, 1120, 1123, 1293, 1296, 1462, 1455, 1603, 
               1454, 1450, 1289, 1282, 1110}], 
              
              Line[{998, 1048, 1168, 1210, 1338, 1341, 1349, 1350, 1222, 1181,
                1056, 1020, 1011, 1007, 998}], 
              
              Line[{1344, 1214, 1223, 1228, 1238, 1351, 1408, 1507, 1563, 
               1656, 1719, 1817, 1894, 2006, 2100, 2202, 2283, 2378, 2437, 
               2523, 2578, 2580, 2589, 2689, 2745, 2740, 2733, 2730, 2678, 
               2570, 2521, 2425, 2370, 2273, 2267, 2265, 2192, 2073, 1991, 
               1874, 1801, 1706, 1650, 1554, 1505, 1393, 1344}], 
              
              Line[{1271, 1264, 1268, 1276, 1436, 1447, 1590, 1598, 1748, 
               1744, 1593, 1584, 1439, 1426, 1271}], 
              
              Line[{1309, 1378, 1473, 1475, 1485, 1542, 1633, 1702, 1786, 
               1870, 1972, 2068, 2173, 2263, 2351, 2419, 2501, 2559, 2647, 
               2711, 2822, 2824, 2834, 2836, 2724, 2665, 2562, 2508, 2421, 
               2359, 2272, 2195, 2086, 1999, 1882, 1805, 1794, 1792, 1705, 
               1642, 1544, 1491, 1387, 1330, 1319, 1317, 1309}], 
              
              Line[{1580, 1442, 1671, 1595, 1844, 1751, 2036, 572, 2222, 2134,
                2398, 2457, 2454, 2449, 2446, 2387, 2293, 2211, 2111, 2020, 
               1908, 1832, 1732, 1662, 1574, 1577, 1580}], 
              
              Line[{1611, 1471, 1480, 1484, 1487, 1620, 1630, 1766, 1779, 
               1951, 1964, 2152, 2165, 2170, 2180, 2334, 2348, 2344, 2336, 
               2332, 2325, 2154, 2147, 1952, 1946, 1769, 1762, 1618, 1611}], 
              
              Line[{1511, 1629, 1653, 1782, 1811, 1821, 1834, 1837, 1790, 
               1673, 1638, 1532, 1520, 1518, 1511}], 
              
              Line[{1677, 1608, 1613, 1615, 1621, 1689, 1775, 1863, 1957, 
               2060, 2160, 2248, 2340, 2411, 2486, 2484, 2475, 2473, 2403, 
               2320, 2229, 2143, 2044, 1940, 1850, 1757, 1677}], 
              
              Line[{1669, 1714, 1840, 1891, 2027, 2029, 2048, 2052, 1904, 
               1867, 1729, 1695, 1685, 1682, 1669}], 
              
              Line[{1712, 1741, 1889, 1890, 1900, 1918, 2104, 2122, 2286, 
               2303, 2430, 2453, 2574, 2575, 2582, 2585, 2462, 2451, 2310, 
               2298, 2129, 2117, 1922, 1913, 1745, 1737, 1725, 1723, 1712}], 
              
              Line[{2011, 2169, 2199, 2347, 2373, 2381, 2390, 2392, 2356, 
               2226, 2181, 2037, 2025, 2023, 2011}], 
              
              Line[{2280, 2218, 2234, 2238, 2254, 2290, 2416, 2445, 2553, 
               2550, 2535, 2531, 2432, 2393, 2280}], 
              
              Line[{2470, 2318, 2324, 2479, 2482, 2631, 2634, 2797, 2792, 
               2963, 2789, 2785, 2624, 2617, 2470}], 
              
              Line[{2611, 2464, 2602, 2613, 2765, 2783, 2941, 2959, 2952, 
               3120, 2955, 2937, 2775, 2764, 2611}], 
              
              Line[{2640, 2500, 2503, 2644, 2660, 2816, 2843, 2991, 3010, 
               3173, 3189, 3184, 3167, 2999, 2984, 2828, 2819, 2812, 2800, 
               2645, 2640}], 
              
              Line[{2695, 2598, 2467, 2605, 2626, 2628, 2639, 2708, 2805, 
               2886, 2970, 2968, 2943, 2777, 2935, 2932, 2870, 2760, 2695}], 
              
              Line[{2846, 2704, 2710, 2714, 2721, 2852, 2891, 3017, 3060, 
               3056, 3049, 3045, 3011, 2878, 2846}], 
              
              Line[{2758, 2737, 2748, 2761, 2910, 2913, 2924, 2947, 3090, 
               3112, 3293, 3314, 3437, 3433, 3308, 3281, 3107, 3079, 2929, 
               2901, 2758}], 
              
              Line[{2896, 2857, 2861, 2863, 2874, 2905, 3039, 3083, 3226, 
               3223, 3212, 3209, 3072, 3021, 2896}]}, 0], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{638, 663, 786, 850, 845, 779, 659, 657, 776, 818, 816, 
               807, 801, 766, 635, 628, 621, 616, 760, 778, 972, 992, 1146, 
               1164, 1312, 1329, 1325, 1306, 1158, 1136, 982, 963, 768, 755, 
               606, 604}], 
              
              Line[{694, 856, 887, 1053, 1078, 1217, 1253, 1397, 1419, 1552, 
               1547, 1414, 1391, 1241, 1209, 1070, 1045, 872, 852, 842, 838, 
               828, 861, 1023, 1019, 1010, 1006, 855, 795, 785, 854, 989, 988,
                849, 774, 667}], 
              
              Line[{1601, 1589, 1446, 1435, 1275, 1267, 1263, 1270, 1425, 
               1438, 1583, 1592, 1740, 1736, 1724, 1722, 1579, 1566, 1429, 
               1416, 1259, 1246, 1092, 1075, 1066, 1063, 890, 866, 875, 882, 
               896, 911, 1088, 1096, 926, 919}], 
              
              Line[{1604, 1602, 1605, 1754, 1606, 1610, 1760, 1761, 1764, 
               1768, 1945, 1947, 2146, 2140, 2317, 2469}], 
              
              Line[{1753, 1752, 1927, 1928, 2118, 2128, 2297, 2300, 2306, 
               2315, 2459, 2314, 2460, 2468, 2601, 2608}], 
              Line[{1931, 1929, 1933, 2138}], 
              Line[{2312, 2307, 2136, 2130}], 
              
              Line[{2620, 2616, 2623, 2784, 2788, 2962, 2791, 2796, 2633, 
               2630, 2481, 2478, 2328, 2331, 2335, 2343, 2488, 2490, 2637, 
               2641, 2799, 2811, 2981, 2988, 2993, 2998, 3166, 3183, 3188, 
               3172, 3009, 2990, 2842, 2815, 2659, 2643, 2507, 2513, 2650, 
               2670, 2827, 2851, 2996, 3015, 3179, 3204, 3207, 3217, 3221, 
               3193, 3037, 3044, 3048, 3055, 3201, 3238, 3236, 3231, 3384}], 
              
              Line[{3439, 3419, 3421, 3423, 3299, 3268, 3097, 3070, 2920, 
               2895, 2751, 2729, 2736, 2757, 2900, 2928, 3078, 3106, 3280, 
               3307, 3432, 3436, 3313, 3294, 3125, 3101, 2946, 2923, 2768, 
               2755, 2749, 2747, 2597, 2584, 2594, 2596, 2600, 2610, 2763, 
               2774, 2936, 2954, 3119, 2951, 2958, 2940, 2782, 2771}], 
              
              Line[{710, 717, 726, 928, 727, 739, 581, 590, 595, 600, 750, 
               757, 950, 961, 1124, 1132, 1298, 1304, 1308, 1314, 1468, 1470, 
               1469, 1467, 1464, 1461, 1295, 1292, 1122, 1119, 944, 932, 1109,
                1281, 1288, 1453}], 
              
              Line[{1016, 892, 702, 1024, 1083, 1178, 1242, 1237, 1175, 1072, 
               1016}], 
              Line[{1028, 936, 954, 1033, 1117, 1113, 1028}], 
              
              Line[{1154, 1017, 1025, 1160, 1186, 1327, 1358, 1354, 1322, 
               1176, 1154}], 
              Line[{1196, 1129, 1142, 1200, 1301, 1299, 1196}], 
              
              Line[{1221, 1182, 1191, 1225, 1369, 1406, 1527, 1522, 1404, 
               1360, 1221}], 
              
              Line[{1333, 1201, 1206, 1207, 1212, 1343, 1389, 1384, 1380, 
               1374, 1333}], 
              
              Line[{1386, 1332, 1337, 1340, 1348, 1395, 1503, 1502, 1493, 
               1490, 1386}], 
              
              Line[{1530, 1441, 1670, 1594, 1843, 1750, 2035, 571, 2221, 2133,
                2397, 2316, 2537, 2466, 2604, 2544, 2472, 2402, 2319, 2228, 
               2142, 2043, 1939, 1849, 1756, 1676, 1607, 1536, 1457, 1431, 
               1530}], 
              
              Line[{1510, 1628, 1652, 1781, 1810, 1820, 1789, 1665, 1637, 
               1531, 1519, 1517, 1510}], 
              
              Line[{1565, 1655, 1718, 1816, 1893, 2005, 2099, 2201, 2282, 
               2377, 2436, 2441, 2386, 2292, 2210, 2110, 2019, 1907, 1831, 
               1731, 1661, 1570, 1565}], 
              
              Line[{1624, 1688, 1774, 1862, 1956, 2059, 2159, 2247, 2339, 
               2410, 2492, 2494, 2418, 2350, 2262, 2172, 2067, 1971, 1869, 
               1785, 1701, 1632, 1624}], 
              
              Line[{1771, 1641, 1646, 1777, 1791, 1953, 1968, 1963, 1950, 
               1783, 1771}], 
              
              Line[{1713, 1668, 1681, 1684, 1694, 1728, 1866, 1903, 2051, 
               2047, 1898, 1855, 1841, 1839, 1713}], 
              
              Line[{1692, 1796, 1858, 1981, 2055, 2187, 2242, 2251, 2191, 
               2072, 1990, 1873, 1800, 1704, 1692}], 
              
              Line[{1807, 1881, 1998, 2085, 2194, 2271, 2367, 2369, 2276, 
               2205, 2092, 2014, 1885, 1824, 1807}], 
              Line[{1910, 1879, 1888, 1915, 2083, 2078, 1910}], 
              Line[{2156, 1975, 1984, 2163, 2182, 2179, 2156}], 
              
              Line[{2010, 2168, 2198, 2346, 2372, 2380, 2389, 2391, 2355, 
               2225, 2216, 2214, 2178, 2022, 2010}], 
              
              Line[{2096, 2119, 2269, 2295, 2422, 2424, 2301, 2279, 2121, 
               2103, 2096}], 
              
              Line[{2237, 2285, 2396, 2431, 2530, 2534, 2549, 2552, 2444, 
               2415, 2289, 2253, 2237}], 
              
              Line[{2528, 2656, 2692, 2838, 2865, 2871, 2845, 2702, 2664, 
               2539, 2528}], 
              
              Line[{2668, 2555, 2561, 2564, 2569, 2677, 2726, 2720, 2713, 
               2709, 2668}], 
              
              Line[{2723, 2667, 2673, 2675, 2682, 2732, 2856, 2855, 2848, 
               2847, 2723}], 
              
              Line[{2699, 2739, 2873, 2904, 3038, 3041, 2906, 2882, 2743, 
               2706, 2699}], 
              Line[{2864, 2753, 2759, 2869, 2921, 2917, 2864}], 
              
              Line[{2885, 2806, 2821, 2887, 2983, 3054, 3152, 3151, 3047, 
               2969, 2885}], 
              Line[{3035, 2934, 2776, 3042, 3114, 3109, 3035}], 
              Line[{3145, 2967, 2977, 3156, 3150, 3345, 3145}], 
              Line[{3205, 3068, 3075, 3215, 3262, 3257, 3205}], 
              Line[{3339, 3127, 3322, 3343, 3336, 3455, 3339}], 
              Line[{3261, 3200, 3208, 3270, 3391, 3386, 3261}], 
              
              Line[{3275, 3225, 3232, 3234, 3242, 3288, 3418, 3414, 3410, 
               3406, 3275}]}, -0.18], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{603, 605, 609, 613, 615, 620, 627, 634, 765, 800, 806, 
               771, 651, 654, 656, 658, 661, 637}], 
              
              Line[{666, 773, 775, 782, 784, 794, 799, 811, 857, 1018, 1022, 
               860, 827, 837, 841, 851, 853, 693}], 
              Line[{1108, 931, 927, 725, 716, 709}], 
              Line[{1278, 1266, 1105, 1099, 925, 918}], 
              Line[{1285, 1280, 1287, 1452}], 
              Line[{2950, 2939, 2781, 2770}], 
              
              Line[{2965, 2961, 2966, 3139, 3144, 3344, 3149, 3155, 2976, 
               2973, 2804, 2810, 2980, 2987, 3160, 3171, 3176, 3182, 3187, 
               3196, 3199, 3203, 3206, 3216, 3374}], 
              
              Line[{3126, 3136, 3321, 3342, 3335, 3454, 3338, 3320, 3130, 
               3118, 3104, 3124, 3305, 3329, 3444, 3441, 3435, 3431, 3427, 
               3425, 3422, 3445}], 
              Line[{1449, 1445, 1588, 1600}], 
              Line[{2619, 2615, 2622, 2787}], 
              Line[{580, 738, 741, 940, 943, 953, 949, 754, 743, 589, 580}], 
              Line[{962, 772, 777, 971, 991, 1145, 1163, 1311, 1328, 1324, 
               1305, 1157, 1135, 981, 962}], 
              
              Line[{881, 908, 1074, 1091, 1245, 1251, 1102, 1087, 910, 895, 
               881}], 
              
              Line[{1069, 1047, 1052, 1077, 1216, 1252, 1396, 1418, 1551, 
               1546, 1413, 1390, 1240, 1208, 1069}], 
              
              Line[{1291, 1127, 1131, 1297, 1303, 1465, 1466, 1463, 1460, 
               1294, 1291}], 
              Line[{1321, 1180, 1185, 1326, 1357, 1353, 1321}], 
              Line[{1403, 1361, 1368, 1405, 1526, 1521, 1403}], 
              
              Line[{1428, 1417, 1424, 1437, 1582, 1591, 1739, 1735, 1585, 
               1576, 1428}], 
              Line[{1440, 1529, 1430, 1456, 1535, 1586, 1440}], 
              
              Line[{1627, 1509, 1516, 1636, 1664, 1788, 1819, 1809, 1780, 
               1651, 1627}], 
              
              Line[{1654, 1564, 1569, 1660, 1730, 1830, 1906, 2018, 2109, 
               2209, 2291, 2385, 2440, 2435, 2376, 2281, 2200, 2098, 2004, 
               1892, 1815, 1717, 1654}], 
              
              Line[{1687, 1623, 1631, 1700, 1784, 1868, 1970, 2066, 2171, 
               2261, 2349, 2417, 2493, 2491, 2409, 2338, 2246, 2158, 2058, 
               1955, 1861, 1773, 1687}], 
              
              Line[{1721, 1683, 1693, 1727, 1865, 1902, 2050, 2046, 1897, 
               1854, 1721}], 
              
              Line[{1795, 1691, 1703, 1799, 1872, 1989, 2071, 2190, 2250, 
               2241, 2186, 2054, 1980, 1857, 1795}], 
              
              Line[{1749, 1842, 1747, 1755, 1848, 1938, 2042, 2141, 2227, 
               2309, 2132, 2220, 570, 2034, 1749}], 
              
              Line[{1880, 1806, 1823, 1884, 2013, 2091, 2204, 2275, 2368, 
               2366, 2270, 2193, 2084, 1997, 1880}], 
              
              Line[{2167, 2009, 2021, 2177, 2213, 2354, 2379, 2371, 2345, 
               2197, 2167}], 
              
              Line[{2284, 2236, 2252, 2288, 2414, 2443, 2551, 2548, 2439, 
               2405, 2284}], 
              
              Line[{2477, 2327, 2330, 2483, 2489, 2636, 2638, 2632, 2629, 
               2480, 2477}], 
              
              Line[{2599, 2609, 2762, 2773, 2926, 2922, 2767, 2754, 2607, 
               2595, 2599}], 
              Line[{2536, 2461, 2471, 2543, 2603, 2465, 2536}], 
              
              Line[{2642, 2506, 2512, 2649, 2669, 2826, 2850, 2995, 3013, 
               3008, 2989, 2841, 2814, 2658, 2642}], 
              Line[{2655, 2527, 2538, 2663, 2696, 2691, 2655}], 
              Line[{2738, 2698, 2705, 2742, 2875, 2872, 2738}], 
              
              Line[{2750, 2728, 2735, 2756, 2899, 2927, 3077, 3105, 3269, 
               3267, 3096, 3069, 2919, 2894, 2750}], 
              Line[{3192, 3036, 3043, 3197, 3230, 3228, 3192}], 
              Line[{3284, 3233, 3241, 3287, 3417, 3413, 3284}]}, -0.36], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              
              Line[{608, 612, 614, 619, 626, 633, 641, 646, 650, 653, 655, 
               630}], 
              
              Line[{671, 781, 783, 793, 798, 810, 814, 823, 826, 836, 840, 
               688}], 
              Line[{1107, 1098, 924, 917}], 
              Line[{1448, 1444, 1587, 1599}], 
              Line[{1451, 1286, 1279, 1284}], 
              Line[{2769, 2780, 2938, 2949}], 
              Line[{2786, 2621, 2614, 2618}], 
              Line[{3141, 3138, 3143, 3347}], 
              
              Line[{3350, 3148, 3154, 2975, 2972, 2803, 2809, 2979, 2986, 
               3159, 3170, 3175, 3181, 3186, 3195, 3198, 3202, 3373}], 
              
              Line[{3446, 3426, 3430, 3434, 3440, 3443, 3328, 3304, 3123, 
               3103, 3117, 3129, 3319, 3337, 3453, 3334, 3341, 3331}], 
              Line[{3459, 3462}], 
              Line[{708, 715, 724, 930}], 
              Line[{737, 579, 588, 742, 753, 948, 952, 942, 939, 740, 737}], 
              
              Line[{907, 880, 894, 909, 1086, 1101, 1250, 1244, 1090, 1073, 
               907}], 
              Line[{2003, 1899, 1905, 2017, 2102, 2097, 2003}], 
              Line[{1926, 2033, 569, 2127, 2041, 1937, 1926}], 
              Line[{1958, 2057, 2157, 2162, 2065, 1969, 1958}]}, -0.54], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{623, 649, 645, 640, 632, 625, 618, 611}], 
              Line[{683, 825, 822, 813, 809, 797, 792, 674}], 
              Line[{916, 923, 1097, 1106}], 
              Line[{929, 723, 714, 707}], 
              Line[{3330, 3340, 3333, 3452, 3449, 3447, 3442, 3450}], 
              Line[{3346, 3142, 3137, 3140}], 
              Line[{3366, 3180, 3174, 3169, 3162, 3158, 3147, 3349}], 
              Line[{3458, 3461}], 
              Line[{938, 744, 752, 947, 951, 941, 938}], 
              Line[{1089, 1076, 1085, 1100, 1249, 1243, 1089}], 
              Line[{1925, 2032, 568, 2126, 2040, 1936, 1925}], 
              Line[{2971, 2802, 2808, 2978, 2982, 2974, 2971}], 
              Line[{3116, 3128, 3306, 3303, 3122, 3102, 3116}]}, -0.72], 
            Tooltip[{
              Directive[{
                Opacity[0.4], 
                GrayLevel[0]}], 
              Line[{610, 617, 624, 631, 639, 644, 648, 622}], 
              Line[{673, 791, 796, 808, 812, 821, 824, 682}], 
              Line[{3359, 3168, 3161, 3157, 3146, 3348}], 
              Line[{3457, 3448, 3451, 3332, 3456, 3460}], 
              
              Line[{2031, 1924, 1935, 2039, 2125, 567, 
               2031}]}, -0.8999999999999999], {}, {}}}], {
         AspectRatio -> 1, Frame -> True, ImagePadding -> {{20, 15}, {20, 1}},
           ImageSize -> {260, 
            Rational[395, 2]}, PlotRange -> {{-1., 1.}, {-0.5, 0.5}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}}]]}}, 
     Spacings -> {0, 0}], $CellContext`forceGrid$$ = CompressedData["
1:eJztmPsz3FcYh9etm7CzWSw7SNRWies2qSghsS8rohX3Sl0yQWgUad2iGrRW
QjXMIhiRxGSQiGnFSOPSjqbkYtoGmYnWJakoDYmVSUUISyXSTNfnm39id2Z/
OHPOed/n2fOe97u7wgNJQR+rs1gs3Vdv4av3kqg2PsuxlPpqFps1i6R0+Hja
CU5dCt1UeLRO1sTQk4G72Y39e0k3IUeU3upDl8QVimOl7jQ9UP8wwsOJjByv
ePgbbKF+f5fOcy6bSXqhyX00T0iPhkVt8ioT+iFkID+pxZC6B7v+jpPqk8Eo
6xYnR5c+qa02vRLLo/qFfMF5bR4zxjzWYz/iIT7yIT94wAde8MMHfvCF/3Rw
4g6T+AJa3MbOr5/MIE6KX9eFjHiS3UjXzAjbRzaaXkUnMgNo4FZZyR9qnpR6
u+tu8P7t5PdjRPpc72t/a5vmyMhfzMhU2/VRjq8RlWmMnJn5R5/xK+YKNIps
OGR7qvAt413ryS625Hh4E5tedBpvdLVlM2PMYz32Ix7iIx/ygwd84AU/fOAH
X/gfzD/ZIG/IJdOQPe18rVSqdvg3QssxhtS0oxYyokOoJ/nBNasRb1LnT+mc
sXej3bn3uY+FDnRzOShbHmLNnA/4Wpbe57sa6NPPltmrVRu4FGEZPry9Yx31
LHtc4rtpUce5gq4HXA0SWMp3Ro+oUUBfkJfbETVmjHmsx37EQ3zkQ37wgA+8
4IcP/OAL/4qjY5s33c6iQ1mev90/cIg6FbWcJvf9JNHjbDEdDiBDmUA6Vi4h
Ld5D5xfdTiTPsdc+aS4i/9Hr3OJn5ky94rzAi/O1H7dYmTmiQUvBp6+6/cSi
6Gn/ubNaq2Idhe/cVuFz8aBxtffpr1eYMeaxHvsRD/GRD/nBAz7wgh8+8IMv
/PN5l4vvjH9OFqdKfi0PiyNtn84PEydCSXvtfq0Mb81tMCZqKc81j5I50J3Q
iwONPVbUKHt+TZRgxtxf1C/OD/xSsyrrQC0WwTeZEzOreXlJnFjfUlNorhBX
SQPKo84vMmPMYz32Ix7iIx/ygwd84AU/fOAHX/i3sr1lCQ1p1Gz7ZEK4IZbY
a/WTV8qPmOjbTZUOeX6SRlfm/ok/uBrquMeCVivN3ply2Mj0M9xn1DPOEz5u
dWf/+qpeIZ7fxx1nOy2IPatifdvH58V6ZqkuX6TNM2PMYz32Ix7iIx/ygwd8
4AU/fOAHX/ijfz57e32r0ctoSg+nzHpRMEk+LTwYGb6L4m4MP5b/7kyTa/UW
6TZ8rMzEnLmf6O/ob7jfqG+cL/xCPxvNK1s3L16w+k7v8OBT8bbclxdT0p4y
Y8xjPfYjHuIjH/KDB3zgBT984Adf+Ms4vZYF+cmU6ekz1H4viuIMJ5vMlgOZ
fovnUcFQaobXTjuSJFV86T4lpL089X7nNgFTn7i/6He476h3nDd87cYUjt+3
zYoTU4Yk98JmmTHmsR77EQ/xkQ/5wQM+8IIfPvCDL/w/2sGb6rBJpvlNRsk6
0igSviFwCa8MJP21/lJm+Gb2N9ffo97urix+nS3Tn/8c+tZi5l0B8/zH8w/9
H/WM+4/6x/nDn/X/6/XngXmsx37EQ3zkQ37wgA+84IcP/OALf1U9KP1V/UHp
r3peKP1V3x+U/qrvk0p/1e8Lpb/q96bSX/X/g9L/P57pr9Q=
    "], $CellContext`forceTermSelection$$ = 
    3, $CellContext`grid$$ = CompressedData["
1:eJx12kGK3DgUANBmcoIcoU+SO+QIgVnnar5BeemlF1544YUQQgghhI4wgbQE
9WA+FOLhTZWslv7/6s9fv3/+++3j4+P7n8/nn88/HzPG6+8YfvwdO2644oIz
TjjigB984wuf+MA73vCM9fzHu3d84BNf+MYPdow44YwLrrjhjod+vX/Pjhuu
uOCME4444Aff+MInPvCONzxjPee97fjAJ77wjR1dJxEnnHHBFTfc8dCv9+/d
ccMVF5xxwhEH/OAbX/jEB97xhmes57zHHR/4xBd2dJ24j0SccMYFV9xwx0O/
3n9Hxw1XXHDGCUcc8INvfOETH3jHG56xnvNed3zgEzu6TtxHPGciTjjjgitu
uOOhX++/q+OGKy4444QjDvjBN77wiQ+84w3PWM95zzs+sKPrxH3Ec8Y8JOKE
My644oY7Hvr1/js7brjigjNOOOKAH3zjC5/4wDve8Iz1nPe+Y0fXifuI54x5
iHlqxAlnXHDFDXc89Ov9d3fccMUFZ5xwxAE/+MYXPvGBd7zhGes568DRdeI+
4jljHmKeah0TccIZF1xxwx0P/TU/cx46brjigjNOOOKAH3zjC5/4wDve8Iz1
/H/WhfuG54p5h3mpdYt17ZofnHDGBVfccMdDf83PjI4brrjgjBOOOOAH3/jC
Jz7wjjdsuE7cRzxnzEPMU61jrHPtg0SccMYFV9xwx0PPv5evseOGKy4444Qj
DvjBN77wiQ+8Y8cZ7hueK+Yd5qXWLda19j3si635wQlnXHDFDXc8NPPWccMV
F5xxwhEH/OAbX/jEB3Z0nczwXDHvMC+1brGute9hX8y+6ZofnHDGBVfccMdD
M48dN1xxwRknHHHAD77xhU/s6DpxH5lh3mFeat1iXWvfw76YfVP76mt+cMIZ
F1xxwx0Pzbx23HDFBWeccMQBP/jGF3Z0nbiPeM7MMC+1brGute9hX2x9f2yf
3XuYiBPOuOCKG+54aOa544YrLjjjhCMO+ME3dnSduI94zpiHzLBusa6172Ff
bH0vbJ/dexjv6SJOOOOCK26446GZ944brrjgjBOOOOAHO7pO3Ec8Z8xDzFNn
WNfa97AvZt/Uvrr3Lt7LeW+75gcnnHHBFTfc8dC8h44brrjgjBOOOGBH14n7
iOeMeYh5qnXMDPse9sXsm9pX997Feznvbb3XX/ODE8644Iob7nho3kvHDVdc
cMYJR+zoOnEf8ZwxDzFPtY6xzp1hX8y+qX117128l/Pe1nt9/+9jzQ9OOOOC
K26447H8H1T1kUw=
    "], $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    7.771561172376096*^-15, $CellContext`h$$ = Rational[
    1, 16], $CellContext`kValue$$ = 29., $CellContext`lenX$$ = 
    2, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
    Cos[(2 Pi) #]& , $CellContext`northBCconstantValue$$ = 
    1., $CellContext`northBCtype$$ = 
    "Dirichlet", $CellContext`plotPerformanceGoal$$ = 
    "Quality", $CellContext`plotToShow$$ = 
    "solution and contour", $CellContext`rightHandVector$$ = SparseArray[
    Automatic, {495}, 0., {1, {{0, 465}, CompressedData["
1:eJwl1YO3FwYABeDfi1u2ubhl297iy66X9V42XrXcsq0tbtnWlm3bGmqIX2fn
3O+c+w/cc9OGhAWHRggEAqeDAgEJfO4RiURkohCVL/iSaEQnBjGJRWziEJd4
xCcBCUlEYpKQlGQkJwUpSUVq0pCO9GQgI5nIzNd8Qxayko3s5CAnuchNHvKS
j/wUoCCFKEwRilKM4pSgJKUoSznKU4GKVOJbvqMyVahKNapTg2BqUova1KEu
9ahPAxrSiMY0oSnNaE4IrWhNG9rSjvZ0oCOdCCWMznShK93oTg960ove9KEv
/ejPAAYyiHAGM4ShDGcEIxnFaMYwlh8Yx3gmMJFJTGYKU5nGdGYwk1nMZg5z
mcd8FrCQRSxmCUtZxnJWsJJV/MwvrGYNa1nHejawkU1sZgtb2cZ2drCTXexm
D3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYO
d7nHfR7wmCc85RnPecFLXvE7f/Anf/GaN/zNP/zLf7zlHe/5wEc+jziICEQk
EpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1q+Ih3pyUBG
MpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUq
UZkqVKUa1alBMDWpRW3qUJd61KcBDWlEY5rQlGY0J4QWtKQVrWlDW9rRnk6E
EkZnutCVbnSnBz3pRW/60Jd+9GcAAxlEOIMZwlC+ZxjDGcFIRjGaMYxjPBOY
yCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEH/mJpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yK/8xiEOc4SjHOM4p4L+/7QznOUc
57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBJ7V15OE=
       "]}, CompressedData["
1:eJzll/9TE3QYx4ey0LGbHk52UhGL4BSEMuQyOPeEQ7QUUBQPtk7AKDqp2Fhr
CiTbAaEYX9w6GMJ5IM5vgFoTMK0NhdJA71gCswCdgjI8og4lJFPrOt6f/ojx
A3efe57n/bze9zyfzzbxjqyE9904HI7t339/rvQoMo1ME18ZZz2qGaPSDrW7
JnmQgtxj9h/I6aHea/ry626dlN1j/WXL9m8p7pxcPdl9hmzxEZaGiGO0LOh0
SsqPdeTLi7yfH1tN+rkDNRO/GejD+lrf79IrqEwgmrs/6EsKri552WftPlqe
Xr5P1lxMTyw+L0QGF7Mz4shHPfSgj37oDx7wgRf88AN/8OubuLFVyJ2k2rC/
5NzwYXLjpU5p0vqoS3H34tKBKzRHOOpZE2Khdbo7gnGxmX6aSchzJp4g7dHm
qKHCesZjfvS2MHKxgb4PzHtqXFBG8kCZ/c3ze6lrZs0ZoaSIzjcUW+8KCkgU
6FydNqCjTVcTYiS7deyMOPJRDz3oox/6gwd84AU//MAf/H6UG33lzo5xskzX
85ujbpLUi/+ar72HvEtF2luGDuIuvLfqSWcbOfNDeFX+pyh+6JKg7GED3beH
tjiNNWwe4MP8QhwBjyd2F9CjLQfbJRe0lDYWP3mIu4c8p2MnV4jzqM+ndv3B
L3LZGXHkox560Ec/9AcP+MALfviBP/gNqC6/bEgeJd4Gy9bM4RvE25kfqj7b
TY/tK3THfNrJbND5p5aa6UZSU29j13FqLP37YujOOmpL7C3KMleyfcR8wKv1
My7bzNUyfwr+e3+4f7OLMk3muhJ/DRm1mwypRz5jZ8SRj3roQR/90B884AMv
+OEH/uD3dPDvw+IFI+Qxuw+FFUL58NXLVBlWGCdtvMDuD73TnhS+0URPK/1e
HQ2rpc4+6+0MrYHdR+wn5gV+yeFDN/eYNPTgXYHD4w01RRvTY1sdKvLyy47Y
pVKxM+LIRz30oI9+6A8e8IEX/PADf/D78JX5Z5c8u01q2Vs5ptDrJP245IMU
2Q+U0WEfd/58jkZm9ydFYi/QP9/A7tfiIc41fv4B9h7hfmJfMT/4SfpkqFA/
T0VTS096fdqnpJW6Z01KlZKdEUc+6qEHffRDf/CAD7zghx/4g9+c6A39rYMO
yvAeafabsbH3cKzXdE++po2K+7M1MaubSJr11edRo/W0beEc26qWKrZvuH94
n3Bfsb+YJ/wtvzUd/nWLgjKV/dLBZAU7I4581EMP+uiH/uABH3jBDz/wB78P
Xlyi8NQ6SPycKEJWaaNFs++B3vulvL2XWqm705orPNzI3s9f+08ETLxeRaap
ItERXgX7PML7jP3E/cU+Y77wy/nv73//iCMf9dCDPvqhP3jAB17www/8wa+r
zttV77ervueu+vntqt/XXPX7uav+HvsHilnQgA==
      "]}], $CellContext`southbc$$ = Cos[
    Pi #]& , $CellContext`southBCconstantValue$$ = 
    1., $CellContext`southBCtype$$ = "Dirichlet", $CellContext`stdx$$ = 
    0.3, $CellContext`stdy$$ = 0.3, $CellContext`systemMatrix$$ = SparseArray[
    Automatic, {495, 495}, 0, {1, {CompressedData["
1:eJwV1Hl4D3QcwPHfRnOsJkfOXFuNTFjLEWlyNCLXcmSJsFzNZIkciRwhR44c
OXJkcjTJkaUJy9WQJXIkR8RyLpEj9er7fF6f/9/P83m+Fbslt+0XFAgErv6/
vDzkI5RCFKUEZShPBJWIojox1KYesTQijua0Ip4OJNCF7vSkL8mkMIihjGAU
Y5jAFGYwhwUsYTmrWctGNrOVHXzPD/zEUX7lNy5wmT/5m38I1puP+ylMccpQ
gQgiiaIGNalLLI1pRkvi6UhnutGT13mDtxjKu4xhAlOYwRwWsITlrGYtG9nM
VjLZSRYHOMQxTnKWHK5wnVvcI09wIJCfByhCCR6mIpFEUYOa1CWWxjSjJfF0
pDPdSKQXSQxgEMMYyVgmMpWZzGUhS/mMz/mSr/iGbewkiwMc4hgnOUsOV7jO
Le6RxzGGUIAwilKSsoRTiapEU4t6NKAJz9OKF3mJV+hOL5IYwCCGMZKxTGQq
M5nLQpaSygrSWMcmMtjOLvaSzWGOc4pz/MFV/uI2/5I3rx7CKEpJyhJOJaoS
TS3q0YAmNKU5rWlHJ7rQg970I4XBDGcU4/iAD/mIj/mET1lBGuvYRAbb2cVe
sjnMcU5xjgtc5Bo3uEPgPkNBClGMUpQjgso8zhPU5mme5Tma05p2dKILPehN
P1IYzHBGMY4JTGIas5jHIpaxkjWsJ50tZLKbffzIz/zCaX7nIte4wR0CIXoo
SCGKUYpyRFCZKKoRQx3q05A4WtCG9iTQlUT6kMybvM07vMf7TGIas5jHIpax
kjWsJ50tZLKbLPZzkCOc4AznuUQuN7lLkA89hFAe5CFKU55HeIxqxFCH+jQk
jha0oT0JdCWRPiTRn4EMYQSjGc9kpjOb+SwmlVV8wQa+5lu+Yw/7OcgRTnCG
81wil5vcJSi/HkIJozDFKUMFHqUK1XmSp3iGRjTlBdrSgZd5ldfoS38GMoQR
jGY8k5nObOazmFRWkcZaNpBOBtvYwR72kc0hjnKC05wjh8vkcoPb3CO4gEYK
EkYRilOacoQTSRWqEc1/4oP7FA==
       "], CompressedData["
1:eJxd2FMQpdcWReE1Y9u4Sadj27Zt27Zt27Ztdccd2zY6nVxb/6jTVWPnPKyq
OZ5Ondrf0z9g273W3XOEqppn9KpU7+gR+/bAZo/U3fTNHrm7GZo9SnczNnvU
7mZq9mjdzdzs7qdrlmaP0d2szR6zu9maPVZ3szd77O7maPY43c3Z7HG7m6vZ
43U3d7PH5/83e4Lu5m32hN3N1+yJupu/2RN3t0CzJ+luwWZP2t1CzZ6su4Wb
PXl3izR7iu4WbfaU3S3W7Km6W7zZU3e3RLN/192SzZ6mu6WaPW13Szd7QHfL
9PV01Xtz3nmEvl6+NEHz9iuULmjef8XSBo2BlUofNA5WLo3QWFildELjYdXS
Co2J1UovNC5WL83Q2FijdEPjY83SDo2RtUo/NE7WLg3RWFmndETjZd3SEo2Z
9UpPNG7WL03R2NmgdEXjZ8PSFo2hjUpfNI42Lo3RWNqkdEbjadPSGo2pzUpv
NK42L83R2NqidEfja8vSHo2xrUp/9NLdbV0apLG2TemQXra7bft6uepZw9bA
vt6htEhjbcfSIo21nUqLNNZ2Li3SWNultEhjbdfSIo213UqLNNZ2Ly3SWNuj
tEhjbc/SIo21vUqLNNb2Li3SWNuntEhjbd/SIo21/UqLNNb2Ly3SWDugtEhj
7cDSIo21g0qLNNYOLi3SWDuktEhj7dDSIo21w0qLNNYOLy3SWDuitEhj7cjS
Io21o0qL9NbdHV1apLF2TGmRxtqxpUV6u+6O6+vtq2cNW8v39YmlRRprJ5UW
aaydXFqksXZKaZHG2qmlRRprp5UWaaydXlqksXZGaZHG2pmlRRprZ5UWaayd
XVqksXZOaZHG2rmlRRpr55UWaaydX1qksXZBaZHG2oWlRRprF5UWaaxdXFqk
sXZJaZHG2qWlRRprl5UWaaxdXlqksXZFaZHG2pWlRRprV5UW6aO7u7q0SGPt
mtIijbVrS4s01q4rLdLHd3d9X59QPWvY2qGvbyot0li7ubRIY+2W0iKNtVtL
izTWbist0li7vbRIY+2O0iKNtTtLizTW7iot0li7u7RIY+2e0iKNtXtLizTW
7ist0li7v7RIY+2B0iKNtQdLizTWHiot0lh7uLRIY+2R0iKNtUdLizTWHist
0lh7vLRIY+2J0iKNtSdLizTWBpUW6au7G1xapLH2VGmRxtrTpUUaa8+UFmms
PVtapG/o7rm+vrF61rB1Yl8PKS3SWHuxtEhj7aXSIo21l0uLNNZeKS3SWHu1
tEhj7bXSIo2110uLNNbeKC3SWHuztEhj7a3SIo21t0uLNNbeKS3SWHu3tEhj
7b3SIo2190uLNNY+KC3SWPuwtEhj7aPSIo21j0uLNNY+KS3SWPu0tEhj7bPS
Io21z0uL9ODuvigt0lj7srRIY+2r0iKNta9LizTWvikt0lj7trRIP9/dd339
QvWsYeumvv6xtEhj7afSIo21oaVFGms/lxZprA0rLdJY+6W0SGPt19IijbXf
lxZprP2htEhj7Y+lRRprfyot0lj7c2mRxtpfSos01v5aWqSx9rfSIo21v5cW
aaz9o7RIY+2fpUUaa/8qLdJY+3dpkcbaf0qLNNb+W1qksfa/0iL9RXd8eBjU
NNYSLdJYGyFapLE2YrRIY22kaJHG2sjRIo21UaJF+vvuRs1v+4fqWcPWkL4e
I1qksTZmtEhjbaxokcba2NEijbVxokUaa+NGizTWxosWaayNHy3SWJsgWqSx
NmG0SGNtomiRxtrE0SKNtUmiRRprk0aLNNYmixZprE0eLdJYmyJapLE2ZbRI
Y22qaJHG2tTRIo2130WLNNamiRZprE0bLdJYGxAt0libLlqksTYwWqSxNn20
SGNthmiRxtqM0SKNtZmiRXq07mbOb3v09KxhC2ttzxYt0libPVqksTZHtEhj
bc5okcbaXNEijbW5o0Uaa/NEizTW5o0WaazNFy3SWJs/WqSxtkC0SGNtwWiR
xtpC0SKNtYWjRRpri0SLNNYWjRZprC0WLdJYWzxapLG2RLRIY23JaJHG2lLR
4jTDrS0dLU473Noy0eKA4daWjRanG25tuWhx4HBry0eLNNZWiBZprK0YLdJY
WylapLG2crRIz9LdKn09a3rWsDVGX68eLdJYWyNapLG2ZrRIY22taJHG2trR
Io21daJFGmvrRos01taLFmmsrR8t0ljbIFqksbZhtEhjbaNokcbaxtEijbVN
okUaa5tGizTWNosWaaxtHi3SWNsiWqSxtmW0SGNtq2iRxtrW0SKNtW2iRRpr
20aLNNa2ixZprG0fLdJY2yFapLG2Y7RIY22naJHG2s7RIo21XaJFetXudu3r
1dKzhq3Z+nqPaJHG2p7RIo21vaJFGmt7R4s01vaJFmms7Rst0ljbL1qksbZ/
tEhj7YBokcbagdEijbWDokUaawdHizTWDokWaawdGi3SWDssWqSxdni0SGPt
iGiRxtqR0SKNtaOiRRprR0eLNNaOiRZprB0bLdJYOy5apLF2fLRIY+2EaJHG
2onRIo21k6JFGmsnR4s01k6JFmmsnRot0rt1d1pf756eNWyt3tdnRos01s6K
FmmsnR0t0lg7J1qksXZutEhj7bxokcba+dEijbULokUaaxdGizTWLooWaaxd
HC3SWLskWqSxdmm0SGPtsmiRxtrl0SKNtSuiRRprV0aLNNauihZprF0dLdJY
uyZapLF2bbRIY+26aJHG2vXRIo21G6JFGms3Ros01m6KFmms3Rwt0li7JVqk
sXZrtEhj7bZokT69u9v7+oz0rGFrj76+K1qksXZ3tEhj7Z5okcbavdEijbX7
okUaa/dHizTWHogWaaw9GC3SWHsoWqSx9nC0SGPtkWiRxtqj0SKNtceiRRpr
j0eLNNaeiBZprD0ZLdJYGxQt0lgbHC3SWHsqWqSx9nS0SGPtmWiRxtqz0SKN
teeiRRprz0eLNNZeiBZprA2JFmmsvRgt0lh7KVqksfZytEhj7ZVokb6ju1f7
+s70rGHrzL5+I1qksfZmtEhj7a1okcba29EijbV3okUaa+9GizTW3osWaay9
Hy3SWPsgWqSx9mG0SGPto2iRxtrH0SKNtU+iRRprn0aLNNY+ixZprH0eLdJY
+yJapLH2ZbRIY+2raJHG2tfRIo21b6JFGmvfRos01r6LFmmsfR8t0lj7IVqk
sfZjtEhj7adokcba0GiRxtrP0SKNtWHRIv1ad7/09evpWcPWXX19d7Nxdk+z
MXZvs/F1X7OxdX+zcfVAszH1YLPx9FCzsfRws3H0SLMx9Giz8fNYs7HzeLNx
80SzMfNks/EyqNlYGdxsnDzVbIw83Wx8PNNsbDzbbFw812xMPN9sPLzQbCwM
aTYOXmz20Ohj6PD3f7nZw6KLYcPf/dVm/9q3/w9bY3sX
       "]}, {
      1., Complex[0., -0.4257951671897032], -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., Complex[0., -0.4257951671897032], 
       1., 1., Complex[0., -0.4257951671897032], -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., -1., 0.7156432707814853, -1., -1., -1., 
       0.7156432707814853, -1., -1., Complex[0., -0.4257951671897032], 
       1.}}], $CellContext`testCase$$ = 4, $CellContext`u$$ = CompressedData["
1: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
/w8V04QL
    "], $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Sommerfeld", $CellContext`x0$$ = 
    0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Item[
            Grid[{{
               Grid[{{
                  Button[
                   Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}, {
                  Button[
                   Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
               Grid[{{
                  Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                  Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                  Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                  Text[
                   Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}, Alignment -> Center, 
             Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
           Item[
            Grid[{{
               PopupMenu[
                
                Dynamic[$CellContext`plotToShow$$, {$CellContext`plotToShow$$ = \
#; $CellContext`event$$ = "plot_changed", 
                  AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                "solution and contour" -> Style["solution + contour", 11], 
                 "solution and density" -> Style["solution + density", 11], 
                 "solution data" -> Style["solution data", 11], 
                 "system matrix information" -> Style["system matrix", 11]}, 
                ImageSize -> All, ContinuousAction -> False], 
               Grid[{{
                  RadioButtonBar[
                   
                   Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                  Style["plot", 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"face", "grids"}], 11]}}], 
               Grid[{{
                  Checkbox[
                   
                   Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                  Style[
                   Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
             Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
               Thickness[0.005], 
               GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
         Spacings -> {0.2, 0}, Alignment -> {Center, Top}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                  SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                   Alignment -> Center], SpanFromLeft}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                  Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}], 
             Style["source", 11] -> Item[
               Grid[{{
                  Item[
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                  SpanFromLeft}, {
                  Spacer[2], 
                  Text[
                   Style["a", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["b", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style["c", Italic, 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                    ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Spacer[2], 
                  Text[
                   Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                  Manipulator[
                   
                   Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                   Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                  Text[
                   Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                  Button[
                   Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}], 
                  Button[
                   Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                   ImageSize -> {45, 20}]}, {
                  Item[
                   Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                    Alignment -> Center], SpanFromLeft}, {
                  Dynamic[
                   Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                Spacings -> {0.3, 0.2}, Alignment -> Left, 
                Frame -> {None, All}, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
         Center]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`testCase$$], 1}, 0}, {{
       Hold[$CellContext`angle$$], 0.}, 0}, {{
       Hold[$CellContext`systemMatrix$$], {}}, 0}, {{
       Hold[$CellContext`rightHandVector$$], {}}, 0}, {{
       Hold[$CellContext`zAxisScale$$], False}, 0}, {{
       Hold[$CellContext`centerGrid$$], True}, 0}, {{
       Hold[$CellContext`event$$], "run_button"}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`addFaceGrids$$], False}, 0}, {{
       Hold[$CellContext`plotPerformanceGoal$$], "Quality"}, 0}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 4]}, 0}, {{
       Hold[$CellContext`lenX$$], 1}, 0}, {{
       Hold[$CellContext`lenY$$], 1}, 0}, {{
       Hold[$CellContext`kValue$$], 5.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`c$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`y0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`stdy$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 1}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution and contour"}, 0}, {{
       Hold[$CellContext`northBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`northbc$$], 1& }, 0}, {{
       Hold[$CellContext`northBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`southBCtype$$], "Sommerfeld"}, 0}, {{
       Hold[$CellContext`southbc$$], 1& }, 0}, {{
       Hold[$CellContext`southBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`forceGrid$$], {{-1, -1, -1, -1, -1}, {-1, -1, -1, \
-1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}}, 
      0}, {{
       Hold[$CellContext`grid$$], CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

       "]}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}}, Typeset`size$$ = {
    270., {201., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`addFaceGrids$$ = 
        False, $CellContext`angle$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0., $CellContext`centerGrid$$ = 
        True, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = "Dirichlet", $CellContext`event$$ = 
        "run_button", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceGrid$$ = {{-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, \
-1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}}, \
$CellContext`forceTermSelection$$ = 1, $CellContext`grid$$ = CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

         "], $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        Rational[1, 4], $CellContext`kValue$$ = 5., $CellContext`lenX$$ = 
        1, $CellContext`lenY$$ = 1, $CellContext`northbc$$ = 
        1& , $CellContext`northBCconstantValue$$ = 
        0, $CellContext`northBCtype$$ = 
        "Sommerfeld", $CellContext`plotPerformanceGoal$$ = 
        "Quality", $CellContext`plotToShow$$ = 
        "solution and contour", $CellContext`rightHandVector$$ = {}, \
$CellContext`southbc$$ = 1& , $CellContext`southBCconstantValue$$ = 
        0, $CellContext`southBCtype$$ = "Sommerfeld", $CellContext`stdx$$ = 
        0.3, $CellContext`stdy$$ = 
        0.3, $CellContext`systemMatrix$$ = {}, $CellContext`testCase$$ = 
        1, $CellContext`u$$ = {}, $CellContext`westbc$$ = 
        1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
        0., $CellContext`y0$$ = 0., $CellContext`zAxisScale$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; {$CellContext`finalDisplayImage$$, \
$CellContext`u$$, $CellContext`forceGrid$$, $CellContext`grid$$, \
$CellContext`systemMatrix$$, $CellContext`rightHandVector$$} = \
$CellContext`process[$CellContext`u$$, $CellContext`forceGrid$$, \
$CellContext`grid$$, $CellContext`systemMatrix$$, \
$CellContext`rightHandVector$$, $CellContext`finalDisplayImage$$, \
$CellContext`event$$, $CellContext`h$$, $CellContext`h$$, \
$CellContext`lenX$$, $CellContext`lenY$$, $CellContext`centerGrid$$, \
$CellContext`addFaceGrids$$, $CellContext`plotPerformanceGoal$$, \
$CellContext`kValue$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`x0$$, $CellContext`y0$$, $CellContext`stdx$$, \
$CellContext`stdy$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`northBCtype$$, \
$CellContext`northbc$$, $CellContext`northBCconstantValue$$, \
$CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, \
$CellContext`southBCtype$$, $CellContext`southbc$$, \
$CellContext`southBCconstantValue$$, $CellContext`zAxisScale$$, \
$CellContext`angle$$, 
          Unevaluated[$CellContext`gstatusMessage$$]]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray], ImageMargins -> 0]), "Specifications" :> {
        Item[
         Grid[{{
            Item[
             Grid[{{
                Grid[{{
                   Button[
                    Text[
                    Style["solve", 12]], {$CellContext`event$$ = "run_button"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}, {
                   Button[
                    Text[
                    Style["reset", 12]], {$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {50, 28}]}}, Spacings -> {0, 0.2}], 
                Grid[{{
                   Row[{
                    Style["k", Italic, 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    100., 1.}, ImageSize -> Tiny, ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$, {3, 0}]], 
                    11]]}], 
                   Row[{
                    Style["\[Theta]", 11], 
                    Spacer[3], 
                    Manipulator[
                    
                    Dynamic[$CellContext`angle$$, {$CellContext`angle$$ = #; \
$CellContext`event$$ = "k_changed"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0, 2 Pi, Rational[1, 100] Pi}, ImageSize -> Tiny, 
                    ContinuousAction -> False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt2[(180./Pi) $CellContext`angle$$, {5, 
                    2}]], Degree}], 11]]}]}, {
                   Row[{
                    Text[
                    Style["test case", 12]], 
                    Spacer[2], 
                    PopupMenu[
                    
                    Dynamic[$CellContext`testCase$$, {$CellContext`testCase$$ = \
#; Which[$CellContext`testCase$$ == 
                    1, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/4; $CellContext`lenX$$ = 
                    1; $CellContext`lenY$$ = 1; $CellContext`kValue$$ = 
                    5; $CellContext`a$$ = 1.; $CellContext`b$$ = 
                    0.; $CellContext`c$$ = 0.; $CellContext`x0$$ = 
                    0.; $CellContext`y0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    1; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    2, $CellContext`angle$$ = 0.; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    16; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    3, $CellContext`angle$$ = 
                    109 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    True; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/12; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    52; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`northbc$$ = 
                    1& ; $CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    1& ; $CellContext`westBCconstantValue$$ = 
                    0; $CellContext`eastBCtype$$ = 
                    "Dirichlet"; $CellContext`eastbc$$ = 
                    1& ; $CellContext`eastBCconstantValue$$ = 
                    0; $CellContext`southBCtype$$ = 
                    "Sommerfeld"; $CellContext`southbc$$ = 
                    1& ; $CellContext`southBCconstantValue$$ = 
                    0, $CellContext`testCase$$ == 
                    4, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Dirichlet"; $CellContext`northbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`westBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1., $CellContext`testCase$$ == 
                    5, $CellContext`angle$$ = 
                    208 Degree; $CellContext`zAxisScale$$ = 
                    False; $CellContext`centerGrid$$ = 
                    True; $CellContext`addFaceGrids$$ = 
                    False; $CellContext`plotPerformanceGoal$$ = 
                    "Quality"; $CellContext`h$$ = 1/16; $CellContext`lenX$$ = 
                    2; $CellContext`lenY$$ = 2; $CellContext`kValue$$ = 
                    7; $CellContext`a$$ = 1.; $CellContext`y0$$ = 
                    0.; $CellContext`x0$$ = 0.; $CellContext`stdx$$ = 
                    0.3; $CellContext`stdy$$ = 
                    0.3; $CellContext`forceTermSelection$$ = 
                    3; $CellContext`plotToShow$$ = 
                    "solution and contour"; $CellContext`northBCtype$$ = 
                    "Sommerfeld"; $CellContext`eastBCtype$$ = 
                    "Sommerfeld"; $CellContext`westBCtype$$ = 
                    "Dirichlet"; $CellContext`westbc$$ = 
                    Cos[(2 Pi) #]& ; $CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`southBCtype$$ = 
                    "Dirichlet"; $CellContext`southbc$$ = 
                    Cos[Pi #]& ; $CellContext`southBCconstantValue$$ = 
                    1.]; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["1", 11], 2 -> Style["2", 11], 3 -> 
                    Style["3", 11], 4 -> Style["4", 11], 5 -> Style["5", 11]},
                     ImageSize -> All, ContinuousAction -> False]}], 
                   Text[
                    Style[
                    Row[{"-", "\[Del]"^2, 
                    Style["u", Italic], " - ", Style["k", Italic]^2, 
                    Style["u", Italic], " = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ")"}], 12]]}}, Alignment -> Center, 
                 Spacings -> {0.5, 0.4}, Frame -> {None, All}, FrameStyle -> 
                 Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]]}}, Alignment -> Center, 
              Spacings -> {0.2, 0}], Alignment -> {Center, Top}], 
            Item[
             Grid[{{
                PopupMenu[
                 
                 Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; $CellContext`event$$ = "plot_changed", 
                   AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                 "solution and contour" -> Style["solution + contour", 11], 
                  "solution and density" -> Style["solution + density", 11], 
                  "solution data" -> Style["solution data", 11], 
                  "system matrix information" -> Style["system matrix", 11]}, 
                 ImageSize -> All, ContinuousAction -> False], 
                Grid[{{
                   RadioButtonBar[
                    
                    Dynamic[$CellContext`plotPerformanceGoal$$, \
{$CellContext`plotPerformanceGoal$$ = #; $CellContext`event$$ = 
                    "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "Speed" -> Text[
                    Style["speed", 11]], "Quality" -> Text[
                    Style["quality", 11]]}, Appearance -> "Vertical"]}, {
                   Style["plot", 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`addFaceGrids$$, \
{$CellContext`addFaceGrids$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"face", "grids"}], 11]}}], 
                Grid[{{
                   Checkbox[
                    
                    Dynamic[$CellContext`zAxisScale$$, \
{$CellContext`zAxisScale$$ = #; $CellContext`event$$ = "plot_changed", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}, {
                   Style[
                    Column[{"zoom", "scale"}], 11]}}]}}, Alignment -> Center, 
              Spacings -> {0.7, 0.4}, Frame -> {All}, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]], Alignment -> {Center, Top}]}}, 
          Spacings -> {0.2, 0}, Alignment -> {Center, Top}], ControlPlacement -> 
         Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["grid", 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    Rational[1, 4] -> Style[
                    Rational[1, 4], 11], Rational[1, 6] -> Style[
                    Rational[1, 6], 11], Rational[1, 8] -> Style[
                    Rational[1, 8], 11], Rational[1, 10] -> Style[
                    Rational[1, 10], 11], Rational[1, 12] -> Style[
                    Rational[1, 12], 11], Rational[1, 14] -> Style[
                    Rational[1, 14], 11], Rational[1, 16] -> Style[
                    Rational[1, 16], 11]}], 
                    Spacer[1], 
                    Style["center grid ", 12], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}}, 
                    Spacings -> {0.2, 0.5}]}, {
                    Grid[{{
                    Text[
                    Style[
                    Row[{
                    Style["x", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenX$$, {$CellContext`lenX$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}], 
                    Spacer[95], 
                    Text[
                    Style[
                    Row[{
                    Style["y", Italic], " length"}], 12]], 
                    SetterBar[
                    
                    Dynamic[$CellContext`lenY$$, {$CellContext`lenY$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {1, 
                    2}]}}, Spacings -> {0.6, 0.1}]}}, Spacings -> {0, 0.5}], 
                   SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`northBCtype$$, \
{$CellContext`northBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`northBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`northbc$$, {$CellContext`northbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`northBCconstantValue$$, \
{$CellContext`northBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`northBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`northBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`northBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`northBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}, Alignment -> Center, Frame -> None],
                     SpanFromLeft}}, Frame -> None, Spacings -> {0.1, 0}, 
                    Alignment -> Center], SpanFromLeft}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`westbc$$, {$CellContext`westbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}]}}], 
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"], 
                    SpanFromLeft}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`eastbc$$, {$CellContext`eastbc$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(
                    1.& ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a y", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["y", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["y", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["y", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    SpanFromLeft}, {
                    Grid[{{
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Spacings -> {0.1, 0}, Alignment -> 
                    Center]}}, Alignment -> Center, Spacings -> {0, 0}], 
                    SpanFromLeft}}]}, {
                   Grid[{{
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`southBCtype$$, \
{$CellContext`southBCtype$$ = #; If[
                    
                    And[$CellContext`northBCtype$$ == 
                    "Sommerfeld", $CellContext`southBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`southBCtype$$ = 
                    "Dirichlet", $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    PopupMenu[
                    
                    Dynamic[$CellContext`southbc$$, {$CellContext`southbc$$ = \
#; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {(1.& 
                    ) -> Style["a", Italic, 11], (#& ) -> 
                    Style["a x", Italic, 11], (#^2& ) -> Style[
                    Row[{
                    Style["a ", Italic], Style["x", Italic]^2}], 11], (Cos[
                    Pi #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(\[Pi] ", 
                    Style["x", Italic], ")"}], 11], (Cos[(2 Pi) #]& ) -> Style[
                    Row[{
                    Style["a", Italic], " cos(2 \[Pi] ", 
                    Style["x", Italic], ")"}], 11]}, ImageSize -> All, 
                    ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}, {
                    Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`southBCconstantValue$$, \
{$CellContext`southBCconstantValue$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`southBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`southBCconstantValue$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`southBCconstantValue$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`southBCtype$$ == "Dirichlet"]]}}, 
                    Spacings -> {0.2, 0}]}}], SpanFromLeft}}, 
                 Spacings -> {2, 0.3}, Alignment -> Center, Frame -> All, 
                 FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}], 
              Style["source", 11] -> Item[
                Grid[{{
                   Item[
                    PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 3 -> Style[
                    Row[{
                    Style["a", Italic], " exp (", Row[{
                    Style["x", Italic], " - ", Subscript[
                    Style["x", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["x", Italic]]^(-2), " + ", Row[{
                    Style["y", Italic], " - ", Subscript[
                    Style["y", Italic], "0"]^2}] Subscript["2 \[Sigma]", 
                    Style["y", Italic]]^(-2), ")"}], 12], 4 -> Style[
                    Row[{
                    Style["a", Italic], " ( cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) + sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " ) )"}], 12], 5 -> Style[
                    Row[{
                    Style["a", Italic], " cos( ", 
                    Style["b", Italic], " \[Pi] ", 
                    Style["x", Italic], " ) * sin( ", 
                    Style["c", Italic], " \[Pi] ", 
                    Style["y", Italic], " )"}], 12]}, ImageSize -> {260, 40}, 
                    ContinuousAction -> False], Alignment -> {Center}], 
                   SpanFromLeft}, {
                   Spacer[2], 
                   Text[
                    Style["a", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`a$$ = 0; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`a$$ = 1; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["b", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    2, $CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`b$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`b$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style["c", Italic, 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`c$$, {$CellContext`c$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-10., 10., 0.1}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[
                    
                    Or[$CellContext`forceTermSelection$$ == 
                    4, $CellContext`forceTermSelection$$ == 5]]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`c$$, {3, 1}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`c$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`c$$ = 1.; $CellContext`event$$ = 
                    "reset"; AddTo[$CellContext`gtick$$, $CellContext`del$$]},
                     ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["x", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`x0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`x0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Spacer[2], 
                   Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["y", Italic], "0"]}], 12]], 
                   Manipulator[
                    
                    Dynamic[$CellContext`y0$$, {$CellContext`y0$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`y0$$, {3, 2}]], 11]], 
                   Button[
                    Text[
                    Style[
                    "zero", 10]], {$CellContext`y0$$ = 
                    0.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}], 
                   Button[
                    Text[
                    Style[
                    "one", 10]], {$CellContext`y0$$ = 
                    1.; $CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}]}, {
                   Item[
                    Row[{
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["x", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdx$$, {3, 2}]], 11]], 
                    Spacer[20], 
                    Text[
                    Style[
                    Row[{
                    Subscript[
                    Style["\[Sigma]"], 
                    Style["y", Italic]]}], 11]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdy$$, {$CellContext`stdy$$ = #; \
$CellContext`event$$ = "reset"; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1, 3, 0.05}, ImageSize -> Tiny, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`stdy$$, {3, 2}]], 11]]}],
                     Alignment -> Center], SpanFromLeft}, {
                   Dynamic[
                    Grid[{{
                    Plot3D[
                    Evaluate[
                    $CellContext`forceTermExpressionCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]], 
                    Evaluate[{$CellContext`x, 
                    Part[$CellContext`grid$$, -1, 1, 1], 
                    Part[$CellContext`grid$$, -1, -1, 1]}], {$CellContext`y, 
                    Part[$CellContext`grid$$, -1, 1, 2], 
                    Part[$CellContext`grid$$, 1, 1, 2]}, 
                    PerformanceGoal -> $CellContext`plotPerformanceGoal$$, 
                    ImagePadding -> {{10, 10}, {20, 25}}, ImageMargins -> 1, 
                    PlotRange -> All, PlotLabel -> Text[
                    Style[
                    Row[{
                    Style["f", Italic], "(", 
                    Style["x", Italic], ", ", 
                    Style["y", Italic], ") = ", 
                    $CellContext`forceTermUsedFormatCommon[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, $CellContext`c$$, \
$CellContext`stdy$$, $CellContext`stdx$$, $CellContext`x0$$, \
$CellContext`y0$$, $CellContext`x, $CellContext`y]}], 11]], AxesLabel -> {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style["y", Italic, 11]], None}, 
                    ImageSize -> {$CellContext`ContentSizeW + 
                    30, $CellContext`ContentSizeH - 240}, TicksStyle -> 9]}}, 
                    Spacings -> {0, 0}, Frame -> None]], SpanFromLeft}}, 
                 Spacings -> {0.3, 0.2}, Alignment -> Left, 
                 Frame -> {None, All}, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {315, 410}]}}, Spacings -> {0.1, 0.}, Alignment -> 
          Center], ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`testCase$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`angle$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`systemMatrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`rightHandVector$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`zAxisScale$$, False}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, True}, 0, ControlType -> 
         None}, {{$CellContext`event$$, "run_button"}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`addFaceGrids$$, False}, 0, ControlType -> 
         None}, {{$CellContext`plotPerformanceGoal$$, "Quality"}, 0, 
         ControlType -> None}, {{$CellContext`h$$, 
          Rational[1, 4]}, 0, ControlType -> None}, {{$CellContext`lenX$$, 1},
          0, ControlType -> None}, {{$CellContext`lenY$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 5.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`c$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`y0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`stdy$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution and contour"}, 0, 
         ControlType -> None}, {{$CellContext`northBCtype$$, "Sommerfeld"}, 0,
          ControlType -> None}, {{$CellContext`northbc$$, 1& }, 0, 
         ControlType -> None}, {{$CellContext`northBCconstantValue$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, 
         ControlType -> None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`southBCtype$$, "Sommerfeld"}, 0, ControlType -> 
         None}, {{$CellContext`southbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`southBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`forceGrid$$, {{-1, -1, -1, -1, -1}, {-1, -1, \
-1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, -1}, {-1, -1, -1, -1, \
-1}}}, 0, ControlType -> None}, {{$CellContext`grid$$, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhh4sB9K20PoC2h8uDqYvD0qH4Pej6ruAhofBi7Y
Y6cx7NmPpg+Njw7Q7cHwB8w9OGh0e9D9gRFOaDS6OIa9aP5ChBsAUwI3UQ==

          "]}, 0, ControlType -> None}, {{$CellContext`u$$, {}}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        ContinuousAction -> False, SynchronousInitialization -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{611., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`$forceGrid, 
          Blank[]], 
         Pattern[$CellContext`$grid, 
          Blank[]], 
         Pattern[$CellContext`$AA, 
          Blank[]], 
         Pattern[$CellContext`$rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`$finalDisplayImage, 
          Blank[]], 
         Pattern[$CellContext`event, 
          Blank[]], 
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`AA = \
$CellContext`$AA, $CellContext`forceGrid = $CellContext`$forceGrid, \
$CellContext`grid = $CellContext`$grid, $CellContext`rightHandVector = \
$CellContext`$rightHandVector, $CellContext`finalDisplayImage = \
$CellContext`$finalDisplayImage}, If[
           
           StringMatchQ[$CellContext`event, {
            "reset", 
             "run_button"}], {$CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`rightHandVector} = \
$CellContext`initializeSystem[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid, \
$CellContext`forceTermSelection, $CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`x0, $CellContext`stdx, $CellContext`y0, \
$CellContext`stdy, $CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue, $CellContext`kValue, \
$CellContext`angle]]; If[
           Or[$CellContext`event == "run_button", 
            And[
             
             StringMatchQ[$CellContext`event, {
              "reset", "reset", "k_changed"}], 
             
             StringMatchQ[$CellContext`plotToShow, {
              "system matrix information", 
               "solution data"}]]], $CellContext`u = \
$CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype]]; \
$CellContext`finalDisplayImage = $CellContext`makeFinalPlot[$CellContext`u, \
$CellContext`AA, $CellContext`Lx, $CellContext`Ly, $CellContext`grid, \
$CellContext`plotToShow, $CellContext`plotPerformanceGoal, \
$CellContext`addFaceGrids, $CellContext`zAxisScale]; \
$CellContext`gstatusMessage = 
          "ready.."; {$CellContext`finalDisplayImage, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`initializeSystem[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`nCol, $CellContext`nRow, $CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}, {$CellContext`nRow, $CellContext`nCol} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`u = 
           Table[0., {$CellContext`$nRow}, {$CellContext`$nCol}]]; \
$CellContext`grid = $CellContext`makeGridCommon[$CellContext`hx, \
$CellContext`hy, $CellContext`Lx, $CellContext`Ly, $CellContext`centerGrid]; \
$CellContext`forceGrid = Which[$CellContext`forceTermSelection == 1, 
            
            With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, 
             
             Table[$CellContext`a, {$CellContext`$nRow}, \
{$CellContext`$nCol}]], $CellContext`forceTermSelection == 2, 
            Map[$CellContext`evaluateForceCommon[
              Part[#, 1], 
              
              Part[#, 2], $CellContext`a, $CellContext`b, $CellContext`c]& , \
$CellContext`grid, {2}], $CellContext`forceTermSelection == 3, 
            
            Map[$CellContext`a 
             Exp[(Part[#, 1] - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + (Part[#, 2] - $CellContext`y0)^2/(
                2 $CellContext`stdy^2)]& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 4, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] + 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}], $CellContext`forceTermSelection == 5, 
            
            Map[$CellContext`a (Cos[($CellContext`b Pi) Part[#, 1]] 
              Sin[($CellContext`c Pi) Part[#, 2]])& , $CellContext`grid, {
             2}]]; $CellContext`forceGrid = 
          Re[$CellContext`forceGrid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`northBCtype, $CellContext`northbc, \
$CellContext`northBCconstantValue, $CellContext`westBCtype, \
$CellContext`westbc, $CellContext`westBCconstantValue, \
$CellContext`eastBCtype, $CellContext`eastbc, \
$CellContext`eastBCconstantValue, $CellContext`southBCtype, \
$CellContext`southbc, $CellContext`southBCconstantValue]; {$CellContext`AA, \
$CellContext`rightHandVector} = \
$CellContext`makeSystemMatrixAndRightHandSide[$CellContext`u, \
$CellContext`hx, $CellContext`kValue, $CellContext`northBCtype, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`southBCtype, \
$CellContext`forceGrid, $CellContext`angle]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`rightHandVector}], $CellContext`getSolutionDomainDimensions[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]]] := {$CellContext`Ly/$CellContext`hy + 
         1, $CellContext`Lx/$CellContext`hx + 1}, $CellContext`makeGridCommon[
         Pattern[$CellContext`hx, 
          Blank[]], 
         Pattern[$CellContext`hy, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]]] := 
       Module[{$CellContext`i, $CellContext`j, $CellContext`nx, \
$CellContext`ny, $CellContext`grid}, {$CellContext`ny, $CellContext`nx} = \
$CellContext`getSolutionDomainDimensions[$CellContext`hx, $CellContext`hy, \
$CellContext`Lx, $CellContext`Ly]; 
         With[{$CellContext`$icfrom = 
            Floor[$CellContext`ny/2], $CellContext`$icto = -
             Floor[$CellContext`ny/2], $CellContext`$jcfrom = -
             Floor[$CellContext`nx/2], $CellContext`$jcto = 
            Floor[$CellContext`nx/2], $CellContext`$ifrom = $CellContext`ny - 
             1, $CellContext`$jto = $CellContext`nx - 1}, $CellContext`grid = 
           If[$CellContext`centerGrid, 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$icfrom, $CellContext`$icto, \
-1}, {$CellContext`j, $CellContext`$jcfrom, $CellContext`$jcto}], 
             
             Table[{$CellContext`j $CellContext`hx, $CellContext`i \
$CellContext`hy}, {$CellContext`i, $CellContext`$ifrom, 
               0, -1}, {$CellContext`j, 0, $CellContext`$jto}]]]; 
         N[$CellContext`grid]], $CellContext`evaluateForceCommon = ReplaceAll[
         Unevaluated[#3 #^#6 + #4 #2^#7], HoldPattern[0.^0.] :> 
         0.]& , $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`northbc, 
          Blank[]], 
         Pattern[$CellContext`northBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`southbc, 
          Blank[]], 
         Pattern[$CellContext`southBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`i, $CellContext`j}, {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; 
         If[$CellContext`northBCtype == "Dirichlet", Part[$CellContext`u, 1, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`northBCconstantValue 
            Table[
              $CellContext`northbc[
               
               Part[$CellContext`grid, 1, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 1}]]; 
         If[$CellContext`westBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[2, $CellContext`nRow - 1], 
             1] = $CellContext`westBCconstantValue Table[
              $CellContext`westbc[
               Part[$CellContext`grid, $CellContext`i, 1, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`eastBCtype == "Dirichlet", Part[$CellContext`u, 
             Span[
             2, $CellContext`nRow - 
              1], $CellContext`nCol] = $CellContext`eastBCconstantValue Table[
              $CellContext`eastbc[
               
               Part[$CellContext`grid, $CellContext`i, $CellContext`nCol, 
                2]], {$CellContext`i, 2, $CellContext`nRow - 1}]]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           Part[$CellContext`u, $CellContext`nRow, 
             Span[
             2, $CellContext`nCol - 1]] = $CellContext`southBCconstantValue 
            Table[
              $CellContext`southbc[
               
               Part[$CellContext`grid, $CellContext`nRow, $CellContext`j, 
                1]], {$CellContext`j, 2, $CellContext`nCol - 
               1}]]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 1, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, 
            1, $CellContext`nCol, $CellContext`nCol, $CellContext`nRow]; \
$CellContext`u = $CellContext`setCornerNodeCommon[$CellContext`u, \
$CellContext`nRow, 
            1, $CellContext`nCol, $CellContext`nRow]; $CellContext`u = \
$CellContext`setCornerNodeCommon[$CellContext`u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`nCol, $CellContext`nRow]], \
$CellContext`setCornerNodeCommon[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`nx, 
          Blank[]], 
         Pattern[$CellContext`ny, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Part[$CellContext`u, 1, 1] = Mean[{
              Part[$CellContext`u, 2, 1], 
              Part[$CellContext`u, 1, 2]}], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nx], 
           Part[$CellContext`u, 1, $CellContext`nx] = Mean[{
              Part[$CellContext`u, 1, $CellContext`nx - 1], 
              Part[$CellContext`u, 2, $CellContext`nx]}], 
           And[$CellContext`i == $CellContext`ny, $CellContext`j == 1], 
           Part[$CellContext`u, $CellContext`ny, 1] = Mean[{
              Part[$CellContext`u, $CellContext`ny - 1, 1], 
              Part[$CellContext`u, $CellContext`ny, 2]}], 
           
           And[$CellContext`i == $CellContext`ny, $CellContext`j == \
$CellContext`nx], Part[$CellContext`u, $CellContext`ny, $CellContext`nx] = 
           Mean[{
              Part[$CellContext`u, $CellContext`ny, $CellContext`nx - 1], 
              
              Part[$CellContext`u, $CellContext`ny - 
               1, $CellContext`nx]}]]; $CellContext`u], \
$CellContext`makeSystemMatrixAndRightHandSide[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`angle, 
          Blank[]]] := 
       Module[{$CellContext`AA, $CellContext`k1, $CellContext`k2, \
$CellContext`i, $CellContext`j, $CellContext`n = 
          0, $CellContext`eqs, $CellContext`vars, $CellContext`uu, \
$CellContext`U, $CellContext`An, $CellContext`b, $CellContext`keepList, \
$CellContext`nRow, $CellContext`nCol, $CellContext`sin1, $CellContext`sin2, \
$CellContext`omega, $CellContext`sum, $CellContext`prod}, $CellContext`sum = 
          2. $CellContext`h^2; $CellContext`prod = 
          1. $CellContext`h^4; $CellContext`omega = 
          4. BesselJ[0, Sqrt[$CellContext`kValue] $CellContext`h] + (
             Sqrt[$CellContext`kValue] $CellContext`h)^2; $CellContext`k1 = 
          Sqrt[$CellContext`kValue] Cos[$CellContext`angle]; $CellContext`k2 = 
          Sqrt[$CellContext`kValue] 
           Cos[$CellContext`angle]; $CellContext`sin1 = 
          Simplify[(2. I) 
            Sin[$CellContext`k1 $CellContext`h]]; $CellContext`sin2 = 
          Simplify[(2. I) 
            Sin[$CellContext`k2 $CellContext`h]]; {$CellContext`nRow, \
$CellContext`nCol} = Dimensions[$CellContext`u]; $CellContext`U = 
          Array[$CellContext`uu[#, #2]& , {$CellContext`nRow, \
$CellContext`nCol}]; 
         With[{$CellContext`$nRow = $CellContext`nRow, $CellContext`$nCol = \
$CellContext`nCol}, $CellContext`eqs = 
            Table[0., {$CellContext`$nRow $CellContext`$nCol}]; \
$CellContext`vars = $CellContext`eqs]; 
         For[$CellContext`i = 1, $CellContext`i <= $CellContext`nRow, 
           Increment[$CellContext`i], 
           For[$CellContext`j = 1, $CellContext`j <= $CellContext`nCol, 
            Increment[$CellContext`j], Increment[$CellContext`n]; If[
              Or[
               And[$CellContext`i == 1, $CellContext`j == 1], 
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
               And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
               
               And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol]], {$CellContext`eqs, $CellContext`vars} = \
$CellContext`processCornersCommon[$CellContext`u, $CellContext`eqs, \
$CellContext`n, $CellContext`U, $CellContext`i, $CellContext`j, \
$CellContext`vars, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`southBCtype, $CellContext`eastBCtype, $CellContext`nRow, \
$CellContext`nCol], 
              If[
               
               Or[$CellContext`i == 
                1, $CellContext`i == $CellContext`nRow, $CellContext`j == 
                1, $CellContext`j == $CellContext`nCol], 
               Which[$CellContext`i == 1, 
                
                If[$CellContext`northBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i + 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`i == $CellContext`nRow, 
                
                If[$CellContext`southBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin1 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j] - 
                    Part[$CellContext`U, $CellContext`i - 2, $CellContext`j] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == 1, 
                
                If[$CellContext`westBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j + 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j + 2] == 0\
; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]], \
$CellContext`j == $CellContext`nCol, 
                
                If[$CellContext`eastBCtype == "Dirichlet", 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
                   Part[$CellContext`u, $CellContext`i, $CellContext`j]; 
                 Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j], 
                 Part[$CellContext`eqs, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] - \
$CellContext`sin2 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                    Part[$CellContext`U, $CellContext`i, $CellContext`j - 2] == 
                   0; Part[$CellContext`vars, $CellContext`n] = 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j]]], 
               Part[$CellContext`vars, $CellContext`n] = 
                Part[$CellContext`U, $CellContext`i, $CellContext`j]; 
               Part[$CellContext`eqs, $CellContext`n] = -
                   Part[$CellContext`U, $CellContext`i + 1, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i - 
                   1, $CellContext`j] + $CellContext`omega 
                   Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j - 1] - 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j + 
                   1] - ($CellContext`kValue $CellContext`h)^2 
                  Part[$CellContext`U, $CellContext`i, $CellContext`j] == \
$CellContext`h^2 
                  Part[$CellContext`forceGrid, $CellContext`i, \
$CellContext`j]]]]]; $CellContext`vars = 
          Flatten[$CellContext`U]; $CellContext`AA = 
          CoefficientArrays[$CellContext`eqs, $CellContext`vars]; \
$CellContext`keepList = \
$CellContext`obtainListOfRowsToKeep[$CellContext`nRow, $CellContext`nCol, \
$CellContext`northBCtype, $CellContext`southBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype]; $CellContext`An = Part[
            
            Part[$CellContext`AA, 
             2], $CellContext`keepList, $CellContext`keepList]; \
$CellContext`b = -Part[
             Part[$CellContext`AA, 
              1], $CellContext`keepList]; {$CellContext`An, $CellContext`b}], \
$CellContext`processCornersCommon[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`$eqs, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`U, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`j, 
          Blank[]], 
         Pattern[$CellContext`$vars, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]]] := 
       Module[{$CellContext`vars = $CellContext`$vars, $CellContext`eqs = \
$CellContext`$eqs}, 
         Part[$CellContext`vars, $CellContext`n] = 
          Part[$CellContext`U, $CellContext`i, $CellContext`j]; Which[
           And[$CellContext`i == 1, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == Mean[{
                 Part[$CellContext`u, 1, 2], 
                 Part[$CellContext`u, 2, 1]}], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, 1, 2], 
                Part[$CellContext`U, 2, 1]}] == 0], 
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == 1], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`westBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`u, $CellContext`i, 2], 
                 Part[$CellContext`u, $CellContext`i - 1, 1]}] == 0, 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, $CellContext`nRow, 1]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, 2], 
                Part[$CellContext`U, $CellContext`i - 1, 1]}] == 0.], 
           And[$CellContext`i == 1, $CellContext`j == $CellContext`nCol], 
           Which[
            
            Or[$CellContext`northBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`northBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0., 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] == 
              Part[$CellContext`u, 1, $CellContext`nCol]], True, 
            Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, 1, $CellContext`j - 1], 
                 Part[$CellContext`U, 2, $CellContext`j]}] == 0.; Null], 
           
           And[$CellContext`i == $CellContext`nRow, $CellContext`j == \
$CellContext`nCol], 
           Which[
            
            Or[$CellContext`southBCtype == 
             "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
            If[
             
             And[$CellContext`southBCtype == 
              "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
             Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                 Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                 Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
              0., Part[$CellContext`eqs, $CellContext`n] = 
             Part[$CellContext`U, $CellContext`i, $CellContext`j] - 
              Part[$CellContext`u, $CellContext`nRow, $CellContext`nCol]], 
            True, Part[$CellContext`eqs, $CellContext`n] = 
            Part[$CellContext`U, $CellContext`i, $CellContext`j] - Mean[{
                Part[$CellContext`U, $CellContext`i, $CellContext`j - 1], 
                Part[$CellContext`U, $CellContext`i - 1, $CellContext`j]}] == 
             0.]]; {$CellContext`eqs, $CellContext`vars}], \
$CellContext`obtainListOfRowsToKeep[
         Pattern[$CellContext`nRow, 
          Blank[]], 
         Pattern[$CellContext`nCol, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := 
       Module[{$CellContext`rowsToRemove = {}}, 
         If[$CellContext`northBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[1, $CellContext`nCol]]; Null]; 
         If[$CellContext`southBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[($CellContext`nRow - 1) $CellContext`nCol + 
              1, $CellContext`nRow $CellContext`nCol]]; Null]; 
         If[$CellContext`westBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             Range[
             1, $CellContext`nRow $CellContext`nCol, $CellContext`nCol]]; 
           Null]; If[$CellContext`eastBCtype == "Dirichlet", 
           AppendTo[$CellContext`rowsToRemove, 
             
             Range[$CellContext`nCol, $CellContext`nRow $CellContext`nCol, \
$CellContext`nCol]]; Null]; Complement[
           Range[$CellContext`nRow $CellContext`nCol], 
           Flatten[$CellContext`rowsToRemove]]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`rightHandVector, 
          Blank[]], 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u, $CellContext`nRow, \
$CellContext`nCol, $CellContext`x, $CellContext`loc, $CellContext`mask}, \
{$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`x = 
          LinearSolve[$CellContext`AA, $CellContext`rightHandVector]; \
$CellContext`mask = $CellContext`setUnknownsMask[{$CellContext`nRow, \
$CellContext`nCol}, $CellContext`northBCtype, $CellContext`westBCtype, \
$CellContext`eastBCtype, $CellContext`southBCtype]; $CellContext`loc = 
          Position[$CellContext`mask, 1]; 
         MapThread[($CellContext`u = 
           ReplacePart[$CellContext`u, # -> #2])& , {$CellContext`loc, \
$CellContext`x}]; Re[$CellContext`u]], $CellContext`setUnknownsMask[{
          Pattern[$CellContext`nRow, 
           Blank[]], 
          Pattern[$CellContext`nCol, 
           Blank[]]}, 
         Pattern[$CellContext`northBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`southBCtype, 
          Blank[]]] := 
       Module[{$CellContext`mask}, $CellContext`mask = 
          Table[0, {$CellContext`nRow}, {$CellContext`nCol}]; Which[
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`northBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[1, -2], 
             Span[1, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[2, -1]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Sommerfeld", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[1, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[1, -2]] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Dirichlet"], 
           Part[$CellContext`mask, 
             Span[2, -2], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], All] = 1, 
           
           And[$CellContext`northBCtype == 
            "Dirichlet", $CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld", $CellContext`southBCtype == "Sommerfeld"], 
           Part[$CellContext`mask, 
             Span[2, -1], 
             Span[2, -1]] = 1]; $CellContext`mask], $CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`Lx, 
          Blank[]], 
         Pattern[$CellContext`Ly, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`plotPerformanceGoal, 
          Blank[]], 
         Pattern[$CellContext`addFaceGrids, 
          Blank[]], 
         Pattern[$CellContext`zAxisScale, 
          Blank[]]] := 
       Module[{$CellContext`tmp, $CellContext`finalDisplayImage, \
$CellContext`nRow, $CellContext`nCol, $CellContext`plot, $CellContext`n, \
$CellContext`dim, $CellContext`cond}, {$CellContext`nRow, $CellContext`nCol} = 
          Dimensions[$CellContext`u]; $CellContext`tmp = 
          MapThread[
           Append[#, #2]& , {$CellContext`grid, $CellContext`u}, 
            2]; $CellContext`tmp = Chop[
            Flatten[$CellContext`tmp, 1]]; If[
           
           Or[$CellContext`plotToShow == 
            "solution and density", $CellContext`plotToShow == 
            "solution and contour"], $CellContext`plot = Item[
             
             ListPlot3D[$CellContext`tmp, 
              PerformanceGoal -> $CellContext`plotPerformanceGoal, 
              ImagePadding -> {{20, 15}, {15, 1}}, PlotRange -> All, 
              If[$CellContext`zAxisScale == True, 
               BoxRatios -> {$CellContext`Lx, $CellContext`Ly, 
                 Min[{$CellContext`Lx, $CellContext`Ly}]}, {}], AxesLabel -> {
                Text[
                 Style["x", Italic, 12]], 
                Text[
                 Style["y", Italic, 12]], None}, TicksStyle -> 9, 
              SphericalRegion -> True, 
              
              If[$CellContext`addFaceGrids, FaceGrids -> All, FaceGrids -> 
               None], ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}]]]; 
         Which[$CellContext`plotToShow == 
           "solution and density", $CellContext`finalDisplayImage = 
           Grid[{{$CellContext`plot}, {
               Item[
                
                ListDensityPlot[$CellContext`tmp, PlotRange -> All, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution and contour", $CellContext`finalDisplayImage = Grid[{{
               Item[$CellContext`plot]}, {
               Item[
                
                ListContourPlot[$CellContext`tmp, Contours -> 10, 
                 ImageSize -> {$CellContext`ContentSizeW, \
($CellContext`ContentSizeH - 10)/2}, ImagePadding -> {{20, 15}, {20, 1}}, 
                 PerformanceGoal -> $CellContext`plotPerformanceGoal]]}}, 
             Spacings -> {0, 0}], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             40, $CellContext`ContentSizeW], $CellContext`plotToShow == 
           "system matrix information", $CellContext`cond = Part[
              LUDecomposition[$CellContext`AA], 3]; $CellContext`dim = 
            Dimensions[$CellContext`AA]; $CellContext`n = Min[30, 
              First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
            Grid[{{
                Style[
                 Text[
                  Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                Style[
                 Text[
                  Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                Style[
                 Text["eigenvalues"], 12]}, {
                $CellContext`makeScrolledPane[
                 Transpose[
                  Partition[
                   Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`n], 1]], 
                 45, $CellContext`ContentSizeW - 20]}, {
                Style[
                 Text["A matrix"], 12]}, {
                $CellContext`makeScrolledPane[
                 Normal[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`n], 
                   Span[1, $CellContext`n]]], $CellContext`ContentSizeH - 
                 140, $CellContext`ContentSizeW]}}]]; \
$CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       260, $CellContext`ContentSizeH = 405, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> True], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           2, $CellContext`forceTermUsed = $CellContext`a \
$CellContext`x^$CellContext`n0 + $CellContext`b \
$CellContext`y^$CellContext`n1, $CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermExpressionCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 
           3, $CellContext`forceTermUsed = $CellContext`a 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
                2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(2 $CellContext`stdy^2))], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] + 
             Sin[($CellContext`c 
                Pi) $CellContext`y]), $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = $CellContext`a (
             Cos[($CellContext`b Pi) $CellContext`x] 
             Sin[($CellContext`c 
                Pi) $CellContext`y])]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 2, $CellContext`forceTermUsed = 
           
           HoldForm[$CellContext`a $CellContext`x^$CellContext`n0 + \
$CellContext`b $CellContext`y^$CellContext`n1], \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed], \
$CellContext`forceTermUsedFormatCommon[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]], 
         Pattern[$CellContext`stdy, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`y0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := 
       Module[{$CellContext`forceTermUsed}, 
         Which[$CellContext`forceTermSelection == 
           1, $CellContext`forceTermUsed = $CellContext`a, \
$CellContext`forceTermSelection == 3, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a 
             Exp[-(($CellContext`x - $CellContext`x0)^2/(
                 2 $CellContext`stdx^2) + ($CellContext`y - \
$CellContext`y0)^2/(
                 2 $CellContext`stdy^2))]], $CellContext`forceTermSelection == 
           4, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] + 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])], $CellContext`forceTermSelection == 
           5, $CellContext`forceTermUsed = 
           HoldForm[$CellContext`a (Cos[($CellContext`b Pi) $CellContext`x] 
              Sin[($CellContext`c 
                 Pi) $CellContext`y])]]; $CellContext`forceTermUsed]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.53984020258309*^9, 3.539840288099449*^9, {3.5398406788210645`*^9, 
   3.539840690936103*^9}, {3.539840772642478*^9, 3.539840774568223*^9}, {
   3.539840807063349*^9, 3.53984087983959*^9}, {3.5398410649120913`*^9, 
   3.5398410672638903`*^9}, {3.539841106028813*^9, 3.539841146021891*^9}, {
   3.5401003093818417`*^9, 3.5401003389490967`*^9}, {3.5401004617571907`*^9, 
   3.540100480437063*^9}, {3.5401005153815002`*^9, 3.5401005310939956`*^9}},
 CellID->287875561]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "Details of the algorithm are described in [1]. This implementation converts \
the finite difference scheme to the standard ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "u"}], "=", "b"}], TraditionalForm]], "InlineMath"],
 " form and uses the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["LinearSolve", "MR"],
 " to obtain the solution. Sparse matrices are used. The matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath"],
 " and its eigenvalues and the numerical solution ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " can be viewed using the dropdown menu. The discretized scheme is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["h", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["u", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "j"}]]}], "+", 
       SubscriptBox["u", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", "j"}]], "-", 
       RowBox[{"\[Omega]", " ", 
        SubscriptBox["u", 
         RowBox[{"i", ",", "j"}]]}], "+", 
       SubscriptBox["u", 
        RowBox[{"i", ",", 
         RowBox[{"j", "-", "1"}]}]], "+", 
       SubscriptBox["u", 
        RowBox[{"i", ",", 
         RowBox[{"j", "+", "1"}]}]], "-", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SubscriptBox["u", 
         RowBox[{"i", ",", "j"}]]}]}], ")"}]}], "=", 
    SubscriptBox["f", 
     RowBox[{"i", ",", "j"}]]}], TraditionalForm]], "InlineMath"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k", " ", "h"}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      RowBox[{
       SubscriptBox["J", "0"], "(", 
       RowBox[{"h", " ", "k"}], ")"}]}]}]}], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["J", "0"], "(", 
     RowBox[{"k", " ", "h"}], ")"}], "=", 
    RowBox[{
     FractionBox["1", "\[Pi]"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
      RowBox[{
       RowBox[{"cos", "(", 
        RowBox[{"k", " ", "h", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}], ")"}], "d", 
       "\[InvisibleSpace]", "\[Theta]"}]}]}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.539326601335514*^9, 3.5393268737991123`*^9}, {
   3.5393278536540384`*^9, 3.539327853658039*^9}, {3.539444542016391*^9, 
   3.5394445838182163`*^9}, 3.545503189599597*^9, 3.545503232691442*^9, {
   3.545590543009161*^9, 3.545590543247322*^9}},
 CellID->32823640],

Cell["\<\
Click the \"solve\" button after making changes to the UI variables to get a \
new solution. The \"reset\" button is used to initialize the system back to \
the state it was before the \"solve\" button was clicked. Different types of \
plots and options are available to choose from. \
\>", "DetailNotes",
 CellChangeTimes->{{3.5393278548216867`*^9, 3.539328029350349*^9}, {
  3.5393846941818686`*^9, 3.5393847556851788`*^9}, {3.5393848079498158`*^9, 
  3.5393848801814876`*^9}, {3.539386364647991*^9, 3.539386380293478*^9}, {
  3.5393864195734653`*^9, 3.539386455445521*^9}, {3.539444593772778*^9, 
  3.539444650472077*^9}, {3.54559055474162*^9, 3.5455905649715548`*^9}},
 CellID->49034629],

Cell["Reference", "DetailNotes",
 CellChangeTimes->{{3.5455905704849463`*^9, 3.5455905715866613`*^9}},
 CellID->2015220495],

Cell[TextData[{
 "[1] Y. S. Wong and G. Li, \"Exact Finite Difference Schemes for Solving \
Helmholtz Equation at Any Wavenumber,\" ",
 StyleBox["International Journal of Numerical Analysis and Modeling",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Series B",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Computing and Information",
  FontSlant->"Italic"],
 ", ",
 StyleBox["2",
  FontWeight->"Bold"],
 "(1), 2010 pp. 91\[Dash]108."
}], "DetailNotes",
 CellChangeTimes->{{3.528697670351863*^9, 3.5286976716395264`*^9}, {
   3.528698121511653*^9, 3.5286981228733253`*^9}, {3.5289799301067996`*^9, 
   3.5289799301083*^9}, {3.5300483635570464`*^9, 3.5300483635580463`*^9}, {
   3.537245656686667*^9, 3.537245691534592*^9}, 3.537245726288005*^9, {
   3.537245763824272*^9, 3.5372457947581997`*^9}, {3.537246095775424*^9, 
   3.537246119437929*^9}, {3.537320985836254*^9, 3.5373209980703077`*^9}, {
   3.538641892093827*^9, 3.53864191212237*^9}, {3.5392023445170107`*^9, 
   3.539202357240045*^9}, {3.539444679519573*^9, 3.539444757932045*^9}},
 CellID->239642231]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5394447970950317`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.540153719499722*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.539326899968936*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.539444800052455*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.539444798477586*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["Helmholtz partial differential equation", "SearchTerms",
 CellChangeTimes->{{3.5393269165270386`*^9, 3.5393269378707485`*^9}},
 CellID->375156082],

Cell["finite difference method", "SearchTerms",
 CellChangeTimes->{{3.5393269393259335`*^9, 3.539326944742121*^9}},
 CellID->121066105]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Heat Conduction Equation",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/HeatConductionEquation.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/HeatConductionEquation.html"]], "RelatedLinks",
 CellID->584775398]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Nasser M. Abbasi",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%\
20Abbasi"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%20Abbasi"]
}], "Author",
 CellChangeTimes->{{3.5392496396007657`*^9, 3.539249643631778*^9}, {
  3.539567898266333*^9, 3.539567898267333*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{768, 596},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[1867101, 36264, 355, 9, 29, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[1867459, 36275, 719, 17, 29, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[1868181, 36294, 340, 11, 29, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[1868524, 36307, 637, 15, 29, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[1869164, 36324, 885, 22, 29, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[1870052, 36348, 393, 10, 29, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[1870448, 36360, 1505, 32, 29, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[1871956, 36394, 908, 21, 29, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 1874495, 36476},
 {"RotateAndZoomIn3D", 1874607, 36479},
 {"DragLocators", 1874720, 36482},
 {"CreateAndDeleteLocators", 1874839, 36485},
 {"SliderZoom", 1874956, 36488},
 {"GamepadControls", 1875065, 36491},
 {"AutomaticAnimation", 1875182, 36494},
 {"BookmarkAnimation", 1875302, 36497}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 231, 5, 104, "DemoTitle"],
Cell[CellGroupData[{
Cell[835, 31, 33, 0, 261, "InitializationSection"],
Cell[871, 33, 124573, 2991, 7944, "Input",
 InitializationCell->True,
 CellID->645220723]
}, Open  ]],
Cell[CellGroupData[{
Cell[125481, 3029, 29, 0, 231, "ManipulateSection"],
Cell[CellGroupData[{
Cell[125535, 3033, 142968, 2973, 46, "Input"],
Cell[268506, 6008, 180080, 3648, 534, "Output",
 CellID->870091126]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448632, 9662, 36, 0, 171, "ManipulateCaptionSection"],
Cell[448671, 9664, 2278, 51, 112, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450986, 9720, 28, 0, 173, "ThumbnailSection"],
Cell[451017, 9722, 377936, 7051, 534, "Output",
 CellID->327754044]
}, Open  ]],
Cell[CellGroupData[{
Cell[828990, 16778, 28, 0, 143, "SnapshotsSection"],
Cell[829021, 16780, 330105, 6044, 534, "Output",
 CellID->300009418],
Cell[1159129, 22826, 377214, 7070, 534, "Output",
 CellID->471470465],
Cell[1536346, 29898, 326011, 6225, 534, "Output",
 CellID->287875561]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862394, 36128, 26, 0, 337, "DetailsSection"],
Cell[1862423, 36130, 2713, 84, 99, "DetailNotes",
 CellID->32823640],
Cell[1865139, 36216, 701, 11, 50, "DetailNotes",
 CellID->49034629],
Cell[1865843, 36229, 123, 2, 21, "DetailNotes",
 CellID->2015220495],
Cell[1865969, 36233, 1055, 24, 51, "DetailNotes",
 CellID->239642231]
}, Open  ]],
Cell[CellGroupData[{
Cell[1867061, 36262, 37, 0, 127, "ControlSuggestionsSection"],
Cell[1867101, 36264, 355, 9, 29, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[1867459, 36275, 719, 17, 29, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[1868181, 36294, 340, 11, 29, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[1868524, 36307, 637, 15, 29, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[1869164, 36324, 885, 22, 29, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[1870052, 36348, 393, 10, 29, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[1870448, 36360, 1505, 32, 29, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[1871956, 36394, 908, 21, 29, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1872901, 36420, 30, 0, 155, "SearchTermsSection"],
Cell[1872934, 36422, 152, 2, 21, "SearchTerms",
 CellID->375156082],
Cell[1873089, 36426, 135, 2, 21, "SearchTerms",
 CellID->121066105]
}, Open  ]],
Cell[CellGroupData[{
Cell[1873261, 36433, 31, 0, 141, "RelatedLinksSection"],
Cell[1873295, 36435, 280, 6, 21, "RelatedLinks",
 CellID->584775398]
}, Open  ]],
Cell[CellGroupData[{
Cell[1873612, 36446, 25, 0, 141, "AuthorSection"],
Cell[1873640, 36448, 430, 11, 21, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
