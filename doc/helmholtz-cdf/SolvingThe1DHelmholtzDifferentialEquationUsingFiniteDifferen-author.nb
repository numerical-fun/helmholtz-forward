(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    753783,      14986]
NotebookOptionsPosition[    749443,      14853]
NotebookOutlinePosition[    751100,      14905]
CellTagsIndexPosition[    750756,      14893]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Solving the 1D Helmholtz Differential Equation Using Finite Differences\
\>", "DemoTitle",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvc8r7vfaoFeOzyo4GNYB6ZqKruTnQLp6cl8GiI6z
fHqxKvSVo8XX85dA9KmDardB9PnV+ndB9Ke8ZZ9BtKnXKjDtH537A0TnOX76
A6J/PeMVrgbSbKt3guklZiafLwLpvs3aX0H06Si2nyDa79Zs9ktAWmty7r+Z
YUB9HTsYZwHpo/FrTSZHvnI8onvXEUTHZObzzwbSvx6ySoDonklRVbOiXjn+
yPzfDKIvp6d1guhQmfRuEB3zI/TmXCB9aPfDOyB6w847+0SiXznOUnsBpg2W
8+1LiX3laP73+H4QXZ7M2JgDpOcdrAXT0w4+eZcc98pxz1ebDyB63W55A7+E
V47Tj+8E0wDSYKyD
  "]],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"checkTerm", "[", 
      RowBox[{"t_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumberQ", "[", "#", "]"}], "&"}], ")"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"t", "-", "1"}], "]"}], "<", "$MachineEpsilon"}], ",", "1", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "t", "]"}], "<", "$MachineEpsilon"}], ",", "0", 
         ",", "t"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"generatePhysicalCoordinates1D", "[", 
      RowBox[{
       RowBox[{"h_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
       RowBox[{"len_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
       RowBox[{"centerGrid_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"#", ",", "Booleans"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "nodes", ",", "intervals"}], "}"}], ",", 
       RowBox[{
        RowBox[{"intervals", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"len", "/", "h"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodes", "=", 
         RowBox[{"intervals", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"centerGrid", "\[Equal]", "True"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OddQ", "[", "nodes", "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"h", "*", "i"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"intervals", "/", "2"}], ")"}]}], ",", 
                RowBox[{"intervals", "/", "2"}], ",", "1"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"h", "*", "i"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"nodes", "/", "2"}], ")"}]}], "+", "1"}], ",", 
                RowBox[{"nodes", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"centerGrid", "\[Equal]", "False"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"h", "*", "i"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "intervals", ",", "1"}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"forceTermUsedFormat1D", "[", 
      RowBox[{
      "forceTermSelection_", ",", "aa_", ",", "bb_", ",", "sstdx_", ",", 
       "xx0_", ",", "nn0_", ",", "x_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"checkTerm", "[", "aa", "]"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"checkTerm", "[", "bb", "]"}]}], ",", 
         RowBox[{"stdx", "=", 
          RowBox[{"checkTerm", "[", "sstdx", "]"}]}], ",", 
         RowBox[{"x0", "=", 
          RowBox[{"checkTerm", "[", "xx0", "]"}]}], ",", 
         RowBox[{"n0", "=", 
          RowBox[{"checkTerm", "[", "nn0", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", "a", " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "2"}], ",", 
         RowBox[{"a", "*", 
          RowBox[{"x", "^", 
           RowBox[{"(", "n0", ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
         RowBox[{"a", "*", " ", 
          FractionBox[
           RowBox[{"1", " "}], 
           RowBox[{"stdx", " ", 
            RowBox[{"HoldForm", "[", 
             SqrtBox[
              RowBox[{"2", " ", "Pi"}]], "]"}]}]], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"stdx", "^", "2"}]}], " ", ")"}]}], " ", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
         RowBox[{"a", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"b", " ", 
            RowBox[{"HoldForm", "[", 
             RowBox[{"Pi", " ", "x"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"makeScrolledPane", "[", 
      RowBox[{
       RowBox[{"mat_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"#", ",", "NumberQ"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"nRow_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
       RowBox[{"nCol_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{"mat", ",", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".4", ",", ".4"}], "}"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"N", "@", "t"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", "5"}], "}"}], ",", 
              RowBox[{"NumberSigns", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<-\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Pane", "[", 
         RowBox[{"t", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"nCol", ",", "nRow"}], "}"}]}], ",", 
          RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeScrolledPane", "[", 
      RowBox[{
       RowBox[{"lst_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VectorQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"nRow_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
       RowBox[{"nCol_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"Positive", "[", "#", "]"}]}], "&"}], ")"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "lst", "}"}], ",", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".4", ",", ".4"}], "}"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"AccountingForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"N", "@", "t"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", "5"}], "}"}], ",", 
              RowBox[{"NumberSigns", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<-\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Pane", "[", 
         RowBox[{"t", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"nCol", ",", "nRow"}], "}"}]}], ",", 
          RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"process", "[", 
      RowBox[{
      "h_", ",", "centerGrid_", ",", "kValue_", ",", "n0_", ",", "a_", ",", 
       "b_", ",", "x0_", ",", "stdx_", ",", "forceTermSelection_", ",", 
       "plotToShow_", ",", "westBCtype_", ",", "westbc_", ",", 
       "westBCconstantValue_", ",", "eastBCtype_", ",", "eastbc_", ",", 
       "eastBCconstantValue_", ",", "gstatusMessage_", ",", 
       "showGridLines_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lx", "=", "1"}], ",", "forceVector", ",", "u", ",", 
         "forceGrid", ",", "grid", ",", "AA"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "grid", ",", "forceGrid", ",", "u", ",", "AA", ",", "forceVector"}],
           "}"}], "=", 
         RowBox[{"initializeSystem", "[", 
          RowBox[{
          "h", ",", "Lx", ",", "centerGrid", ",", "forceTermSelection", ",", 
           "a", ",", "b", ",", "n0", ",", "x0", ",", "stdx", ",", 
           "westBCtype", ",", "westbc", ",", "westBCconstantValue", ",", 
           "eastBCtype", ",", "eastbc", ",", "eastBCconstantValue", ",", 
           "kValue"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gstatusMessage", "=", "\"\<ready..\>\""}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"makeFinalPlot", "[", 
         RowBox[{
          RowBox[{"solve", "[", 
           RowBox[{
           "u", ",", "AA", ",", "forceVector", ",", "westBCtype", ",", 
            "eastBCtype"}], "]"}], ",", "AA", ",", "grid", ",", "plotToShow", 
          ",", "showGridLines"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"solve", "[", 
      RowBox[{
      "$u_", ",", " ", "AA_", ",", "forceVector_", ",", "westBCtype_", ",", 
       "eastBCtype_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", "=", "$u"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"u", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"Re", "[", 
             RowBox[{"LinearSolve", "[", 
              RowBox[{"AA", ",", "forceVector"}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"u", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"Re", "[", 
             RowBox[{"LinearSolve", "[", 
              RowBox[{"AA", ",", "forceVector"}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"u", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"LinearSolve", "[", 
             RowBox[{"AA", ",", "forceVector"}], "]"}]}], 
           "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "u"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeSystem", "[", 
      RowBox[{
      "h_", ",", "length_", ",", "centerGrid_", ",", "forceTermSelection_", 
       ",", "a_", ",", "b_", ",", "n0_", ",", "x0_", ",", "stdx_", ",", 
       "westBCtype_", ",", "westbc_", ",", "westBCconstantValue_", ",", 
       "eastBCtype_", ",", "eastbc_", ",", "eastBCconstantValue_", ",", 
       "kValue_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "grid", ",", "forceGrid", ",", "u", ",", "AA", ",", 
         "forceVector"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "grid", " ", "contains", " ", "the", " ", "x", " ", "physical", " ", 
         "coordinates", " ", "of", " ", "each", " ", "grid", " ", "point"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"grid", "=", 
         RowBox[{"N", "[", 
          RowBox[{"generatePhysicalCoordinates1D", "[", 
           RowBox[{"h", ",", "length", ",", "centerGrid"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "grid", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"u", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"forceGrid", " ", "=", " ", 
         RowBox[{"makeForceGrid", "[", 
          RowBox[{
          "a", ",", "b", ",", "n0", ",", "x0", ",", "stdx", ",", "n", ",", 
           "forceTermSelection", ",", "grid"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"u", "=", 
         RowBox[{"setBoundaryConditions", "[", 
          RowBox[{
          "u", ",", "grid", ",", "westBCtype", ",", "westbc", ",", 
           "westBCconstantValue", ",", "eastBCtype", ",", "eastbc", ",", 
           "eastBCconstantValue"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"AA", ",", "forceVector"}], "}"}], "=", 
         RowBox[{"makeSystemAndRightHandSideVector", "[", 
          RowBox[{
          "n", ",", "westBCtype", ",", "eastBCtype", ",", "kValue", ",", "h", 
           ",", "forceGrid", ",", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
         "grid", ",", "forceGrid", ",", "u", ",", "AA", ",", "forceVector"}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"makeForceGrid", "[", 
      RowBox[{
      "a_", ",", "b_", ",", "n0$_", ",", "x0_", ",", "stdx_", ",", "n_", ",", 
       "forceTermSelection_", ",", "grid_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n0", "=", 
          RowBox[{"checkTerm", "[", "n0$", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", "n", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n0", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"grid", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ")"}], "^", "n0"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"stdx", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"2", "*", "Pi"}], "]"}]}], ")"}]}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "  ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "grid", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "-", "x0"}], ")"}], "^", 
                "2"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"stdx", "^", "2"}]}], " ", ")"}]}], " ", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"b", " ", "Pi", " ", 
              RowBox[{
              "grid", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], "]"}]}], " ", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"makeSystemAndRightHandSideVector", "[", 
      RowBox[{
      "n_", ",", "westBCtype_", ",", "eastBCtype_", ",", "kValue_", ",", "h_",
        ",", "forceGrid_", ",", "u_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"forceVector", ",", "AA", ",", 
         RowBox[{"kh", "=", 
          RowBox[{"kValue", "*", " ", "h"}]}], ",", "omega"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"omega", "=", 
         RowBox[{
          RowBox[{"2.0", " ", 
           RowBox[{"Cos", "[", "kh", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", "kh", ")"}], "^", "2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AA", "=", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"omega", "-", 
                   RowBox[{
                    RowBox[{"(", "kh", ")"}], "^", "2"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}]}], "\[IndentingNewLine]", "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "-", "1"}], ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
             "1.0"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"-", "2.0"}], " ", "I", "  ", 
              RowBox[{"Sin", "[", "kh", "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"-", "1.0"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"forceVector", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "forceVector", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "=", "0"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"h", "^", "2"}], "*", 
              RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"h", "^", "2"}], "*", 
               RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
                RowBox[{"n", "-", "1"}], "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{"u", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AA", "=", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"omega", "-", 
                   RowBox[{
                    RowBox[{"(", "kh", ")"}], "^", "2"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}]}], "\[IndentingNewLine]", "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "-", "1"}], ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", "1.0"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"-", "2.0"}], " ", "I", "  ", 
              RowBox[{"Sin", "[", "kh", "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AA", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"-", "1.0"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"forceVector", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "forceVector", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"h", "^", "2"}], "*", 
               RowBox[{
               "forceGrid", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{
              "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"h", "^", "2"}], "*", 
              RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
               RowBox[{"3", ";;", 
                RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "0"}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AA", "=", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"omega", "-", 
                   RowBox[{
                    RowBox[{"(", "kh", ")"}], "^", "2"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Band", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                  RowBox[{"-", "1."}]}]}], "\[IndentingNewLine]", "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "-", "2"}], ",", 
                 RowBox[{"n", "-", "2"}]}], "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"forceVector", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"n", "-", "2"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "forceVector", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"h", "^", "2"}], "*", 
               RowBox[{
               "forceGrid", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{
              "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"h", "^", "2"}], "*", 
               RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
                RowBox[{"n", "-", "1"}], "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{"u", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"forceVector", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"h", "^", "2"}], "*", 
              RowBox[{"forceGrid", "\[LeftDoubleBracket]", 
               RowBox[{"3", ";;", 
                RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}]}]}]}], 
           "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"AA", ",", "forceVector"}], "}"}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"setBoundaryConditions", "[", 
      RowBox[{
      "$u_", ",", "grid_", ",", "westBCtype_", ",", "westbc_", ",", 
       "westBCconstantValue_", ",", "eastBCtype_", ",", "eastbc_", ",", 
       "eastBCconstantValue_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", "=", "$u"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"westBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
            
            RowBox[{"westBCconstantValue", "*", 
             RowBox[{"westbc", "[", 
              RowBox[{
              "grid", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}]}]}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"eastBCtype", "\[Equal]", "\"\<Dirichlet\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"u", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"eastBCconstantValue", "*", 
             RowBox[{"eastbc", "[", 
              RowBox[{"grid", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}]}], 
           "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "u"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getNDsolveResult", "[", 
      RowBox[{
      "k_", ",", "westBCtype_", ",", "eastBCtype_", ",", 
       "westBCconstantValue_", ",", "eastBCconstantValue_", ",", 
       "forceTermSelection_", ",", "a_", ",", "b_", ",", "n0_", ",", "x0_", 
       ",", "stdx_", ",", "centerGrid_", ",", "showGridLines_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "f", ",", "x", ",", "eq", ",", "y", ",", "sol", ",", 
         "boundaryConditions", ",", "from", ",", "to", ",", "plotOptions"}], 
        "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"plotOptions", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"40", ",", "20"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"25", ",", "30"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Text", "@", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<NDSolve\>\"", ",", "\"\<MR\>\""}], "]"}], 
                  ",", "\"\< solution\>\""}], "}"}], "]"}], ",", "12"}], 
              "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "Italic", ",", "11"}], "]"}]}], ",", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ContentSizeW", "-", "20"}], ",", 
              RowBox[{"ContentSizeH", "-", "250"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageMargins", "\[Rule]", "1"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"centerGrid", ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"from", "=", 
             RowBox[{"-", "0.5"}]}], ";", 
            RowBox[{"to", "=", "0.5"}]}], ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"from", "=", "0"}], ";", 
            RowBox[{"to", "=", "1.0"}]}], ")"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"forceTermSelection", "\[Equal]", "1"}], ",", "a", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"forceTermSelection", "\[Equal]", "2"}], ",", 
           RowBox[{"a", "*", 
            RowBox[{"x", "^", "n0"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"forceTermSelection", "\[Equal]", "3"}], ",", 
           RowBox[{
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"stdx", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"2", "*", "Pi"}], "]"}]}], ")"}]}], " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "  ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"stdx", "^", "2"}]}], " ", ")"}]}], " ", "]"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"forceTermSelection", "\[Equal]", "4"}], ",", 
           RowBox[{"a", "*", 
            RowBox[{"Cos", "[", 
             RowBox[{"b", " ", "Pi", " ", "x"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"eq", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
           RowBox[{
            RowBox[{"k", "^", "2"}], "*", 
            RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "f"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Sommerfeld\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"boundaryConditions", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Derivative", "[", "1", "]"}], "[", "y", "]"}], "[",
                  "from", "]"}], "-", 
                RowBox[{"I", " ", "k", " ", 
                 RowBox[{"y", "[", "from", "]"}]}]}], "\[Equal]", "0"}], ",", 
              
              RowBox[{
               RowBox[{"y", "[", "to", "]"}], "\[Equal]", 
               "eastBCconstantValue"}]}], "}"}]}], "\[IndentingNewLine]", 
           ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Sommerfeld\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"boundaryConditions", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "[", "from", "]"}], "\[Equal]", 
               "westBCconstantValue"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Derivative", "[", "1", "]"}], "[", "y", "]"}], "[",
                  "to", "]"}], "-", 
                RowBox[{"I", " ", "k", " ", 
                 RowBox[{"y", "[", "to", "]"}]}]}], "\[Equal]", "0"}]}], 
             "}"}]}], "\[IndentingNewLine]", ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], "&&", 
           RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"boundaryConditions", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "[", "from", "]"}], "\[Equal]", 
               "westBCconstantValue"}], ",", 
              RowBox[{
               RowBox[{"y", "[", "to", "]"}], "\[Equal]", 
               "eastBCconstantValue"}]}], "}"}]}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"y", "/.", 
          RowBox[{"First", "@", 
           RowBox[{"Quiet", "@", 
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{"eq", ",", "boundaryConditions"}], "}"}]}], ",", "y", 
              ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "from", ",", "to"}], "}"}], ",", 
              RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}]}]}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"showGridLines", ",", "\[IndentingNewLine]", 
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"sol", "[", "x", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "from", ",", "to"}], "}"}], ",", 
              RowBox[{"Evaluate", "@", "plotOptions"}], ",", 
              RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
            RowBox[{"FrameStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"sol", "[", "x", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "from", ",", "to"}], "}"}], ",", 
              RowBox[{"Evaluate", "@", "plotOptions"}]}], "]"}], ",", 
            RowBox[{"FrameStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"makeFinalPlot", "[", 
      RowBox[{
      "u_", ",", "AA_", ",", "grid_", ",", "plotToShow_", ",", 
       "showGridLines_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "finalDisplayImage", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plotToShow", "==", "\"\<solution\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"finalDisplayImage", "=", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{"{", 
                    RowBox[{"grid", ",", "u"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImagePadding", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"45", ",", "25"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"25", ",", "20"}], "}"}]}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AxesLabel", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "11"}], "]"}]}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"Text", "@", 
                    RowBox[{
                    "Style", "[", "\"\<finite difference solution\>\"", 
                    "]"}]}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ContentSizeW", "-", "20"}], ",", 
                    RowBox[{"ContentSizeH", "-", "20"}]}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"TicksStyle", "\[Rule]", "9"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"showGridLines", ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "None"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AxesOrigin", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]",
                  "]"}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
               "}"}], ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
              RowBox[{"Frame", "\[Rule]", "None"}], ",", 
              RowBox[{"FrameStyle", "->", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"plotToShow", "==", "\"\<solution data\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"finalDisplayImage", "=", 
            RowBox[{"makeScrolledPane", "[", 
             RowBox[{
              RowBox[{"Normal", "@", "u"}], ",", 
              RowBox[{"ContentSizeH", "-", "350"}], ",", 
              RowBox[{"ContentSizeW", " ", "-", "20"}]}], "]"}]}], 
           "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"plotToShow", "==", "\"\<system matrix information\>\""}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"tmp", ",", "dim", ",", "m", ",", "cond"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"cond", "=", 
               RowBox[{
                RowBox[{"LUDecomposition", "[", 
                 RowBox[{"Normal", "@", "AA"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"dim", "=", 
               RowBox[{"Dimensions", "[", 
                RowBox[{"Normal", "@", "AA"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"m", "=", 
               RowBox[{"Min", "[", 
                RowBox[{"20", ",", 
                 RowBox[{"First", "@", "dim"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"finalDisplayImage", "=", 
               RowBox[{"Grid", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<condition number = \>\"", ",", "cond"}], 
                    "}"}], "]"}]}], ",", "12"}], "]"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<matrix size = \>\"", ",", "dim"}], "}"}], 
                    "]"}]}], ",", "12"}], "]"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", "\"\<eigenvalues\>\"", "]"}], ",", 
                    "12"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"makeScrolledPane", "[", 
                    RowBox[{
                    RowBox[{"Re", "@", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Eigenvalues", "[", 
                    RowBox[{
                    RowBox[{"Normal", "@", "AA"}], ",", "m"}], "]"}], ",", 
                    "1"}], "]"}]}]}], ",", "45", ",", 
                    RowBox[{"ContentSizeW", "-", "20"}]}], "]"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", "\"\<A matrix\>\"", "]"}], ",", 
                    "12"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"makeScrolledPane", "[", 
                    RowBox[{
                    RowBox[{"AA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "m"}], ",", 
                    RowBox[{"1", ";;", "m"}]}], "]"}], "]"}], ",", 
                    RowBox[{"ContentSizeH", "-", "150"}], ",", 
                    RowBox[{"ContentSizeW", "-", "20"}]}], "]"}], "}"}]}], 
                 "\[IndentingNewLine]", "}"}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "finalDisplayImage"}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "  ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"myGrid", "[", 
      RowBox[{"tab_", ",", "opts___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"divlocal", ",", "divglobal", ",", "pos"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "extract", " ", "option", " ", "value", " ", "of", " ", "Dividers", 
         " ", "from", " ", "opts", " ", "to", " ", "divglobal"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{"default", " ", "value", " ", "is", " ", 
         RowBox[{"{", 
          RowBox[{"False", ",", "False"}], "}"}]}], "*)"}], 
       RowBox[{
        RowBox[{"divglobal", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dividers", "/.", 
            RowBox[{"{", "opts", "}"}]}], ")"}], "/.", 
          RowBox[{"Dividers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"False", ",", "False"}], "}"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "transform", " ", "divglobal", " ", "so", " ", "that", " ", "it", 
          " ", "is", " ", "in", " ", "the", " ", "form", " ", 
          RowBox[{"{", 
           RowBox[{"colspecs", ",", "rowspecs"}], "}"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "divglobal", "]"}], "=!=", "List"}], ",", 
          RowBox[{"divglobal", "=", 
           RowBox[{"{", 
            RowBox[{"divglobal", ",", "divglobal"}], "}"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "divglobal", "]"}], "\[Equal]", "1"}], ",", 
          
          RowBox[{"AppendTo", "[", 
           RowBox[{"divglobal", ",", "False"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Extract", " ", "positions", " ", "of", " ", "dividers", " ", 
          "between", " ", "rows", " ", "from", " ", "tab"}], "*)"}], 
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"tab", ",", 
           RowBox[{"Dividers", "\[Rule]", "_"}], ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Build", " ", "list", " ", "of", " ", "rules", " ", "for", " ", 
          "divider", " ", "specifications", " ", "between", " ", "rows"}], 
         "*)"}], 
        RowBox[{"divlocal", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "-", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "\[Rule]", 
              "Dividers"}], "/.", 
             RowBox[{"tab", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "&"}], ",", 
           RowBox[{"Flatten", "[", "pos", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Final", " ", "settings", " ", "for", " ", "dividers", " ", "are", 
          " ", 
          RowBox[{"{", 
           RowBox[{"colspecs", ",", 
            RowBox[{"{", 
             RowBox[{"rowspecs", ",", "divlocal"}], "}"}]}], "}"}]}], "*)"}], 
        
        RowBox[{
         RowBox[{"divglobal", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"divglobal", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "divlocal"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{"tab", ",", "pos"}], "]"}], ",", 
          RowBox[{"Dividers", "\[Rule]", "divglobal"}], ",", "opts"}], 
         "]"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "  ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeBoxes", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Derivative", "[", "indices__", "]"}], "[", "f_", "]"}], "[",
         "vars__", "]"}], ",", "TraditionalForm"}], "]"}], ":=", 
     RowBox[{"SubscriptBox", "[", 
      RowBox[{
       RowBox[{"MakeBoxes", "[", 
        RowBox[{"f", ",", "TraditionalForm"}], "]"}], ",", 
       RowBox[{"RowBox", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"dummyhead", "[", 
              RowBox[{
               RowBox[{"{", "vars", "}"}], ",", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"{", "indices", "}"}], ",", "1"}], "]"}]}], "]"}], 
             "]"}], "/.", 
            RowBox[{"dummyhead", "\[Rule]", "Table"}]}], "]"}]}], "]"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"ContentSizeW", "=", "295"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ContentSizeH", "=", "415"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"padIt1", "[", 
      RowBox[{
       RowBox[{"v_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], "&"}], ")"}]}], ",",
        "f_List"}], "]"}], ":=", 
     RowBox[{"AccountingForm", "[", 
      RowBox[{
       RowBox[{"Chop", "[", 
        RowBox[{"N", "@", "v"}], "]"}], " ", ",", "f", ",", 
       RowBox[{"NumberSigns", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<-\>\"", ",", "\"\<+\>\""}], "}"}]}], ",", 
       RowBox[{"NumberPadding", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
       RowBox[{"SignPadding", "->", "True"}]}], "]"}]}], ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"padIt2", "[", 
      RowBox[{
       RowBox[{"v_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], "&"}], ")"}]}], ",",
        "f_List"}], "]"}], ":=", 
     RowBox[{"AccountingForm", "[", 
      RowBox[{
       RowBox[{"Chop", "[", 
        RowBox[{"N", "@", "v"}], "]"}], " ", ",", "f", ",", 
       RowBox[{"NumberSigns", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
       RowBox[{"NumberPadding", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
       RowBox[{"SignPadding", "->", "True"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"padIt3", "[", 
      RowBox[{
       RowBox[{"v_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{
            RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], "&"}], ")"}]}], ",",
        "f_List"}], "]"}], ":=", 
     RowBox[{"AccountingForm", "[", 
      RowBox[{"v", " ", ",", "f", ",", 
       RowBox[{"NumberSigns", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
       RowBox[{"NumberPadding", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
       RowBox[{"SignPadding", "->", "True"}], ",", 
       RowBox[{"NumberPoint", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
          "\"\<\>\"", ",", "\"\<.\>\""}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}], "*)"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.537053136536213*^9, 3.537053141034284*^9}, 
   3.5370532778826613`*^9, 3.53705374588809*^9, 3.537057799857379*^9, {
   3.53706803848302*^9, 3.537068041414892*^9}, {3.537070409164558*^9, 
   3.53707041201492*^9}, {3.5372445430337515`*^9, 3.537244565713131*^9}, {
   3.5372445966055536`*^9, 3.537244639184961*^9}, 3.5372462044047184`*^9, 
   3.5386224909516945`*^9, 3.538622654852507*^9, {3.538622700222268*^9, 
   3.5386227735755835`*^9}, 3.538623369169714*^9, {3.538623532183414*^9, 
   3.538623586951369*^9}, {3.5386236472680283`*^9, 3.5386236513515463`*^9}, {
   3.5386237674477887`*^9, 3.538623828359524*^9}, {3.5386241025768447`*^9, 
   3.5386241028713827`*^9}, {3.538624684847784*^9, 3.5386246866110077`*^9}, {
   3.5386247287983646`*^9, 3.5386247305420866`*^9}, {3.5386290171039104`*^9, 
   3.5386290374039884`*^9}, {3.538629071853363*^9, 3.538629080036902*^9}, {
   3.5386293076503053`*^9, 3.5386293082123766`*^9}, {3.5386293460481815`*^9, 
   3.538629359568898*^9}, {3.538630013894487*^9, 3.5386300431967077`*^9}, {
   3.5386300827832346`*^9, 3.5386302085742083`*^9}, {3.538630263705209*^9, 
   3.5386302652929106`*^9}, {3.5386304040690327`*^9, 
   3.5386304045150895`*^9}, {3.5386360845443616`*^9, 3.53863619635706*^9}, {
   3.538636275303085*^9, 3.538636285429371*^9}, {3.5386363367263846`*^9, 
   3.5386363768139753`*^9}, {3.5386367706774893`*^9, 
   3.5386367711325474`*^9}, {3.538637488986203*^9, 3.5386375035965586`*^9}, {
   3.538637724960168*^9, 3.5386377537468233`*^9}, 3.53863880369565*^9, {
   3.5386389139826546`*^9, 3.5386389863438435`*^9}, {3.538639031847622*^9, 
   3.538639098961644*^9}, {3.5386391361053605`*^9, 3.538639137311514*^9}, {
   3.538639187239854*^9, 3.5386392007435684`*^9}, 3.5386392787034683`*^9, {
   3.538639456599558*^9, 3.5386394842965755`*^9}, {3.5386403277096753`*^9, 
   3.5386404152747946`*^9}, {3.538640690304719*^9, 3.5386407124975367`*^9}, {
   3.538640782938982*^9, 3.5386407860558777`*^9}, {3.538640821505379*^9, 
   3.538640878201579*^9}, 3.5386409303251977`*^9, {3.538640998410343*^9, 
   3.538640999898032*^9}, {3.5386410393450413`*^9, 3.538641042215906*^9}, 
   3.5386410875211587`*^9, {3.5386411273522167`*^9, 3.538641170449189*^9}, 
   3.538641223962985*^9, {3.538641945967168*^9, 3.5386419818497243`*^9}, {
   3.5386420500278816`*^9, 3.5386420675406055`*^9}, {3.5386422347173347`*^9, 
   3.5386422881251163`*^9}, {3.5386424374765816`*^9, 
   3.5386424417541246`*^9}, {3.53864248392898*^9, 3.5386424883700438`*^9}, {
   3.538642855385649*^9, 3.5386428627455835`*^9}, 3.5391223400370207`*^9, {
   3.5391266262648025`*^9, 3.5391266313454475`*^9}, {3.539126684774232*^9, 
   3.5391266871255307`*^9}, 3.53912700408928*^9, 3.539127044225377*^9, {
   3.539127150350853*^9, 3.539127184448183*^9}, {3.539127234143493*^9, 
   3.539127237628936*^9}, 3.5391286919201074`*^9, {3.539128849746649*^9, 
   3.5391288556794024`*^9}, {3.539128915623014*^9, 3.5391289746735125`*^9}, 
   3.5391290134319344`*^9, {3.539129069423044*^9, 3.539129142454818*^9}, 
   3.5391291816392937`*^9, {3.5391384193048286`*^9, 3.5391384441309805`*^9}, {
   3.5391429257065687`*^9, 3.539142925748074*^9}, {3.5391432348318224`*^9, 
   3.539143251419429*^9}, {3.539143815098507*^9, 3.539143835093046*^9}, {
   3.539148184977911*^9, 3.5391481867496367`*^9}, {3.53914905130142*^9, 
   3.539149065057167*^9}, {3.539149296644575*^9, 3.539149313042157*^9}, {
   3.5392028378370953`*^9, 3.539202867020344*^9}, 3.539202906092658*^9, {
   3.539206445143013*^9, 3.539206477639139*^9}, {3.5392068320866485`*^9, 
   3.539206835456076*^9}, {3.539207124719808*^9, 3.5392071284807854`*^9}, {
   3.5392071632316985`*^9, 3.539207169712021*^9}, 3.5392072406220255`*^9, {
   3.5392073361351547`*^9, 3.539207383544675*^9}, 3.5392074838724146`*^9, {
   3.5392083500109005`*^9, 3.5392083571783104`*^9}, {3.5392089395692644`*^9, 
   3.5392093166861525`*^9}, {3.5392096765808535`*^9, 
   3.5392096818510227`*^9}, {3.5392097128184547`*^9, 3.539209718035117*^9}, {
   3.5392097649160705`*^9, 3.539209798003272*^9}, {3.5392098314640207`*^9, 
   3.5392098579708867`*^9}, {3.539210284576059*^9, 3.5392103071424246`*^9}, 
   3.5392105656717534`*^9, {3.5392106084076805`*^9, 3.5392106088457355`*^9}, {
   3.5394843644628873`*^9, 3.5394843692494946`*^9}, 3.539484498778943*^9, 
   3.539484564188249*^9, 3.539484617219983*^9, {3.5395516419075375`*^9, 
   3.5395516473117237`*^9}, 3.539837387949177*^9, 3.539837452871421*^9, {
   3.5398375481510196`*^9, 3.5398376426720223`*^9}, {3.539837678580582*^9, 
   3.5398377152052326`*^9}, {3.539837810994897*^9, 3.539837909175364*^9}, {
   3.5398379893170404`*^9, 3.5398380080834236`*^9}},
 CellID->645220723]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gtick", ";", " ", "\[IndentingNewLine]", 
     RowBox[{"finalDisplayImage", " ", "=", " ", 
      RowBox[{"process", "[", 
       RowBox[{
       "h", ",", "centerGrid", ",", "kValue", ",", "n0", ",", "a", ",", "b", 
        ",", "x0", ",", "stdx", ",", "forceTermSelection", ",", "plotToShow", 
        ",", "westBCtype", ",", "westbc", ",", "westBCconstantValue", ",", 
        "eastBCtype", ",", "eastbc", ",", "eastBCconstantValue", ",", 
        RowBox[{"Unevaluated", "@", "gstatusMessage"}], ",", 
        "showGridLines"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FinishDynamic", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Framed", "[", 
      RowBox[{"finalDisplayImage", " ", ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], "]"}]}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", " ", "plotOptions"}]}], " ", 
          RowBox[{"macro", " ", "--"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plotOptions", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"PopupMenu", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"plotToShow", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"plotToShow", "=", "#"}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<solution\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solution\>\"", ",", "12"}], "]"}]}], ",", 
                    " ", "\[IndentingNewLine]", 
                    RowBox[{"\"\<solution data\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<solution data\>\"", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<system matrix information\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<system matrix\>\"", ",", "12"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"ImageSize", "->", "All"}]}], "]"}], 
                 "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], 
               ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{".7", ",", ".2"}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "None"}], ",", 
               RowBox[{"FrameStyle", "->", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                 "]"}]}]}], "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"--", 
             RowBox[{"-", " ", "top"}]}], " ", "row", " ", 
            RowBox[{
             RowBox[{"macro", "  ", "--"}], "--"}]}], "-"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"topRow", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<k\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", "2", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Manipulator", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"kValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"kValue", "=", "#"}], ";", " ", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0", ",", "200", ",", "1.0"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", "2", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt3", "[", 
                    RowBox[{"kValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "0"}], "}"}]}], "]"}]}], ",", "12"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<k h\>\"", ",", "Italic", ",", "12"}], 
                    "]"}]}], ",", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{
                    RowBox[{"kValue", "*", "h"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], ",", "12"}], 
                    "]"}]}]}], "}"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<PPW\>\"", ",", "12"}], "]"}]}], ",", 
                  "\"\< = \>\"", ",", "\[IndentingNewLine]", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"kValue", "\[Equal]", "0.0"}], ",", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<N/A\>\"", ",", 
                    RowBox[{"Spacer", "[", "19", "]"}]}], "}"}], "]"}], ",", 
                    "11"}], "]"}]}], ",", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"padIt2", "[", 
                    RowBox[{
                    RowBox[{"2.0", "*", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"kValue", "*", "h"}], ")"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}]}], "]"}], ",", "11"}], 
                    "]"}]}]}], "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
             "}"}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.6", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"FrameStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"-", "--"}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", " ", "geometry"}]}], " ", 
           RowBox[{"macro", "      ", "--"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", "-"}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"geometry", "=", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<grid size\>\"", ",", "12"}], "]"}]}], ",", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"h", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"h", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "11"}], "]"}]}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.1", ",", "0.05", ",", "0.02", ",", "0.01", ",", 
                    "0.005", ",", "0.002", ",", "0.001"}], "}"}]}]}], "]"}]}],
                     "}"}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<centered grid \>\"", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"centerGrid", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"centerGrid", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    "\[IndentingNewLine]", "]"}]}], "}"}], "]"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<grid lines \>\"", ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"showGridLines", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"showGridLines", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    "\[IndentingNewLine]", "]"}]}], "}"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Frame", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"myGrid", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<left side\>\"", ",", "12"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"Dividers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", "Blue"}], "}"}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", ",", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"westBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], 
                    "&&", 
                    RowBox[{
                    "eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}]}], ",", 
                    RowBox[{"westBCtype", "=", "\"\<Dirichlet\>\""}], ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "]"}]}], "}"}], "&"}]}],
                     "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\[Alpha]", ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "1", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"westBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"westBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"westBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                    ",", "\[IndentingNewLine]", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]",
                     "]"}], "\[IndentingNewLine]", "}"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".4"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Dividers", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "5", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"myGrid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<right side\>\"", ",", "12"}], "]"}]}], "}"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Dividers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", "Blue"}], "}"}]}], ",", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCtype", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eastBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}], 
                    "&&", 
                    RowBox[{
                    "westBCtype", "\[Equal]", "\"\<Sommerfeld\>\""}]}], ",", 
                    RowBox[{"eastBCtype", "=", "\"\<Dirichlet\>\""}], ",", 
                    RowBox[{"gtick", "+=", "del"}]}], "]"}]}], "}"}], "&"}]}],
                     "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Dirichlet\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Dirichlet\>\"", ",", "10"}], "]"}]}]}], ",", 
                    
                    RowBox[{"\"\<Sommerfeld\>\"", "\[Rule]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Sommerfeld\>\"", ",", "10"}], "]"}]}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
                    "]"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\[Beta]", ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCconstantValue", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0.1"}], "}"}], ",", 
                    
                    RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "1", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"eastBCconstantValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "10"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "0.0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Spacer", "[", "2", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<one\>\"", ",", "11"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eastBCconstantValue", "=", "1.0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"eastBCtype", "==", "\"\<Dirichlet\>\""}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                    ",", "\[IndentingNewLine]", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".1", ",", ".4"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Dividers", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.15"}], "}"}]}]}], "]"}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Grid", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"getNDsolveResult", "[", 
                    RowBox[{
                    "kValue", ",", "\[IndentingNewLine]", "westBCtype", ",", 
                    "eastBCtype", ",", "westBCconstantValue", ",", 
                    "eastBCconstantValue", ",", "forceTermSelection", ",", 
                    "\[IndentingNewLine]", "a", ",", "b", ",", "n0", ",", 
                    "x0", ",", "stdx", ",", "centerGrid", ",", 
                    "showGridLines"}], "]"}], "\[IndentingNewLine]", "]"}], 
                    "}"}], "\[IndentingNewLine]", "}"}], "]"}], 
                 "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".3"}], "}"}]}]}], "\[IndentingNewLine]", 
             "]"}], ",", 
            RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"--", " ", "source"}], " ", 
           RowBox[{"macro", "                  ", "--"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"source", "=", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Grid", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"PopupMenu", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"forceTermSelection", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    SuperscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], "0"]]}], 
                    "}"}], "]"}], ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], 
                    RowBox[{"\[Sigma]", " ", 
                    SqrtBox[
                    RowBox[{"2", " ", "Pi"}]]}]], ",", "\"\<exp (\>\"", ",", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Sigma]", "^", "2"}]}]], 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< - \>\"", ",", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "0"], ",", 
                    RowBox[{"\"\< )\>\"", "^", "2"}]}], "}"}], "]"}]}], ",", 
                    "\"\< )\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"4", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \>\"", ",", " ", "\"\<cos ( \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< \>\"", ",", " ", "\[Pi]", ",", "\"\< \>\"", ",", 
                    " ", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< )\>\""}], "}"}], "]"}], " ", ",", "12"}], "]"}]}]}],
                     "\[IndentingNewLine]", "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"260", ",", "45"}], "}"}]}], ",", 
                   RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], 
                 "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10"}], ",", "10", ",", "0.1"}], "}"}], ",", 
                    
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "=", "0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<b\>\"", ",", "Italic", ",", "12"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10"}], ",", "10", ",", "0.1"}], "}"}], ",", 
                    
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "4"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "=", "0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Bottom"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], "0"], ",", 
                    "12"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"n0", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n0", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "10.", ",", ".1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "2"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{"n0", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n0", "=", "0."}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Bottom"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], "0"], ",", 
                    "12"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"x0", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.01"}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"x0", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zero\>\"", ",", "10"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "0.0"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"45", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Bottom"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\[Sigma]", ",", "12"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"stdx", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"stdx", "=", "#"}], ";", 
                    RowBox[{"gtick", "+=", "del"}]}], "}"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "1", ",", "0.01"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"ContinuousAction", "->", "False"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"forceTermSelection", "\[Equal]", "3"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{"stdx", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", "\"\<\>\""}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{".4", ",", ".1"}], "}"}]}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                   RowBox[{"FrameStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], 
                 "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
                  RowBox[{"Block", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"grid", ",", "forceGrid"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"grid", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"generatePhysicalCoordinates1D", "[", 
                    RowBox[{"h", ",", "1", ",", "centerGrid"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"forceGrid", "=", 
                    RowBox[{"makeForceGrid", "[", 
                    RowBox[{
                    "a", ",", "b", ",", "n0", ",", "x0", ",", "stdx", ",", 
                    RowBox[{"Length", "[", "grid", "]"}], ",", 
                    "forceTermSelection", ",", "grid"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{"grid", ",", "forceGrid"}], "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"40", ",", "15"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"40", ",", "65"}], "}"}]}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageMargins", "\[Rule]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Axes", "\[Rule]", "None"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"showGridLines", ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "None"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic", ",", "11"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], ",", "\"\< = \>\"", ",", 
                    " ", 
                    RowBox[{"forceTermUsedFormat1D", "[", 
                    RowBox[{
                    "forceTermSelection", ",", "a", ",", "b", ",", "stdx", 
                    ",", "x0", ",", "n0", ",", "x"}], "]"}]}], "}"}], "]"}], 
                    ",", "12"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ContentSizeW", "-", "10"}], ",", 
                    RowBox[{"ContentSizeH", "-", "240"}]}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AspectRatio", "\[Rule]", "0.3"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TicksStyle", "\[Rule]", "9"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                   "]"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
                  "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "}"}], ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".4"}], "}"}]}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
              RowBox[{"Frame", "\[Rule]", "All"}], ",", 
              RowBox[{"FrameStyle", "->", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", " ", "LEVEL"}]}], " ", 
          RowBox[{
           RowBox[{"2", "             ", "--"}], "--"}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"pde", "=", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"TabView", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<geometry/boundary conditions\>\"", ",", "11"}], 
                    "]"}], "\[Rule]", "geometry"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<source term\>\"", ",", "11"}], "]"}], 
                    "\[Rule]", "source"}]}], "\[IndentingNewLine]", "}"}], 
                 ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"305", " ", ",", "410"}], " ", "}"}]}]}], "]"}], 
               "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", ".9"}], "}"}]}]}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"--", 
             RowBox[{"-", " ", "end"}]}], " ", "of", " ", "level", " ", 
            RowBox[{"2", " ", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"##", "&"}], "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Item", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Grid", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", "topRow", "}"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Grid", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<-\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u''\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) - \>\"", ",", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<k\>\"", ",", "Italic"}], "]"}], "^", "2"}], 
                    ",", "\"\< \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<u\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\"", ",", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "12"}], "]"}]}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "plotOptions"}], "\[IndentingNewLine]", "}"}], "}"}], 
                   "]"}]}], "}"}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], " ", 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Item", "[", 
            RowBox[{"pde", ",", 
             RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "end"}]}]}]}]}]}], " ", "of", " ", "Manipulate",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"controls", " ", "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gstatusMessage", ",", "\"\<reseting...\>\""}], "}"}], ",", 
      "None"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gtick", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"del", ",", "$MachineEpsilon"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"centerGrid", ",", "False"}], "}"}], ",", "None"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"finalDisplayImage", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h", ",", "0.02"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"kValue", ",", "10.0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n0", ",", "2."}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "1.0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x0", ",", "0.0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stdx", ",", "0.3"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"forceTermSelection", ",", "3"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plotToShow", ",", "\"\<solution\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"westBCtype", ",", "\"\<Dirichlet\>\""}], "}"}], ",", "None"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"westbc", ",", 
        RowBox[{
         RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"westBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eastBCtype", ",", "\"\<Dirichlet\>\""}], "}"}], ",", "None"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eastbc", ",", 
        RowBox[{
         RowBox[{"(", "1", ")"}], "&"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eastBCconstantValue", ",", "0"}], "}"}], ",", "None"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"showGridLines", ",", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SynchronousInitialization", "\[Rule]", " ", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Alignment", "->", "Center"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
     RowBox[{"{", "gtick", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Paneled", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.53300873457351*^9, {3.533008792707835*^9, 3.533008803697464*^9}, {
   3.53301208825933*^9, 3.5330120892633877`*^9}, {3.5330121383401947`*^9, 
   3.5330121482587614`*^9}, {3.533012319307545*^9, 3.5330123196805663`*^9}, {
   3.533012352371436*^9, 3.5330123843462653`*^9}, {3.533012452160144*^9, 
   3.533012455838354*^9}, {3.533012506790269*^9, 3.5330125075943146`*^9}, {
   3.533012650580493*^9, 3.5330126506934996`*^9}, {3.533012689413714*^9, 
   3.5330126907147884`*^9}, {3.5330128157509403`*^9, 3.533012821464267*^9}, {
   3.533012945535363*^9, 3.53301295824109*^9}, {3.533013002949647*^9, 
   3.5330133855055285`*^9}, {3.5330134729275284`*^9, 3.53301352802568*^9}, {
   3.5330135890691714`*^9, 3.533013610178379*^9}, {3.533013698880452*^9, 
   3.533013703250702*^9}, {3.5330137817911944`*^9, 3.53301379884517*^9}, {
   3.5330138600316696`*^9, 3.5330139261684523`*^9}, {3.5330139994446435`*^9, 
   3.533014004218917*^9}, {3.533014058037995*^9, 3.5330140989613357`*^9}, {
   3.5330144487413416`*^9, 3.533014472607707*^9}, {3.5330148598198543`*^9, 
   3.5330149091356745`*^9}, {3.5330157220471706`*^9, 
   3.5330157710719748`*^9}, {3.5330160640737333`*^9, 
   3.5330160706481094`*^9}, {3.5330162711095753`*^9, 3.533016283394278*^9}, {
   3.5330164257094183`*^9, 3.5330164522079334`*^9}, {3.5330164914431777`*^9, 
   3.533016499856659*^9}, {3.5330619293360767`*^9, 3.5330619309081664`*^9}, {
   3.5330621522688274`*^9, 3.533062290029707*^9}, {3.533062358994652*^9, 
   3.5330623641109443`*^9}, {3.5330623986899223`*^9, 3.533062416509941*^9}, 
   3.533062457538288*^9, {3.533062530011433*^9, 3.5330625524117146`*^9}, {
   3.533062638267625*^9, 3.5330626823691473`*^9}, {3.5330627251375933`*^9, 
   3.5330627419685564`*^9}, {3.5330627860930805`*^9, 
   3.5330628170928535`*^9}, {3.5330632972873187`*^9, 3.533063298065363*^9}, {
   3.5330669715294733`*^9, 3.5330669739236107`*^9}, {3.5330670091626263`*^9, 
   3.5330676564636497`*^9}, {3.5330679583479166`*^9, 3.533067995533043*^9}, {
   3.533068047095992*^9, 3.5330684330020647`*^9}, {3.533068468079071*^9, 
   3.5330689321786165`*^9}, {3.5330691137169995`*^9, 
   3.5330693385978622`*^9}, {3.5330694333142796`*^9, 
   3.5330694368534822`*^9}, {3.533069477745821*^9, 3.533069603359006*^9}, {
   3.533069676307178*^9, 3.533069823324587*^9}, {3.5330698537823286`*^9, 
   3.5330699963014803`*^9}, {3.533070052638703*^9, 3.5330700723858323`*^9}, {
   3.53307013231826*^9, 3.5330705075967245`*^9}, {3.5330705949727225`*^9, 
   3.53307070227586*^9}, {3.5330707325865936`*^9, 3.5330707329876165`*^9}, {
   3.5330707716098256`*^9, 3.5330707781682005`*^9}, {3.533070812685175*^9, 
   3.533071482108464*^9}, {3.533071550187358*^9, 3.5330715530855236`*^9}, {
   3.5330716652749405`*^9, 3.533071686812172*^9}, {3.5330718668364687`*^9, 
   3.5330718700906553`*^9}, {3.533071914788212*^9, 3.533071915790269*^9}, {
   3.5330719982189837`*^9, 3.5330720340190315`*^9}, {3.5330720985937247`*^9, 
   3.5330722073939476`*^9}, {3.533072246992213*^9, 3.5330722766769104`*^9}, {
   3.533072375572567*^9, 3.5330723856001406`*^9}, {3.5330725555238595`*^9, 
   3.5330725975342627`*^9}, {3.5330726881444454`*^9, 3.533072689064498*^9}, 
   3.5330729030767384`*^9, {3.533072959203949*^9, 3.533073015045143*^9}, {
   3.533073122951315*^9, 3.5330731663437967`*^9}, {3.533073281805401*^9, 
   3.533073291078931*^9}, {3.5330734185832243`*^9, 3.5330734197702913`*^9}, {
   3.5330735086163735`*^9, 3.5330735345458565`*^9}, {3.5330736381187806`*^9, 
   3.533073668446515*^9}, {3.5330737771017303`*^9, 3.5330737894234347`*^9}, {
   3.533073829131706*^9, 3.5330738917652884`*^9}, {3.5330740439229913`*^9, 
   3.533074088120519*^9}, {3.5330741260816903`*^9, 3.5330741443677363`*^9}, {
   3.5330741966557274`*^9, 3.53307422311024*^9}, {3.5330743209658375`*^9, 
   3.5330743222859125`*^9}, {3.5330743778460903`*^9, 
   3.5330744164102964`*^9}, {3.5330744537844343`*^9, 3.533074492249634*^9}, {
   3.5330745230093937`*^9, 3.5330745274176455`*^9}, {3.5330745973096433`*^9, 
   3.5330746462004395`*^9}, {3.5330746781592674`*^9, 
   3.5330747521434994`*^9}, {3.533074787773537*^9, 3.5330747954389753`*^9}, {
   3.5330748549003763`*^9, 3.5330748749035206`*^9}, {3.533074924822376*^9, 
   3.5330750678905587`*^9}, {3.5330751098529587`*^9, 3.533075123522741*^9}, {
   3.533075195961884*^9, 3.533076395742508*^9}, {3.5330764840805607`*^9, 
   3.533076484584589*^9}, {3.533076559710886*^9, 3.5330766513501277`*^9}, {
   3.533076728057515*^9, 3.533076745791529*^9}, {3.533076857449916*^9, 
   3.533076864919343*^9}, {3.5330770414104376`*^9, 3.5330770438925796`*^9}, 
   3.5330771877758093`*^9, {3.5330773014753127`*^9, 3.5330773555734067`*^9}, {
   3.533077667393242*^9, 3.5330777161550307`*^9}, {3.5330777878961344`*^9, 
   3.5330780091207876`*^9}, {3.5330781375611343`*^9, 
   3.5330781682258883`*^9}, {3.533078203476904*^9, 3.533078236477792*^9}, 
   3.5330785064902353`*^9, {3.533079157095448*^9, 3.533079191191398*^9}, {
   3.533079319101714*^9, 3.533079320724807*^9}, {3.5330794090768604`*^9, 
   3.5330795005810943`*^9}, {3.533079564204733*^9, 3.533079771620597*^9}, {
   3.533079857307498*^9, 3.533079901077001*^9}, 3.533083160094406*^9, {
   3.533083200912741*^9, 3.533083520651029*^9}, {3.533083601665663*^9, 
   3.533083608114032*^9}, {3.533083658214897*^9, 3.533083673437768*^9}, {
   3.5330837084267693`*^9, 3.533083750765191*^9}, {3.5330838360290675`*^9, 
   3.5330839000667305`*^9}, {3.5330839366738243`*^9, 
   3.5330839714328127`*^9}, {3.5330840282940645`*^9, 3.533084032685316*^9}, {
   3.533084067955333*^9, 3.5330841121408606`*^9}, {3.5330841871801524`*^9, 
   3.533084372026725*^9}, {3.533084407453751*^9, 3.5330845390282764`*^9}, {
   3.5330845852099185`*^9, 3.533084598750693*^9}, {3.5330846305665126`*^9, 
   3.5330849622574844`*^9}, {3.533085008038103*^9, 3.533085445585129*^9}, {
   3.533085486618476*^9, 3.533086135094567*^9}, {3.5330861691995173`*^9, 
   3.533086246117917*^9}, {3.533086277841731*^9, 3.533086300354019*^9}, {
   3.5330864407160473`*^9, 3.5330864978373146`*^9}, {3.5330865288930907`*^9, 
   3.533086532627304*^9}, {3.533086587133422*^9, 3.533086667804036*^9}, {
   3.5330867146907177`*^9, 3.5330868106662073`*^9}, {3.5330869407636485`*^9, 
   3.5330869565595517`*^9}, {3.533086987278309*^9, 3.533087010574641*^9}, {
   3.533087160401211*^9, 3.533087164110423*^9}, {3.533087298823128*^9, 
   3.5330873571944666`*^9}, {3.5330874570531783`*^9, 3.533087520522809*^9}, {
   3.5330876085348425`*^9, 3.533087611478011*^9}, {3.5330876758476925`*^9, 
   3.533087728375697*^9}, {3.5330877910312805`*^9, 3.533087791419303*^9}, {
   3.533087825384246*^9, 3.533087929350192*^9}, {3.533088144641506*^9, 
   3.5330881493287745`*^9}, {3.5330882256001368`*^9, 3.5330882293653517`*^9}, 
   3.533088381668063*^9, {3.533088439894394*^9, 3.533088456483342*^9}, {
   3.5330885637144756`*^9, 3.5330886900197*^9}, {3.5330888548181257`*^9, 
   3.5330888807726107`*^9}, {3.5330889638213606`*^9, 
   3.5330889659354815`*^9}, {3.5330891454237475`*^9, 3.533089266290661*^9}, {
   3.5330893565558233`*^9, 3.533089358610941*^9}, {3.533089396404103*^9, 
   3.533089432818186*^9}, {3.5330894875923185`*^9, 3.5330894876683226`*^9}, {
   3.533089587770048*^9, 3.5330895966545563`*^9}, {3.5330898371573124`*^9, 
   3.533089948738695*^9}, 3.5330900977312164`*^9, {3.5330901371544714`*^9, 
   3.5330901424587746`*^9}, {3.533090314428611*^9, 3.533090450667403*^9}, {
   3.533090584421054*^9, 3.533090731777482*^9}, {3.5330908370395026`*^9, 
   3.5330908550275316`*^9}, 3.533090914220917*^9, {3.5330909826188293`*^9, 
   3.5330910124995384`*^9}, {3.5330910835716033`*^9, 3.533091109465084*^9}, {
   3.5330912405585823`*^9, 3.5330912410596113`*^9}, {3.5330913408103166`*^9, 
   3.533091342745427*^9}, {3.5330914406080246`*^9, 3.5330914411140537`*^9}, {
   3.5331025932219176`*^9, 3.533102601876413*^9}, {3.533102652747322*^9, 
   3.5331035831055355`*^9}, {3.533103619690628*^9, 3.533103804708211*^9}, {
   3.533103867708814*^9, 3.53310390486794*^9}, {3.533103945912287*^9, 
   3.533104027297942*^9}, {3.533104120201256*^9, 3.5331041317829185`*^9}, {
   3.533104217431817*^9, 3.5331042210530243`*^9}, {3.5331042574541063`*^9, 
   3.533104264285497*^9}, {3.5331043067579265`*^9, 3.5331043108291593`*^9}, {
   3.5331043543256474`*^9, 3.533104357788845*^9}, {3.5331043916787834`*^9, 
   3.5331044364143424`*^9}, {3.5331045578012853`*^9, 3.533104561282484*^9}, {
   3.5331045927632847`*^9, 3.533104626259201*^9}, {3.5331046565599337`*^9, 
   3.5331047102120028`*^9}, {3.5331047611429157`*^9, 3.533104774413675*^9}, {
   3.533104813892933*^9, 3.5331048490869455`*^9}, {3.533105005659901*^9, 
   3.5331050465642405`*^9}, {3.5331050886326475`*^9, 3.533105238819237*^9}, {
   3.533105399527429*^9, 3.533105461335964*^9}, {3.533105692621193*^9, 
   3.533105847750066*^9}, {3.5331058886524057`*^9, 3.5331060081092377`*^9}, {
   3.5331061853283744`*^9, 3.5331062028063745`*^9}, {3.5331062610327044`*^9, 
   3.5331062617737465`*^9}, {3.5331065256048374`*^9, 
   3.5331065322532177`*^9}, {3.5331066625396695`*^9, 3.53310667146518*^9}, {
   3.5331068395717955`*^9, 3.533106839976818*^9}, {3.53310704683565*^9, 
   3.5331070964294863`*^9}, {3.533107250561302*^9, 3.533107327027676*^9}, {
   3.533107563604207*^9, 3.5331076134060555`*^9}, {3.5331076535903544`*^9, 
   3.5331076652400208`*^9}, {3.5331078748610106`*^9, 3.53310791018303*^9}, {
   3.5331081887329626`*^9, 3.5331082126883326`*^9}, {3.533108398016933*^9, 
   3.53310839831095*^9}, 3.533108499733751*^9, {3.5331085357458105`*^9, 
   3.5331085595921745`*^9}, {3.5331087022523346`*^9, 
   3.5331087099017715`*^9}, {3.5331088782163987`*^9, 
   3.5331088977285147`*^9}, {3.5331090783898478`*^9, 3.533109113895879*^9}, {
   3.53310918210478*^9, 3.5331092009518585`*^9}, {3.5331093600249567`*^9, 
   3.533109379192053*^9}, {3.5331094852621202`*^9, 3.5331094945596514`*^9}, {
   3.533109915586733*^9, 3.533109939702112*^9}, {3.533109975820178*^9, 
   3.5331099781133094`*^9}, {3.5331100081190257`*^9, 3.533110059861985*^9}, {
   3.5331101333291874`*^9, 3.5331101511712074`*^9}, {3.533110202232128*^9, 
   3.533110203896223*^9}, 3.5331108944007177`*^9, {3.5331128035319138`*^9, 
   3.5331128038949347`*^9}, {3.5331130577314534`*^9, 
   3.5331130626827364`*^9}, {3.5331135387029634`*^9, 3.533113541880145*^9}, {
   3.533113676295833*^9, 3.533113683286233*^9}, {3.533113847772641*^9, 
   3.53311389059309*^9}, {3.533114235127797*^9, 3.533114281901472*^9}, {
   3.5331144534472837`*^9, 3.533114453982314*^9}, {3.5331146110843*^9, 
   3.5331146718647766`*^9}, {3.533114760495846*^9, 3.5331147615449057`*^9}, {
   3.5331148136698875`*^9, 3.5331148155899973`*^9}, {3.5331148887651825`*^9, 
   3.5331149138196154`*^9}, {3.53311501198123*^9, 3.5331150164634867`*^9}, {
   3.533115161150762*^9, 3.5331151631188745`*^9}, {3.533115244486529*^9, 
   3.533115261432498*^9}, {3.5331153495065355`*^9, 3.533115386585656*^9}, {
   3.533121015082588*^9, 3.533121015699623*^9}, {3.5331212210803704`*^9, 
   3.5331212659619374`*^9}, {3.533121436060666*^9, 3.5331214718437133`*^9}, {
   3.5331215353333445`*^9, 3.5331215426887655`*^9}, {3.53312177792622*^9, 
   3.5331219492320185`*^9}, {3.533122221922615*^9, 3.5331222595857697`*^9}, {
   3.53312261800727*^9, 3.5331226840370464`*^9}, {3.5331232818972425`*^9, 
   3.5331233063456407`*^9}, {3.5331239924328823`*^9, 3.53312399885425*^9}, {
   3.53312405986574*^9, 3.533124077165729*^9}, 3.533124134985036*^9, {
   3.53312458315567*^9, 3.5331245841887293`*^9}, {3.5331246639482913`*^9, 
   3.5331247479680967`*^9}, {3.53312515503638*^9, 3.5331252010380106`*^9}, {
   3.533125241611332*^9, 3.5331252495677867`*^9}, {3.5331254892514954`*^9, 
   3.533125491267611*^9}, {3.5331255217213526`*^9, 3.533125592900424*^9}, {
   3.533125626377339*^9, 3.533125643079294*^9}, {3.533125682509549*^9, 
   3.5331256966063557`*^9}, {3.5331258409226103`*^9, 
   3.5331258516852255`*^9}, {3.53312601942482*^9, 3.533126021926963*^9}, {
   3.5331541385191402`*^9, 3.533154161137434*^9}, {3.533154226100149*^9, 
   3.5331542269441977`*^9}, {3.533154391084586*^9, 3.53315439813999*^9}, {
   3.5331544442256255`*^9, 3.5331544479808407`*^9}, {3.5331545392300596`*^9, 
   3.5331550848712683`*^9}, {3.5331553323234215`*^9, 3.533155470004297*^9}, {
   3.533155660090169*^9, 3.5331557025555983`*^9}, {3.5331558262696743`*^9, 
   3.533155842142582*^9}, {3.533156007875061*^9, 3.533156019428722*^9}, {
   3.5331561177973485`*^9, 3.533156129666027*^9}, {3.5331565698902063`*^9, 
   3.5331565897673435`*^9}, {3.533156650452814*^9, 3.5331566571921997`*^9}, {
   3.533156747669375*^9, 3.5331567492714663`*^9}, {3.5331570812844563`*^9, 
   3.53315708396761*^9}, {3.5331574405650063`*^9, 3.5331574461603265`*^9}, {
   3.533157489269792*^9, 3.5331575418938017`*^9}, {3.533157688613194*^9, 
   3.5331576962106285`*^9}, {3.533157795880329*^9, 3.533157837013682*^9}, 
   3.5331579152661576`*^9, {3.533158063150616*^9, 3.5331580738982306`*^9}, 
   3.533158243416927*^9, {3.5331584516258354`*^9, 3.533158528710245*^9}, {
   3.533182744249797*^9, 3.5331827980668745`*^9}, {3.5331828311107645`*^9, 
   3.5331828331518817`*^9}, {3.5331828769343853`*^9, 
   3.5331829120983973`*^9}, {3.533183358737943*^9, 3.5331833601030216`*^9}, {
   3.5331834069747024`*^9, 3.5331834179183283`*^9}, 3.533183483528081*^9, 
   3.533183516647975*^9, {3.5331837385926695`*^9, 3.5331837457760806`*^9}, {
   3.5331850734880214`*^9, 3.5331850955782847`*^9}, {3.533185255087408*^9, 
   3.533185259246646*^9}, {3.533185414497526*^9, 3.5331855711384854`*^9}, {
   3.533185644733695*^9, 3.533185660343588*^9}, {3.5331856954495955`*^9, 
   3.533185710268443*^9}, {3.5331858516755314`*^9, 3.5331859147631397`*^9}, {
   3.5331859881343365`*^9, 3.5331859918375483`*^9}, 3.5331860926203127`*^9, {
   3.533186186185664*^9, 3.5331861925410275`*^9}, 3.5331862565386877`*^9, {
   3.5331865838794107`*^9, 3.5331865981232257`*^9}, 3.5331872966441784`*^9, {
   3.533187632139368*^9, 3.5331876358925824`*^9}, {3.53318775666149*^9, 
   3.533187780231838*^9}, {3.533187813813759*^9, 3.5331878138597617`*^9}, {
   3.5331878458195896`*^9, 3.533187850576862*^9}, {3.5331878954224267`*^9, 
   3.5331879350926957`*^9}, {3.5331879712597647`*^9, 
   3.5331879722378206`*^9}, {3.5331880045326676`*^9, 
   3.5331880468430877`*^9}, {3.533188100967183*^9, 3.533188243954362*^9}, {
   3.533188283987652*^9, 3.5331884252797327`*^9}, {3.5331885320368395`*^9, 
   3.5331885685569277`*^9}, {3.5331888446057167`*^9, 
   3.5331888672640133`*^9}, {3.5331889692188444`*^9, 
   3.5331889692998495`*^9}, {3.533190334755949*^9, 3.5331903375321074`*^9}, {
   3.5331903902601233`*^9, 3.5331904061890345`*^9}, {3.5331904776781235`*^9, 
   3.5331905427048426`*^9}, {3.533190729962553*^9, 3.5331907591102204`*^9}, {
   3.53319079337718*^9, 3.5331908044128113`*^9}, {3.533191071199071*^9, 
   3.5331910854778876`*^9}, {3.5331911730028934`*^9, 3.533191183067469*^9}, 
   3.533191494723295*^9, {3.533191536743698*^9, 3.533191629978031*^9}, {
   3.5331916679572034`*^9, 3.533191705638359*^9}, {3.5331917464926953`*^9, 
   3.53319175932743*^9}, {3.533191817604763*^9, 3.5331918358488064`*^9}, {
   3.533191967772352*^9, 3.5331920296008883`*^9}, {3.533192084774044*^9, 
   3.5331920868621635`*^9}, {3.5331921362529883`*^9, 3.533192374030588*^9}, {
   3.533192419525191*^9, 3.533192422174342*^9}, {3.5331924958415556`*^9, 
   3.5331925569410505`*^9}, {3.5331934417506585`*^9, 
   3.5331934834120417`*^9}, {3.5331937539905176`*^9, 3.5331938914383793`*^9}, 
   3.5331940655243363`*^9, {3.5331941087908115`*^9, 3.5331941197244363`*^9}, {
   3.533194270042034*^9, 3.533194270948086*^9}, {3.533194398394376*^9, 
   3.533194398492381*^9}, {3.5331944684153805`*^9, 3.53319447242861*^9}, {
   3.5331946524149046`*^9, 3.5331946554160767`*^9}, {3.5331947584429693`*^9, 
   3.5331947930379477`*^9}, {3.5331950033779783`*^9, 3.533195068721716*^9}, {
   3.533195152817526*^9, 3.5331951639041605`*^9}, {3.533196041117334*^9, 
   3.533196061960526*^9}, {3.533196119103794*^9, 3.5331961270822506`*^9}, {
   3.53319615836104*^9, 3.5331961665345073`*^9}, {3.533196265309157*^9, 
   3.5331963035173426`*^9}, 3.5331965120632706`*^9, {3.533196556029785*^9, 
   3.533196607398723*^9}, {3.533196651189228*^9, 3.5331969715105495`*^9}, {
   3.5331970250856133`*^9, 3.533197099908893*^9}, {3.5331971608253775`*^9, 
   3.5331971609993877`*^9}, {3.53319728220532*^9, 3.533197322153605*^9}, {
   3.533197476726446*^9, 3.533197480704674*^9}, {3.533197683764288*^9, 
   3.533197722758518*^9}, {3.533197794168603*^9, 3.5331977961357155`*^9}, {
   3.533197916702611*^9, 3.5331979760640063`*^9}, {3.533198037588526*^9, 
   3.533198049765222*^9}, {3.533198432933138*^9, 3.533198563464604*^9}, 
   3.5331987673862677`*^9, {3.5331990161744976`*^9, 3.5331990163195057`*^9}, {
   3.533199147156989*^9, 3.533199205868347*^9}, {3.5331997652973447`*^9, 
   3.5331998116399956`*^9}, {3.5332003254313827`*^9, 3.533200405686973*^9}, {
   3.533200458365986*^9, 3.533200474587914*^9}, {3.5332005438838778`*^9, 
   3.53320060302826*^9}, {3.533200720563983*^9, 3.533200731292597*^9}, {
   3.533200768205708*^9, 3.5332007686667347`*^9}, {3.5332008416819105`*^9, 
   3.5332009090567636`*^9}, {3.5332012629500055`*^9, 
   3.5332013307128816`*^9}, {3.533201870286743*^9, 3.5332019092069693`*^9}, {
   3.533201987685458*^9, 3.5332023093698573`*^9}, {3.533202346326971*^9, 
   3.533202425019472*^9}, {3.5332027048824797`*^9, 3.5332027283078194`*^9}, {
   3.533202961657166*^9, 3.533202976537017*^9}, {3.533203041383726*^9, 
   3.533203100737121*^9}, {3.5332032379209676`*^9, 3.533203248722585*^9}, {
   3.533203337249649*^9, 3.533203359352913*^9}, {3.533203397800112*^9, 
   3.533203413920034*^9}, {3.5332034943576345`*^9, 3.5332035213851805`*^9}, {
   3.53320769486189*^9, 3.533207711363834*^9}, {3.5332077529152107`*^9, 
   3.5332080861532707`*^9}, {3.5332081708561153`*^9, 3.533208183016811*^9}, {
   3.533208247202482*^9, 3.5332082586631374`*^9}, {3.5332083731986885`*^9, 
   3.5332085920412054`*^9}, {3.5332087222776546`*^9, 3.533208834348065*^9}, {
   3.5332088898542395`*^9, 3.5332092999396954`*^9}, {3.533209414980275*^9, 
   3.533209509633689*^9}, {3.5332095961386366`*^9, 3.53320959620164*^9}, {
   3.533230568596193*^9, 3.533230573280461*^9}, {3.5332314921270156`*^9, 
   3.533231526399976*^9}, {3.5332315746257343`*^9, 3.5332315751197624`*^9}, {
   3.533231637244316*^9, 3.5332316650589066`*^9}, {3.5332317145657387`*^9, 
   3.5332317201790595`*^9}, {3.533231755438076*^9, 3.5332317715469975`*^9}, 
   3.5332320395623274`*^9, {3.5332323249756517`*^9, 3.533232330125946*^9}, {
   3.533232370879277*^9, 3.533232392743528*^9}, {3.5332324844687743`*^9, 
   3.5332325638923173`*^9}, {3.5332331545601015`*^9, 3.533233264084366*^9}, {
   3.533233298971361*^9, 3.5332333370945415`*^9}, {3.5332334388423615`*^9, 
   3.533233463352763*^9}, {3.5332337354143243`*^9, 3.533233740132594*^9}, {
   3.5332337818289795`*^9, 3.533233799543992*^9}, {3.533233831747834*^9, 
   3.5332339131314893`*^9}, {3.5332339765591173`*^9, 3.533234009251987*^9}, 
   3.533234480508941*^9, {3.533234625306223*^9, 3.5332347095840435`*^9}, {
   3.5332348271787696`*^9, 3.5332348379273844`*^9}, {3.533235029761357*^9, 
   3.5332352920983615`*^9}, {3.5332353249602413`*^9, 
   3.5332353285004435`*^9}, {3.5332353625373907`*^9, 
   3.5332353862127447`*^9}, {3.533235502320386*^9, 3.533235502553399*^9}, {
   3.533243063742874*^9, 3.5332430664950314`*^9}, {3.5332467269934*^9, 
   3.533246740005144*^9}, {3.5332476517402925`*^9, 3.533247680978965*^9}, {
   3.5332477785235443`*^9, 3.5332478160006876`*^9}, {3.5332480343811784`*^9, 
   3.5332480433536916`*^9}, {3.533248170932989*^9, 3.533248174199176*^9}, 
   3.533248361365881*^9, {3.5332485011398754`*^9, 3.5332485016219034`*^9}, 
   3.5332487795568*^9, 3.533248827532544*^9, 3.533248878532461*^9, {
   3.5332495769564085`*^9, 3.5332495909762106`*^9}, 3.5332496542298284`*^9, {
   3.5332529251499147`*^9, 3.533252945225063*^9}, {3.5332532840214405`*^9, 
   3.53325329834426*^9}, {3.5332533516223073`*^9, 3.533253360569819*^9}, {
   3.5332539185407333`*^9, 3.533253927193228*^9}, {3.5332546762000685`*^9, 
   3.5332546807213273`*^9}, 3.533254771966546*^9, {3.533254803922374*^9, 
   3.5332548097507076`*^9}, 3.533254873938379*^9, {3.5332549346708527`*^9, 
   3.5332549358809214`*^9}, {3.5332550302673206`*^9, 3.533255036799694*^9}, {
   3.533255085672489*^9, 3.533255294859454*^9}, {3.5332574378480263`*^9, 
   3.533257466208648*^9}, {3.5332575037007923`*^9, 3.533257505111873*^9}, {
   3.5332590476991043`*^9, 3.53325906056384*^9}, {3.5332591048063707`*^9, 
   3.533259114201908*^9}, {3.533259195928582*^9, 3.5332592648165226`*^9}, {
   3.533259571871085*^9, 3.533259572609127*^9}, {3.533259618261739*^9, 
   3.5332597173354053`*^9}, {3.533260051056493*^9, 3.5332601140890985`*^9}, {
   3.5332601512082214`*^9, 3.5332601544484067`*^9}, {3.5332603780921984`*^9, 
   3.5332603812923813`*^9}, {3.5332606541119857`*^9, 
   3.5332608853322105`*^9}, {3.5332609219963083`*^9, 
   3.5332609762064085`*^9}, {3.5332610238261323`*^9, 3.533261171071554*^9}, {
   3.5332612549303503`*^9, 3.5332612550703588`*^9}, 3.5332625869125357`*^9, 
   3.5332633635239553`*^9, {3.5332636974630556`*^9, 3.53326369841711*^9}, 
   3.533265508225625*^9, {3.5332655505920486`*^9, 3.5332655661759396`*^9}, {
   3.5332656294835606`*^9, 3.533265655788065*^9}, {3.533265693533224*^9, 
   3.5332657226968927`*^9}, 3.533265757317872*^9, {3.533265895516777*^9, 
   3.533265918506092*^9}, {3.5332659834438057`*^9, 3.5332660013118277`*^9}, {
   3.533266043768256*^9, 3.533266046119391*^9}, {3.5332661047807465`*^9, 
   3.5332661258849535`*^9}, {3.533266312686638*^9, 3.5332663158428183`*^9}, {
   3.5332664154305143`*^9, 3.5332664344045997`*^9}, 3.533266524766768*^9, 
   3.533266574006584*^9, 3.533266670182085*^9, {3.533266705497105*^9, 
   3.533266709128313*^9}, {3.5332667460074224`*^9, 3.5332667499456477`*^9}, {
   3.5332668298072157`*^9, 3.533266846180152*^9}, {3.5332668917257566`*^9, 
   3.533266944352767*^9}, {3.533267000683989*^9, 3.5332670131667027`*^9}, {
   3.5332670645726433`*^9, 3.5332670674798098`*^9}, {3.533267172998845*^9, 
   3.5332671835054455`*^9}, {3.53326726295599*^9, 3.5332672641900606`*^9}, {
   3.533267481283478*^9, 3.5332675083100233`*^9}, {3.5332675448021107`*^9, 
   3.533267568326456*^9}, 3.5332676714973574`*^9, {3.533267768350897*^9, 
   3.5332677687519197`*^9}, {3.5332700129102783`*^9, 3.53327010822473*^9}, {
   3.5332703032378845`*^9, 3.5332703326705675`*^9}, {3.5332704515583677`*^9, 
   3.533270454322526*^9}, {3.533270565115863*^9, 3.5332705837329273`*^9}, {
   3.533270633224758*^9, 3.533270655422028*^9}, {3.5332707448601437`*^9, 
   3.5332708126770225`*^9}, {3.5332709650057354`*^9, 
   3.5332709940873985`*^9}, {3.533271025117173*^9, 3.5332710372458673`*^9}, 
   3.533271077700181*^9, 3.533271108661952*^9, 3.533307865846342*^9, {
   3.533307976886694*^9, 3.533308081163658*^9}, {3.5333082402037544`*^9, 
   3.5333082502243276`*^9}, {3.5333084645575867`*^9, 
   3.5333084785603876`*^9}, {3.533308596226118*^9, 3.533308600199345*^9}, {
   3.5333087972616167`*^9, 3.5333088076392097`*^9}, {3.5333088802953653`*^9, 
   3.533308901560582*^9}, {3.5333089855333853`*^9, 3.5333090100357866`*^9}, 
   3.5333090975567923`*^9, {3.5333092635312853`*^9, 3.5333092698396463`*^9}, 
   3.533309333436284*^9, {3.5333094191171846`*^9, 3.533309430333826*^9}, {
   3.5333094644237757`*^9, 3.5333094962875986`*^9}, 3.5333095891249084`*^9, 
   3.5333097499931097`*^9, {3.5333099240720663`*^9, 3.5333099990273533`*^9}, {
   3.533310031805228*^9, 3.5333100327962847`*^9}, 3.5333101052984324`*^9, {
   3.533310185393013*^9, 3.5333102040130777`*^9}, 3.5333104026704407`*^9, {
   3.5333105308667727`*^9, 3.5333105617765408`*^9}, {3.533310639716999*^9, 
   3.533310662484301*^9}, {3.5333107181734867`*^9, 3.53331073781961*^9}, 
   3.533329180424467*^9, 3.533329744827749*^9, {3.533330033962286*^9, 
   3.533330057863653*^9}, {3.533330115443947*^9, 3.5333301892231665`*^9}, {
   3.533330253518844*^9, 3.533330288531847*^9}, {3.533330361527022*^9, 
   3.533330411357872*^9}, {3.533330463102832*^9, 3.533330468281128*^9}, {
   3.53333087882261*^9, 3.5333309068632135`*^9}, 3.5333309474715357`*^9, {
   3.533331066730357*^9, 3.533331110590866*^9}, 3.5333311529892907`*^9, {
   3.533331197568841*^9, 3.5333312143328*^9}, {3.5333312510448995`*^9, 
   3.5333312666017895`*^9}, {3.533331346443356*^9, 3.5333313547228293`*^9}, {
   3.5333314215386515`*^9, 3.5333314294291024`*^9}, {3.5333315019292493`*^9, 
   3.5333316017439585`*^9}, {3.533331667197702*^9, 3.533331667666729*^9}, {
   3.5333317430180387`*^9, 3.5333317441191015`*^9}, {3.533331875424612*^9, 
   3.5333318813319497`*^9}, {3.533331930725775*^9, 3.5333319666018267`*^9}, {
   3.533332063222353*^9, 3.533332122745758*^9}, {3.533332219630299*^9, 
   3.533332228785823*^9}, {3.533332298304799*^9, 3.533332314541728*^9}, {
   3.533332396315405*^9, 3.533332413897411*^9}, {3.5333324565838523`*^9, 
   3.533332460587081*^9}, {3.533332634295017*^9, 3.5333326454596553`*^9}, {
   3.533332685526947*^9, 3.5333326859149694`*^9}, {3.533332748572553*^9, 
   3.5333328157183933`*^9}, 3.533333503404727*^9, {3.533333761174471*^9, 
   3.53333378861104*^9}, {3.533333851258623*^9, 3.5333338758960323`*^9}, {
   3.533333909695966*^9, 3.5333339102109947`*^9}, {3.533333964375093*^9, 
   3.533334000196142*^9}, {3.5333354564384336`*^9, 3.533335479022726*^9}, {
   3.5334433870007095`*^9, 3.533443388148775*^9}, {3.5334434263429594`*^9, 
   3.5334434389616814`*^9}, {3.533443492626751*^9, 3.533443510724786*^9}, {
   3.533443575642499*^9, 3.5334435925454655`*^9}, {3.533443631623701*^9, 
   3.5334436405502114`*^9}, {3.5334436912211094`*^9, 3.533443729412294*^9}, {
   3.533443765231343*^9, 3.5334437691595674`*^9}, {3.5334438371744576`*^9, 
   3.533443883128086*^9}, {3.5334439173360424`*^9, 3.533443941195407*^9}, {
   3.5334440081202354`*^9, 3.5334440093853073`*^9}, {3.533444082606496*^9, 
   3.5334440859076843`*^9}, {3.5334441710715556`*^9, 3.5334441890925865`*^9}, 
   3.5334442448527756`*^9, {3.533444326896468*^9, 3.533444379242462*^9}, {
   3.533444448897446*^9, 3.53344445227864*^9}, {3.533444575268674*^9, 
   3.533444607688528*^9}, {3.5334446517330475`*^9, 3.5334446982977114`*^9}, {
   3.533444837675683*^9, 3.533444880838152*^9}, {3.533444925123685*^9, 
   3.5334452582607393`*^9}, {3.533445434982847*^9, 3.5334454700948553`*^9}, {
   3.533445500227579*^9, 3.5334455245309687`*^9}, {3.5334456861372128`*^9, 
   3.5334458388889494`*^9}, {3.5334458723578634`*^9, 
   3.5334458755590467`*^9}, {3.5334459204166126`*^9, 3.533445999035109*^9}, {
   3.5334460530521984`*^9, 3.533446054366274*^9}, {3.533446107122291*^9, 
   3.5334461290765467`*^9}, {3.533446181694556*^9, 3.533446267164445*^9}, {
   3.533446328831972*^9, 3.5334463297790265`*^9}, {3.533446533946704*^9, 
   3.533446544724321*^9}, {3.533446603745696*^9, 3.5334466044287357`*^9}, {
   3.5334467087477026`*^9, 3.533446709489745*^9}, 3.5334467841570153`*^9, {
   3.5334511195129833`*^9, 3.533451119961009*^9}, {3.533451199367551*^9, 
   3.5334513138240976`*^9}, 3.533451425812503*^9, {3.533451468504945*^9, 
   3.533451485883939*^9}, {3.533451692419752*^9, 3.5334517498410363`*^9}, 
   3.533451792598482*^9, {3.5334518405792265`*^9, 3.533451845560511*^9}, {
   3.533452117107043*^9, 3.533452120673247*^9}, {3.533452236237857*^9, 
   3.533452325602968*^9}, {3.533452360490964*^9, 3.5334523632511215`*^9}, 
   3.53345239504694*^9, {3.533452457743526*^9, 3.533452475075517*^9}, {
   3.533452546225587*^9, 3.533452603222847*^9}, 3.533452826451615*^9, {
   3.5334528651508284`*^9, 3.533452873699317*^9}, {3.5334529430612845`*^9, 
   3.5334529441373463`*^9}, {3.53345310906878*^9, 3.5334532030041523`*^9}, {
   3.533453238509183*^9, 3.533453326791233*^9}, {3.533453425213862*^9, 
   3.5334534270579677`*^9}, {3.5334535151260047`*^9, 
   3.5334535155300283`*^9}, {3.5334535614546547`*^9, 3.533453566739957*^9}, {
   3.5334539645317097`*^9, 3.5334539657347784`*^9}, 3.5334540741209774`*^9, 
   3.5334541288081055`*^9, {3.533454213258936*^9, 3.5334542359782352`*^9}, 
   3.5334543597453146`*^9, 3.5334544157485175`*^9, {3.533454485867528*^9, 
   3.5334544998983307`*^9}, 3.5334545573906193`*^9, {3.5334971148517666`*^9, 
   3.5334971416983023`*^9}, 3.533497338313548*^9, {3.533497495096515*^9, 
   3.5334975948492208`*^9}, {3.5334980306781487`*^9, 
   3.5334980412177515`*^9}, {3.533498092332675*^9, 3.533498251060754*^9}, {
   3.533498281605501*^9, 3.5334982819455204`*^9}, {3.5334985985236273`*^9, 
   3.533498622207982*^9}, 3.533498779185961*^9, {3.5334989135896482`*^9, 
   3.533498959828293*^9}, {3.5334991317371254`*^9, 3.533499191062519*^9}, {
   3.533499223892397*^9, 3.533499312499465*^9}, {3.5334993829184923`*^9, 
   3.5334993908799477`*^9}, 3.533499430180196*^9, 3.5334997928509393`*^9, {
   3.5334999517950306`*^9, 3.5335000981244*^9}, 3.53350015371758*^9, {
   3.5335002146980677`*^9, 3.5335002401365223`*^9}, {3.533500363942604*^9, 
   3.533500424090044*^9}, {3.5335005002924023`*^9, 3.533500545577993*^9}, {
   3.533500578273863*^9, 3.5335006827208366`*^9}, {3.5335007468285036`*^9, 
   3.5335007544989424`*^9}, {3.5335008924778347`*^9, 3.533501033225885*^9}, {
   3.5335010884730444`*^9, 3.5335011590060787`*^9}, 3.5335012535484867`*^9, {
   3.533501794163408*^9, 3.5335018362748165`*^9}, 3.5335019036996727`*^9, {
   3.533501945237049*^9, 3.5335019462841086`*^9}, {3.5335019941488466`*^9, 
   3.5335020142239943`*^9}, 3.5335021251303377`*^9, {3.5335022630602274`*^9, 
   3.5335022657403803`*^9}, {3.533502500032781*^9, 3.533502634692483*^9}, {
   3.5335027136379986`*^9, 3.533502812315643*^9}, {3.53350287381616*^9, 
   3.5335029473703675`*^9}, {3.5335029876086693`*^9, 
   3.5335029973032236`*^9}, {3.5335030575876713`*^9, 3.53350311525997*^9}, 
   3.5335032054071264`*^9, {3.5335032723359547`*^9, 3.533503301911646*^9}, {
   3.533503340390847*^9, 3.5335033468922186`*^9}, {3.533503511117612*^9, 
   3.533503516960946*^9}, {3.533504771750716*^9, 3.5335047736438246`*^9}, {
   3.5335048534583893`*^9, 3.533504888491393*^9}, {3.5335050631793847`*^9, 
   3.5335051987601395`*^9}, {3.533505250940124*^9, 3.533505286134137*^9}, {
   3.533505552934397*^9, 3.533505570360394*^9}, {3.533505649718933*^9, 
   3.533505659713505*^9}, {3.5335060011650343`*^9, 3.533506064985685*^9}, {
   3.533506104315934*^9, 3.533506105388996*^9}, {3.5335061560578938`*^9, 
   3.5335061582190175`*^9}, 3.53350623990469*^9, 3.533506293775771*^9, 
   3.533506403290035*^9, 3.5335064505847397`*^9, {3.5335064962523518`*^9, 
   3.533506498234465*^9}, {3.5335067951994505`*^9, 3.533506797351574*^9}, 
   3.533506888092764*^9, {3.5335069552926073`*^9, 3.5335069837102327`*^9}, {
   3.5335070333410716`*^9, 3.5335070842159815`*^9}, {3.5335071169068513`*^9, 
   3.5335071193269897`*^9}, 3.533507178531376*^9, 3.5335072253950567`*^9, 
   3.533507257166874*^9, {3.5335073649130363`*^9, 3.533507365708082*^9}, 
   3.533507423459385*^9, {3.5335075132005177`*^9, 3.533507524438161*^9}, {
   3.5335076063478456`*^9, 3.533507730067922*^9}, {3.5335084707442865`*^9, 
   3.5335084717243423`*^9}, {3.533508521384183*^9, 3.533508522184229*^9}, {
   3.5335085786134562`*^9, 3.533508607854129*^9}, {3.5335086414860525`*^9, 
   3.53350864196708*^9}, {3.5335086819093647`*^9, 3.5335086824563956`*^9}, {
   3.533508724615807*^9, 3.5335087250478315`*^9}, {3.5335087591427817`*^9, 
   3.5335087595748067`*^9}, {3.5335088057794495`*^9, 
   3.5335088155890102`*^9}, {3.5335088932504525`*^9, 
   3.5335089432173104`*^9}, {3.5335093322595625`*^9, 3.533509378256193*^9}, {
   3.5335094385996447`*^9, 3.533509443103902*^9}, {3.533509547021846*^9, 
   3.533509549973015*^9}, {3.533509615400757*^9, 3.5335096247132893`*^9}, {
   3.5335096638185263`*^9, 3.5335096893779883`*^9}, {3.5335098578476243`*^9, 
   3.5335101044907312`*^9}, {3.533511510539153*^9, 3.5335115114452047`*^9}, {
   3.533511542008953*^9, 3.5335115567797976`*^9}, {3.5335118266602335`*^9, 
   3.5335118343926764`*^9}, {3.533511886689667*^9, 3.533511887274701*^9}, {
   3.5335120636427884`*^9, 3.5335120935594997`*^9}, {3.533513126159561*^9, 
   3.533513136475151*^9}, 3.53351319975077*^9, {3.5335132346277647`*^9, 
   3.533513238873008*^9}, {3.5335133250699377`*^9, 3.5335133324953628`*^9}, {
   3.533514595838622*^9, 3.533514603108038*^9}, 3.533514744172106*^9, {
   3.533514810995928*^9, 3.5335148541513968`*^9}, 3.533515446329267*^9, 
   3.53352642987349*^9, {3.5335264804223814`*^9, 3.5335266781896925`*^9}, {
   3.533526801304734*^9, 3.5335268146124954`*^9}, {3.533527905465889*^9, 
   3.5335279346885605`*^9}, {3.5335297337624617`*^9, 
   3.5335297439210424`*^9}, {3.533529886751212*^9, 3.533529895347704*^9}, {
   3.533529971615066*^9, 3.533529974790248*^9}, 3.533530449966426*^9, 
   3.5335305552064457`*^9, {3.5335305963197966`*^9, 3.5335306543601165`*^9}, {
   3.5335307097512846`*^9, 3.5335307442172565`*^9}, {3.5335307888108068`*^9, 
   3.5335307909129267`*^9}, {3.5335308492112617`*^9, 
   3.5335308514973927`*^9}, {3.5335309243065567`*^9, 
   3.5335310146527243`*^9}, {3.533531111471262*^9, 3.533531111825282*^9}, {
   3.5335313706190844`*^9, 3.533531416944734*^9}, {3.533531447852502*^9, 
   3.533531484058573*^9}, {3.5335315837682757`*^9, 3.533531690618387*^9}, {
   3.533531731456723*^9, 3.533531741471296*^9}, {3.5335318082101135`*^9, 
   3.533531815561534*^9}, {3.5335332363117957`*^9, 3.533533277396146*^9}, {
   3.53353330771488*^9, 3.533533310537041*^9}, {3.5335333916646814`*^9, 
   3.5335334084926443`*^9}, {3.533533538535082*^9, 3.533533554011967*^9}, 
   3.533533598610518*^9, {3.533533635584633*^9, 3.533533639956883*^9}, {
   3.533534031409273*^9, 3.533534040489792*^9}, {3.5335340938458443`*^9, 
   3.53353410828767*^9}, {3.5335360755081882`*^9, 3.5335360905600495`*^9}, {
   3.53353636890197*^9, 3.533536370004033*^9}, 3.533536404204989*^9, {
   3.5335365556806526`*^9, 3.5335365990711346`*^9}, {3.5335366371103106`*^9, 
   3.533536683536966*^9}, {3.5335367166828613`*^9, 3.5335367512658396`*^9}, {
   3.5335368353376484`*^9, 3.5335368367807307`*^9}, {3.533583394132659*^9, 
   3.533583508746215*^9}, {3.5335835752320175`*^9, 3.533583650678333*^9}, {
   3.5335837387093678`*^9, 3.5335838774823055`*^9}, {3.533583974824873*^9, 
   3.5335840390575466`*^9}, {3.5335842583610897`*^9, 
   3.5335843159963865`*^9}, {3.533584414403015*^9, 3.533584420023337*^9}, {
   3.533585391850922*^9, 3.533585412386097*^9}, {3.5335855715602007`*^9, 
   3.533585613002571*^9}, {3.5335858180572996`*^9, 3.5335858303410025`*^9}, {
   3.533585927997588*^9, 3.5335859599554157`*^9}, {3.5335859932053175`*^9, 
   3.5335860325035653`*^9}, {3.5335860968622465`*^9, 3.533586213942943*^9}, {
   3.533586286017065*^9, 3.533586300315883*^9}, {3.533586350903777*^9, 
   3.53358646092307*^9}, {3.533588187939849*^9, 3.533588215644434*^9}, {
   3.533588844065377*^9, 3.5335888621504116`*^9}, {3.5335888964293723`*^9, 
   3.5335889407639084`*^9}, {3.53359243784993*^9, 3.5335924491715775`*^9}, {
   3.5335924973063307`*^9, 3.533592536998601*^9}, {3.5335929648110704`*^9, 
   3.5335929652330947`*^9}, 3.533593003198266*^9, {3.5335956021829195`*^9, 
   3.5335956855686893`*^9}, {3.5335957224147964`*^9, 3.533595802012349*^9}, {
   3.5335958724593782`*^9, 3.533595982179654*^9}, {3.5335960203008347`*^9, 
   3.5335960926389723`*^9}, {3.5335961571156597`*^9, 
   3.5335961686443195`*^9}, {3.5335962302348423`*^9, 
   3.5335962753304214`*^9}, {3.533596308613325*^9, 3.5335963139896326`*^9}, 
   3.5335963489706335`*^9, 3.5335963852987113`*^9, {3.5335964159864664`*^9, 
   3.5335964392177954`*^9}, {3.533596548947071*^9, 3.5335965744995327`*^9}, {
   3.533596847818166*^9, 3.533596960381604*^9}, {3.533597013757657*^9, 
   3.5335970826135955`*^9}, {3.533597198652232*^9, 3.5335972181983504`*^9}, {
   3.5335972497391543`*^9, 3.533597389254134*^9}, {3.5335974457693667`*^9, 
   3.533597576905867*^9}, {3.533597641501562*^9, 3.533597642809637*^9}, {
   3.533598042106475*^9, 3.53359808869514*^9}, {3.5335984312847347`*^9, 
   3.533598432685815*^9}, {3.5335985934600105`*^9, 3.533598594566074*^9}, {
   3.533598649983244*^9, 3.533598722739405*^9}, {3.533598789535226*^9, 
   3.5335988675786896`*^9}, {3.5335989241379247`*^9, 3.5335989630681515`*^9}, 
   3.533599006827654*^9, 3.5335995290095215`*^9, {3.5335995785773563`*^9, 
   3.533599583044612*^9}, 3.5335996411539354`*^9, {3.5335996829233246`*^9, 
   3.5335997013943815`*^9}, 3.5335997686722293`*^9, {3.533599822938333*^9, 
   3.5335998230283384`*^9}, {3.5335999172297263`*^9, 3.533599919850876*^9}, {
   3.5335999892548456`*^9, 3.5336000253849125`*^9}, {3.533600079415003*^9, 
   3.533600241104251*^9}, {3.5336003639032745`*^9, 3.533600394006996*^9}, 
   3.5336004878603644`*^9, 3.5336005239964314`*^9, 3.533600591384286*^9, 
   3.5336006334966946`*^9, {3.5336006684646945`*^9, 3.533600670997839*^9}, {
   3.5336018294230976`*^9, 3.5336018533474655`*^9}, 3.5336022862232246`*^9, 
   3.533602347926754*^9, 3.5336024330286217`*^9, 3.533602469382701*^9, {
   3.533602600689211*^9, 3.533602640925513*^9}, {3.533602756527125*^9, 
   3.533602913179085*^9}, {3.5336029684192443`*^9, 3.5336030839878545`*^9}, {
   3.533603122279044*^9, 3.5336031309935427`*^9}, {3.5336031792253017`*^9, 
   3.5336032551726456`*^9}, {3.533603564486337*^9, 3.533603734630069*^9}, {
   3.5336037696610727`*^9, 3.533603839757082*^9}, {3.5336038746090755`*^9, 
   3.5336038750991035`*^9}, {3.533606952910144*^9, 3.5336069837089057`*^9}, {
   3.533607079141364*^9, 3.5336073487757864`*^9}, {3.533607851933565*^9, 
   3.533607893813961*^9}, {3.5336079343092766`*^9, 3.533608313194948*^9}, {
   3.533608369245154*^9, 3.5336083838779907`*^9}, {3.5336084330538034`*^9, 
   3.53360853316453*^9}, {3.533608584022438*^9, 3.533608680050931*^9}, {
   3.5336088329206743`*^9, 3.533608835417817*^9}, {3.5336088655785427`*^9, 
   3.5336090967667656`*^9}, {3.533609150628846*^9, 3.533609164939665*^9}, {
   3.5336092229659843`*^9, 3.5336092284812994`*^9}, {3.5336092763420367`*^9, 
   3.533609346451047*^9}, {3.533609423050428*^9, 3.533609572586981*^9}, {
   3.5336096079540043`*^9, 3.5336096205037217`*^9}, {3.5336096658883176`*^9, 
   3.533609684489382*^9}, {3.533609731893093*^9, 3.533609737640422*^9}, {
   3.533609795767746*^9, 3.5336099961732087`*^9}, {3.5336103876315985`*^9, 
   3.5336104548864455`*^9}, {3.5336105030001974`*^9, 
   3.5336106258512244`*^9}, {3.533610710258052*^9, 3.5336107114501204`*^9}, {
   3.533610959113286*^9, 3.5336109898170424`*^9}, {3.533611166518149*^9, 
   3.5336111813029947`*^9}, {3.5336112344010315`*^9, 3.53361123577211*^9}, 
   3.5336113504186673`*^9, {3.5336115656419773`*^9, 3.5336117471273575`*^9}, {
   3.5336117828474007`*^9, 3.533611783242423*^9}, {3.5336118923606644`*^9, 
   3.5336119253675528`*^9}, {3.5336119936234565`*^9, 3.533612028402446*^9}, {
   3.533612140862878*^9, 3.5336121816572113`*^9}, {3.53362461993764*^9, 
   3.5336248403702483`*^9}, {3.53363120457226*^9, 3.53363128412881*^9}, {
   3.533631331135499*^9, 3.533631378968235*^9}, {3.533631541782547*^9, 
   3.533631558578508*^9}, {3.5336315985457935`*^9, 3.5336315997188606`*^9}, {
   3.533631939081271*^9, 3.533632007346176*^9}, {3.533632058186084*^9, 
   3.533632069551734*^9}, {3.5336321023626103`*^9, 3.5336321089519873`*^9}, {
   3.5336322400304847`*^9, 3.533632247851932*^9}, {3.533632429589327*^9, 
   3.533632466957464*^9}, {3.5336325441408787`*^9, 3.5336325595887623`*^9}, {
   3.5336326220563354`*^9, 3.533632839513773*^9}, {3.5336329041184683`*^9, 
   3.5336329389174585`*^9}, {3.5336329868011975`*^9, 3.533632995888717*^9}, 
   3.533633035112961*^9, {3.5336330719640684`*^9, 3.5336330964474688`*^9}, {
   3.5336332820120826`*^9, 3.533633285960308*^9}, {3.5336334405361495`*^9, 
   3.533633445191416*^9}, {3.5336335711546206`*^9, 3.533633656202485*^9}, {
   3.533633705557308*^9, 3.5336337063893557`*^9}, {3.5336338285473423`*^9, 
   3.533634017707162*^9}, 3.5336340713552303`*^9, {3.5336342036877995`*^9, 
   3.5336342494974194`*^9}, {3.533656324979065*^9, 3.5336563554578085`*^9}, {
   3.533656437650509*^9, 3.5336564409426975`*^9}, {3.5336848679196277`*^9, 
   3.533684893674101*^9}, {3.5336849927287664`*^9, 3.533685025538643*^9}, {
   3.533685067396037*^9, 3.533685105993245*^9}, {3.533685193021222*^9, 
   3.5336851957933807`*^9}, {3.5336852280272245`*^9, 
   3.5336854008041067`*^9}, {3.5336854693600283`*^9, 3.533685503555984*^9}, {
   3.5336856112251425`*^9, 3.533685710979848*^9}, {3.5336857424036455`*^9, 
   3.533685845769558*^9}, {3.533685906923055*^9, 3.5336859565958967`*^9}, {
   3.5336860071277866`*^9, 3.5336860892524843`*^9}, {3.5336861553502645`*^9, 
   3.5336861780435624`*^9}, {3.5336862265703382`*^9, 3.533686238918044*^9}, {
   3.533689649141098*^9, 3.5336896665740952`*^9}, {3.5336897117776804`*^9, 
   3.533689749623845*^9}, {3.533690670016489*^9, 3.5336907051744995`*^9}, 
   3.5336907445007486`*^9, {3.5336907950946426`*^9, 3.5336909580419626`*^9}, {
   3.533691006093711*^9, 3.5336910643880453`*^9}, {3.5336911564253097`*^9, 
   3.53369137235466*^9}, {3.5336914032574277`*^9, 3.533691510565565*^9}, {
   3.5336915739261894`*^9, 3.533691588542025*^9}, {3.5336916318565025`*^9, 
   3.5336916461843224`*^9}, 3.533691686772644*^9, {3.533691769964402*^9, 
   3.5336918150369797`*^9}, 3.53369190350604*^9, {3.533691942033244*^9, 
   3.533692168640205*^9}, {3.5336922141768093`*^9, 3.533692349559553*^9}, {
   3.5336923867466803`*^9, 3.533692478951954*^9}, 3.533692524375552*^9, {
   3.533692677429306*^9, 3.5336926836086597`*^9}, {3.5336929849518957`*^9, 
   3.5336929947524557`*^9}, {3.533693047146453*^9, 3.533693063623395*^9}, {
   3.5336932495630302`*^9, 3.5336932591405783`*^9}, {3.533693338846137*^9, 
   3.533693887374511*^9}, {3.53369441010941*^9, 3.5336944228481383`*^9}, 
   3.5336945119642353`*^9, {3.5336945625431285`*^9, 3.5336945649572663`*^9}, {
   3.5336946811329117`*^9, 3.5336948169656806`*^9}, {3.533694913481201*^9, 
   3.533695004781423*^9}, {3.5336958639795666`*^9, 3.5336958924321938`*^9}, {
   3.533695959560033*^9, 3.533696070276366*^9}, {3.5336964526522365`*^9, 
   3.533696459927653*^9}, {3.533696860553567*^9, 3.533696863998764*^9}, {
   3.5336969034610214`*^9, 3.5336969308465877`*^9}, {3.5336969623273883`*^9, 
   3.5336969744630823`*^9}, {3.5336970975511227`*^9, 
   3.5336971901864214`*^9}, {3.533697221302201*^9, 3.533697321489931*^9}, {
   3.533697396737235*^9, 3.533697474700694*^9}, {3.5336975404594555`*^9, 
   3.5336975453737364`*^9}, {3.5336975774385705`*^9, 
   3.5336977158764887`*^9}, {3.5336977559327803`*^9, 3.53369779002673*^9}, {
   3.533697824571706*^9, 3.5336978673681536`*^9}, {3.533697927359585*^9, 
   3.5336979414143887`*^9}, {3.533697980323614*^9, 3.533697981174663*^9}, {
   3.533698048692525*^9, 3.533698143059922*^9}, {3.5336982231195016`*^9, 
   3.533698304705168*^9}, {3.5336983534759574`*^9, 3.5336983716309958`*^9}, {
   3.53369853062709*^9, 3.533698531470138*^9}, {3.5336985615858603`*^9, 
   3.5336985984219675`*^9}, {3.5336986984766903`*^9, 3.533698699045723*^9}, {
   3.5336988642111697`*^9, 3.5336988860544195`*^9}, {3.5336989629728184`*^9, 
   3.5336989634878483`*^9}, {3.533699079452481*^9, 3.5336991551998134`*^9}, 
   3.5336992511112995`*^9, {3.5336992974139476`*^9, 3.533699299247052*^9}, {
   3.5337000189912195`*^9, 3.5337000431205997`*^9}, 3.5337000910163393`*^9, 
   3.5337004367771153`*^9, {3.5337004727261715`*^9, 3.533700502527876*^9}, {
   3.5337065649896293`*^9, 3.5337065802765036`*^9}, {3.53370665434774*^9, 
   3.5337066766510158`*^9}, {3.5337067181703906`*^9, 3.5337067185894146`*^9}, 
   3.533706757461638*^9, {3.5337069875007954`*^9, 3.53370717832871*^9}, {
   3.533707234032896*^9, 3.5337073487524576`*^9}, {3.5337073826663976`*^9, 
   3.5337074089208994`*^9}, {3.5337075152619815`*^9, 3.53370765405392*^9}, {
   3.5337077532544737`*^9, 3.533707870389638*^9}, {3.5337079623297663`*^9, 
   3.533708164020049*^9}, {3.53370821465512*^9, 3.533708218790125*^9}, {
   3.5337084416464376`*^9, 3.533708445301442*^9}, {3.533709184368477*^9, 
   3.5337092578435802`*^9}, {3.5337092929436293`*^9, 
   3.5337093317936835`*^9}, {3.5337093851937585`*^9, 3.533709387623762*^9}, {
   3.53371103396507*^9, 3.533711063675112*^9}, {3.5337110976351595`*^9, 
   3.5337111580502434`*^9}, {3.533711188885287*^9, 3.5337112635803914`*^9}, {
   3.53371130503045*^9, 3.533711345855507*^9}, {3.533711380550555*^9, 
   3.5337114650306735`*^9}, {3.5337114952507157`*^9, 
   3.5337120075584335`*^9}, {3.533712044623485*^9, 3.5337120951785555`*^9}, 
   3.5337121287386026`*^9, {3.533712247298769*^9, 3.5337122511587744`*^9}, {
   3.53371228407382*^9, 3.5337124130690007`*^9}, {3.5337124462190475`*^9, 
   3.5337125194091496`*^9}, {3.533712574399227*^9, 3.533712595969257*^9}, {
   3.5337126300293045`*^9, 3.533712681669377*^9}, {3.5337127143344226`*^9, 
   3.53371273404945*^9}, {3.533712766679496*^9, 3.5337129584797645`*^9}, {
   3.53371303377987*^9, 3.5337130624149103`*^9}, {3.53371311236998*^9, 
   3.53371314825003*^9}, {3.533713194365095*^9, 3.533713194720095*^9}, {
   3.533713231345146*^9, 3.533713413086401*^9}, {3.5337134442574444`*^9, 
   3.5337136273577013`*^9}, {3.5337136970727987`*^9, 
   3.5337136998278027`*^9}, {3.5337138224929743`*^9, 3.533713829622984*^9}, {
   3.533713880783056*^9, 3.5337139440481443`*^9}, {3.5337140031732273`*^9, 
   3.5337140298432646`*^9}, {3.5337140840933404`*^9, 3.533714116573386*^9}, {
   3.5337141584334445`*^9, 3.5337141599884467`*^9}, {3.5337142027085066`*^9, 
   3.5337142612535887`*^9}, {3.53371451277394*^9, 3.5337145494439917`*^9}, {
   3.533714584814041*^9, 3.533714588749047*^9}, {3.533714638729117*^9, 
   3.5337146558691406`*^9}, {3.5337147410542603`*^9, 3.533714743884264*^9}, {
   3.5337148196153703`*^9, 3.5337148280953817`*^9}, 3.5337148947904754`*^9, {
   3.5337149605205674`*^9, 3.533715164636853*^9}, {3.5337152429569626`*^9, 
   3.5337153396520987`*^9}, {3.53371545512726*^9, 3.533715456032261*^9}, {
   3.533715795897737*^9, 3.533715804027748*^9}, {3.5337159221379137`*^9, 
   3.5337159613129683`*^9}, {3.5337161338962126`*^9, 3.533716158881248*^9}, {
   3.533716255317383*^9, 3.533716320252474*^9}, {3.533716548452793*^9, 
   3.533716569722823*^9}, 3.5337166843219852`*^9, {3.5337167332170534`*^9, 
   3.5337167334370537`*^9}, {3.5337169098023005`*^9, 
   3.5337169374523396`*^9}, {3.533717069027524*^9, 3.5337170856425467`*^9}, {
   3.5337171247376013`*^9, 3.533717124977602*^9}, {3.5337172337627544`*^9, 
   3.5337172616277933`*^9}, {3.5337173016578493`*^9, 
   3.5337173438429084`*^9}, {3.533717414243007*^9, 3.5337175035781317`*^9}, {
   3.533717548378195*^9, 3.5337175823832426`*^9}, {3.533717636388318*^9, 
   3.5337176966984024`*^9}, {3.5337177661794996`*^9, 3.533717766819501*^9}, {
   3.533773272763896*^9, 3.533773277743181*^9}, {3.53377335953986*^9, 
   3.5337733887825317`*^9}, {3.533773690871811*^9, 3.5337737632679515`*^9}, {
   3.5337738258055286`*^9, 3.533773830989825*^9}, {3.53377386394271*^9, 
   3.5337739487015576`*^9}, {3.5337739882698207`*^9, 3.53377429334027*^9}, {
   3.5337743276502323`*^9, 3.5337745012371607`*^9}, {3.533774542869542*^9, 
   3.533774895010683*^9}, {3.5337750565439224`*^9, 3.5337750904098597`*^9}, {
   3.533775311340496*^9, 3.533775341461219*^9}, {3.533775454809702*^9, 
   3.533775507765731*^9}, {3.5337755754176006`*^9, 3.53377558711827*^9}, {
   3.533775647688734*^9, 3.5337757479874706`*^9}, {3.5337758882514935`*^9, 
   3.5337759243875604`*^9}, {3.533775984785015*^9, 3.5337760271574383`*^9}, {
   3.53377607176999*^9, 3.533776113534379*^9}, {3.5337762990759916`*^9, 
   3.53377630482332*^9}, {3.533776379161572*^9, 3.533776417740779*^9}, {
   3.533776513771271*^9, 3.533776518326532*^9}, 3.5337765548776226`*^9, {
   3.533776722460208*^9, 3.5337767621744795`*^9}, {3.5337768435291324`*^9, 
   3.5337768442651744`*^9}, {3.5337796330947847`*^9, 
   3.5337796566051292`*^9}, {3.5337796898870325`*^9, 3.533779724595018*^9}, 
   3.533787402527022*^9, {3.5337876671321564`*^9, 3.5337876802159047`*^9}, {
   3.5337877937974014`*^9, 3.533787821276973*^9}, {3.533787996273982*^9, 
   3.5337880691481504`*^9}, {3.5337882792991705`*^9, 
   3.5337883231026754`*^9}, {3.53378841024366*^9, 3.5337884646087694`*^9}, {
   3.533788557080058*^9, 3.533788571770899*^9}, {3.5337887404015436`*^9, 
   3.533788742341655*^9}, {3.5337887869062033`*^9, 3.533788809201479*^9}, {
   3.5337890509403057`*^9, 3.5337894416336517`*^9}, {3.5337894764216413`*^9, 
   3.533789521918244*^9}, {3.533789584317813*^9, 3.5337896662885017`*^9}, {
   3.5337897400157185`*^9, 3.533789752539435*^9}, {3.5337897880574665`*^9, 
   3.533789830860914*^9}, {3.5337899023100014`*^9, 3.533789911504527*^9}, {
   3.53378998900496*^9, 3.5337900071119957`*^9}, {3.533790057357869*^9, 
   3.533790059375985*^9}, {3.5337901295509987`*^9, 3.5337901525843163`*^9}, {
   3.533790272477174*^9, 3.5337902969705744`*^9}, {3.533790444662022*^9, 
   3.5337904619810123`*^9}, 3.5337904942708597`*^9, {3.5337905435466776`*^9, 
   3.533790547924928*^9}, {3.533790594543595*^9, 3.533790990301231*^9}, {
   3.5337910445853357`*^9, 3.5337911303422403`*^9}, {3.5337911829052467`*^9, 
   3.533791211025855*^9}, {3.5337913200730925`*^9, 3.5337913295796366`*^9}, {
   3.53379138593386*^9, 3.533791386422888*^9}, {3.5337914930179844`*^9, 
   3.533791493328002*^9}, 3.5337915514113245`*^9, 3.5337916193722115`*^9, {
   3.5337916940474825`*^9, 3.5337916959865932`*^9}, {3.533791952355257*^9, 
   3.533792131936528*^9}, {3.533792296041915*^9, 3.533792299022085*^9}, {
   3.5337924167138166`*^9, 3.533792439267107*^9}, {3.5337929162233872`*^9, 
   3.533792930312193*^9}, {3.5337929758407974`*^9, 3.5337929920427237`*^9}, {
   3.5337930411435323`*^9, 3.5337930515851297`*^9}, {3.5337931510038157`*^9, 
   3.5337931568841524`*^9}, {3.5337933573376174`*^9, 3.533793377869792*^9}, {
   3.533793427373623*^9, 3.5337934497559032`*^9}, {3.5338332127662177`*^9, 
   3.533833218419541*^9}, {3.533834938325914*^9, 3.533835053876523*^9}, {
   3.533835090135597*^9, 3.5338355454356384`*^9}, 3.53383558777306*^9, {
   3.5338356471874585`*^9, 3.533835684676603*^9}, {3.5338357883295317`*^9, 
   3.5338358441277227`*^9}, {3.5338359026820717`*^9, 
   3.5338359032141027`*^9}, {3.533835985159789*^9, 3.5338360462302823`*^9}, {
   3.533836429262191*^9, 3.53383642994123*^9}, {3.5338364951469593`*^9, 
   3.5338364956169863`*^9}, {3.5338369573943977`*^9, 
   3.5338370059251738`*^9}, {3.533837063625474*^9, 3.5338372013243504`*^9}, {
   3.5338372318490963`*^9, 3.5338374164846563`*^9}, {3.5338374652624464`*^9, 
   3.533837654685281*^9}, {3.533837700339892*^9, 3.5338377538299513`*^9}, {
   3.5338378926148896`*^9, 3.5338379161272345`*^9}, {3.533838035760077*^9, 
   3.533838048243791*^9}, {3.5338381713838344`*^9, 3.5338381724388943`*^9}, {
   3.5338382137142553`*^9, 3.533838239071706*^9}, {3.5338439904016633`*^9, 
   3.5338440702212286`*^9}, {3.533844105269233*^9, 3.5338441633225536`*^9}, {
   3.5338442045979147`*^9, 3.533844252443651*^9}, {3.533844302984542*^9, 
   3.5338444125168066`*^9}, {3.5338444743073406`*^9, 
   3.5338446437120304`*^9}, {3.5338447062746086`*^9, 3.53384472168349*^9}, {
   3.5338448314347677`*^9, 3.5338448710740347`*^9}, 3.533844996193191*^9, {
   3.533845036626504*^9, 3.5338450759457526`*^9}, {3.533845141838522*^9, 
   3.5338452183168955`*^9}, {3.533845294165234*^9, 3.5338453247009807`*^9}, {
   3.5338453579788837`*^9, 3.5338453601210065`*^9}, {3.533845411600951*^9, 
   3.5338454229025974`*^9}, 3.5338455116306725`*^9, {3.5338456078711767`*^9, 
   3.5338456893868394`*^9}, {3.533847395523425*^9, 3.533847395715436*^9}, {
   3.5338475129321404`*^9, 3.5338475440209184`*^9}, {3.5338477543989515`*^9, 
   3.5338478229748735`*^9}, {3.5338479389255056`*^9, 3.533847970571316*^9}, {
   3.5338481013647966`*^9, 3.533848129523407*^9}, {3.533848223612789*^9, 
   3.5338482409527807`*^9}, {3.53385226827013*^9, 3.533852379955518*^9}, {
   3.533852413677447*^9, 3.5338527041630616`*^9}, {3.53385274784156*^9, 
   3.5338528393747954`*^9}, {3.5338529761096163`*^9, 3.533852998519898*^9}, {
   3.533853214731264*^9, 3.5338532154483056`*^9}, {3.533853267519284*^9, 
   3.533853273324616*^9}, {3.5338533653978825`*^9, 3.5338533999558587`*^9}, {
   3.5338535043648305`*^9, 3.533853504825857*^9}, 3.5338549834914317`*^9, 
   3.5338561606187596`*^9, {3.533864967958511*^9, 3.5338649702256403`*^9}, {
   3.533869178015312*^9, 3.5338691781113176`*^9}, {3.533869327198845*^9, 
   3.533869685595344*^9}, {3.533869716348103*^9, 3.5338697450357437`*^9}, {
   3.533869815713786*^9, 3.5338699083720865`*^9}, {3.5338699468772883`*^9, 
   3.5338699735588145`*^9}, {3.5338700113199744`*^9, 3.533870011805002*^9}, {
   3.5338700470890207`*^9, 3.5338700891614265`*^9}, {3.5339324195897884`*^9, 
   3.5339324406024566`*^9}, {3.5339324888910885`*^9, 
   3.5339324890436077`*^9}, {3.533932529859291*^9, 3.533932540390128*^9}, {
   3.5339325705634594`*^9, 3.5339325711300316`*^9}, {3.533932651976798*^9, 
   3.5339326544316096`*^9}, {3.533932694387183*^9, 3.533932722893303*^9}, {
   3.5339327814372373`*^9, 3.533932781859291*^9}, {3.5339330065788264`*^9, 
   3.533933063339034*^9}, {3.5339333066629324`*^9, 3.533933332264183*^9}, {
   3.533933380551815*^9, 3.533933387842741*^9}, {3.533933438721202*^9, 
   3.5339334788773007`*^9}, {3.533933513770732*^9, 3.533933594201445*^9}, {
   3.5339336364453096`*^9, 3.533933726703271*^9}, {3.533933776106544*^9, 
   3.5339338191075044`*^9}, {3.533933860679784*^9, 3.533933861272359*^9}, {
   3.533933929252991*^9, 3.533933929542028*^9}, {3.5339339641874275`*^9, 
   3.5339339860602045`*^9}, 3.53393435339035*^9, {3.533934480724019*^9, 
   3.533934506428283*^9}, {3.533934557780304*^9, 3.5339345622858763`*^9}, {
   3.533934602974543*^9, 3.53393466508493*^9}, {3.5339349601563997`*^9, 
   3.533934981700135*^9}, {3.533935053094701*^9, 3.5339350582613573`*^9}, {
   3.5339351570699043`*^9, 3.5339351891244745`*^9}, {3.5339353456828547`*^9, 
   3.533935376492267*^9}, {3.5339354882814627`*^9, 3.5339355082574997`*^9}, {
   3.5339355988740063`*^9, 3.5339356473161573`*^9}, {3.533935703709819*^9, 
   3.5339357144221787`*^9}, {3.533935757694674*^9, 3.5339358214232664`*^9}, {
   3.533936505904684*^9, 3.5339366504730425`*^9}, {3.5339366850929384`*^9, 
   3.5339367626127825`*^9}, {3.53393683386283*^9, 3.533936921284431*^9}, {
   3.5339369687524586`*^9, 3.533937011826928*^9}, {3.5339370454161935`*^9, 
   3.5339370609761696`*^9}, {3.5339370926331897`*^9, 
   3.5339370989234886`*^9}, {3.5339407781791945`*^9, 3.53394086855317*^9}, 
   3.533940912769285*^9, {3.533941097147198*^9, 3.533941113099224*^9}, 
   3.53394409140142*^9, {3.533952978753971*^9, 3.5339529795935774`*^9}, {
   3.533953019483143*^9, 3.5339530201372256`*^9}, {3.5339532566337566`*^9, 
   3.53395325878503*^9}, {3.5339533142375717`*^9, 3.5339534011141033`*^9}, {
   3.533953499971157*^9, 3.5339535004712205`*^9}, {3.5339535649449077`*^9, 
   3.533953599710322*^9}, {3.5339537120665894`*^9, 3.533953713047714*^9}, {
   3.533953751073043*^9, 3.5339537716221523`*^9}, {3.5339538445194087`*^9, 
   3.5339538944142447`*^9}, {3.5339539407271256`*^9, 
   3.5339539965597153`*^9}, {3.533954043871723*^9, 3.533954095206242*^9}, {
   3.5339543150761623`*^9, 3.5339543509947233`*^9}, {3.5339544878926067`*^9, 
   3.533954493837362*^9}, {3.533954557595458*^9, 3.533954584983436*^9}, {
   3.533954635036792*^9, 3.5339546448290353`*^9}, 3.5339546815331964`*^9, {
   3.5339548066795874`*^9, 3.533954823354205*^9}, {3.5339548892000666`*^9, 
   3.5339548966725154`*^9}, {3.5339550612994204`*^9, 
   3.5339550714212055`*^9}, {3.5339553411314545`*^9, 
   3.5339553457195373`*^9}, {3.5339553862231803`*^9, 3.533955414454265*^9}, {
   3.533955474475387*^9, 3.5339554913150253`*^9}, {3.533955585087433*^9, 
   3.533955649606126*^9}, {3.533955821306429*^9, 3.533955929475665*^9}, {
   3.533955997880351*^9, 3.533956000194645*^9}, {3.5339561112342453`*^9, 
   3.533956112074852*^9}, {3.5339563712652645`*^9, 3.533956381835107*^9}, {
   3.533956498266892*^9, 3.533956510371929*^9}, {3.5339567336767855`*^9, 
   3.5339567481586246`*^9}, 3.533961274038838*^9, {3.53396526991525*^9, 
   3.533965271402439*^9}, {3.5339662484175043`*^9, 3.533966254979337*^9}, {
   3.5339669195842314`*^9, 3.5339669454400144`*^9}, {3.533967061834295*^9, 
   3.53396706298044*^9}, {3.5339670957616034`*^9, 3.533967096235163*^9}, {
   3.5339672402604523`*^9, 3.533967242188697*^9}, {3.53396732127874*^9, 
   3.5339673217693024`*^9}, {3.533967431937292*^9, 3.5339674325553703`*^9}, {
   3.5339674673312864`*^9, 3.5339675450371532`*^9}, {3.533967581799822*^9, 
   3.5339676407573085`*^9}, {3.533967691844796*^9, 3.533967737100543*^9}, {
   3.533967768569039*^9, 3.533967771540416*^9}, {3.533967832689181*^9, 
   3.533967918796615*^9}, {3.533968034953865*^9, 3.533968059160939*^9}, {
   3.5339681174603424`*^9, 3.533968127544623*^9}, 3.5339685134811306`*^9, {
   3.533968575706032*^9, 3.5339686341119485`*^9}, {3.5339712554763193`*^9, 
   3.5339712558998737`*^9}, {3.533971367871592*^9, 3.5339714335044265`*^9}, {
   3.533971469182457*^9, 3.5339714853535104`*^9}, {3.5339715188632655`*^9, 
   3.5339716075855317`*^9}, {3.533971665412875*^9, 3.5339717342851205`*^9}, {
   3.5339718131821394`*^9, 3.5339718416047487`*^9}, {3.5339719717137704`*^9, 
   3.5339720244294643`*^9}, {3.533972065732709*^9, 3.5339720686705823`*^9}, {
   3.5339721570513053`*^9, 3.5339721576768847`*^9}, 3.533972207779747*^9, {
   3.5339722607539735`*^9, 3.533972275515848*^9}, {3.533972306340762*^9, 
   3.533972307243377*^9}, {3.533972347626005*^9, 3.5339723486296325`*^9}, 
   3.533972499977351*^9, {3.533972538878291*^9, 3.533972638064886*^9}, {
   3.5339727040152607`*^9, 3.53397271369549*^9}, {3.53397420262206*^9, 
   3.5339742975771174`*^9}, {3.5339743611376886`*^9, 3.53397441832195*^9}, {
   3.5339748757325335`*^9, 3.5339749390050683`*^9}, {3.533974974496075*^9, 
   3.53397499619283*^9}, {3.533975075869948*^9, 3.5339751725822287`*^9}, {
   3.5339754147119756`*^9, 3.533975414840992*^9}, {3.533975461746448*^9, 
   3.5339755084963846`*^9}, {3.5339756170061636`*^9, 
   3.5339756183428335`*^9}, {3.5339757837298346`*^9, 
   3.5339758628638835`*^9}, {3.5339759188259897`*^9, 
   3.5339759520377073`*^9}, {3.5339760519228907`*^9, 3.53397606435747*^9}, {
   3.5339760949523554`*^9, 3.533976107292922*^9}, {3.5339761426784153`*^9, 
   3.533976169474818*^9}, {3.53397625146873*^9, 3.533976268484891*^9}, {
   3.533976300769991*^9, 3.5339763012500515`*^9}, 3.5339763358424444`*^9, {
   3.5339763890917063`*^9, 3.5339765095420012`*^9}, {3.5339766815573444`*^9, 
   3.533976752531357*^9}, {3.5339768459872246`*^9, 3.533976853110129*^9}, {
   3.533976916272149*^9, 3.5339769679997177`*^9}, {3.533977051406309*^9, 
   3.5339770533370543`*^9}, {3.533977096102985*^9, 3.533977160701688*^9}, {
   3.533977284268379*^9, 3.533977482827593*^9}, {3.5339775827477813`*^9, 
   3.5339776550564632`*^9}, {3.533977705464364*^9, 3.533977714351493*^9}, {
   3.533977812465952*^9, 3.5339778130745287`*^9}, {3.533977853529166*^9, 
   3.5339778542812614`*^9}, {3.533977988193266*^9, 3.533977988728334*^9}, {
   3.533978027502758*^9, 3.5339780282718554`*^9}, {3.5339780594798183`*^9, 
   3.5339781170716314`*^9}, {3.5339781483266*^9, 3.533978198760005*^9}, {
   3.5339782457119665`*^9, 3.533978291183741*^9}, {3.533978518465102*^9, 
   3.5339785233422213`*^9}, {3.5339785810250463`*^9, 3.5339786172626476`*^9}, 
   3.5339787343095107`*^9, {3.5339788166569676`*^9, 3.5339788187897387`*^9}, {
   3.533978858959339*^9, 3.5339788604305263`*^9}, {3.53404302175548*^9, 
   3.534043091131789*^9}, {3.5340431803851233`*^9, 3.534043221989406*^9}, {
   3.534043341428073*^9, 3.5340433643649855`*^9}, {3.5340436335941734`*^9, 
   3.5340436521400285`*^9}, {3.534043690970959*^9, 3.534043699223507*^9}, {
   3.5340437415943875`*^9, 3.534043743990192*^9}, {3.534043827779832*^9, 
   3.534043870382742*^9}, {3.5340439874706097`*^9, 3.534044009782443*^9}, {
   3.534044341448059*^9, 3.5340443437943573`*^9}, {3.5340444618708515`*^9, 
   3.534044472845245*^9}, {3.5340445105120277`*^9, 3.5340445116241693`*^9}, {
   3.534044658374804*^9, 3.534044690379368*^9}, {3.5340448006968765`*^9, 
   3.534044808410356*^9}, {3.5340449667349606`*^9, 3.5340449729687524`*^9}, {
   3.534045172496089*^9, 3.5340452091642456`*^9}, {3.5340465069350414`*^9, 
   3.534046573194455*^9}, {3.5340466433923693`*^9, 3.534046685938272*^9}, {
   3.534046728086624*^9, 3.5340468256010065`*^9}, {3.534046880572487*^9, 
   3.5340469285220757`*^9}, {3.534051201880724*^9, 3.5340512865054693`*^9}, {
   3.534051324010232*^9, 3.534051354925158*^9}, {3.534051527035013*^9, 
   3.5340515305749626`*^9}, {3.5340516137095194`*^9, 3.5340516792658443`*^9}, 
   3.5340517661778803`*^9, {3.5340519818462667`*^9, 3.534052012857205*^9}, {
   3.534052088741841*^9, 3.5340521055254717`*^9}, {3.5340528760138116`*^9, 
   3.534052884319866*^9}, {3.5340530039410563`*^9, 3.53405303043042*^9}, {
   3.5340530682907276`*^9, 3.534053072277234*^9}, {3.53405313170428*^9, 
   3.534053132835924*^9}, {3.534053310824526*^9, 3.534053315413108*^9}, {
   3.5340533675772324`*^9, 3.5340533914462633`*^9}, {3.534053453369626*^9, 
   3.5340534829418817`*^9}, {3.534053731344925*^9, 3.534053764343115*^9}, {
   3.534053799813619*^9, 3.534053801410822*^9}, 3.53405409387246*^9, {
   3.534054159543299*^9, 3.534054160520423*^9}, {3.5340543035185814`*^9, 
   3.534054328525257*^9}, {3.5340545058682766`*^9, 3.534054547008001*^9}, {
   3.5340545828910575`*^9, 3.534054641537505*^9}, {3.5340547006920166`*^9, 
   3.534054714984331*^9}, {3.534054767369483*^9, 3.534054768045069*^9}, {
   3.5340548053023*^9, 3.534054812349695*^9}, {3.5340549385177164`*^9, 
   3.534055038117364*^9}, {3.5340551377945213`*^9, 3.5340551425596266`*^9}, {
   3.5340553295383697`*^9, 3.5340553303919783`*^9}, {3.5340553666900873`*^9, 
   3.534055381668989*^9}, {3.534055455993928*^9, 3.534055461546633*^9}, {
   3.5340555546674576`*^9, 3.5340556343330736`*^9}, {3.5340569223321285`*^9, 
   3.5340569381501374`*^9}, {3.534056985986212*^9, 3.5340570150824065`*^9}, {
   3.534057118394026*^9, 3.5340571825281696`*^9}, {3.534057339453596*^9, 
   3.534057365437896*^9}, {3.5340576318037205`*^9, 3.534057635044632*^9}, {
   3.5340577135015945`*^9, 3.534057726309721*^9}, {3.534057786513866*^9, 
   3.5340577933722367`*^9}, {3.534057991643414*^9, 3.534057999949969*^9}, {
   3.534058264811102*^9, 3.534058265055133*^9}, {3.5340583711511054`*^9, 
   3.5340584003033075`*^9}, {3.5340589971305947`*^9, 
   3.5340590210096273`*^9}, {3.5340595299707565`*^9, 
   3.5340595317164783`*^9}, {3.5340596270505843`*^9, 
   3.5340596490208745`*^9}, {3.5340596792917185`*^9, 
   3.5340596891149654`*^9}, {3.534059723344312*^9, 3.534059849388818*^9}, {
   3.534060213194515*^9, 3.534060231370323*^9}, {3.534060265945714*^9, 
   3.534060300659622*^9}, {3.5340603835321455`*^9, 3.534060400993363*^9}, {
   3.5340605975058165`*^9, 3.5340606499519763`*^9}, 3.5340609521403494`*^9, {
   3.534061042411312*^9, 3.5340613076829977`*^9}, {3.5340613811198225`*^9, 
   3.5340613992461247`*^9}, {3.53406148465397*^9, 3.5340615728841743`*^9}, {
   3.5340616095703325`*^9, 3.534061611432069*^9}, {3.5340616554031525`*^9, 
   3.534061764014944*^9}, {3.534061815016421*^9, 3.534061855938617*^9}, {
   3.534061923420186*^9, 3.534061934196555*^9}, {3.534062006437228*^9, 
   3.534062025695674*^9}, 3.5340620599225197`*^9, {3.534062103267024*^9, 
   3.534062211541273*^9}, {3.5340622442254233`*^9, 3.5340622447844944`*^9}, {
   3.534062302483821*^9, 3.5340623211171875`*^9}, 3.5340623641861563`*^9, 
   3.5340625381537476`*^9, {3.534062592802687*^9, 3.534062594099352*^9}, {
   3.534062777038082*^9, 3.534062931781232*^9}, 3.5340633345428762`*^9, {
   3.5340634708621864`*^9, 3.5340634711902285`*^9}, {3.5340635039353867`*^9, 
   3.534063508011904*^9}, {3.5340637936996813`*^9, 3.534063794308259*^9}, {
   3.534064018697753*^9, 3.5340640399114466`*^9}, {3.534064230016587*^9, 
   3.5340642600639024`*^9}, 3.534064334102804*^9, {3.534065467483225*^9, 
   3.534065476670392*^9}, {3.534065510134641*^9, 3.534065510614702*^9}, {
   3.5340655733476686`*^9, 3.534065628920725*^9}, {3.5340656618389053`*^9, 
   3.5340656674091125`*^9}, {3.5340657213289595`*^9, 
   3.5340657340135703`*^9}, {3.534065775660859*^9, 3.5340657870698075`*^9}, {
   3.5340675267247157`*^9, 3.534067567937449*^9}, {3.5340676112859535`*^9, 
   3.534067611637498*^9}, {3.5340676443906574`*^9, 3.5340676562956696`*^9}, {
   3.5340676959597054`*^9, 3.534067725844001*^9}, {3.5340679553691463`*^9, 
   3.5340679711016445`*^9}, {3.5340680241928864`*^9, 3.534068029289533*^9}, {
   3.534068115379465*^9, 3.534068119921542*^9}, 3.534068368481105*^9, {
   3.5340684334683576`*^9, 3.534068501077443*^9}, {3.5340685336075735`*^9, 
   3.5340685438048687`*^9}, {3.5340686451872425`*^9, 
   3.5340686936829004`*^9}, {3.5340687298024874`*^9, 
   3.5340687540195627`*^9}, {3.5340688555649567`*^9, 
   3.5340688820543203`*^9}, {3.5340690129069366`*^9, 
   3.5340690880399776`*^9}, {3.534069164141141*^9, 3.5340692124547763`*^9}, {
   3.5340692474947257`*^9, 3.5340693429408455`*^9}, {3.534069757600001*^9, 
   3.534069758421605*^9}, {3.534106772718824*^9, 3.53410677465657*^9}, {
   3.534109018130955*^9, 3.534109064464339*^9}, 3.5341091058315916`*^9, {
   3.534109162395274*^9, 3.534109216319622*^9}, {3.5341092750000734`*^9, 
   3.5341094122920074`*^9}, {3.534109490443431*^9, 3.5341095207222757`*^9}, 
   3.53410993923542*^9, {3.534109986858468*^9, 3.534110033768425*^9}, {
   3.534110093811549*^9, 3.5341101902352934`*^9}, {3.5341102339968505`*^9, 
   3.5341102648617697`*^9}, {3.534110301923976*^9, 3.534110329429469*^9}, {
   3.534110838059557*^9, 3.5341109043524747`*^9}, {3.53411095605204*^9, 
   3.5341110903900986`*^9}, {3.5341111250229964`*^9, 3.534111285790911*^9}, {
   3.534112213721244*^9, 3.5341123983941936`*^9}, {3.5341124364415255`*^9, 
   3.534112637634574*^9}, {3.53411267083529*^9, 3.5341127032894106`*^9}, {
   3.5341127711635294`*^9, 3.5341127989625597`*^9}, 3.5341129410030966`*^9, 
   3.5341130865705814`*^9, {3.534113134576177*^9, 3.534113135596307*^9}, {
   3.534113269482808*^9, 3.5341132750760183`*^9}, {3.5341133057944193`*^9, 
   3.534113329537434*^9}, {3.53411343440125*^9, 3.534113478426841*^9}, {
   3.534114974870865*^9, 3.534114978027766*^9}, 3.534115040397186*^9, {
   3.5341157960466413`*^9, 3.534115796739229*^9}, {3.534115832395257*^9, 
   3.5341158532779083`*^9}, {3.534115974272773*^9, 3.5341159943623238`*^9}, {
   3.534116101986991*^9, 3.534116104210773*^9}, 3.534116158108117*^9, {
   3.534116217139113*^9, 3.534116218384271*^9}, {3.534116256484609*^9, 
   3.534116261525749*^9}, {3.53411631421644*^9, 3.5341163543275337`*^9}, 
   3.53411640406485*^9, 3.5341166677298307`*^9, {3.5341167664563675`*^9, 
   3.5341169460711756`*^9}, {3.5341170819129257`*^9, 
   3.5341170855468864`*^9}, {3.534129725318434*^9, 3.5341298631834407`*^9}, {
   3.53412997918017*^9, 3.534130058207206*^9}, {3.5341300981992836`*^9, 
   3.5341301845407476`*^9}, {3.5341306067438607`*^9, 3.534130619558488*^9}, {
   3.534130761968072*^9, 3.5341308050970483`*^9}, 3.5341308458912287`*^9, {
   3.5341308769941783`*^9, 3.53413087779928*^9}, 3.53413091079547*^9, 
   3.534130945819418*^9, 3.5341309819865103`*^9, {3.534131020356883*^9, 
   3.5341310317963357`*^9}, {3.534131065018054*^9, 3.534131066495742*^9}, 
   3.53413112617282*^9, {3.534131190621004*^9, 3.5341311913115916`*^9}, {
   3.5341312228055906`*^9, 3.534131253552995*^9}, {3.5341312865141807`*^9, 
   3.5341313046179795`*^9}, {3.5341313833684797`*^9, 
   3.5341313839355516`*^9}, {3.534131640712658*^9, 3.534131642413874*^9}, {
   3.534131731163644*^9, 3.534131731873734*^9}, 3.5341317808579545`*^9, 
   3.5341318536677*^9, 3.5341319953171873`*^9, {3.534132034722191*^9, 
   3.534132035089738*^9}, {3.5341320735706244`*^9, 3.5341320738916645`*^9}, {
   3.534132127392459*^9, 3.534132127890022*^9}, {3.5341331231649055`*^9, 
   3.5341332711386957`*^9}, {3.5341381560299983`*^9, 
   3.5341382905260773`*^9}, {3.534138511309613*^9, 3.534138630756281*^9}, {
   3.5341387588010406`*^9, 3.5341387736919317`*^9}, {3.534138827099213*^9, 
   3.5341388500771313`*^9}, {3.534141177441169*^9, 3.534141209020679*^9}, {
   3.5341412426169453`*^9, 3.534141274060438*^9}, {3.534141321215426*^9, 
   3.5341415077721157`*^9}, {3.534141546368517*^9, 3.5341416473793435`*^9}, {
   3.534142826516575*^9, 3.53414286703222*^9}, {3.5341429168165417`*^9, 
   3.5341429628243837`*^9}, {3.534143002866968*^9, 3.534143011326543*^9}, {
   3.534143057489905*^9, 3.53414311076467*^9}, {3.534143313448407*^9, 
   3.5341433600223217`*^9}, {3.534143417593132*^9, 3.534143443831964*^9}, {
   3.534143501530791*^9, 3.5341435021508694`*^9}, 3.534143550420499*^9, 
   3.534143606995183*^9, {3.5341436871733646`*^9, 3.534143728226077*^9}, 
   3.534143790763519*^9, {3.5341439033543158`*^9, 3.5341439717460003`*^9}, {
   3.5341440026819286`*^9, 3.5341440135873137`*^9}, {3.534144059405632*^9, 
   3.5341440665150347`*^9}, {3.534144163166808*^9, 3.534144214206789*^9}, {
   3.5341442897228785`*^9, 3.5341443114026313`*^9}, {3.5341443769989614`*^9, 
   3.53414437856666*^9}, {3.534144482149314*^9, 3.5341444928371706`*^9}, {
   3.5341447074719257`*^9, 3.5341447112384043`*^9}, {3.5341447806592197`*^9, 
   3.534144780906251*^9}, {3.5341448440272665`*^9, 3.534144867347227*^9}, {
   3.5341449838220177`*^9, 3.534144987533489*^9}, {3.534145472858618*^9, 
   3.5341454748393693`*^9}, {3.5341457707844496`*^9, 
   3.5341458019044013`*^9}, {3.5341458468891134`*^9, 3.534145850522575*^9}, {
   3.534145989180182*^9, 3.534146013801809*^9}, {3.5341460738884387`*^9, 
   3.534146326040958*^9}, {3.53414644772941*^9, 3.534146459673427*^9}, {
   3.534146595108125*^9, 3.5341465991811423`*^9}, 3.534147456261978*^9, {
   3.53414803698172*^9, 3.5341480482081456`*^9}, {3.534148129519971*^9, 
   3.534148308649217*^9}, {3.5341483757467375`*^9, 3.534148581921418*^9}, {
   3.534148615598195*^9, 3.5341486592707405`*^9}, {3.5341488373168497`*^9, 
   3.5341488606463118`*^9}, {3.5341489496696167`*^9, 3.534148950310698*^9}, 
   3.5341490149089007`*^9, {3.5341490844572325`*^9, 3.5341490917186546`*^9}, {
   3.5341491303760633`*^9, 3.534149135360196*^9}, {3.534149192605466*^9, 
   3.534149228229989*^9}, {3.534149279304475*^9, 3.5341492806391444`*^9}, {
   3.5341493982060733`*^9, 3.534149402464114*^9}, {3.5341494693086023`*^9, 
   3.5341494696231422`*^9}, {3.5341496171498756`*^9, 
   3.5341496290513873`*^9}, {3.534149785913306*^9, 3.5341498105289316`*^9}, {
   3.5341498753916683`*^9, 3.534149878585574*^9}, {3.5341500314104805`*^9, 
   3.534150053780821*^9}, {3.534150704285424*^9, 3.5341507256866417`*^9}, 
   3.5341515382708273`*^9, {3.5341520818078475`*^9, 3.534152475277812*^9}, {
   3.534152526142771*^9, 3.534152535230425*^9}, 3.534152776387048*^9, 
   3.5341528291627493`*^9, {3.5341530828269606`*^9, 3.5341531098808966`*^9}, {
   3.5341578367691345`*^9, 3.5341579141149564`*^9}, {3.534157964800393*^9, 
   3.5341580491606054`*^9}, {3.5341580802795568`*^9, 
   3.5341581027054043`*^9}, {3.534158150873521*^9, 3.534158208385824*^9}, {
   3.5341582414480224`*^9, 3.5341582459976006`*^9}, {3.534158292706032*^9, 
   3.5341583677385597`*^9}, {3.5341584010887947`*^9, 3.534158409135816*^9}, {
   3.5341588719930916`*^9, 3.534158887405549*^9}, {3.534159096867647*^9, 
   3.5341591169466968`*^9}, {3.5341592122623005`*^9, 
   3.5341592164768353`*^9}, {3.5341597612245097`*^9, 3.534159765890102*^9}, {
   3.534159808427004*^9, 3.5341598117694283`*^9}, {3.5341599349640718`*^9, 
   3.5341599373868794`*^9}, {3.5341599682643003`*^9, 3.534159969137411*^9}, {
   3.534160094953888*^9, 3.5341601001930532`*^9}, 3.534160642388403*^9, {
   3.5341606742689514`*^9, 3.534160719559203*^9}, {3.5341607717438293`*^9, 
   3.534160842190775*^9}, {3.534161031955372*^9, 3.5341610638679247`*^9}, {
   3.5341610954164305`*^9, 3.5341610968786163`*^9}, {3.5341613058681545`*^9, 
   3.5341613858458104`*^9}, {3.5341944534163585`*^9, 3.534194463876687*^9}, {
   3.534194565369075*^9, 3.53419456643471*^9}, {3.534194596468024*^9, 
   3.5341946430374374`*^9}, {3.5341946867874928`*^9, 
   3.5341947328728447`*^9}, {3.534195008073291*^9, 3.5341950506221943`*^9}, 
   3.5341955338280535`*^9, {3.534195838830784*^9, 3.5341960293399754`*^9}, {
   3.5341963761880198`*^9, 3.5341963939517756`*^9}, {3.5341964492903023`*^9, 
   3.534196450388442*^9}, 3.534196773675494*^9, {3.534196902173311*^9, 
   3.5341969244111347`*^9}, {3.5341984291897173`*^9, 
   3.5341984751125493`*^9}, {3.5341994110543985`*^9, 3.534199430073814*^9}, 
   3.5341996211675797`*^9, {3.5341996642625523`*^9, 3.534199665481207*^9}, {
   3.534202273167841*^9, 3.534202377303564*^9}, {3.5342024146458063`*^9, 
   3.5342024166145563`*^9}, {3.534216207044218*^9, 3.534216223917861*^9}, {
   3.5342163524546833`*^9, 3.5342164021264906`*^9}, {3.534216450022073*^9, 
   3.5342165469138765`*^9}, {3.534217162742077*^9, 3.5342171628145857`*^9}, {
   3.534217239242291*^9, 3.5342172708543053`*^9}, {3.534217343511031*^9, 
   3.5342174119042163`*^9}, {3.5342174426576214`*^9, 3.5342174721388655`*^9}, 
   3.5342175156128855`*^9, {3.5342176087467117`*^9, 3.5342177134565086`*^9}, {
   3.5342177436858473`*^9, 3.534217767970931*^9}, {3.534217810045274*^9, 
   3.5342178124610806`*^9}, {3.5342178809662795`*^9, 
   3.5342179786346817`*^9}, {3.534218024681529*^9, 3.5342181328397636`*^9}, {
   3.5342181776419525`*^9, 3.534218180482813*^9}, {3.5342182234802732`*^9, 
   3.534218278584771*^9}, 3.5342183636950784`*^9, {3.5342191589850674`*^9, 
   3.5342191729658427`*^9}, 3.534219548492028*^9, 3.5342198621323557`*^9, {
   3.53422270165993*^9, 3.534222820279993*^9}, {3.5342228549173913`*^9, 
   3.534222856432584*^9}, {3.5342230605069976`*^9, 3.53422308478158*^9}, {
   3.5342257256479273`*^9, 3.534225735210142*^9}, {3.534225868985629*^9, 
   3.5342259773263865`*^9}, {3.5342261568401823`*^9, 
   3.5342262314631577`*^9}, {3.534226472094714*^9, 3.534226484708816*^9}, {
   3.5342268192627993`*^9, 3.5342268421502056`*^9}, {3.5342268783453016`*^9, 
   3.534226905958308*^9}, {3.5342269849258356`*^9, 3.534226999182146*^9}, 
   3.5342276092671165`*^9, {3.5342280878053837`*^9, 3.534228187466539*^9}, {
   3.5342288957299767`*^9, 3.534228928461633*^9}, {3.534229139424922*^9, 
   3.534229229669382*^9}, {3.5342292780405245`*^9, 3.5342292829036417`*^9}, {
   3.534229319850333*^9, 3.5342293397388587`*^9}, 3.534229377800192*^9, {
   3.534233586530633*^9, 3.5342335963783836`*^9}, {3.5342336373525867`*^9, 
   3.534233798511551*^9}, {3.5342338374885006`*^9, 3.5342338489194517`*^9}, {
   3.53423398899874*^9, 3.534233989430295*^9}, {3.53423403089406*^9, 
   3.534234038823567*^9}, {3.534234070080536*^9, 3.534234070360572*^9}, {
   3.5342342693798437`*^9, 3.5342342794026165`*^9}, {3.534234514594982*^9, 
   3.534234534069455*^9}, {3.5342345787731314`*^9, 3.534234738673436*^9}, {
   3.534234779825662*^9, 3.5342348161462746`*^9}, {3.5342349157919273`*^9, 
   3.534234917063589*^9}, {3.5342350350415707`*^9, 3.534235035425619*^9}, {
   3.5342352207071466`*^9, 3.534235234551905*^9}, {3.5342352679131413`*^9, 
   3.534235291569145*^9}, {3.5342353230936484`*^9, 3.5342353235197024`*^9}, {
   3.5342353618800735`*^9, 3.5342353713747797`*^9}, {3.534235404891035*^9, 
   3.5342354135141306`*^9}, 3.53423546336096*^9, {3.534235505699336*^9, 
   3.534235505790848*^9}, {3.5342355903665876`*^9, 3.534235673630161*^9}, {
   3.5342358871877794`*^9, 3.5342358878113585`*^9}, {3.5342364937072973`*^9, 
   3.5342365075070496`*^9}, {3.5342367097957373`*^9, 
   3.5342367099312544`*^9}, {3.5342367499623375`*^9, 3.534236750753438*^9}, {
   3.534236869184477*^9, 3.5342368918978615`*^9}, {3.5343019425067396`*^9, 
   3.534301943780401*^9}, {3.5343019740922503`*^9, 3.5343019933801994`*^9}, 
   3.5343020312340064`*^9, {3.534302092543792*^9, 3.5343021184360795`*^9}, 
   3.5343024469067903`*^9, {3.534302476999612*^9, 3.5343027006840158`*^9}, {
   3.534302778200859*^9, 3.5343028020813913`*^9}, {3.534302891612261*^9, 
   3.534303035461027*^9}, {3.534303099837702*^9, 3.5343031003497667`*^9}, {
   3.5343031371039343`*^9, 3.5343031566689186`*^9}, {3.534303189261057*^9, 
   3.5343032226948028`*^9}, {3.5343032751294613`*^9, 3.534303283712551*^9}, {
   3.5343033215253525`*^9, 3.5343033472236156`*^9}, {3.5343033890064216`*^9, 
   3.5343034012584777`*^9}, {3.534303460434492*^9, 3.534303463658901*^9}, {
   3.534303527746539*^9, 3.5343036236477175`*^9}, {3.534312260730488*^9, 
   3.5343123356435003`*^9}, {3.534312470314101*^9, 3.534312476177846*^9}, {
   3.5343132267141523`*^9, 3.534313265670099*^9}, 3.5343134595697207`*^9, {
   3.5343135054505467`*^9, 3.5343135443314843`*^9}, 3.5343136733123627`*^9, {
   3.534313736974447*^9, 3.5343137373264914`*^9}, {3.5343137942032137`*^9, 
   3.5343138081399837`*^9}, {3.534314193838461*^9, 3.5343142066045823`*^9}, 
   3.5343142373049803`*^9, {3.5343143138487005`*^9, 3.5343143142492514`*^9}, 
   3.534314351282954*^9, {3.534314416633252*^9, 3.5343144258409214`*^9}, {
   3.5343144995277786`*^9, 3.534314503423273*^9}, 3.5343145643155055`*^9, 
   3.5343146068589077`*^9, 3.534314654779993*^9, {3.534314709860488*^9, 
   3.5343147415555124`*^9}, {3.5343147805749674`*^9, 3.53431479036421*^9}, {
   3.5343148524225907`*^9, 3.5343148527666345`*^9}, {3.5343148892217636`*^9, 
   3.5343149329863205`*^9}, {3.5343149747991304`*^9, 
   3.5343149855089903`*^9}, {3.534315061011578*^9, 3.534315061594152*^9}, 
   3.5343150934491973`*^9, {3.534315134368393*^9, 3.5343151369602222`*^9}, {
   3.5343152134204316`*^9, 3.5343152386836395`*^9}, {3.534315333399667*^9, 
   3.5343153336632004`*^9}, 3.5343154350880795`*^9, {3.534315478030533*^9, 
   3.534315481206436*^9}, {3.534315868497616*^9, 3.534315868971176*^9}, {
   3.5343160565945015`*^9, 3.5343160716234093`*^9}, {3.534316253311981*^9, 
   3.53431625417109*^9}, {3.5343162953473186`*^9, 3.534316295452832*^9}, {
   3.534316496099311*^9, 3.534316511661787*^9}, 3.53431660594526*^9, {
   3.53432284571611*^9, 3.5343229258792896`*^9}, {3.5343229606777086`*^9, 
   3.534323086486184*^9}, {3.534323271792215*^9, 3.5343233182376127`*^9}, {
   3.5343233559929066`*^9, 3.534323363207323*^9}, {3.5343234480705996`*^9, 
   3.534323449674303*^9}, {3.534323491512616*^9, 3.534323492428732*^9}, {
   3.534323763964713*^9, 3.534323789759488*^9}, {3.5343238306161766`*^9, 
   3.5343238572015524`*^9}, 3.5343239021527605`*^9, 3.534323947941075*^9, {
   3.534323981662357*^9, 3.5343239819838977`*^9}, {3.5343240132733707`*^9, 
   3.534324013618415*^9}, 3.534324081344015*^9, {3.5343241395729094`*^9, 
   3.534324181058177*^9}, {3.534324231489581*^9, 3.534324235649609*^9}, {
   3.5343242708550797`*^9, 3.5343242787230787`*^9}, 3.534324343842348*^9, {
   3.53432437961089*^9, 3.5343243809225564`*^9}, 3.5343244167521067`*^9, {
   3.5343244609287157`*^9, 3.5343244634115314`*^9}, 3.5343245027550273`*^9, 
   3.5343245393771777`*^9, 3.5343245850349755`*^9, 3.5343246252495823`*^9, {
   3.534324686801898*^9, 3.534324782553057*^9}, {3.534324855001257*^9, 
   3.5343248745902443`*^9}, 3.5343250365163064`*^9, {3.5343251526135488`*^9, 
   3.5343251807651234`*^9}, {3.534325267459132*^9, 3.534325296332799*^9}, {
   3.534325338773188*^9, 3.5343253548032236`*^9}, {3.5343254016946783`*^9, 
   3.5343254142537727`*^9}, 3.534325482127392*^9, 3.534325521766925*^9, 
   3.5343255748201623`*^9, 3.5343256344437337`*^9, {3.534325665533181*^9, 
   3.5343256950674314`*^9}, 3.534325763101071*^9, {3.5343258026450925`*^9, 
   3.5343258030286407`*^9}, {3.534325833581021*^9, 3.5343258345566444`*^9}, {
   3.534325865917627*^9, 3.534325919508932*^9}, {3.5343259517430253`*^9, 
   3.534325980107127*^9}, {3.534326016442241*^9, 3.5343260238911867`*^9}, {
   3.5343260667006235`*^9, 3.534326099850833*^9}, {3.534326131749883*^9, 
   3.5343261541792316`*^9}, {3.5343262004506073`*^9, 3.5343262525002165`*^9}, 
   3.5343263198227654`*^9, {3.5343263531875024`*^9, 3.5343264081179776`*^9}, 
   3.5343264585108767`*^9, {3.534326506527474*^9, 3.5343265327318015`*^9}, 
   3.5343265834442415`*^9, {3.5343266488585477`*^9, 3.534326751556589*^9}, {
   3.53432678180443*^9, 3.534326862851722*^9}, {3.534326893252582*^9, 
   3.5343268936991386`*^9}, 3.534326945702242*^9, 3.534326989222268*^9, 
   3.5343270449343433`*^9, 3.5343270771179295`*^9, {3.5343271123574047`*^9, 
   3.5343271128849716`*^9}, 3.534327144896537*^9, 3.5343271881125245`*^9, 
   3.5343272496033325`*^9, {3.5343893536345434`*^9, 3.534389358398148*^9}, {
   3.5343894013300996`*^9, 3.5343894040774484`*^9}, {3.5343894602020755`*^9, 
   3.534389483414523*^9}, {3.5343895285237513`*^9, 3.5343895506925664`*^9}, {
   3.53438964419444*^9, 3.5343896455966177`*^9}, {3.534389676435034*^9, 
   3.5343897668210115`*^9}, 3.534389802928096*^9, {3.534389887024275*^9, 
   3.534389910640274*^9}, {3.5343899842441206`*^9, 3.534389996110627*^9}, {
   3.534390037115086*^9, 3.534390060445549*^9}, {3.5343900945723825`*^9, 
   3.5343901008511796`*^9}, {3.5343901388445044`*^9, 
   3.5343901664535103`*^9}, {3.5343902415475454`*^9, 
   3.5343902823532276`*^9}, {3.5343903437470236`*^9, 
   3.5343903529791956`*^9}, {3.5343903851942863`*^9, 3.534390414233974*^9}, {
   3.534390453712487*^9, 3.5343904863391304`*^9}, 3.534390525809142*^9, 
   3.534391455072644*^9, {3.534391690639057*^9, 3.5343917256104975`*^9}, 
   3.53439234555272*^9, {3.534392921465852*^9, 3.5343929438176904`*^9}, {
   3.534393533210034*^9, 3.5343935459091463`*^9}, {3.534393589046624*^9, 
   3.534393653075755*^9}, {3.534393798325699*^9, 3.5343938093085938`*^9}, 
   3.5343938932677555`*^9, {3.5343939491798553`*^9, 3.5343939625350513`*^9}, {
   3.534394011612283*^9, 3.53439406364089*^9}, {3.534394114292322*^9, 
   3.5343941254842434`*^9}, {3.534394179668624*^9, 3.5343942406113625`*^9}, {
   3.5343942931080284`*^9, 3.5343944357701445`*^9}, {3.5343944715076823`*^9, 
   3.5343945015449967`*^9}, {3.534397533743537*^9, 3.5343976974453244`*^9}, {
   3.5343977356266727`*^9, 3.5343981678055525`*^9}, {3.5343982031315384`*^9, 
   3.534398261883499*^9}, {3.5343983303891983`*^9, 3.5343983768570986`*^9}, {
   3.5343984413582897`*^9, 3.534398482650033*^9}, {3.534398537821539*^9, 
   3.5343985434207497`*^9}, 3.5343985899341564`*^9, {3.534398643505959*^9, 
   3.5343986658828*^9}, {3.5343987507320747`*^9, 3.5343987697779937`*^9}, {
   3.5343988405334787`*^9, 3.534398843792392*^9}, {3.53439887968445*^9, 
   3.534398887508443*^9}, {3.5343989455168095`*^9, 3.534398992748307*^9}, {
   3.534399043228217*^9, 3.5343990433462324`*^9}, {3.534399374575293*^9, 
   3.534399388912614*^9}, {3.5343994813658533`*^9, 3.5343994912726116`*^9}, {
   3.534399567290265*^9, 3.534399568802457*^9}, {3.534399603347843*^9, 
   3.5343996684346085`*^9}, {3.534399699671075*^9, 3.5343997044066763`*^9}, {
   3.5343998419006357`*^9, 3.5343998859442286`*^9}, {3.534399954591446*^9, 
   3.53439996218941*^9}, 3.534400021807481*^9, {3.5344000745951843`*^9, 
   3.5344001333346434`*^9}, {3.5344001737262726`*^9, 
   3.5344002156240926`*^9}, {3.5344003669328065`*^9, 3.534400403468946*^9}, {
   3.5344004538993497`*^9, 3.534400454306902*^9}, {3.534400534438077*^9, 
   3.5344006938973255`*^9}, {3.534400730667495*^9, 3.5344007310270405`*^9}, {
   3.5344010170408597`*^9, 3.534401021476423*^9}, {3.5344011392903833`*^9, 
   3.534401278747592*^9}, {3.5344013170769596`*^9, 3.5344013369139786`*^9}, {
   3.534401389206619*^9, 3.534401613237567*^9}, {3.5344016780047913`*^9, 
   3.534401697091715*^9}, {3.534401763542653*^9, 3.5344017671266084`*^9}, {
   3.534401840445919*^9, 3.534401867042796*^9}, {3.534401906871854*^9, 
   3.534401964974732*^9}, {3.5344020017474017`*^9, 3.534402002816537*^9}, 
   3.5344020829657145`*^9, {3.5344021649876304`*^9, 3.5344022209717393`*^9}, {
   3.5344022645907784`*^9, 3.5344022937369795`*^9}, 3.5344023632008*^9, {
   3.5344024139032383`*^9, 3.534402443591008*^9}, {3.5344026120704026`*^9, 
   3.5344026376356487`*^9}, {3.534402693305218*^9, 3.5344027339508796`*^9}, {
   3.534402802001021*^9, 3.534402846075618*^9}, {3.534402916135014*^9, 
   3.5344029366991253`*^9}, {3.534405869699069*^9, 3.5344059826379104`*^9}, {
   3.5344060645408106`*^9, 3.5344060676427045`*^9}, {3.534406103069703*^9, 
   3.5344063626531663`*^9}, {3.5344064005434775`*^9, 3.534406774729993*^9}, {
   3.5344068080272217`*^9, 3.534406912872035*^9}, 3.534406956766609*^9, {
   3.534407066625059*^9, 3.5344070850994053`*^9}, {3.534407284054169*^9, 
   3.534407333577458*^9}, {3.534407409997162*^9, 3.534407417558622*^9}, {
   3.534407534619487*^9, 3.5344075356301155`*^9}, {3.5344075821810265`*^9, 
   3.5344075913361893`*^9}, {3.5344077320090523`*^9, 3.534407751586038*^9}, {
   3.5344078132018623`*^9, 3.534407821070862*^9}, {3.534407868913437*^9, 
   3.534407887535802*^9}, 3.5344079334396305`*^9, {3.5344079680885305`*^9, 
   3.534408004065099*^9}, {3.5344416889030304`*^9, 3.5344416894265966`*^9}, {
   3.53444194153411*^9, 3.534441943439352*^9}, {3.5344419951584196`*^9, 
   3.5344420849968276`*^9}, {3.5344422519910336`*^9, 
   3.5344422532021875`*^9}, {3.5344426877093625`*^9, 3.534442713536642*^9}, {
   3.5344429385607166`*^9, 3.534442994821861*^9}, {3.534443153281983*^9, 
   3.5344431577145452`*^9}, {3.534443217103587*^9, 3.53444336573046*^9}, {
   3.5344451556852555`*^9, 3.534445165512004*^9}, {3.534445365166356*^9, 
   3.534445365263869*^9}, {3.5344454036787467`*^9, 3.5344454045508575`*^9}, {
   3.534446595078535*^9, 3.534446595602102*^9}, {3.5344471504020524`*^9, 
   3.534447150579575*^9}, {3.53446521102096*^9, 3.5344652583789735`*^9}, {
   3.534465366073649*^9, 3.5344653742771907`*^9}, 3.5344656264602137`*^9, 
   3.5344656609240904`*^9, {3.5344658584161687`*^9, 3.5344658938871727`*^9}, {
   3.5344659423873315`*^9, 3.5344659631939735`*^9}, {3.534466203456983*^9, 
   3.534466259993162*^9}, {3.534466294242011*^9, 3.5344665079501486`*^9}, {
   3.534469141452061*^9, 3.5344691423026695`*^9}, {3.534469296397237*^9, 
   3.5344693225150533`*^9}, {3.5344724463947353`*^9, 3.53447246729739*^9}, {
   3.5344732490316577`*^9, 3.534473275831061*^9}, {3.5344736229616404`*^9, 
   3.534473636784896*^9}, {3.534473784755686*^9, 3.534473786042349*^9}, {
   3.5344738493123837`*^9, 3.534473907800811*^9}, {3.534473940539968*^9, 
   3.5344739411090403`*^9}, {3.534474499571456*^9, 3.534474566685478*^9}, {
   3.5344746073706446`*^9, 3.534474624363803*^9}, {3.534474707945416*^9, 
   3.5344747125510006`*^9}, {3.5344747928747005`*^9, 3.534474837261837*^9}, {
   3.534474870034999*^9, 3.534474875155149*^9}, 3.534474913940074*^9, {
   3.5344750236980114`*^9, 3.5344750242095766`*^9}, {3.534475056469673*^9, 
   3.534475062177898*^9}, {3.5344779978156767`*^9, 3.5344780085085344`*^9}, {
   3.534478048411601*^9, 3.534478051643012*^9}, {3.534478339798103*^9, 
   3.534478361559866*^9}, {3.534478420433342*^9, 3.5344784426971693`*^9}, {
   3.534478512607547*^9, 3.5344785127720675`*^9}, {3.5344785456807466`*^9, 
   3.534478564882185*^9}, {3.5344786080421658`*^9, 3.534478724832996*^9}, {
   3.5344787793054132`*^9, 3.534478912220791*^9}, {3.5344789481738567`*^9, 
   3.5344789522918797`*^9}, {3.5344789948792877`*^9, 3.534479006047206*^9}, {
   3.5344790657822914`*^9, 3.534479099739603*^9}, {3.5344791459064655`*^9, 
   3.5344791975720263`*^9}, {3.534479228030394*^9, 3.5344793222808623`*^9}, {
   3.534479367215068*^9, 3.5344794652770205`*^9}, {3.534479500969553*^9, 
   3.534479502112198*^9}, {3.5344795325885677`*^9, 3.534479654425539*^9}, {
   3.5344798560266395`*^9, 3.534479964424404*^9}, {3.5344800752924824`*^9, 
   3.5344800946894455`*^9}, {3.534480498469719*^9, 3.5344805008690243`*^9}, {
   3.534480560524599*^9, 3.534480582627406*^9}, {3.534480647404132*^9, 
   3.534480657298388*^9}, {3.534480690414093*^9, 3.5344806956297555`*^9}, {
   3.534480754484229*^9, 3.53448075701155*^9}, {3.534480802995389*^9, 
   3.5344808854103546`*^9}, {3.534480937492968*^9, 3.534481124074161*^9}, {
   3.5344811726828337`*^9, 3.534481210843179*^9}, {3.5344812788858194`*^9, 
   3.5344812789738307`*^9}, {3.5344813574547963`*^9, 3.5344813632890377`*^9}, 
   3.534481405063342*^9, 3.5344845846766014`*^9, 3.534484615785552*^9, 
   3.534484678003453*^9, 3.534484763069255*^9, {3.534494257434886*^9, 
   3.534494269720446*^9}, {3.534494380253482*^9, 3.5344943816811633`*^9}, {
   3.534494444605654*^9, 3.5344944761051536`*^9}, {3.534494516837826*^9, 
   3.5344946853987303`*^9}, {3.534494806095557*^9, 3.5344948235827775`*^9}, 
   3.534495470053369*^9, {3.534495636190466*^9, 3.534495638169717*^9}, {
   3.53449567245207*^9, 3.5344956971382055`*^9}, {3.534544759092782*^9, 
   3.5345447668837714`*^9}, {3.5345449199922132`*^9, 3.5345449805219*^9}, {
   3.5345450658702383`*^9, 3.5345450813827076`*^9}, {3.534545132344179*^9, 
   3.534545154889042*^9}, {3.5345452340885987`*^9, 3.5345452547797265`*^9}, {
   3.534545455767248*^9, 3.534545457866515*^9}, {3.534545763304801*^9, 
   3.5345458342253065`*^9}, {3.5345459047287593`*^9, 
   3.5345459062664547`*^9}, {3.534546063432912*^9, 3.5345461075070086`*^9}, {
   3.53454623328048*^9, 3.5345462345151367`*^9}, {3.5345465388502827`*^9, 
   3.5345465455296307`*^9}, {3.534546586664854*^9, 3.5345466261693707`*^9}, {
   3.534546783963908*^9, 3.53454685603156*^9}, {3.534546905600854*^9, 
   3.5345469504915543`*^9}, {3.534547066722314*^9, 3.5345470864853234`*^9}, {
   3.534547117531766*^9, 3.534547202842599*^9}, {3.534547306833804*^9, 
   3.534547329851227*^9}, {3.5345473957310925`*^9, 3.5345473968267317`*^9}, {
   3.5345474967919254`*^9, 3.5345475592833614`*^9}, {3.534548585922228*^9, 
   3.5345485909528666`*^9}, {3.5345542844823527`*^9, 3.534554306611663*^9}, {
   3.5345543440009108`*^9, 3.534554376933593*^9}, {3.5345550195851994`*^9, 
   3.5345550323488197`*^9}, {3.53455558824641*^9, 3.534555654915876*^9}, {
   3.5345557560032125`*^9, 3.5345557750131264`*^9}, {3.5345559053006706`*^9, 
   3.5345559661739006`*^9}, {3.5345560411889267`*^9, 3.534556056670392*^9}, {
   3.534556351050274*^9, 3.534556363802893*^9}, {3.53455641157646*^9, 
   3.5345564878501453`*^9}, {3.5345566391293554`*^9, 3.534556652215517*^9}, {
   3.5345568203368654`*^9, 3.5345568674098434`*^9}, {3.5345569013296504`*^9, 
   3.534556910159772*^9}, {3.5345569404241147`*^9, 3.5345569685121813`*^9}, {
   3.5345570766449127`*^9, 3.534557076998458*^9}, {3.5345572378458824`*^9, 
   3.534557240527223*^9}, {3.534557298010022*^9, 3.5345572990731573`*^9}, {
   3.53455741871235*^9, 3.5345574189933853`*^9}, 3.534557454041836*^9, {
   3.5345574885037117`*^9, 3.5345574888582573`*^9}, {3.5345579590699663`*^9, 
   3.5345579953760767`*^9}, {3.5345582084001274`*^9, 3.5345582702129765`*^9}, 
   3.5345583048738775`*^9, {3.534558462180853*^9, 3.5345584622933674`*^9}, {
   3.5345589999631433`*^9, 3.5345590140189276`*^9}, {3.534559057133403*^9, 
   3.5345590714032145`*^9}, {3.5345591377081347`*^9, 
   3.5345591764010477`*^9}, {3.53455922107022*^9, 3.534559221565283*^9}, 
   3.534559544250759*^9, {3.5345596276438484`*^9, 3.5345596376526194`*^9}, {
   3.5345601559474344`*^9, 3.5345603072096424`*^9}, 3.5345604818438177`*^9, {
   3.534560518803511*^9, 3.5345605301144476`*^9}, 3.53456062408438*^9, 
   3.5345606775216656`*^9, {3.5345656135539627`*^9, 3.534565686426716*^9}, {
   3.534565741694234*^9, 3.53456574481013*^9}, 3.534565843588673*^9, {
   3.5345658762533207`*^9, 3.5345659076728106`*^9}, {3.5345660970338564`*^9, 
   3.5345660985625505`*^9}, {3.5345662285230536`*^9, 
   3.5345662563630886`*^9}, {3.5345663040991507`*^9, 3.534566400296866*^9}, {
   3.5345664951714134`*^9, 3.53456650042108*^9}, {3.534566607670699*^9, 
   3.53456662382075*^9}, {3.5345666711772633`*^9, 3.5345667146677856`*^9}, {
   3.5345667562575674`*^9, 3.53456678202984*^9}, {3.5345668192990723`*^9, 
   3.5345668222124424`*^9}, {3.5345668524777856`*^9, 
   3.5345669083718834`*^9}, {3.53456694834896*^9, 3.534566993040135*^9}, {
   3.534567026582394*^9, 3.5345671732610197`*^9}, {3.5345672207930555`*^9, 
   3.534567233549676*^9}, {3.5345672744573703`*^9, 3.534567317910888*^9}, {
   3.5345673806018486`*^9, 3.5345673901465607`*^9}, {3.5345676015339036`*^9, 
   3.53456760418074*^9}, {3.5345676511577053`*^9, 3.5345676703531427`*^9}, {
   3.5345677049715385`*^9, 3.534567706900284*^9}, {3.5345677375581765`*^9, 
   3.5345677585693445`*^9}, {3.53456780160631*^9, 3.5345678206702304`*^9}, {
   3.5345678650588675`*^9, 3.534567876698345*^9}, {3.534569100403236*^9, 
   3.5345691288043423`*^9}, {3.534569216139433*^9, 3.534569216299953*^9}, {
   3.5345692493321476`*^9, 3.5345692494081573`*^9}, 3.53456928171626*^9, 
   3.534569316628693*^9, 3.5345693512280865`*^9, {3.5345694303936396`*^9, 
   3.534569430972213*^9}, {3.534569464284443*^9, 3.5345694673083267`*^9}, {
   3.534569500177001*^9, 3.5345696174218893`*^9}, {3.534570460340926*^9, 
   3.5345705384293423`*^9}, {3.534571163777751*^9, 3.5345711932379923`*^9}, 
   3.5345712396953917`*^9, {3.5345712827953644`*^9, 3.534571283184414*^9}, {
   3.5345713140428324`*^9, 3.5345713187294273`*^9}, {3.5345713934749193`*^9, 
   3.5345713939729824`*^9}, 3.534571440715918*^9, {3.5345720941673956`*^9, 
   3.53457209624866*^9}, {3.5345721948331785`*^9, 3.534572276123001*^9}, {
   3.5345723233685007`*^9, 3.5345723852403574`*^9}, {3.534572530224268*^9, 
   3.534572530743834*^9}, {3.534572588129621*^9, 3.5345726029360013`*^9}, {
   3.534572678864143*^9, 3.5345726953532367`*^9}, {3.5345727604470024`*^9, 
   3.5345727609980726`*^9}, {3.534572891903695*^9, 3.5345729525438957`*^9}, {
   3.5345729956298666`*^9, 3.5345729959324055`*^9}, 3.5345730657332687`*^9, {
   3.534573101860856*^9, 3.534573102196399*^9}, {3.5345731484637747`*^9, 
   3.534573175013646*^9}, {3.5345733448602133`*^9, 3.5345733452632647`*^9}, 
   3.5345733992171164`*^9, {3.53457409745028*^9, 3.5345741186514726`*^9}, {
   3.534574152587782*^9, 3.5345741828401237`*^9}, {3.5345744150816145`*^9, 
   3.534574415482665*^9}, 3.5345745086830006`*^9, 3.534574551487936*^9, {
   3.534574584637145*^9, 3.5345745898868117`*^9}, {3.534574810378311*^9, 
   3.53457486896125*^9}, {3.5345750033363132`*^9, 3.534575014822272*^9}, {
   3.53457552203568*^9, 3.5345755254956193`*^9}, {3.5345756279136243`*^9, 
   3.534575635320065*^9}, {3.5345756757291965`*^9, 3.5345757127779007`*^9}, 
   3.5345757872548585`*^9, {3.5345758939359055`*^9, 3.5345759085232573`*^9}, {
   3.534575966235086*^9, 3.534575980908949*^9}, {3.534576039007827*^9, 
   3.5345761105909166`*^9}, {3.534576241220004*^9, 3.5345762512777815`*^9}, {
   3.5345766306654577`*^9, 3.5345766326157055`*^9}, {3.5345769051628146`*^9, 
   3.5345769061314373`*^9}, {3.534579845018629*^9, 3.534579950047966*^9}, {
   3.5345800260961227`*^9, 3.5345800533000774`*^9}, {3.5345801561496377`*^9, 
   3.534580175980156*^9}, {3.534580220894359*^9, 3.534580225360926*^9}, {
   3.5345802597237897`*^9, 3.5345802707131853`*^9}, {3.5345803054045906`*^9, 
   3.5345803112528334`*^9}, {3.534580412871237*^9, 3.5345804530193353`*^9}, {
   3.534580832943079*^9, 3.5345808343847623`*^9}, {3.5345810963940334`*^9, 
   3.5345810968200874`*^9}, {3.534581166800974*^9, 3.5345811671615195`*^9}, {
   3.5345812192981405`*^9, 3.534581313343582*^9}, {3.534581412461669*^9, 
   3.5345814158135943`*^9}, {3.5345814681907454`*^9, 
   3.5345814921947937`*^9}, {3.5345815308266993`*^9, 3.53458153973133*^9}, {
   3.5345815793153563`*^9, 3.534581637501745*^9}, {3.5345816786359687`*^9, 
   3.534581679658098*^9}, {3.5345817404858227`*^9, 3.5345817579715433`*^9}, {
   3.5345818342762327`*^9, 3.5345818407630563`*^9}, {3.534581892947683*^9, 
   3.534581897146716*^9}, {3.534581949363347*^9, 3.5345819845718174`*^9}, {
   3.534582032903955*^9, 3.534582042972234*^9}, {3.534582086296735*^9, 
   3.5345821095491877`*^9}, {3.534582139803029*^9, 3.534582257747506*^9}, {
   3.5345824063428755`*^9, 3.5345824100108414`*^9}, {3.5345856793214912`*^9, 
   3.534585680361123*^9}, {3.5345858133390093`*^9, 3.534585839027771*^9}, {
   3.534585892242529*^9, 3.534585903487957*^9}, {3.534585945614806*^9, 
   3.5345859487136993`*^9}, {3.534585988311228*^9, 3.5345860650859776`*^9}, {
   3.534586113024064*^9, 3.5345861272148666`*^9}, {3.5345877278086157`*^9, 
   3.5345877548440495`*^9}, {3.5345879521336017`*^9, 3.534587953733305*^9}, {
   3.534588112549472*^9, 3.5345881621997766`*^9}, {3.534588261789423*^9, 
   3.534588272272754*^9}, {3.534588350850232*^9, 3.53458835744557*^9}, {
   3.534588412447054*^9, 3.534588457430766*^9}, {3.5345885407098417`*^9, 
   3.5345885872527514`*^9}, {3.5345887614923773`*^9, 
   3.5345887703770056`*^9}, {3.5345888038637576`*^9, 
   3.5345888279868207`*^9}, {3.5345889872170405`*^9, 3.53458898776011*^9}, {
   3.5345890609259005`*^9, 3.5345890614324646`*^9}, {3.534589103677329*^9, 
   3.53458912297828*^9}, 3.5345892060348268`*^9, {3.534589240795741*^9, 
   3.5345892417503624`*^9}, 3.534589272272738*^9, {3.53458937426869*^9, 
   3.534589374812759*^9}, {3.5345894370451612`*^9, 3.534589437572728*^9}, {
   3.5345894677420597`*^9, 3.534589484344668*^9}, {3.5345896260386605`*^9, 
   3.5345896327455125`*^9}, {3.53458978337864*^9, 3.534589886245203*^9}, {
   3.5345901202129126`*^9, 3.5345902201175995`*^9}, {3.534629861821956*^9, 
   3.534629942722229*^9}, {3.534630352426755*^9, 3.534630633170905*^9}, {
   3.534630666251106*^9, 3.534630707195305*^9}, {3.5346309350777426`*^9, 
   3.534630968937042*^9}, {3.5346310204540834`*^9, 3.534631082385448*^9}, {
   3.5346311518782725`*^9, 3.534631201665095*^9}, {3.5346312345907755`*^9, 
   3.5346313465384912`*^9}, {3.5346313785435553`*^9, 3.534631456967514*^9}, {
   3.534631493124605*^9, 3.5346315748439827`*^9}, {3.534631662933668*^9, 
   3.5346316689974384`*^9}, 3.5346318364737053`*^9, {3.5346320327051234`*^9, 
   3.5346320368501496`*^9}, {3.5346347274268093`*^9, 
   3.5346348032959433`*^9}, {3.534634835506534*^9, 3.534634836324638*^9}, {
   3.534634869091299*^9, 3.5346349899501457`*^9}, {3.534635079543023*^9, 
   3.5346351266360025`*^9}, {3.534635221597561*^9, 3.5346352354108152`*^9}, 
   3.534635376943288*^9, {3.5346354646609263`*^9, 3.534635474351657*^9}, {
   3.5346355221672287`*^9, 3.53463552516861*^9}, {3.5346355625213532`*^9, 
   3.534635632763273*^9}, {3.534635687889773*^9, 3.534635690880653*^9}, {
   3.5346357624032345`*^9, 3.5346358540168686`*^9}, {3.5346361421334543`*^9, 
   3.5346361431995897`*^9}, {3.534636544863595*^9, 3.534636545495675*^9}, {
   3.534637426640066*^9, 3.5346374310181217`*^9}, {3.5346374683523626`*^9, 
   3.534637550064739*^9}, {3.5346375819452877`*^9, 3.534637582803396*^9}, {
   3.5346377291999865`*^9, 3.534637792443017*^9}, {3.5346417824301815`*^9, 
   3.5346417845354486`*^9}, {3.5346420116537886`*^9, 
   3.5346420357173443`*^9}, {3.534642354156781*^9, 3.5346423551724105`*^9}, {
   3.534642557437595*^9, 3.5346425703502345`*^9}, {3.534642758113577*^9, 
   3.5346427633827467`*^9}, {3.534642875661004*^9, 3.5346428916090293`*^9}, {
   3.5346431807327433`*^9, 3.5346432227160745`*^9}, {3.534643633870284*^9, 
   3.534643699264088*^9}, {3.5346437332319016`*^9, 3.5346439776934443`*^9}, {
   3.5346440291814823`*^9, 3.534644033990593*^9}, {3.534644540477409*^9, 
   3.534644559796362*^9}, {3.53464467160506*^9, 3.5346446791245146`*^9}, {
   3.5346447421655197`*^9, 3.534644760026288*^9}, 3.534644846936824*^9, {
   3.53464488163523*^9, 3.5346449442576823`*^9}, 3.5346537974234934`*^9, {
   3.5346538918864884`*^9, 3.534653905319194*^9}, {3.5346539356690483`*^9, 
   3.534653936928708*^9}, {3.534654044721896*^9, 3.5346540530109487`*^9}, {
   3.5346542301509423`*^9, 3.5346542429225645`*^9}, {3.534654315148236*^9, 
   3.5346543197413187`*^9}, {3.53465436219671*^9, 3.5346543867508283`*^9}, {
   3.5346544573312907`*^9, 3.534654477682875*^9}, {3.5346545480343084`*^9, 
   3.5346545715802984`*^9}, {3.534654740692273*^9, 3.5346547420954514`*^9}, 
   3.5346550546521406`*^9, 3.534655098220173*^9, {3.534655130494772*^9, 
   3.534655130710299*^9}, {3.5346555872472715`*^9, 3.5346558960409837`*^9}, {
   3.534655931221451*^9, 3.534655971345046*^9}, {3.5346560373129225`*^9, 
   3.5346560440977845`*^9}, {3.534656139068344*^9, 3.53465615124089*^9}, {
   3.5346562119340973`*^9, 3.534656243180565*^9}, {3.53465633299497*^9, 
   3.534656340312399*^9}, 3.5346563752813396`*^9, {3.5346564136332097`*^9, 
   3.5346564140987687`*^9}, {3.5346564484636326`*^9, 3.534656468832219*^9}, {
   3.5346565923118987`*^9, 3.534656613518592*^9}, {3.5346567211202555`*^9, 
   3.5346567266189537`*^9}, {3.5346568023975763`*^9, 3.534656806648116*^9}, {
   3.534656879024807*^9, 3.5346568970911007`*^9}, {3.534657085976086*^9, 
   3.534657119121795*^9}, {3.534657161322154*^9, 3.534657167778474*^9}, {
   3.534657231386051*^9, 3.5346572318531103`*^9}, {3.5346573131249304`*^9, 
   3.534657315318709*^9}, {3.5346573461661263`*^9, 3.5346573478403387`*^9}, {
   3.5346573805224886`*^9, 3.5346573823012147`*^9}, {3.534657472001605*^9, 
   3.534657482392925*^9}, {3.5346575324857855`*^9, 3.5346576185162106`*^9}, {
   3.5346578743401957`*^9, 3.534657914865342*^9}, {3.5346579529716806`*^9, 
   3.534657976611182*^9}, {3.53465807550074*^9, 3.5346582202856255`*^9}, {
   3.5346583300960693`*^9, 3.5346583793883286`*^9}, {3.534658432167531*^9, 
   3.534658450700384*^9}, {3.534658797061366*^9, 3.534658821879018*^9}, {
   3.534658854051103*^9, 3.5346589201985025`*^9}, {3.5346590142884507`*^9, 
   3.5346590633096757`*^9}, {3.534659111715822*^9, 3.5346591485600014`*^9}, 
   3.534659509838378*^9, 3.5346595409038224`*^9, {3.534659671265376*^9, 
   3.5346596980812817`*^9}, {3.5346598938541417`*^9, 
   3.5346599116459007`*^9}, {3.534659944856618*^9, 3.5346599452936735`*^9}, {
   3.5346600017158384`*^9, 3.5346600022279034`*^9}, {3.534660044427762*^9, 
   3.534660044937827*^9}, {3.5346601283139143`*^9, 3.5346601292565336`*^9}, 
   3.5346602433630238`*^9, 3.5346602911890965`*^9, {3.534664989002143*^9, 
   3.5346650186439075`*^9}, {3.534665062808015*^9, 3.534665090513033*^9}, 
   3.534665714752802*^9, {3.5346657918615932`*^9, 3.5346658515326705`*^9}, {
   3.5346658817915125`*^9, 3.534666064554721*^9}, 3.5346661024145284`*^9, {
   3.5346661458835487`*^9, 3.5346661517112885`*^9}, {3.5346671088978357`*^9, 
   3.5346673532878695`*^9}, {3.5346674795354004`*^9, 
   3.5346674980237484`*^9}, {3.5346675647862263`*^9, 3.5346675653492975`*^9}, 
   3.534667614105489*^9, {3.534667727576898*^9, 3.5346677434964194`*^9}, {
   3.534667781736275*^9, 3.534667860944333*^9}, {3.5346695657343144`*^9, 
   3.534669600344209*^9}, {3.5346702563870163`*^9, 3.5346702600284786`*^9}, {
   3.5346704101340394`*^9, 3.5346704446124177`*^9}, {3.5346704791523037`*^9, 
   3.5346704796048613`*^9}, {3.5346706108845315`*^9, 
   3.5346706119551673`*^9}, {3.5346708596481204`*^9, 
   3.5346708637221375`*^9}, {3.5346709662071514`*^9, 
   3.5346709878909054`*^9}, {3.5346711030605297`*^9, 3.53467110495177*^9}, {
   3.53467124922159*^9, 3.534671251523382*^9}, {3.5346715214841633`*^9, 
   3.534671522082739*^9}, {3.5346716908966756`*^9, 3.534671691970312*^9}, {
   3.534671759670909*^9, 3.534671763522398*^9}, {3.5346720072423463`*^9, 
   3.53467201994946*^9}, {3.534672176358321*^9, 3.5346721838757763`*^9}, {
   3.534672331998085*^9, 3.534672332372133*^9}, {3.5346724919764*^9, 
   3.5346724923144426`*^9}, {3.5346725638455257`*^9, 3.53467259317025*^9}, {
   3.5346728069829006`*^9, 3.53467283131149*^9}, {3.5346732100680857`*^9, 
   3.5346732121458497`*^9}, {3.5346732511648045`*^9, 3.534673253203063*^9}, {
   3.5346733187463865`*^9, 3.534673320876157*^9}, {3.5346736483657427`*^9, 
   3.534673660143238*^9}, 3.534673845660796*^9, 3.534674090111337*^9, {
   3.5346742529665174`*^9, 3.5346742582881927`*^9}, {3.5346743692897882`*^9, 
   3.5346744404798284`*^9}, {3.5346744833847766`*^9, 
   3.5346745093165693`*^9}, {3.53467478770092*^9, 3.534674835438982*^9}, 
   3.534674870137388*^9, {3.5346752548227367`*^9, 3.534675262257681*^9}, {
   3.534675330699872*^9, 3.5346753462338448`*^9}, {3.53467556905814*^9, 
   3.5346756168552094`*^9}, {3.5346756776334267`*^9, 3.5346756802897644`*^9}, 
   3.5346757579551263`*^9, {3.534676017475581*^9, 3.5346760176351013`*^9}, {
   3.5346761520386686`*^9, 3.53467616787868*^9}, {3.5346762383221254`*^9, 
   3.5346762439588413`*^9}, {3.5346763010240874`*^9, 3.534676304329007*^9}, {
   3.534676404383212*^9, 3.5346764249678264`*^9}, {3.5346766291107492`*^9, 
   3.534676715170677*^9}, 3.534676775128791*^9, {3.534676909009792*^9, 
   3.5346770137290897`*^9}, {3.5346771056527624`*^9, 
   3.5346771185649023`*^9}, {3.534677169064315*^9, 3.534677169696395*^9}, {
   3.534677237784541*^9, 3.534677279755871*^9}, {3.534677382929472*^9, 
   3.534677390505934*^9}, 3.5346774353751316`*^9, {3.5347164097392473`*^9, 
   3.534716436629162*^9}, {3.534716515645196*^9, 3.5347165794848022`*^9}, {
   3.534716653035642*^9, 3.5347167638027077`*^9}, 3.5347169091161604`*^9, {
   3.534717035452203*^9, 3.5347170545751314`*^9}, {3.534717266188503*^9, 
   3.5347172705655584`*^9}, 3.5347173270597324`*^9, {3.5347190930339823`*^9, 
   3.534719115833378*^9}, {3.534719379363342*^9, 3.5347193801824455`*^9}, {
   3.5347360541107655`*^9, 3.5347361013077593`*^9}, {3.534736150783042*^9, 
   3.534736264508483*^9}, 3.5347363075619497`*^9, {3.534736416387269*^9, 
   3.534736572146048*^9}, {3.534736967383237*^9, 3.5347369917978373`*^9}, {
   3.5347370360719595`*^9, 3.534737052654065*^9}, {3.5347371110249767`*^9, 
   3.5347371342379246`*^9}, {3.5347373081160045`*^9, 
   3.5347373085975657`*^9}, {3.534737350269357*^9, 3.534737408279723*^9}, {
   3.534737450321062*^9, 3.5347374520842857`*^9}, {3.5347374925969305`*^9, 
   3.5347375277053885`*^9}, {3.53473757213103*^9, 3.534737579495965*^9}, {
   3.5347376166096783`*^9, 3.5347376179278455`*^9}, {3.534737737414018*^9, 
   3.5347377747847633`*^9}, {3.5347378119489827`*^9, 3.534737907461111*^9}, {
   3.5347379655539885`*^9, 3.534738037199586*^9}, {3.5347380845565996`*^9, 
   3.534738104427623*^9}, 3.5347383969162645`*^9, {3.534738441482424*^9, 
   3.534738445934989*^9}, {3.534738559248378*^9, 3.5347385594879084`*^9}, {
   3.53473868691759*^9, 3.534738747817323*^9}, {3.5347388052691183`*^9, 
   3.5347388172131352`*^9}, {3.534738923076078*^9, 3.5347389236291485`*^9}, {
   3.534739047231344*^9, 3.5347390760650053`*^9}, {3.5347391952236366`*^9, 
   3.5347392421200914`*^9}, {3.5347393037899227`*^9, 
   3.5347393142627525`*^9}, {3.534739716088278*^9, 3.5347397285528607`*^9}, 
   3.5347397889020243`*^9, {3.5347398668224187`*^9, 3.5347398676790276`*^9}, {
   3.5347399463105125`*^9, 3.5347399630736413`*^9}, {3.5347414807043557`*^9, 
   3.534741498272587*^9}, {3.5347421107193575`*^9, 3.5347421212006884`*^9}, {
   3.534742161479803*^9, 3.534742180258688*^9}, {3.534742224481303*^9, 
   3.5347422456839957`*^9}, {3.5347422853555336`*^9, 3.534742306922772*^9}, {
   3.534742816940536*^9, 3.534742840444521*^9}, {3.534743046180646*^9, 
   3.534743093989217*^9}, {3.5347431310159187`*^9, 3.5347432067155313`*^9}, {
   3.5347432368028517`*^9, 3.534743287784826*^9}, {3.5347433270943174`*^9, 
   3.5347433274513626`*^9}, {3.5347433668408647`*^9, 
   3.5347434227694664`*^9}, {3.534743462634029*^9, 3.5347434856024456`*^9}, {
   3.534743529961078*^9, 3.534743614536818*^9}, 3.5347436738298473`*^9, 
   3.5347438467828093`*^9, {3.534743922392911*^9, 3.534743923521554*^9}, {
   3.5347439959042454`*^9, 3.534744045999107*^9}, {3.5347440967215476`*^9, 
   3.534744150730906*^9}, {3.5347441993855844`*^9, 3.5347442578385067`*^9}, {
   3.5347442933215127`*^9, 3.5347442951732483`*^9}, {3.5347446637840557`*^9, 
   3.534744777717023*^9}, {3.534744829346079*^9, 3.5347448390033054`*^9}, {
   3.534744877096143*^9, 3.534744912323616*^9}, {3.5347449866835585`*^9, 
   3.534744988364772*^9}, {3.534745129569203*^9, 3.5347451303708043`*^9}, {
   3.5347452379924707`*^9, 3.534745251364169*^9}, {3.5347453670633607`*^9, 
   3.53474558496153*^9}, {3.5347457106754937`*^9, 3.5347457344755163`*^9}, {
   3.534745823994384*^9, 3.534745854223722*^9}, {3.5347461358514843`*^9, 
   3.5347461421177797`*^9}, {3.534746187197504*^9, 3.534746208252178*^9}, {
   3.5347463218686056`*^9, 3.534746329512576*^9}, {3.534746425079712*^9, 
   3.534746425737795*^9}, {3.534747653145156*^9, 3.5347476561745405`*^9}, {
   3.5347479010636377`*^9, 3.5347479021912813`*^9}, {3.5347479785704803`*^9, 
   3.534747980185685*^9}, {3.5347485152511296`*^9, 3.5347485447958813`*^9}, {
   3.5347488879194527`*^9, 3.5347488898541985`*^9}, {3.53474895019086*^9, 
   3.534748951157483*^9}, {3.5347490386990995`*^9, 3.534749118825774*^9}, {
   3.5347492566902804`*^9, 3.534749260041706*^9}, {3.5347509690467224`*^9, 
   3.534751000585727*^9}, 3.5347512045781307`*^9, {3.534751241829361*^9, 
   3.534751313814002*^9}, {3.53475134774131*^9, 3.5347514065702806`*^9}, 
   3.534751436998144*^9, {3.534751937829742*^9, 3.5347519388353696`*^9}, 
   3.5347519972657895`*^9, {3.5347520507455807`*^9, 3.534752141728134*^9}, {
   3.534752200337076*^9, 3.5347522388424654`*^9}, {3.534752334114564*^9, 
   3.53475233881116*^9}, {3.534752686612325*^9, 3.5347527303283763`*^9}, {
   3.534752823885257*^9, 3.534752855111722*^9}, {3.534752954660363*^9, 
   3.534752980100094*^9}, {3.5347530547475724`*^9, 3.534753111687303*^9}, {
   3.5347534472764177`*^9, 3.5347534706563864`*^9}, {3.534753772497715*^9, 
   3.534753825686469*^9}, {3.5347539203819942`*^9, 3.5347539316544256`*^9}, {
   3.534753983148464*^9, 3.5347539895897827`*^9}, {3.5347541347657175`*^9, 
   3.534754137823106*^9}, 3.5347541865892982`*^9, {3.534754235397496*^9, 
   3.5347542362951097`*^9}, {3.5347545770108757`*^9, 3.534754614075082*^9}, {
   3.53475465304403*^9, 3.534754675994445*^9}, {3.534754715125414*^9, 
   3.5347547249756646`*^9}, {3.5347547852443175`*^9, 3.534754862854673*^9}, {
   3.5347548969259996`*^9, 3.534754940800071*^9}, {3.5347549968606896`*^9, 
   3.5347549995505314`*^9}, {3.5347550805563173`*^9, 3.53475508530242*^9}, {
   3.5347552201170397`*^9, 3.534755263494548*^9}, {3.5347554045324574`*^9, 
   3.53475541290302*^9}, {3.534755447755946*^9, 3.5347554525260515`*^9}, {
   3.5347555215248137`*^9, 3.53475553055346*^9}, {3.5347557883666983`*^9, 
   3.5347558088282967`*^9}, 3.534755839009629*^9, {3.534764793977765*^9, 
   3.5347647944518256`*^9}, {3.5347648714711056`*^9, 
   3.5347649032481413`*^9}, {3.5347866416210637`*^9, 3.5347866797874107`*^9}, 
   3.5347867568201923`*^9, {3.534789259945549*^9, 3.5347892611442013`*^9}, {
   3.5347893103269463`*^9, 3.5347893253143497`*^9}, {3.534789454357236*^9, 
   3.534789454927308*^9}, {3.534789500526599*^9, 3.534789518630398*^9}, {
   3.534789659606799*^9, 3.534789663770328*^9}, {3.5347897430648975`*^9, 
   3.534789764675641*^9}, {3.5347898255348697`*^9, 3.5347898482072487`*^9}, {
   3.5347898911507015`*^9, 3.534790054932499*^9}, {3.5347902279789734`*^9, 
   3.534790229864213*^9}, {3.5347902665343695`*^9, 3.534790268829661*^9}, {
   3.534790337626397*^9, 3.5347903550901146`*^9}, {3.5347907469793777`*^9, 
   3.5347907659092817`*^9}, {3.53479084346313*^9, 3.534790899951803*^9}, {
   3.534790939813365*^9, 3.534790959755397*^9}, {3.5347911276842213`*^9, 
   3.5347911617285447`*^9}, {3.5347912057886395`*^9, 3.534791273295212*^9}, {
   3.5347915015797005`*^9, 3.5347915319485564`*^9}, {3.534791694264668*^9, 
   3.534791722647272*^9}, {3.5347919327684546`*^9, 3.534791953315563*^9}, {
   3.5347921521838164`*^9, 3.534792298406884*^9}, {3.5347924341646233`*^9, 
   3.5347924620066586`*^9}, {3.5347925679056063`*^9, 3.534792575248539*^9}, {
   3.5347927944388723`*^9, 3.5347928064699*^9}, {3.5347929124773617`*^9, 
   3.534792919245721*^9}, {3.534793129274391*^9, 3.5347932283134675`*^9}, {
   3.5347934553698*^9, 3.534793482281217*^9}, {3.534794043229449*^9, 
   3.5347940455427427`*^9}, 3.5347940794260454`*^9, {3.5347942419921885`*^9, 
   3.5347942695716906`*^9}, {3.53479442313019*^9, 3.5347945256022024`*^9}, {
   3.5347947022161293`*^9, 3.5347947632728825`*^9}, {3.534794866749522*^9, 
   3.534794894625062*^9}, {3.5347953646322455`*^9, 3.534795400491299*^9}, {
   3.5347955379597554`*^9, 3.5347955545508623`*^9}, {3.53479620887195*^9, 
   3.5347962935702057`*^9}, {3.5347963649542704`*^9, 
   3.5347964212159147`*^9}, {3.5347964541505966`*^9, 
   3.5347964548581867`*^9}, {3.534796849801838*^9, 3.534796861638841*^9}, {
   3.534796906198*^9, 3.534797469609544*^9}, {3.5347975214726295`*^9, 
   3.534797826224328*^9}, {3.5347979050593386`*^9, 3.534797978994727*^9}, 
   3.5347980745668635`*^9, {3.5347981299343944`*^9, 3.534798130271437*^9}, {
   3.5347983796751075`*^9, 3.5347983806432304`*^9}, {3.534798467433751*^9, 
   3.5347985374571433`*^9}, {3.5347986050112214`*^9, 
   3.5347986343759503`*^9}, {3.5347986812023964`*^9, 
   3.5347987074047236`*^9}, {3.5348069810148387`*^9, 
   3.5348070016904645`*^9}, {3.534807059105755*^9, 3.5348071147638226`*^9}, {
   3.5348071459607844`*^9, 3.5348071719015784`*^9}, {3.534807304288389*^9, 
   3.534807305444536*^9}, {3.534807342345722*^9, 3.534807446892498*^9}, {
   3.5348074785930233`*^9, 3.5348077829701743`*^9}, {3.5348078326364813`*^9, 
   3.534807872813583*^9}, {3.5348079694218507`*^9, 3.534808056032849*^9}, {
   3.534808111741923*^9, 3.5348081123189964`*^9}, {3.534808170299359*^9, 
   3.534808177760806*^9}, {3.534808209205799*^9, 3.534808323846357*^9}, {
   3.5348084130836887`*^9, 3.534808422363367*^9}, {3.5348084682001877`*^9, 
   3.5348084757156415`*^9}, {3.5348085276962423`*^9, 3.53480855209134*^9}, {
   3.534809440399141*^9, 3.5348097056478233`*^9}, {3.534809762168*^9, 
   3.534809862148196*^9}, {3.5348098931406317`*^9, 3.5348099276950197`*^9}, {
   3.5348100623336163`*^9, 3.5348100688394427`*^9}, {3.5348103804930177`*^9, 
   3.534810396055994*^9}, {3.534810463852103*^9, 3.534810671070916*^9}, {
   3.5348107220328875`*^9, 3.5348107313765745`*^9}, {3.534810806636631*^9, 
   3.5348108395448103`*^9}, {3.5348108894121423`*^9, 3.53481089159942*^9}, {
   3.5348109334462337`*^9, 3.534810949333751*^9}, {3.5348110261425047`*^9, 
   3.534811032610326*^9}, {3.5348110921893916`*^9, 3.534811124735524*^9}, {
   3.534811926477833*^9, 3.534811950914936*^9}, {3.534811990015401*^9, 
   3.5348120159171906`*^9}, {3.534812103743343*^9, 3.5348121117983656`*^9}, {
   3.534812151428898*^9, 3.534812204980198*^9}, {3.5348122821044917`*^9, 
   3.5348122872356434`*^9}, 3.5348124222227845`*^9, {3.5348125846469097`*^9, 
   3.534812625632614*^9}, {3.53481267978199*^9, 3.5348126814782057`*^9}, {
   3.534812752426215*^9, 3.53481280876987*^9}, {3.5348133484058948`*^9, 
   3.534813376175421*^9}, {3.5348134449651566`*^9, 3.53481351886054*^9}, {
   3.5348136127164583`*^9, 3.534813677403172*^9}, {3.534813800687827*^9, 
   3.5348138414605045`*^9}, {3.5348140036060944`*^9, 
   3.5348140043031836`*^9}, {3.5348141947123623`*^9, 3.534814248394679*^9}, 
   3.5348170853349247`*^9, {3.534817467804492*^9, 3.5348174825433636`*^9}, {
   3.5348175165496817`*^9, 3.534817573879962*^9}, {3.5348190348019753`*^9, 
   3.5348192653597527`*^9}, {3.534819523223997*^9, 3.534819726706336*^9}, {
   3.534819799599592*^9, 3.5348198373558865`*^9}, {3.534819872647868*^9, 
   3.534819906218131*^9}, {3.5348199539676943`*^9, 3.5348199965616035`*^9}, {
   3.5348200390650005`*^9, 3.5348201918183975`*^9}, 3.5348208619084883`*^9, {
   3.534820940877016*^9, 3.5348210219493113`*^9}, {3.534822604234236*^9, 
   3.534822605261366*^9}, {3.5348226951272774`*^9, 3.534822702061158*^9}, {
   3.534822792156599*^9, 3.5348228238771267`*^9}, {3.5348228952626915`*^9, 
   3.5348229377080812`*^9}, {3.5348230025203114`*^9, 
   3.5348230476535425`*^9}, {3.5348231171803713`*^9, 
   3.5348232947679224`*^9}, {3.5348233310525303`*^9, 
   3.5348233463844767`*^9}, {3.534823482285234*^9, 3.5348235206041*^9}, {
   3.534823553418267*^9, 3.5348235573387647`*^9}, {3.534823616726306*^9, 
   3.534823862963574*^9}, {3.534823911824279*^9, 3.5348239396078067`*^9}, 
   3.5348241134723845`*^9, {3.534824349773391*^9, 3.534824367201604*^9}, {
   3.5348244057479987`*^9, 3.534824406105544*^9}, {3.5348244716473675`*^9, 
   3.5348245389284105`*^9}, {3.53482468366679*^9, 3.5348247092425375`*^9}, {
   3.53482479257612*^9, 3.534824796499118*^9}, {3.534827033510682*^9, 
   3.534827049592725*^9}, {3.534827299646477*^9, 3.53482733755029*^9}, {
   3.5348278534362993`*^9, 3.5348279604988947`*^9}, {3.5348279972130575`*^9, 
   3.5348280067227645`*^9}, {3.5348280551644163`*^9, 
   3.5348280970777383`*^9}, {3.534828148352249*^9, 3.534828149327873*^9}, {
   3.534828195437228*^9, 3.534828218090105*^9}, {3.5348283137867565`*^9, 
   3.5348284419995375`*^9}, {3.5348284947107315`*^9, 
   3.5348286020798655`*^9}, {3.534828651388127*^9, 3.5348286752141523`*^9}, {
   3.5348288299428005`*^9, 3.534828850278883*^9}, 3.534828914225003*^9, {
   3.534829287895953*^9, 3.5348294512211924`*^9}, {3.5348294881393805`*^9, 
   3.5348295215496235`*^9}, {3.5348295564885597`*^9, 
   3.5348295947834225`*^9}, {3.5348296794701767`*^9, 
   3.5348297363168955`*^9}, {3.5348298014781694`*^9, 
   3.5348298410016885`*^9}, {3.5348299250848656`*^9, 3.534830077742751*^9}, {
   3.5348301112380037`*^9, 3.5348301881337686`*^9}, {3.534830237551544*^9, 
   3.5348303240800314`*^9}, {3.5348303931478024`*^9, 
   3.5348307699636517`*^9}, {3.5348308368686476`*^9, 
   3.5348309164042473`*^9}, {3.5348309508761244`*^9, 
   3.5348309912262487`*^9}, {3.534831022201682*^9, 3.5348310337991543`*^9}, {
   3.5348310768036156`*^9, 3.534831091649*^9}, {3.534831150675496*^9, 
   3.5348313826384516`*^9}, {3.5348314975325413`*^9, 
   3.5348315272393136`*^9}, {3.5348315575701647`*^9, 
   3.5348315960380497`*^9}, {3.5348316532698174`*^9, 
   3.5348316629005404`*^9}, {3.5348317438438187`*^9, 3.534831758989242*^9}, {
   3.5348322399683185`*^9, 3.534832262653199*^9}, {3.534832298696776*^9, 
   3.534832315636427*^9}, {3.5348323644021196`*^9, 3.5348324941425943`*^9}, {
   3.5348325404989815`*^9, 3.534832541261578*^9}, {3.5348374073054867`*^9, 
   3.534837618827847*^9}, {3.5348376608466825`*^9, 3.53483767759931*^9}, {
   3.5348377401737556`*^9, 3.5348378068182187`*^9}, {3.5348378833154325`*^9, 
   3.534838189953371*^9}, {3.5348382259019356`*^9, 3.5348384165011387`*^9}, {
   3.5348385710692663`*^9, 3.5348385865682344`*^9}, {3.534838621121622*^9, 
   3.534838754168017*^9}, {3.534838835841888*^9, 3.5348390574730315`*^9}, {
   3.534839106938813*^9, 3.534839164215086*^9}, 3.534839261219404*^9, {
   3.5348393580211964`*^9, 3.5348394100403023`*^9}, 3.534839506757084*^9, {
   3.534839545873551*^9, 3.534839551508766*^9}, 3.5348396544448376`*^9, {
   3.534839702934495*^9, 3.534839703407055*^9}, {3.5349184160887175`*^9, 
   3.5349184307495556`*^9}, {3.534918518675585*^9, 3.5349185598809414`*^9}, {
   3.534918745581563*^9, 3.5349187582812896`*^9}, {3.53491887682607*^9, 
   3.534918886897646*^9}, {3.5349189612328978`*^9, 3.5349189798429623`*^9}, {
   3.534919108066296*^9, 3.53491914379134*^9}, {3.534919315267147*^9, 
   3.5349193395985394`*^9}, {3.5349193711463437`*^9, 3.53491937178838*^9}, {
   3.5349195696166954`*^9, 3.5349195726058664`*^9}, {3.534921577698551*^9, 
   3.534921581961795*^9}, {3.5349216358038745`*^9, 3.534921641450197*^9}, {
   3.534922201874252*^9, 3.5349224433570642`*^9}, {3.5349224797971478`*^9, 
   3.5349225371024256`*^9}, {3.5349225736375155`*^9, 
   3.5349226668638477`*^9}, {3.5349454958125887`*^9, 
   3.5349455092993603`*^9}, {3.5349745010915956`*^9, 
   3.5349745487503223`*^9}, {3.5349746171862364`*^9, 
   3.5349746551894097`*^9}, {3.534974685994172*^9, 3.5349746866002064`*^9}, {
   3.5349747283855963`*^9, 3.534974737449115*^9}, {3.5349747707470193`*^9, 
   3.5349747791434994`*^9}, {3.534974840954035*^9, 3.5349748556988783`*^9}, {
   3.5349749927247157`*^9, 3.53497500678452*^9}, {3.53497507654751*^9, 
   3.534975088446191*^9}, {3.5349751505497427`*^9, 3.5349752229598846`*^9}, {
   3.5349752646052666`*^9, 3.5349753202204475`*^9}, 3.534975434902007*^9, {
   3.5349779689768896`*^9, 3.534978002951833*^9}, 3.534978047084357*^9, {
   3.534978115883292*^9, 3.5349781323372335`*^9}, {3.534978980973772*^9, 
   3.5349789860490627`*^9}, 3.534979092403146*^9, {3.5349793940523987`*^9, 
   3.5349795282440743`*^9}, {3.5349796092167053`*^9, 
   3.5349796098427415`*^9}, {3.5349796951446204`*^9, 3.5349797568921523`*^9}, 
   3.5349798118982983`*^9, {3.5349798687705517`*^9, 3.5349799717334404`*^9}, {
   3.534980565252388*^9, 3.5349805819873447`*^9}, {3.534980613525149*^9, 
   3.5349806173473673`*^9}, {3.5349807867600574`*^9, 3.5349807889661837`*^9}, 
   3.534981133572894*^9, {3.5349812818253736`*^9, 3.5349813486101933`*^9}, {
   3.534981392918728*^9, 3.5349814587924957`*^9}, {3.5349815126355753`*^9, 
   3.534981577499285*^9}, {3.5349816118052473`*^9, 3.5349816604170275`*^9}, {
   3.5349818324668684`*^9, 3.5349819272652903`*^9}, {3.53498200277761*^9, 
   3.5349820182274933`*^9}, {3.534982089489569*^9, 3.534982105881507*^9}, {
   3.5349828235185533`*^9, 3.534982857681507*^9}, {3.534989862517161*^9, 
   3.534989863518218*^9}, {3.534990008559514*^9, 3.534990009792585*^9}, {
   3.534990092707327*^9, 3.5349900943064184`*^9}, {3.5349942328701305`*^9, 
   3.534994233254153*^9}, {3.535002728110031*^9, 3.535002830669897*^9}, {
   3.5350038405486584`*^9, 3.535003840934681*^9}, {3.5350039625256352`*^9, 
   3.5350040497046213`*^9}, {3.5350041021836233`*^9, 
   3.5350041311842823`*^9}, {3.5350046197512264`*^9, 3.535004621443323*^9}, {
   3.535004830260267*^9, 3.5350048310703135`*^9}, {3.535082651895894*^9, 
   3.5350827779801064`*^9}, {3.535082854226467*^9, 3.535082865499112*^9}, {
   3.535082900049088*^9, 3.5350829085635753`*^9}, {3.535082948884881*^9, 
   3.5350829492659035`*^9}, {3.5350829829218283`*^9, 
   3.5350830321626444`*^9}, {3.5350830742640524`*^9, 3.535083218001274*^9}, {
   3.5350832500431066`*^9, 3.53508340343388*^9}, 3.5350835128541384`*^9, 
   3.535087714418454*^9, {3.5350878370314674`*^9, 3.535087858455693*^9}, {
   3.535088027796378*^9, 3.535088028221403*^9}, 3.535088075997135*^9, {
   3.5350883628695436`*^9, 3.5350883716580462`*^9}, {3.5350884046329327`*^9, 
   3.535088417248654*^9}, {3.5350884702376842`*^9, 3.535088473111849*^9}, {
   3.5350885077498302`*^9, 3.5350887297785296`*^9}, {3.535088782921569*^9, 
   3.535088804825822*^9}, {3.535088848240305*^9, 3.535088895481007*^9}, {
   3.53508905515514*^9, 3.535089061745517*^9}, {3.535091588830058*^9, 
   3.535091594934407*^9}, {3.535093567004203*^9, 3.5350935890204625`*^9}, {
   3.5352421483748703`*^9, 3.5352421593477635`*^9}, {3.535242191543852*^9, 
   3.535242281506276*^9}, {3.535242487532438*^9, 3.5352426324683423`*^9}, {
   3.5352427187648005`*^9, 3.535242758442839*^9}, {3.5352428682782865`*^9, 
   3.5352430091396737`*^9}, {3.535245228663517*^9, 3.5352452471473646`*^9}, {
   3.5352453022353597`*^9, 3.5352453500894365`*^9}, {3.535245395562711*^9, 
   3.5352454563694324`*^9}, {3.535245488112463*^9, 3.5352457127059827`*^9}, {
   3.535247007283373*^9, 3.535247169444465*^9}, 3.5352488776563807`*^9, {
   3.535342811481655*^9, 3.535342884753846*^9}, {3.535342990090871*^9, 
   3.535343108332634*^9}, {3.535343169081109*^9, 3.5353431772415752`*^9}, {
   3.5353432242032614`*^9, 3.5353433262080956`*^9}, {3.535343379991172*^9, 
   3.5353434290979805`*^9}, {3.5353455248628516`*^9, 
   3.5353455506123247`*^9}, {3.535345593934802*^9, 3.5353456375922995`*^9}, {
   3.535345945394905*^9, 3.535345962542886*^9}, {3.535345995562774*^9, 
   3.535346001631121*^9}, {3.535346141808139*^9, 3.5353461551179*^9}, {
   3.5353462001714773`*^9, 3.5353463054644995`*^9}, {3.5353463431886573`*^9, 
   3.5353463915364227`*^9}, 3.535346426722435*^9, {3.535346461907448*^9, 
   3.5353466867983103`*^9}, {3.535346732353916*^9, 3.535346741358431*^9}, {
   3.5353467901562223`*^9, 3.5353468262032843`*^9}, {3.535346890313951*^9, 
   3.5353471029101105`*^9}, {3.535349836476462*^9, 3.535349996646623*^9}, {
   3.535350068855753*^9, 3.5353502253257027`*^9}, {3.5353502728094187`*^9, 
   3.5353503509528885`*^9}, {3.5353503886500444`*^9, 
   3.5353503914202027`*^9}, {3.535350483485469*^9, 3.535350554350522*^9}, {
   3.53535059627892*^9, 3.535350773667066*^9}, {3.5353508120782633`*^9, 
   3.5353508477933064`*^9}, {3.53535090696669*^9, 3.5353509688312287`*^9}, {
   3.535351070885066*^9, 3.53535109228729*^9}, {3.5353511356487703`*^9, 
   3.5353511476274557`*^9}, {3.535351235256468*^9, 3.5353512712875285`*^9}, {
   3.5353522877686677`*^9, 3.5353523418387604`*^9}, {3.535352373490571*^9, 
   3.5353524049303694`*^9}, {3.5353524636127253`*^9, 3.5353527025563927`*^9}, 
   3.5353527484590178`*^9, {3.5353528644896545`*^9, 3.535352869260927*^9}, {
   3.5353529092122126`*^9, 3.5353529325715485`*^9}, {3.535353211179484*^9, 
   3.5353533239839363`*^9}, {3.535353377937022*^9, 3.5353534290209436`*^9}, {
   3.535353479959857*^9, 3.535353556021208*^9}, 3.5353536162766542`*^9, {
   3.5353536867096825`*^9, 3.535353770285463*^9}, {3.535353804304409*^9, 
   3.5353538083276386`*^9}, {3.535353842481592*^9, 3.535353847743893*^9}, {
   3.535353883739952*^9, 3.535354012593322*^9}, {3.5353540506084967`*^9, 
   3.5353540895687246`*^9}, {3.5353541304180613`*^9, 3.535354205320346*^9}, {
   3.5353542358540916`*^9, 3.53535434125012*^9}, {3.5353545225934925`*^9, 
   3.5353545884222574`*^9}, {3.5353546874499216`*^9, 3.535354713070387*^9}, {
   3.535354776021988*^9, 3.5353549434425635`*^9}, {3.535354997561659*^9, 
   3.5353550304535403`*^9}, {3.535355172997693*^9, 3.5353552606267056`*^9}, {
   3.535355341325321*^9, 3.5353553636235967`*^9}, {3.535356042815444*^9, 
   3.535356120403882*^9}, {3.535356164202387*^9, 3.535356296879976*^9}, {
   3.5353563381723375`*^9, 3.535356585466482*^9}, {3.5353571626364946`*^9, 
   3.5353571809055395`*^9}, {3.535394257377192*^9, 3.5353943569188857`*^9}, {
   3.5353943912908516`*^9, 3.535394442633788*^9}, {3.5353944988170013`*^9, 
   3.5353945449396396`*^9}, {3.535394620285949*^9, 3.5353947227118073`*^9}, {
   3.5353947567017517`*^9, 3.535394761357018*^9}, {3.53539482346257*^9, 
   3.535394842270646*^9}, {3.535394881102867*^9, 3.5353949478966875`*^9}, {
   3.5353963787715287`*^9, 3.5353964092952747`*^9}, {3.5353964674726024`*^9, 
   3.535396635835232*^9}, {3.535396694865608*^9, 3.5353967639305587`*^9}, {
   3.535396907095747*^9, 3.5353969155532312`*^9}, 3.535405292276352*^9, {
   3.5354054464321694`*^9, 3.53540547704292*^9}, 3.5354055290058928`*^9, {
   3.535405580200821*^9, 3.5354056091604767`*^9}, {3.5354056582672853`*^9, 
   3.535405719679798*^9}, {3.535405756165885*^9, 3.5354059648508215`*^9}, {
   3.5354080745704904`*^9, 3.5354084027862635`*^9}, {3.535408442453532*^9, 
   3.535408542294243*^9}, {3.5354086205057163`*^9, 3.5354086899176865`*^9}, {
   3.535408733108156*^9, 3.535408762994866*^9}, {3.5354087939346356`*^9, 
   3.535408857898294*^9}, {3.535408918027733*^9, 3.535408933970645*^9}, {
   3.5354089779911633`*^9, 3.5354090809930544`*^9}, {3.53540914508572*^9, 
   3.5354091654378843`*^9}, {3.5354097479061995`*^9, 
   3.5354097492172747`*^9}, {3.535409783783252*^9, 3.5354097867334204`*^9}, {
   3.5354098449397497`*^9, 3.5354098590235553`*^9}, {3.535410240721387*^9, 
   3.5354103136335573`*^9}, {3.535410357543069*^9, 3.5354104552206554`*^9}, {
   3.5354105131759706`*^9, 3.5354106457195516`*^9}, {3.535410706862049*^9, 
   3.535411153329585*^9}, {3.535411205179551*^9, 3.5354112619928007`*^9}, {
   3.535411352128956*^9, 3.5354114064850645`*^9}, {3.535411506681796*^9, 
   3.535411510473013*^9}, {3.535411562769004*^9, 3.535411794616265*^9}, {
   3.5354118613380814`*^9, 3.535411928592928*^9}, {3.535412100758775*^9, 
   3.5354121423601546`*^9}, {3.535412209178976*^9, 3.5354122107910686`*^9}, {
   3.535412339713443*^9, 3.5354124114345446`*^9}, {3.535412492718194*^9, 
   3.5354124974504642`*^9}, {3.5354125571238775`*^9, 
   3.5354125784911003`*^9}, {3.5354126251397676`*^9, 3.535412632083165*^9}, {
   3.535412705100342*^9, 3.5354128579360833`*^9}, {3.535412891747017*^9, 
   3.5354129056568127`*^9}, {3.535412940856826*^9, 3.535413126520445*^9}, {
   3.5354132560078516`*^9, 3.5354132910888577`*^9}, {3.535413471145157*^9, 
   3.5354134914503183`*^9}, {3.535413531043583*^9, 3.5354135477685394`*^9}, 
   3.5354136166594796`*^9, {3.535413688737602*^9, 3.535413704818522*^9}, {
   3.5354137750395384`*^9, 3.5354138848488193`*^9}, {3.535413959066064*^9, 
   3.5354140453529997`*^9}, {3.535414131275914*^9, 3.535414183409896*^9}, {
   3.5354170064643655`*^9, 3.53541707053303*^9}, {3.535417101234786*^9, 
   3.535417132549577*^9}, {3.5354172201445875`*^9, 3.535417222164703*^9}, {
   3.5354173296478505`*^9, 3.535417361512673*^9}, 3.5354174330497646`*^9, {
   3.535417555142748*^9, 3.5354175936369495`*^9}, {3.535417635058319*^9, 
   3.5354176351613245`*^9}, {3.535417802178878*^9, 3.5354178103013425`*^9}, {
   3.535417917566478*^9, 3.5354179891795735`*^9}, 3.5354180686141167`*^9, {
   3.535418107786358*^9, 3.5354181510068293`*^9}, {3.535418249200446*^9, 
   3.5354183512622833`*^9}, {3.535420429086128*^9, 3.535420439351715*^9}, {
   3.535420574455443*^9, 3.5354206092634335`*^9}, {3.535420648622685*^9, 
   3.5354206596313143`*^9}, {3.5354207492704415`*^9, 
   3.5354207543427315`*^9}, {3.5354208788658543`*^9, 3.535420880669957*^9}, {
   3.535420958046383*^9, 3.5354209834918385`*^9}, {3.53542102285509*^9, 
   3.535421028776428*^9}, {3.535421171868613*^9, 3.5354211898246403`*^9}, {
   3.5354212845750594`*^9, 3.5354212854071074`*^9}, {3.5354213441594677`*^9, 
   3.535421345207527*^9}, {3.535421581873064*^9, 3.5354215911515946`*^9}, {
   3.5354219205304337`*^9, 3.535421941561637*^9}, {3.5354219780347233`*^9, 
   3.535422047613703*^9}, {3.53542221698639*^9, 3.5354222260969114`*^9}, {
   3.535422266442219*^9, 3.5354224003908806`*^9}, 3.53542245388694*^9, {
   3.535422519552696*^9, 3.5354225277611656`*^9}, {3.535422627970897*^9, 
   3.5354226280609026`*^9}, {3.5354231045221543`*^9, 3.535423105016183*^9}, {
   3.5354234883731093`*^9, 3.535423516287706*^9}, {3.5354237250386457`*^9, 
   3.5354237273817797`*^9}, {3.53542908905545*^9, 3.5354291969346204`*^9}, {
   3.535429227251354*^9, 3.5354292983214197`*^9}, {3.535429345060093*^9, 
   3.535429347268219*^9}, {3.5354294835310125`*^9, 3.5354294920945024`*^9}, {
   3.5354295487547436`*^9, 3.535429557868265*^9}, {3.535429627269234*^9, 
   3.5354296799332466`*^9}, {3.5354297178584156`*^9, 
   3.5354297204575644`*^9}, {3.535429761417907*^9, 3.535429769194352*^9}, {
   3.535429806993514*^9, 3.535429975420147*^9}, {3.535430006905948*^9, 
   3.5354300438520613`*^9}, {3.5354301065986505`*^9, 
   3.5354301084927588`*^9}, {3.5354302155468817`*^9, 3.535430252946021*^9}, {
   3.535430353129751*^9, 3.5354303979433146`*^9}, {3.5354304960119233`*^9, 
   3.535430496441948*^9}, {3.5354307015696807`*^9, 3.535430871635408*^9}, {
   3.5354309627686205`*^9, 3.535430965755791*^9}, {3.5354310075271807`*^9, 
   3.535431025935233*^9}, 3.535431142817919*^9, {3.5354312246896014`*^9, 
   3.53543122553865*^9}, {3.5354312586615443`*^9, 3.5354312594275885`*^9}, {
   3.5354316574403534`*^9, 3.5354316589834414`*^9}, {3.53543169129729*^9, 
   3.5354316927373724`*^9}, {3.5354317274243565`*^9, 3.53543174026309*^9}, {
   3.535431994242617*^9, 3.5354320014260283`*^9}, 3.5354321177356806`*^9, {
   3.535432341253465*^9, 3.5354323613476143`*^9}, {3.535432457196097*^9, 
   3.5354324891569247`*^9}, {3.5354326711503344`*^9, 3.535432691934523*^9}, {
   3.5354328487274914`*^9, 3.5354328510396233`*^9}, {3.535432962421994*^9, 
   3.5354329993861084`*^9}, {3.535433173601073*^9, 3.535433197047414*^9}, {
   3.5354333155891943`*^9, 3.535433797117736*^9}, 3.5354340660381174`*^9, {
   3.535434350761402*^9, 3.535434352086478*^9}, 3.5354343937498612`*^9, {
   3.5354344803358135`*^9, 3.535434484483051*^9}, {3.5354345324667954`*^9, 
   3.5354345764993143`*^9}, {3.5354346987293053`*^9, 3.535434708483863*^9}, {
   3.535434747568098*^9, 3.5354347486171584`*^9}, {3.5354808824575896`*^9, 
   3.535480883793259*^9}, {3.5354809205709295`*^9, 3.5354809210619917`*^9}, {
   3.5354809639629393`*^9, 3.535480964421998*^9}, 3.535481194443207*^9, {
   3.535481283827557*^9, 3.5354812840300827`*^9}, {3.5354813605067945`*^9, 
   3.535481370443556*^9}, {3.5354816452019463`*^9, 3.535481655448247*^9}, {
   3.5354817558434954`*^9, 3.5354817665733585`*^9}, {3.535481839732648*^9, 
   3.5354818517471743`*^9}, {3.535481893852521*^9, 3.535481915434761*^9}, 
   3.535481957428094*^9, 3.5354819919189734`*^9, {3.535482034173839*^9, 
   3.5354820607177095`*^9}, {3.5354820925737553`*^9, 
   3.5354821179029713`*^9}, {3.535482365555419*^9, 3.535482403604251*^9}, {
   3.5354824346596947`*^9, 3.53548244029241*^9}, {3.535482490795823*^9, 
   3.5354826262135186`*^9}, 3.535482767604473*^9, {3.535482827887628*^9, 
   3.535482835321072*^9}, {3.5354829111782045`*^9, 3.535482923203232*^9}, {
   3.5354829629152746`*^9, 3.5354829713968515`*^9}, {3.535489585417225*^9, 
   3.5354896220933824`*^9}, {3.5354896881842747`*^9, 3.535489697364441*^9}, {
   3.5354897699166536`*^9, 3.535489823112909*^9}, {3.5354900260231752`*^9, 
   3.5354900265427413`*^9}, {3.5354901439876547`*^9, 
   3.5354901631325855`*^9}, {3.5354903115834365`*^9, 
   3.5354903149803677`*^9}, {3.5354903637695637`*^9, 
   3.5354903662428775`*^9}, {3.53549048257915*^9, 3.5354905417846684`*^9}, 
   3.5354906415068316`*^9, 3.535490685209381*^9, 3.5354907529779863`*^9, 
   3.535490786053187*^9, {3.5354908457357655`*^9, 3.5354908508374133`*^9}, {
   3.5354908982874384`*^9, 3.53549098240012*^9}, {3.535491088612607*^9, 
   3.5354910978967857`*^9}, {3.53549113990262*^9, 3.535491172342739*^9}, {
   3.5354912114267025`*^9, 3.53549124125749*^9}, {3.5354913281140194`*^9, 
   3.5354913311529055`*^9}, {3.5354914224715014`*^9, 
   3.5354914264475064`*^9}, {3.535491480964429*^9, 3.535491497774564*^9}, 
   3.53549163634416*^9, {3.535491847682496*^9, 3.535491952352788*^9}, 
   3.5354921876911716`*^9, {3.535492220962397*^9, 3.5354922213374443`*^9}, {
   3.5354922529389577`*^9, 3.5354922798088694`*^9}, {3.5354923294021673`*^9, 
   3.535492439472144*^9}, {3.5354924725773478`*^9, 3.535492472992901*^9}, {
   3.53549445410347*^9, 3.535494513374996*^9}, {3.5354946203805847`*^9, 
   3.535494737833499*^9}, {3.535499593514592*^9, 3.5354996153548656`*^9}, {
   3.53549967027584*^9, 3.5354996757225313`*^9}, {3.5354997294593554`*^9, 
   3.5354998245669317`*^9}, {3.5354998618181624`*^9, 3.53549987904385*^9}, {
   3.5354999164095945`*^9, 3.535499975339078*^9}, {3.535500047893291*^9, 
   3.5355005788957195`*^9}, {3.535500692635663*^9, 3.535500788728865*^9}, {
   3.535500821355008*^9, 3.5355010844439163`*^9}, {3.535501145496669*^9, 
   3.53550115975948*^9}, {3.535501191827052*^9, 3.535501197316249*^9}, {
   3.535501231320567*^9, 3.535501270166*^9}, {3.5355014414192467`*^9, 
   3.5355014451712227`*^9}, 3.5355018849315653`*^9, {3.535501916318551*^9, 
   3.5355020377879753`*^9}, {3.5355022825830603`*^9, 
   3.5355022912601624`*^9}, {3.5355023735161076`*^9, 
   3.5355023917869277`*^9}, {3.535502510371986*^9, 3.535502544066265*^9}, {
   3.535502728378169*^9, 3.5355028070256567`*^9}, {3.5355028767790136`*^9, 
   3.5355028772410727`*^9}, {3.535502989275299*^9, 3.5355030014453444`*^9}, {
   3.5355030369153485`*^9, 3.535503040739334*^9}, {3.535503086388631*^9, 
   3.5355030872547407`*^9}, {3.5355031514648943`*^9, 
   3.5355031638924723`*^9}, {3.53550325569263*^9, 3.5355032572878323`*^9}, {
   3.5355032922572727`*^9, 3.535503292602317*^9}, {3.5355081100435543`*^9, 
   3.53550811025158*^9}, {3.5355088694964924`*^9, 3.5355088698505373`*^9}, {
   3.5355091114017105`*^9, 3.5355091138735247`*^9}, {3.5355092108548393`*^9, 
   3.535509245232705*^9}, {3.5355092947649946`*^9, 3.5355092966162295`*^9}, 
   3.535509378689152*^9, {3.535511061535346*^9, 3.5355110727922754`*^9}, {
   3.5355112161934853`*^9, 3.5355112278609667`*^9}, {3.5355119357198534`*^9, 
   3.5355119547642717`*^9}, {3.5355120242840996`*^9, 
   3.5355120256922784`*^9}, {3.5355120954321337`*^9, 3.535512097568906*^9}, {
   3.535512419228251*^9, 3.535512422417656*^9}, {3.535512486224758*^9, 
   3.535512487202883*^9}, {3.5355145064257917`*^9, 3.5355145300457907`*^9}, {
   3.535514590235434*^9, 3.5355146249548426`*^9}, {3.5355146661790776`*^9, 
   3.535514695768335*^9}, {3.5355147352893534`*^9, 3.5355149489854894`*^9}, 
   3.5355150365161047`*^9, 3.5355150806267056`*^9, {3.53551514066883*^9, 
   3.535515147454692*^9}, {3.5355152060561333`*^9, 3.535515237991188*^9}, {
   3.5355152742302904`*^9, 3.535515277228671*^9}, 3.5355153152574997`*^9, {
   3.535515345525344*^9, 3.535515426712653*^9}, {3.535515467235299*^9, 
   3.5355154678638783`*^9}, {3.5355154981197205`*^9, 3.535515502614291*^9}, 
   3.535515788078541*^9, {3.5355158574718523`*^9, 3.535515904536329*^9}, {
   3.535516040528598*^9, 3.535516142653566*^9}, {3.5355162204954505`*^9, 
   3.5355162589353323`*^9}, {3.5355163160990906`*^9, 3.535516361560364*^9}, {
   3.535516451627801*^9, 3.5355164830242877`*^9}, {3.5355165508123956`*^9, 
   3.535516632296743*^9}, {3.5355166747961397`*^9, 3.535516707585803*^9}, {
   3.535516740747014*^9, 3.5355167446490097`*^9}, {3.535516883619157*^9, 
   3.535516887216614*^9}, {3.5355171767388783`*^9, 3.5355172820047455`*^9}, 
   3.535517320388119*^9, {3.535517364604734*^9, 3.5355174093934216`*^9}, {
   3.5355174935856123`*^9, 3.5355175997705965`*^9}, {3.535517644523279*^9, 
   3.535517648697809*^9}, {3.535517691156701*^9, 3.53551774485902*^9}, {
   3.5355177756299276`*^9, 3.535517805450714*^9}, {3.5355178538218565`*^9, 
   3.5355178739729156`*^9}, {3.5355179576360397`*^9, 
   3.5355179731060038`*^9}, {3.5355183089886556`*^9, 3.535518327788043*^9}, 
   3.535525768089341*^9, 3.5355299465699406`*^9, {3.535530819989851*^9, 
   3.535530896323044*^9}, {3.5355310685449133`*^9, 3.5355311207735453`*^9}, {
   3.5355312321576896`*^9, 3.535531265653943*^9}, 3.535531308216848*^9, {
   3.535531420427597*^9, 3.5355314291587057`*^9}, {3.535531462218404*^9, 
   3.535531475290064*^9}, {3.535531512737319*^9, 3.535531540410833*^9}, {
   3.5355315973115587`*^9, 3.5355315978631287`*^9}, {3.5355316320819736`*^9, 
   3.5355316326100407`*^9}, 3.535531702245883*^9, {3.535531742233461*^9, 
   3.5355318017510185`*^9}, {3.5355319789130154`*^9, 
   3.5355319789895253`*^9}, {3.535532056100317*^9, 3.535532056185828*^9}, {
   3.535532110685748*^9, 3.5355321108152647`*^9}, 3.5355321584713163`*^9, 
   3.535532201770815*^9, {3.535532305822528*^9, 3.535532306494613*^9}, {
   3.5355323563514442`*^9, 3.535532356434455*^9}, {3.535532494084434*^9, 
   3.5355325437477407`*^9}, {3.5355325797758155`*^9, 
   3.5355326065212116`*^9}, {3.535532657168643*^9, 3.535532657527689*^9}, {
   3.5355707852619696`*^9, 3.5355708514997587`*^9}, {3.535570884078622*^9, 
   3.535570903906756*^9}, {3.535570946441189*^9, 3.535570953780608*^9}, {
   3.5355710707763004`*^9, 3.5355712229950066`*^9}, {3.5355712758250284`*^9, 
   3.53557128337046*^9}, {3.535571445134712*^9, 3.535571445595739*^9}, {
   3.5355717428647413`*^9, 3.535571759465691*^9}, 3.535571889108106*^9, {
   3.53557192378609*^9, 3.535571930492473*^9}, {3.5355719622842913`*^9, 
   3.5355719639893894`*^9}, {3.535572516536993*^9, 3.5355726445063124`*^9}, {
   3.5355727147163286`*^9, 3.5355727226927843`*^9}, {3.5355727726526423`*^9, 
   3.535572812924946*^9}, {3.535572960581391*^9, 3.5355729609414115`*^9}, {
   3.535573237771245*^9, 3.5355732583694234`*^9}, {3.535573349709648*^9, 
   3.5355733580131226`*^9}, {3.5355733883648586`*^9, 3.535573388717879*^9}, {
   3.535573425468981*^9, 3.535573432567387*^9}, {3.5355734818772078`*^9, 
   3.53557348262825*^9}, {3.535573781858365*^9, 3.535573782651411*^9}, {
   3.53558365208391*^9, 3.535583652570938*^9}, {3.5355838019764833`*^9, 
   3.5355838080328293`*^9}, {3.535583970647131*^9, 3.535584128877181*^9}, {
   3.5355843042022085`*^9, 3.5355843059063063`*^9}, {3.535584361426482*^9, 
   3.5355844127164154`*^9}, 3.5355845603088574`*^9, {3.535584699155799*^9, 
   3.535584863556202*^9}, {3.5355851156766224`*^9, 3.5355851580610466`*^9}, {
   3.535585224541849*^9, 3.535585229933158*^9}, {3.5355853178601866`*^9, 
   3.535585366625976*^9}, 3.535585424332277*^9, {3.535585716595993*^9, 
   3.535585763208659*^9}, {3.5355858772201805`*^9, 3.535585910188066*^9}, {
   3.5355859828932247`*^9, 3.5355859857443876`*^9}, {3.535590110085286*^9, 
   3.5355901303674464`*^9}, {3.535592039857663*^9, 3.535592083352151*^9}, {
   3.5355921247905207`*^9, 3.5355921994707923`*^9}, {3.535592335875594*^9, 
   3.5355923726997004`*^9}, {3.535592428373885*^9, 3.535592431892086*^9}, {
   3.53559268267743*^9, 3.53559284090148*^9}, {3.535592879906711*^9, 
   3.535592957102126*^9}, {3.53559302989329*^9, 3.5355930670924177`*^9}, {
   3.5355931043325477`*^9, 3.535593124387695*^9}, {3.5355932817816973`*^9, 
   3.535593286412962*^9}, {3.535593372709898*^9, 3.5355933825574613`*^9}, {
   3.5355937067320027`*^9, 3.535593831935164*^9}, {3.535593884392164*^9, 
   3.5355939053203616`*^9}, {3.5355939712021294`*^9, 
   3.5355939885231204`*^9}, {3.535594063152389*^9, 3.5355940640074377`*^9}, {
   3.535594103578701*^9, 3.5355942194653296`*^9}, {3.535594280089797*^9, 
   3.5355943075193663`*^9}, {3.535594343314413*^9, 3.535594344529483*^9}, {
   3.5355943774813676`*^9, 3.535594484490488*^9}, {3.5355945243087654`*^9, 
   3.535594544934945*^9}, {3.5355946045113525`*^9, 3.5355946070865*^9}, {
   3.535594644776656*^9, 3.5355946588234596`*^9}, {3.535594764990532*^9, 
   3.535594769315779*^9}, {3.5355948725256824`*^9, 3.5355949009163065`*^9}, {
   3.5355949609757414`*^9, 3.5355949827189856`*^9}, {3.5355950149578295`*^9, 
   3.5355950757863083`*^9}, 3.5355951063680573`*^9, {3.5355952127061396`*^9, 
   3.535595374839413*^9}, {3.535595440838188*^9, 3.535595441597232*^9}, {
   3.53559638830338*^9, 3.5355963883833847`*^9}, 3.535596716147132*^9, {
   3.5355994210018406`*^9, 3.535599423298972*^9}, {3.5355995895274796`*^9, 
   3.5355995923956437`*^9}, {3.5356003868852277`*^9, 3.535600387337285*^9}, {
   3.5356045736518793`*^9, 3.5356047311863832`*^9}, {3.535604800443178*^9, 
   3.535604862409547*^9}, {3.535604931583331*^9, 3.535605176055375*^9}, 
   3.53560523894186*^9, {3.5356052935913*^9, 3.535605330735017*^9}, {
   3.5356053775574627`*^9, 3.535605591847674*^9}, {3.535605626698599*^9, 
   3.5356059028291636`*^9}, {3.535605948649482*^9, 3.5356059502296824`*^9}, {
   3.535606015942527*^9, 3.5356060370367055`*^9}, {3.5356060757826257`*^9, 
   3.5356061071391077`*^9}, {3.535606218447742*^9, 3.5356062264037523`*^9}, {
   3.5356063815154486`*^9, 3.5356063818089857`*^9}, {3.5356067726891212`*^9, 
   3.535606807713069*^9}, {3.5356069153307347`*^9, 3.53560728069263*^9}, 
   3.5356073329507656`*^9, {3.535607455308303*^9, 3.535607481221594*^9}, 
   3.535607586843506*^9, {3.5356122216165476`*^9, 3.5356122351537666`*^9}, {
   3.535612862321407*^9, 3.535612864689207*^9}, 3.53561700358578*^9, {
   3.535617330696318*^9, 3.5356173942388873`*^9}, {3.5356174307990294`*^9, 
   3.535617564424498*^9}, {3.535617604698112*^9, 3.535617605013152*^9}, {
   3.5356176479176*^9, 3.5356177350441637`*^9}, {3.5356178033653393`*^9, 
   3.535618161649336*^9}, {3.5356182004452624`*^9, 3.5356182095969243`*^9}, {
   3.5356182718028235`*^9, 3.535618315975433*^9}, {3.5356184473251123`*^9, 
   3.535618448433253*^9}, {3.5356185299831085`*^9, 3.535618551164798*^9}, {
   3.5356186235064845`*^9, 3.535618689773899*^9}, {3.5356187297904806`*^9, 
   3.535618733537956*^9}, {3.5356187742601275`*^9, 3.5356188142287025`*^9}, {
   3.535618845274145*^9, 3.53561884633628*^9}, 3.5356188822378387`*^9, {
   3.5356189206052113`*^9, 3.535618921035266*^9}, {3.5356189637666917`*^9, 
   3.5356189647948227`*^9}, {3.5356189973664584`*^9, 3.535619113186166*^9}, {
   3.5356191528677044`*^9, 3.535619211365633*^9}, {3.535619275714304*^9, 
   3.5356192850874944`*^9}, {3.535619327799918*^9, 3.535619354575818*^9}, 
   3.535619561638612*^9, {3.535619711546648*^9, 3.535619730966614*^9}, {
   3.535619809345067*^9, 3.535619870577842*^9}, {3.5356199091502404`*^9, 
   3.5356199520691905`*^9}, {3.535619988513318*^9, 3.535620153525272*^9}, {
   3.5356202893170156`*^9, 3.5356203554819174`*^9}, {3.5356204040045786`*^9, 
   3.5356204573148484`*^9}, {3.5356204914916887`*^9, 3.535620940308181*^9}, {
   3.5356210590177546`*^9, 3.5356210794108443`*^9}, {3.5356211456867604`*^9, 
   3.5356211460898113`*^9}, {3.5356212933350096`*^9, 
   3.5356212956182995`*^9}, {3.53562141760579*^9, 3.535621437554323*^9}, {
   3.5356215947927895`*^9, 3.535621594917306*^9}, {3.535621890337819*^9, 
   3.535621978868061*^9}, {3.5356220371704645`*^9, 3.535622063287781*^9}, {
   3.5356221145427895`*^9, 3.5356221855123014`*^9}, {3.535622216217701*^9, 
   3.5356222906271496`*^9}, {3.535622327950889*^9, 3.5356223286154737`*^9}, {
   3.5356223631263556`*^9, 3.5356224224803925`*^9}, {3.535622453464327*^9, 
   3.535622607978448*^9}, {3.5356226460017767`*^9, 3.535622762456064*^9}, 
   3.535622855882928*^9, 3.5356228915429564`*^9, {3.535622989396882*^9, 
   3.5356230436067657`*^9}, {3.535623085370569*^9, 3.5356230858546305`*^9}, 
   3.53562319302524*^9, 3.5356233001493425`*^9, 3.5356233660802145`*^9, {
   3.5356234504199247`*^9, 3.535623454197404*^9}, {3.5356237305975027`*^9, 
   3.5356237689253693`*^9}, {3.535623855995926*^9, 3.535623889133134*^9}, {
   3.5356239813658457`*^9, 3.5356239841331973`*^9}, {3.5356240397557607`*^9, 
   3.535624041545988*^9}, {3.5356240840848894`*^9, 3.5356240898006153`*^9}, {
   3.535624246295988*^9, 3.5356242927313843`*^9}, {3.535624414192808*^9, 
   3.535624417175687*^9}, 3.535624574946721*^9, {3.535624762613552*^9, 
   3.5356248583502088`*^9}, {3.535624959976614*^9, 3.5356250333244276`*^9}, {
   3.535625087804346*^9, 3.5356250950827703`*^9}, {3.535625131525898*^9, 
   3.535625197467271*^9}, {3.5356252283451924`*^9, 3.535625234382959*^9}, {
   3.5356253787112865`*^9, 3.5356254020612516`*^9}, {3.535625446180854*^9, 
   3.535625464451174*^9}, {3.53562565010975*^9, 3.5356256502447667`*^9}, {
   3.5356256939693193`*^9, 3.53562578800576*^9}, {3.5356258216180286`*^9, 
   3.5356258334020247`*^9}, {3.5356258678934045`*^9, 
   3.5356261232703333`*^9}, {3.535626244258197*^9, 3.535626252205206*^9}, {
   3.5356264621888704`*^9, 3.535626467472041*^9}, 3.535626524529787*^9, {
   3.535654909615235*^9, 3.5356549100802937`*^9}, {3.5356550506221404`*^9, 
   3.5356551943343897`*^9}, {3.535655225138801*^9, 3.5356553122868676`*^9}, {
   3.535655352979535*^9, 3.5356553551038046`*^9}, 3.5356638069080477`*^9, {
   3.5356638770169506`*^9, 3.535663889742566*^9}, 3.5356639326475143`*^9, {
   3.5356640258983555`*^9, 3.5356640359616337`*^9}, {3.535664989691742*^9, 
   3.535664999329966*^9}, {3.5356657436659846`*^9, 3.5356657472854443`*^9}, {
   3.535666084092213*^9, 3.535666128773887*^9}, {3.5356661729074917`*^9, 
   3.535666222440281*^9}, {3.5356662605156164`*^9, 3.5356663365852757`*^9}, {
   3.5356666016569357`*^9, 3.535666602234009*^9}, {3.535666958482247*^9, 
   3.5356669671853523`*^9}, {3.5356671882829275`*^9, 
   3.5356671904096975`*^9}, {3.535669135037634*^9, 3.5356691355932045`*^9}, {
   3.535670500901577*^9, 3.5356705921911693`*^9}, {3.5356706511781597`*^9, 
   3.535670689258995*^9}, {3.5356707444900084`*^9, 3.535670751210862*^9}, {
   3.535670781732238*^9, 3.5356708129126973`*^9}, {3.535670882576043*^9, 
   3.535670986959298*^9}, {3.535671026536824*^9, 3.535671035701988*^9}, {
   3.5356710777498274`*^9, 3.5356711007212443`*^9}, 3.5356711458964806`*^9, {
   3.5356711813879876`*^9, 3.5356712106402025`*^9}, {3.535671242424238*^9, 
   3.535671267094371*^9}, {3.535671321519782*^9, 3.5356713339413595`*^9}, {
   3.535671377108841*^9, 3.5356713780524607`*^9}, {3.53567142119944*^9, 
   3.5356714323238525`*^9}, 3.535671464221903*^9, {3.535671497853674*^9, 
   3.5356715149378433`*^9}, {3.5356715734057674`*^9, 3.5356715962986746`*^9}, 
   3.5356716314921436`*^9, {3.535671665846006*^9, 3.535671720227912*^9}, {
   3.535677775133787*^9, 3.5356777990683265`*^9}, {3.535679551509358*^9, 
   3.5356795906883335`*^9}, 3.535679666525463*^9, {3.535679711985736*^9, 
   3.535679721852989*^9}, 3.535679763056721*^9, {3.5356798008090153`*^9, 
   3.535679806774273*^9}, {3.5356800275203037`*^9, 3.5356800701807213`*^9}, {
   3.5356802356967387`*^9, 3.535680242694127*^9}, 3.5356802830062466`*^9, {
   3.535680324803054*^9, 3.5356803352073755`*^9}, {3.535680383853052*^9, 
   3.5356803922011127`*^9}, {3.535680486225552*^9, 3.5356805160858436`*^9}, {
   3.535680546883254*^9, 3.535680550872261*^9}, {3.5356806049226246`*^9, 
   3.5356806140637856`*^9}, {3.535680648293132*^9, 3.535680656080621*^9}, {
   3.535680687426101*^9, 3.53568070300558*^9}, {3.535683267990291*^9, 
   3.5356832890094604`*^9}, 3.53568331932981*^9, {3.535683362395779*^9, 
   3.5356835343186107`*^9}, {3.5356835736376038`*^9, 3.535683576743998*^9}, {
   3.5356836983324375`*^9, 3.535683698866006*^9}, {3.5356837301534786`*^9, 
   3.5356837307115493`*^9}, {3.53568378954152*^9, 3.5356838118778563`*^9}, {
   3.5356838473548613`*^9, 3.5356839797541733`*^9}, {3.535684040788924*^9, 
   3.53568409556738*^9}, 3.5356841312604127`*^9, {3.535684179806577*^9, 
   3.535684233512397*^9}, {3.535684265185919*^9, 3.535684265296933*^9}, {
   3.5356843084084077`*^9, 3.5356843431448183`*^9}, {3.5356843766385717`*^9, 
   3.535684403656002*^9}, {3.535684505320412*^9, 3.5356845115847073`*^9}, 
   3.5356875102374883`*^9, {3.5356881109627705`*^9, 3.5356882254608097`*^9}, {
   3.5356883102155724`*^9, 3.5356884304898453`*^9}, {3.5356885067210255`*^9, 
   3.535688517472391*^9}, {3.5356885804648895`*^9, 3.5356885928119574`*^9}, {
   3.535688626781771*^9, 3.5356887395005846`*^9}, {3.53568883986933*^9, 
   3.5356889840826426`*^9}, {3.5356890250058393`*^9, 3.535689369314561*^9}, {
   3.535689419732463*^9, 3.535689451111948*^9}, {3.535689518166463*^9, 
   3.53568953562718*^9}, {3.5356896673424053`*^9, 3.5356896827708645`*^9}, {
   3.535689718596414*^9, 3.5356897411737814`*^9}, {3.5356899013071156`*^9, 
   3.5356899369506416`*^9}, {3.5356955669830647`*^9, 
   3.5356955766022863`*^9}, {3.535695632063329*^9, 3.5356956324523783`*^9}, {
   3.535695680527983*^9, 3.535695742644371*^9}, {3.535696306335451*^9, 
   3.535696308589737*^9}, {3.535696343396157*^9, 3.535696360581339*^9}, {
   3.5356964125729413`*^9, 3.535696419500321*^9}, {3.5356964575281496`*^9, 
   3.535696495858517*^9}, {3.535696683274316*^9, 3.5356966869857874`*^9}, {
   3.5356967179157147`*^9, 3.5356967197094426`*^9}, {3.5356967657457886`*^9, 
   3.535696776578664*^9}, {3.5356969439954233`*^9, 3.5356970415058055`*^9}, {
   3.535697095437654*^9, 3.5356970958052006`*^9}, 3.5356971491559753`*^9, {
   3.5356983948201547`*^9, 3.535698399855294*^9}, {3.535698431055756*^9, 
   3.5356984597293973`*^9}, {3.535698640112303*^9, 3.5356986835023127`*^9}, {
   3.5356991341955433`*^9, 3.5356991915428257`*^9}, {3.53569948539464*^9, 
   3.5356994860432224`*^9}, {3.5356995360195684`*^9, 
   3.5356995473145027`*^9}, {3.5356996468231387`*^9, 3.535699763400442*^9}, {
   3.535699932359397*^9, 3.5356999489230003`*^9}, {3.5357001013508563`*^9, 
   3.535700144178295*^9}, {3.5357002648431177`*^9, 3.535700318751463*^9}, {
   3.5357003676356707`*^9, 3.5357003807503357`*^9}, {3.5357004758154078`*^9, 
   3.5357006194366455`*^9}, {3.535700661147442*^9, 3.535700798365866*^9}, {
   3.535700835261551*^9, 3.5357010011546173`*^9}, {3.53570105638163*^9, 
   3.535701093320821*^9}, {3.53570113394998*^9, 3.535701242647783*^9}, {
   3.535701354577496*^9, 3.5357015041959953`*^9}, {3.535701640061248*^9, 
   3.535701850161927*^9}, {3.5357018847948256`*^9, 3.5357019596558313`*^9}, {
   3.535702095249049*^9, 3.5357020960676537`*^9}, {3.5357021705321093`*^9, 
   3.5357022437874117`*^9}, {3.5357024005373163`*^9, 3.535702402315542*^9}, {
   3.5357024474062676`*^9, 3.53570244773831*^9}, {3.5357025382533035`*^9, 
   3.5357025565361257`*^9}, {3.5357707488399487`*^9, 
   3.5357708061252227`*^9}, {3.5357708625188837`*^9, 3.535771056720044*^9}, {
   3.5357711078085318`*^9, 3.5357712179940233`*^9}, {3.535771269015502*^9, 
   3.535771272844488*^9}, {3.535771315506406*^9, 3.5357713588019037`*^9}, {
   3.535772166566477*^9, 3.5357721880622063`*^9}, {3.5357722271346684`*^9, 
   3.5357723830779705`*^9}, {3.535772531923871*^9, 3.535772570281242*^9}, {
   3.5357726473460283`*^9, 3.5357727239997616`*^9}, {3.535772846387803*^9, 
   3.535772886046839*^9}, {3.5357729350585628`*^9, 3.5357729353210964`*^9}, {
   3.5357730484229584`*^9, 3.5357730512778206`*^9}, {3.5357731004335628`*^9, 
   3.535773100611085*^9}, {3.535773159639081*^9, 3.5357731826500025`*^9}, {
   3.535773255281726*^9, 3.535773289090519*^9}, {3.5357733500607615`*^9, 
   3.5357733555759616`*^9}, {3.5357733861713467`*^9, 
   3.5357734520217085`*^9}, {3.5357734866256027`*^9, 
   3.5357735595298605`*^9}, {3.5357736495477915`*^9, 3.535773651313016*^9}, 
   3.5357737276247063`*^9, {3.535773831331375*^9, 3.5357739113090305`*^9}, 
   3.5357739829946337`*^9, {3.5357740200353374`*^9, 3.5357740373970423`*^9}, {
   3.5357742914107976`*^9, 3.535774304077406*^9}, {3.535774361605711*^9, 
   3.5357744508475437`*^9}, {3.5357745216540346`*^9, 3.535774528835447*^9}, {
   3.535774564352457*^9, 3.535774607276908*^9}, {3.535774686666989*^9, 
   3.5357747199367137`*^9}, {3.535774758140565*^9, 3.535774820566992*^9}, {
   3.535774915033988*^9, 3.5357749763082685`*^9}, {3.535775025678538*^9, 
   3.5357750875868993`*^9}, 3.5357751908750153`*^9, {3.535780139626927*^9, 
   3.5357801646145997`*^9}, {3.535780212150136*^9, 3.535780268934847*^9}, {
   3.535780314770667*^9, 3.535780342465184*^9}, {3.535780395919972*^9, 
   3.535780480299687*^9}, {3.5357805500630455`*^9, 3.5357805780941052`*^9}, {
   3.535780668434577*^9, 3.5357806751714325`*^9}, {3.5357809387339*^9, 
   3.535781209699309*^9}, {3.535781242268444*^9, 3.5357812484197254`*^9}, {
   3.5357812824365454`*^9, 3.5357812867535934`*^9}, 3.535781374250204*^9, {
   3.5357814573642583`*^9, 3.5357814658733387`*^9}, {3.5357823516143136`*^9, 
   3.5357823522458935`*^9}, {3.535782402740306*^9, 3.5357824601000896`*^9}, {
   3.535782540214263*^9, 3.5357825408608446`*^9}, {3.535782581501506*^9, 
   3.5357826092435284`*^9}, {3.535782755579611*^9, 3.5357827898434615`*^9}, {
   3.5357828800689187`*^9, 3.535782907140356*^9}, {3.535783022102955*^9, 
   3.535783032563283*^9}, {3.535783283781684*^9, 3.5357833026330776`*^9}, {
   3.5357833670662594`*^9, 3.5357833893790927`*^9}, {3.535783507109043*^9, 
   3.5357835263084807`*^9}, {3.535783628101907*^9, 3.5357836286254735`*^9}, {
   3.5357840996852903`*^9, 3.535784172492036*^9}, {3.5357843640248575`*^9, 
   3.535784505150278*^9}, {3.5357845609148593`*^9, 3.535784643404834*^9}, {
   3.535784743916097*^9, 3.535784798849573*^9}, 3.5357849129415607`*^9, {
   3.535784947538954*^9, 3.535784964532612*^9}, {3.5357854282354946`*^9, 
   3.5357856603799734`*^9}, {3.535785830448069*^9, 3.53578588022289*^9}, {
   3.535786009469802*^9, 3.535786089320442*^9}, {3.535786152398952*^9, 
   3.535786165125568*^9}, {3.535788740121051*^9, 3.535788742917406*^9}, {
   3.5357887818488493`*^9, 3.535788878291096*^9}, {3.5357889468778057`*^9, 
   3.5357889516264086`*^9}, 3.5357889994849863`*^9, {3.535789479034381*^9, 
   3.535789491021903*^9}, {3.5357896729675074`*^9, 3.5357897048190517`*^9}, 
   3.53578973599201*^9, {3.5357898473446503`*^9, 3.535789921230033*^9}, {
   3.5357903671686597`*^9, 3.5357905422233887`*^9}, {3.535790596713808*^9, 
   3.5357906028650894`*^9}, {3.5357907234429007`*^9, 3.5357907380132513`*^9}, 
   3.5357915226603885`*^9, 3.5357915793295846`*^9, {3.5357916461545706`*^9, 
   3.5357916462925878`*^9}, 3.5357917070618043`*^9, 3.5357917565250854`*^9, {
   3.53579179420287*^9, 3.535791795630051*^9}, {3.535791909438003*^9, 
   3.535791932009869*^9}, {3.5357919816161685`*^9, 3.5357920076439734`*^9}, {
   3.5357920586994567`*^9, 3.5357921617835464`*^9}, {3.535833219367198*^9, 
   3.535833386301396*^9}, {3.5358334396461697`*^9, 3.5358335958135004`*^9}, {
   3.5358336830145736`*^9, 3.5358336861744747`*^9}, {3.5358337435882654`*^9, 
   3.535833745143963*^9}, {3.535833792470473*^9, 3.535833891713575*^9}, {
   3.5358339402502384`*^9, 3.5358340623482428`*^9}, {3.5358341391744986`*^9, 
   3.535834141205756*^9}, {3.5358342464961267`*^9, 3.5358342873448133`*^9}, {
   3.5358344204757195`*^9, 3.535834421711376*^9}, 3.5358344947866554`*^9, 
   3.5358347374784737`*^9, {3.535834782308666*^9, 3.535834789400567*^9}, {
   3.535834898440913*^9, 3.5358349291403112`*^9}, {3.535835047144796*^9, 
   3.5358351432074947`*^9}, {3.5358352054649*^9, 3.535835371191945*^9}, {
   3.535835469859974*^9, 3.5358354944891014`*^9}, {3.535835666364427*^9, 
   3.5358357549371743`*^9}, {3.535835810247698*^9, 3.535835896841694*^9}, {
   3.5358360193182464`*^9, 3.5358360202138605`*^9}, {3.5358360601009254`*^9, 
   3.5358360961089973`*^9}, {3.535836159459042*^9, 3.5358361879991665`*^9}, {
   3.5358520099798026`*^9, 3.535852010462364*^9}, {3.5358522113998795`*^9, 
   3.5358522119799533`*^9}, {3.535852276785183*^9, 3.5358522770537167`*^9}, {
   3.535852807044017*^9, 3.5358528274591093`*^9}, {3.5358529136940594`*^9, 
   3.5358529174925423`*^9}, {3.53585300473462*^9, 3.5358530339048243`*^9}, 
   3.535853091612152*^9, {3.5358532683145905`*^9, 3.535853289270752*^9}, {
   3.5358533998727965`*^9, 3.5358534839164686`*^9}, {3.535853588956807*^9, 
   3.5358536070921097`*^9}, {3.53585365961878*^9, 3.5358536644918985`*^9}, {
   3.5358566653634615`*^9, 3.535856689367009*^9}, {3.5358567228492613`*^9, 
   3.5358567515364037`*^9}, {3.5358568095512705`*^9, 
   3.5358570874990654`*^9}, {3.5358571285827827`*^9, 3.535857149413928*^9}, {
   3.5358572080388727`*^9, 3.5358575115119085`*^9}, {3.5358586191875653`*^9, 
   3.5358586373103666`*^9}, {3.5358587646835413`*^9, 3.535858782254772*^9}, {
   3.535858848474681*^9, 3.535858850261908*^9}, {3.5358592013579917`*^9, 
   3.535859207544777*^9}, {3.535859251678382*^9, 3.5358592531205645`*^9}, {
   3.5358593912386036`*^9, 3.5358593923687468`*^9}, {3.5358599020589695`*^9, 
   3.535860023126843*^9}, {3.5358602125468965`*^9, 3.535860284822574*^9}, {
   3.5358603326671495`*^9, 3.535860338289364*^9}, {3.5358604714227695`*^9, 
   3.5358604828712234`*^9}, {3.535860814746866*^9, 3.535860816070034*^9}, {
   3.5358616822540255`*^9, 3.535861684839854*^9}, {3.5358629756247625`*^9, 
   3.535863045002572*^9}, {3.5358630809636393`*^9, 3.5358631487877517`*^9}, {
   3.5358632032966733`*^9, 3.535863463927769*^9}, {3.5358635217291093`*^9, 
   3.5358635700122404`*^9}, {3.5358636306529408`*^9, 3.535863635049499*^9}, {
   3.535863692198256*^9, 3.5358637636218257`*^9}, {3.535863855374477*^9, 
   3.5358638562020817`*^9}, {3.535863911065048*^9, 3.535863918102442*^9}, {
   3.535863957219409*^9, 3.5358640079748545`*^9}, {3.5358641221893578`*^9, 
   3.535864145923872*^9}, {3.5358641951266193`*^9, 3.535864214634097*^9}, {
   3.535864322427785*^9, 3.535864336210535*^9}, 3.535864401971386*^9, 
   3.5358644549996195`*^9, {3.535866855434436*^9, 3.535866904917219*^9}, {
   3.5358669522162256`*^9, 3.5358669760597534`*^9}, {3.5358670137475395`*^9, 
   3.5358670495965915`*^9}, 3.535867222576557*^9, {3.535867262809166*^9, 
   3.53586730347433*^9}, {3.5358673551043863`*^9, 3.535867403418021*^9}, {
   3.5358699629540405`*^9, 3.535870039763294*^9}, {3.535870088656003*^9, 
   3.5358701084355145`*^9}, 3.5358701515279865`*^9, {3.5358704061323175`*^9, 
   3.535870422827937*^9}, {3.5358704695633717`*^9, 3.5358704741594553`*^9}, {
   3.535870545162972*^9, 3.5358705543466377`*^9}, {3.5358706595810013`*^9, 
   3.5358706757620564`*^9}, 3.53587073462053*^9, 3.5358708381186724`*^9, {
   3.535870883448929*^9, 3.5358708914629464`*^9}, {3.535870956790242*^9, 
   3.535870962213931*^9}, 3.5358710441238317`*^9, {3.5358711033168488`*^9, 
   3.53587110537811*^9}, {3.535928708083225*^9, 3.53592870820224*^9}, {
   3.535928793593583*^9, 3.5359287954188147`*^9}, {3.5359288255381393`*^9, 
   3.5359289293688245`*^9}, {3.5359289846128397`*^9, 
   3.5359289867311087`*^9}, {3.535929075287854*^9, 3.5359291112059145`*^9}, {
   3.5359291911685686`*^9, 3.535929203657155*^9}, {3.535929819973917*^9, 
   3.535929846916338*^9}, {3.535929949028305*^9, 3.53593014074615*^9}, {
   3.535930177670839*^9, 3.5359301785269475`*^9}, {3.535930212848806*^9, 
   3.5359302278272076`*^9}, {3.5359303839890375`*^9, 
   3.5359304190294876`*^9}, {3.5359305119917917`*^9, 
   3.5359305310682144`*^9}, {3.5359305930015793`*^9, 
   3.5359306005845423`*^9}, {3.5359306785649443`*^9, 
   3.5359307219884586`*^9}, {3.535930804144891*^9, 3.5359308232693195`*^9}, {
   3.5359316240270023`*^9, 3.5359316247110896`*^9}, {3.5359335468251667`*^9, 
   3.535933677550267*^9}, {3.5359338484979744`*^9, 3.5359338493960886`*^9}, 
   3.535934232936792*^9, {3.5359342971834507`*^9, 3.5359343260126114`*^9}, {
   3.53593437246451*^9, 3.535934407774994*^9}, {3.5359344601846485`*^9, 
   3.5359344743184433`*^9}, {3.5359345070506*^9, 3.5359345154621687`*^9}, 
   3.5359345703146334`*^9, {3.5359346328920803`*^9, 3.5359347649838533`*^9}, {
   3.5359348034672403`*^9, 3.5359348117697945`*^9}, {3.535934872615521*^9, 
   3.5359349024473095`*^9}, {3.535934941315745*^9, 3.535935020831842*^9}, {
   3.5359351074518414`*^9, 3.5359351077273765`*^9}, {3.5359351468693466`*^9, 
   3.535935157391183*^9}, {3.5359352252863045`*^9, 3.53593526439227*^9}, {
   3.5359353052834625`*^9, 3.535935305591002*^9}, {3.535935348469447*^9, 
   3.535935357975154*^9}, {3.535939417785184*^9, 3.5359394188973255`*^9}, {
   3.5359396567785325`*^9, 3.535939659970438*^9}, {3.5359397939874563`*^9, 
   3.535939796415764*^9}, {3.5359399165960255`*^9, 3.535939982594406*^9}, {
   3.5359408786806946`*^9, 3.535940879403286*^9}, {3.535940948128013*^9, 
   3.535940948905612*^9}, {3.5359412982329707`*^9, 3.5359413604563723`*^9}, {
   3.535941457205658*^9, 3.5359414663668213`*^9}, {3.5359456340045443`*^9, 
   3.535945670220643*^9}, {3.535945707252345*^9, 3.5359458148590097`*^9}, {
   3.5359476795057898`*^9, 3.535947718365224*^9}, {3.535947883518696*^9, 
   3.5359479943357677`*^9}, {3.5359480308389034`*^9, 
   3.5359480457828007`*^9}, {3.535948082576473*^9, 3.535948103623646*^9}, {
   3.535948229493129*^9, 3.5359482805536127`*^9}, {3.5359483286042147`*^9, 
   3.535948376992859*^9}, {3.5359484796929007`*^9, 3.5359485077199593`*^9}, {
   3.5359485701318846`*^9, 3.535948572007123*^9}, 3.535948686356143*^9, {
   3.5359488123171387`*^9, 3.535948850487485*^9}, {3.53594938192647*^9, 
   3.5359493849128485`*^9}, {3.5359538638431005`*^9, 
   3.5359539494419703`*^9}, {3.5359539818170815`*^9, 
   3.5359540349478283`*^9}, {3.5359540871809607`*^9, 
   3.5359541745685577`*^9}, {3.5359542076907635`*^9, 
   3.5359542115217505`*^9}, {3.5359542460416336`*^9, 3.535954246556199*^9}, {
   3.5359544063759937`*^9, 3.5359544393231773`*^9}, {3.5359545429778395`*^9, 
   3.535954593812295*^9}, 3.5359546378603888`*^9, {3.5359546995652237`*^9, 
   3.535954748737968*^9}, {3.5359549340705023`*^9, 3.535954996797968*^9}, {
   3.535955032923555*^9, 3.5359550689411287`*^9}, {3.5359551406857395`*^9, 
   3.535955156176206*^9}, {3.535955215619254*^9, 3.5359552923775015`*^9}, {
   3.535955391171547*^9, 3.5359553926827383`*^9}, {3.535955514262677*^9, 
   3.535955522693748*^9}, {3.5359555920310526`*^9, 3.535955630891987*^9}, {
   3.535955696856864*^9, 3.535955937290395*^9}, {3.535955989210988*^9, 
   3.5359561146954226`*^9}, {3.5359561478971386`*^9, 
   3.5359563604506297`*^9}, {3.5359564302144885`*^9, 
   3.5359564306650457`*^9}, {3.5359565174010596`*^9, 3.535956526648234*^9}, {
   3.5359565661777534`*^9, 3.535956606947931*^9}, {3.5359567024395566`*^9, 
   3.535956742138098*^9}, {3.535956820049991*^9, 3.5359568610416965`*^9}, {
   3.5359569735279803`*^9, 3.535956983376231*^9}, {3.535957362913426*^9, 
   3.53595749524323*^9}, 3.535957560722045*^9, {3.5359576564376993`*^9, 
   3.5359576567572393`*^9}, {3.535957707847227*^9, 3.535957765557555*^9}, {
   3.5359578991760225`*^9, 3.535957937568898*^9}, {3.5359580355918455`*^9, 
   3.5359580450815506`*^9}, {3.5359580873794217`*^9, 3.535958087506938*^9}, 
   3.5359581917961807`*^9, {3.535958520675443*^9, 3.535958520752453*^9}, {
   3.535959593121126*^9, 3.5359595946493206`*^9}, {3.5359596619713697`*^9, 
   3.5359596625624447`*^9}, {3.535959882121825*^9, 3.53595990609787*^9}, {
   3.5359600084733696`*^9, 3.5359600206009097`*^9}, {3.535960141040203*^9, 
   3.5359601650812564`*^9}, {3.5359602306935883`*^9, 
   3.5359602307735977`*^9}, {3.5359606676025686`*^9, 
   3.5359606876891193`*^9}, {3.53596083511734*^9, 3.5359608816712513`*^9}, {
   3.5359609261068945`*^9, 3.535960941251317*^9}, {3.53596121390644*^9, 
   3.5359612221784906`*^9}, {3.5359613670153823`*^9, 3.53596136849007*^9}, {
   3.535961440439706*^9, 3.535961488858855*^9}, {3.535961620545577*^9, 
   3.5359616371061797`*^9}, {3.535961702645002*^9, 3.535961714739538*^9}, {
   3.535961819210804*^9, 3.535961928274153*^9}, {3.535961995784226*^9, 
   3.5359620063065624`*^9}, {3.5359620970490847`*^9, 
   3.5359623249535255`*^9}, {3.5359623593078876`*^9, 3.535962364963606*^9}, {
   3.5359623966101246`*^9, 3.5359624188664503`*^9}, {3.5359625102880597`*^9, 
   3.535962525972051*^9}, {3.535962579156805*^9, 3.535962598001698*^9}, {
   3.535962727311118*^9, 3.5359627279526997`*^9}, 3.5359628209465084`*^9, {
   3.5359634623199525`*^9, 3.5359634893898897`*^9}, {3.535963535176704*^9, 
   3.5359635907202573`*^9}, {3.53596362578471*^9, 3.535963724088193*^9}, {
   3.5359638235943284`*^9, 3.535963826090145*^9}, {3.535963868973591*^9, 
   3.535963869040099*^9}, 3.5359640044447937`*^9, {3.5359640527199235`*^9, 
   3.535964105984187*^9}, {3.5359642449973397`*^9, 3.5359643080428457`*^9}, {
   3.535964343914901*^9, 3.535964346816769*^9}, {3.535964613903185*^9, 
   3.53596461457627*^9}, {3.535964808840439*^9, 3.5359648340186357`*^9}, {
   3.5359649339198217`*^9, 3.53596493744877*^9}, {3.5359650453184676`*^9, 
   3.535965088575961*^9}, 3.5359651358569646`*^9, {3.535965203491053*^9, 
   3.535965209177275*^9}, {3.53596546223991*^9, 3.5359654640566406`*^9}, {
   3.535965751267112*^9, 3.535965756177235*^9}, {3.535965893850218*^9, 
   3.535965901530693*^9}, {3.5359662154665575`*^9, 3.5359662159551196`*^9}, {
   3.5359662820825167`*^9, 3.535966319789805*^9}, {3.5359669488886905`*^9, 
   3.5359669543543844`*^9}, {3.535967076247363*^9, 3.5359670839053354`*^9}, {
   3.535967121305084*^9, 3.535967137120593*^9}, {3.5359672894299335`*^9, 
   3.5359673072661986`*^9}, {3.535967643074341*^9, 3.535967655217383*^9}, {
   3.5359678749272823`*^9, 3.535967882616759*^9}, {3.5359680452149057`*^9, 
   3.5359680495839605`*^9}, {3.5359687896574383`*^9, 
   3.5359687984910603`*^9}, {3.535969451202444*^9, 3.535969529731916*^9}, {
   3.535970131227296*^9, 3.5359701588488035`*^9}, {3.5359702430019894`*^9, 
   3.5359702534588175`*^9}, {3.535970337851534*^9, 3.535970354599661*^9}, {
   3.5360398648623433`*^9, 3.536039898283087*^9}, 3.5360399404849463`*^9, 
   3.5360400436760497`*^9, {3.5360400844827313`*^9, 3.5360402295246496`*^9}, {
   3.5360402881025877`*^9, 3.536040347003067*^9}, {3.5360404556978693`*^9, 
   3.536040456146927*^9}, {3.5360406206528163`*^9, 3.536040628781348*^9}, {
   3.5360407185887527`*^9, 3.5360407226197643`*^9}, {3.5360407619157543`*^9, 
   3.5360408485692577`*^9}, {3.5360409532845554`*^9, 3.536040995208379*^9}, 
   3.5360411100064564`*^9, {3.536041145581474*^9, 3.5360411460930386`*^9}, {
   3.536041231948941*^9, 3.5360412351893525`*^9}, {3.536041561699314*^9, 
   3.536041565074743*^9}, {3.536041607075576*^9, 3.5360416102109747`*^9}, {
   3.5360416508286324`*^9, 3.536041714111668*^9}, {3.5360417548608427`*^9, 
   3.53604180217135*^9}, {3.5360420353244567`*^9, 3.536042043971055*^9}, {
   3.5360420999051576`*^9, 3.5360420999796667`*^9}, {3.536044826877439*^9, 
   3.536044827381503*^9}, {3.536044869290825*^9, 3.5360448944990263`*^9}, {
   3.5360449665886803`*^9, 3.5360449763309174`*^9}, {3.5360450147192917`*^9, 
   3.536045016636035*^9}, {3.536045053078163*^9, 3.536045066276839*^9}, {
   3.536045098684954*^9, 3.5360450991800175`*^9}, {3.536045308165555*^9, 
   3.536045309139679*^9}, {3.536045532517044*^9, 3.536045640636773*^9}, {
   3.5360457812286263`*^9, 3.5360457823312664`*^9}, {3.5360463608207254`*^9, 
   3.536046628500216*^9}, {3.5360563128404713`*^9, 3.5360564053847227`*^9}, {
   3.536056439923609*^9, 3.536056472909797*^9}, {3.5360569363186426`*^9, 
   3.536057063350774*^9}, {3.536057114286742*^9, 3.536057114889818*^9}, {
   3.536057194503428*^9, 3.536057209616847*^9}, 3.536057288524867*^9, {
   3.5360573670793424`*^9, 3.5360573698686967`*^9}, {3.5360574233624897`*^9, 
   3.536057439848583*^9}, 3.536057528714368*^9, {3.536057616761548*^9, 
   3.5360576189508257`*^9}, {3.5360578438903894`*^9, 3.536057851869903*^9}, {
   3.536057894864863*^9, 3.536057925492752*^9}, {3.53610665718089*^9, 
   3.5361066732149267`*^9}, {3.5361211363400097`*^9, 3.536121137803196*^9}, {
   3.536121259518652*^9, 3.536121409176156*^9}, {3.5361214496647973`*^9, 
   3.536121522836589*^9}, {3.5361215612384653`*^9, 3.5361216652216697`*^9}, {
   3.53612189903086*^9, 3.536121904581064*^9}, {3.5361219693327866`*^9, 
   3.53612197046243*^9}, {3.5361220013878574`*^9, 3.536122001907423*^9}, {
   3.5361220391911573`*^9, 3.5361220640388126`*^9}, {3.5361220990732613`*^9, 
   3.53612210606715*^9}, {3.5361243117707386`*^9, 3.536124452686633*^9}, {
   3.5361244924156775`*^9, 3.536124549519929*^9}, {3.5361247680266757`*^9, 
   3.5361247967693253`*^9}, {3.5361250496674395`*^9, 
   3.5361250520282393`*^9}, {3.5361250850314302`*^9, 
   3.5361251774811697`*^9}, {3.536125594299099*^9, 3.536125596609392*^9}, {
   3.53612562997963*^9, 3.5361256683595037`*^9}, {3.5361257903945*^9, 
   3.536125880263412*^9}, 3.5361259395994463`*^9, {3.5361259777402897`*^9, 
   3.5361259806321573`*^9}, {3.5361260433531218`*^9, 3.536126100683902*^9}, {
   3.536126151500355*^9, 3.536126155219327*^9}, 3.536126220787653*^9, {
   3.5361262543079095`*^9, 3.536126265587842*^9}, {3.536126792295725*^9, 
   3.5361268359107637`*^9}, {3.5361272612672772`*^9, 
   3.5361272950865717`*^9}, {3.5361273390746574`*^9, 3.53612740028393*^9}, {
   3.5361274328390636`*^9, 3.5361274594779468`*^9}, {3.5361275075190473`*^9, 
   3.536127685801186*^9}, {3.5361278766699233`*^9, 3.536127900552956*^9}, {
   3.5361279442535057`*^9, 3.5361280180648785`*^9}, {3.536128048467239*^9, 
   3.536128091262173*^9}, {3.5361281642599425`*^9, 3.53612818266428*^9}, {
   3.53612823936848*^9, 3.5361282398260384`*^9}, {3.536128285587349*^9, 
   3.536128293256323*^9}, {3.536128331950737*^9, 3.536128351159676*^9}, {
   3.536128499739043*^9, 3.5361285757176914`*^9}, {3.536128625454007*^9, 
   3.5361286479408627`*^9}, {3.5361286890750856`*^9, 3.5361287036959424`*^9}, 
   3.536128765848335*^9, {3.536128797337333*^9, 3.5361287985724897`*^9}, {
   3.5361288300399857`*^9, 3.536128830402032*^9}, {3.536128864490861*^9, 
   3.536128865334968*^9}, {3.536128940703038*^9, 3.536128979722993*^9}, {
   3.536129038083404*^9, 3.536129069280366*^9}, {3.5361291797518935`*^9, 
   3.536129230807377*^9}, 3.5361292620513444`*^9, {3.5361293020644255`*^9, 
   3.5361293064989886`*^9}, {3.5361293844993935`*^9, 3.536129388047344*^9}, {
   3.536129444843556*^9, 3.536129448696045*^9}, {3.5361294802355504`*^9, 
   3.536129481582221*^9}, {3.5361295175477886`*^9, 3.536129534600954*^9}, {
   3.5361296146571198`*^9, 3.536129647476287*^9}, 3.536129695033326*^9, {
   3.5361297366386094`*^9, 3.5361297552774763`*^9}, {3.536129814659517*^9, 
   3.5361298357811985`*^9}, {3.5361300537118726`*^9, 
   3.5361303004021983`*^9}, {3.536130338727065*^9, 3.5361303402127533`*^9}, {
   3.536130374687631*^9, 3.536130395837317*^9}, {3.536130439440854*^9, 
   3.5361304596779237`*^9}, {3.53613061022204*^9, 3.536130726597318*^9}, {
   3.5361308064129534`*^9, 3.5361308289118104`*^9}, {3.536130895877314*^9, 
   3.5361308970729656`*^9}, {3.536130959299368*^9, 3.536130959798931*^9}, {
   3.53613099829982*^9, 3.5361309986633663`*^9}, 3.536131042388418*^9, 
   3.5361312446636043`*^9, {3.536131378550606*^9, 3.5361313894784937`*^9}, {
   3.5361314418486433`*^9, 3.536131481628695*^9}, 3.5361315935574083`*^9, {
   3.5361316437247787`*^9, 3.5361316441983385`*^9}, {3.5361317426543407`*^9, 
   3.5361317535597258`*^9}, {3.5361318056603417`*^9, 3.5361318488998327`*^9}, 
   3.5361318855334845`*^9, {3.536131923668327*^9, 3.536131970723802*^9}, {
   3.5361320078780203`*^9, 3.5361320189894314`*^9}, {3.5361324329009914`*^9, 
   3.5361324977117214`*^9}, {3.5361326427491384`*^9, 
   3.5361326488844175`*^9}, {3.536132691774364*^9, 3.536132752864621*^9}, {
   3.5361328268195124`*^9, 3.536132874659087*^9}, 3.536132915243241*^9, {
   3.5361341561478157`*^9, 3.5361341573349667`*^9}, 3.5361354852625923`*^9, {
   3.5361355378322673`*^9, 3.536135538114303*^9}, {3.536135582576949*^9, 
   3.5361355864444404`*^9}, {3.5361356956323056`*^9, 
   3.5361356974665384`*^9}, {3.536135924879416*^9, 3.536136237453608*^9}, {
   3.536136340300168*^9, 3.5361365142847614`*^9}, {3.536136934366105*^9, 
   3.536136956205378*^9}, {3.5361370492041874`*^9, 3.5361370734852705`*^9}, {
   3.5361371816035*^9, 3.5361371912942305`*^9}, {3.536137247581378*^9, 
   3.536137302037793*^9}, {3.5361373347314444`*^9, 3.5361373379338512`*^9}, {
   3.536140564579583*^9, 3.5361406040936007`*^9}, {3.536140710026553*^9, 
   3.536140710102062*^9}, {3.536140817010138*^9, 3.5361408345898705`*^9}, {
   3.5361408697238317`*^9, 3.536140981967085*^9}, {3.5361415005674386`*^9, 
   3.536141680483785*^9}, {3.5361417130799246`*^9, 3.536141755599824*^9}, {
   3.5361418476290097`*^9, 3.536141862576908*^9}, {3.5361425543697543`*^9, 
   3.5361425775366964`*^9}, 3.536142693862968*^9, {3.536142730787657*^9, 
   3.5361427374189987`*^9}, {3.5361427816181116`*^9, 3.53614300486246*^9}, {
   3.536143069712695*^9, 3.536143103962044*^9}, 3.5361431564662113`*^9, {
   3.5361729790361967`*^9, 3.5361729809649415`*^9}, 3.5361730498791924`*^9, {
   3.5361744566938353`*^9, 3.536174637195756*^9}, 3.5361746687172585`*^9, {
   3.5361749217818937`*^9, 3.536175030500699*^9}, {3.5361754402572317`*^9, 
   3.5361755124929047`*^9}, {3.536175662308429*^9, 3.536175747227712*^9}, {
   3.5361757880203924`*^9, 3.5361758975983067`*^9}, {3.536175960245762*^9, 
   3.53617597842057*^9}, {3.5361760543207083`*^9, 3.536176071780425*^9}, {
   3.5361761690782804`*^9, 3.536176222484562*^9}, {3.536182448780201*^9, 
   3.5361824522361403`*^9}, 3.536182482287456*^9, {3.5361825696075444`*^9, 
   3.536182570270629*^9}, {3.5361827017118196`*^9, 3.536182705006238*^9}, {
   3.5361828328949776`*^9, 3.536182839159773*^9}, {3.536183191316992*^9, 
   3.536183222901502*^9}, {3.5361843467167087`*^9, 3.5361843662046833`*^9}, {
   3.536184730718971*^9, 3.536184753037305*^9}, {3.536184968681188*^9, 
   3.5361849715370507`*^9}, {3.5361850028615284`*^9, 3.536185006646009*^9}, {
   3.5361852185889225`*^9, 3.5361852353330483`*^9}, {3.5361884805671406`*^9, 
   3.5361885100468845`*^9}, 3.536188681540661*^9, {3.5361890135593224`*^9, 
   3.5361890167082224`*^9}, {3.5361890996587553`*^9, 3.5361891009649215`*^9}, 
   3.53618918009797*^9, {3.536189304890317*^9, 3.536189327477185*^9}, {
   3.5361893656040263`*^9, 3.5361893768609557`*^9}, {3.536198430155078*^9, 
   3.5361984524424086`*^9}, {3.5361985343828135`*^9, 3.536198550520363*^9}, {
   3.5361986255323877`*^9, 3.5361986389735947`*^9}, {3.536198685650522*^9, 
   3.5361987404814844`*^9}, {3.536199877535372*^9, 3.5361999211094055`*^9}, {
   3.5361999801349006`*^9, 3.536200126647005*^9}, {3.5362003009391375`*^9, 
   3.5362003014952083`*^9}, {3.5362003801541967`*^9, 
   3.5362004002237453`*^9}, {3.536201615161523*^9, 3.5362016209582586`*^9}, {
   3.536201660513282*^9, 3.5362016730573745`*^9}, {3.536201721599038*^9, 
   3.536201730123121*^9}, {3.5362018198895197`*^9, 3.5362018205966096`*^9}, {
   3.536201901973443*^9, 3.5362019303915515`*^9}, 3.5362020047084885`*^9, 
   3.5362020787228875`*^9, {3.5362021386474967`*^9, 3.536202139436097*^9}, {
   3.5362023565636687`*^9, 3.5362023772732983`*^9}, {3.536202552731579*^9, 
   3.5362025778997746`*^9}, {3.5362029038271627`*^9, 3.536202942693598*^9}, {
   3.536203040067463*^9, 3.536203214887662*^9}, {3.5362032807565265`*^9, 
   3.536203284083449*^9}, {3.536203346037816*^9, 3.5362033465733843`*^9}, {
   3.5362034894460263`*^9, 3.5362034998573484`*^9}, {3.5362035319534245`*^9, 
   3.536203532938549*^9}, {3.5362035677329674`*^9, 3.5362036174512815`*^9}, {
   3.5362037651520367`*^9, 3.536203771074289*^9}, 3.5362039278556976`*^9, {
   3.5362039787526608`*^9, 3.5362039845628986`*^9}, {3.536204181985968*^9, 
   3.536204185427405*^9}, {3.5362042363603725`*^9, 3.536204314858841*^9}, {
   3.536204375232507*^9, 3.5362043931787863`*^9}, {3.536204429583409*^9, 
   3.5362044334589005`*^9}, {3.5362044854009967`*^9, 3.536204497146488*^9}, {
   3.536204630831964*^9, 3.5362046568622694`*^9}, {3.536204813670682*^9, 
   3.5362048387253633`*^9}, {3.536204898859999*^9, 3.5362049205797577`*^9}, {
   3.536204970360079*^9, 3.536204977413474*^9}, 3.536205046647266*^9, {
   3.536205113027195*^9, 3.536205129405275*^9}, {3.53620546862685*^9, 
   3.5362054770759234`*^9}, {3.5362055414971037`*^9, 
   3.5362056552945547`*^9}, {3.5362056868185577`*^9, 3.536205692706305*^9}, {
   3.5362060297171*^9, 3.5362060785077953`*^9}, {3.5362062075791855`*^9, 
   3.5362062220520234`*^9}, {3.536206372394614*^9, 3.5362064036650853`*^9}, {
   3.536206436052698*^9, 3.5362064405977755`*^9}, {3.536206766638177*^9, 
   3.53620692550035*^9}, 3.5362071099437714`*^9, {3.5362071690612783`*^9, 
   3.536207169406822*^9}, {3.5362073303782625`*^9, 3.536207334787323*^9}, 
   3.536207387566025*^9, {3.5362074535028977`*^9, 3.5362074547285533`*^9}, {
   3.536207563425356*^9, 3.5362075664507403`*^9}, 3.53620766236642*^9, {
   3.536207710906584*^9, 3.536207726666585*^9}, 3.5362077965524597`*^9, {
   3.5362078498702297`*^9, 3.5362078694672184`*^9}, {3.5362079463714843`*^9, 
   3.536207976493309*^9}, {3.536211232065214*^9, 3.5362112934395075`*^9}, {
   3.5362115646829515`*^9, 3.536211617270129*^9}, 3.5362116561455655`*^9, {
   3.536211689323779*^9, 3.536211738953581*^9}, {3.5362117781205544`*^9, 
   3.5362118195043097`*^9}, {3.536211868811071*^9, 3.536211871208875*^9}, {
   3.5362119692308226`*^9, 3.5362119948760786`*^9}, {3.536212746657543*^9, 
   3.536212753558419*^9}, {3.536213065373515*^9, 3.536213066083105*^9}, {
   3.536213196343646*^9, 3.5362132236371117`*^9}, {3.5362139144843383`*^9, 
   3.536213950702937*^9}, {3.5362140066710443`*^9, 3.5362140149810996`*^9}, {
   3.536214223370062*^9, 3.536214223947635*^9}, {3.536272078020273*^9, 
   3.5362721125761614`*^9}, 3.536273741798546*^9, {3.5362738348598633`*^9, 
   3.5362738570381794`*^9}, {3.5362740927116065`*^9, 
   3.5362741246381607`*^9}, {3.5362741750360603`*^9, 
   3.5362741914071393`*^9}, {3.5362745449595346`*^9, 3.536274636390145*^9}, {
   3.5362822502884874`*^9, 3.536282275247156*^9}, {3.53628578516636*^9, 
   3.536285878927766*^9}, {3.5362859408706317`*^9, 3.536285965059203*^9}, 
   3.5362871683099966`*^9, {3.5362872193654795`*^9, 3.5362872976419196`*^9}, {
   3.536287369111495*^9, 3.5362873699350996`*^9}, {3.536287407543375*^9, 
   3.5362874078984203`*^9}, {3.536287507734598*^9, 3.5362875237826357`*^9}, {
   3.536287768687235*^9, 3.536287773870893*^9}, {3.536288481187711*^9, 
   3.5362884817547827`*^9}, {3.5362885577044272`*^9, 3.536288627519293*^9}, 
   3.5362887344098663`*^9, {3.5362887692942953`*^9, 3.536288841745496*^9}, {
   3.5362889085634804`*^9, 3.5362889283604946`*^9}, {3.5362889631004057`*^9, 
   3.5362890266794796`*^9}, 3.536289668049423*^9, {3.5362900213177824`*^9, 
   3.5362900324681983`*^9}, {3.5362902445146246`*^9, 
   3.5362902593950143`*^9}, {3.5362903375954447`*^9, 3.5362904216161137`*^9}, 
   3.5362907765071793`*^9, 3.5362940299043083`*^9, {3.5362940642056637`*^9, 
   3.536294064301176*^9}, {3.5362943104294305`*^9, 3.536294329757885*^9}, {
   3.5362947136646347`*^9, 3.53629475788525*^9}, {3.5362947908519363`*^9, 
   3.5362948277306194`*^9}, {3.536295072554708*^9, 3.5362951745071545`*^9}, {
   3.5362953315776*^9, 3.5362953414963593`*^9}, 3.536295377554438*^9, {
   3.536295721859659*^9, 3.5362957513579054`*^9}, {3.5362958091572447`*^9, 
   3.5362958244046807`*^9}, {3.536295892895378*^9, 3.5362959047468834`*^9}, {
   3.5362959890970945`*^9, 3.5362959907208004`*^9}, {3.5362963388295045`*^9, 
   3.5362963609713163`*^9}, {3.5362964787527723`*^9, 3.536296479236334*^9}, {
   3.536296577085759*^9, 3.536296581785356*^9}, {3.536578157304906*^9, 
   3.536578254221213*^9}, {3.5365784318702717`*^9, 3.5365785480755277`*^9}, {
   3.536578640717292*^9, 3.5365786549781027`*^9}, {3.5365788008931313`*^9, 
   3.53657880190576*^9}, {3.536614027787379*^9, 3.5366142053404255`*^9}, {
   3.5366142431567273`*^9, 3.5366142978306704`*^9}, {3.53661433011627*^9, 
   3.536614466649107*^9}, {3.536614529260558*^9, 3.536614638053373*^9}, {
   3.5366148626298904`*^9, 3.536614958101514*^9}, {3.53661498822884*^9, 
   3.5366149982541122`*^9}, {3.536615065159108*^9, 3.5366150688295746`*^9}, 
   3.536615238329098*^9, {3.536615319641924*^9, 3.5366153391258974`*^9}, {
   3.536615369709281*^9, 3.536615373314739*^9}, {3.536615466472069*^9, 
   3.536615589324669*^9}, {3.53661562256339*^9, 3.53661562917973*^9}, {
   3.536615661819875*^9, 3.5366159820510387`*^9}, {3.536616087527933*^9, 
   3.53661611018731*^9}, {3.536616230997151*^9, 3.5366162429911737`*^9}, 
   3.5366162746466937`*^9, {3.5366164406292706`*^9, 3.53661644211796*^9}, {
   3.5366165200518565`*^9, 3.5366165726740384`*^9}, {3.536616612201558*^9, 
   3.5366166338858113`*^9}, {3.5366167066055455`*^9, 3.536616765987586*^9}, {
   3.5366168664823475`*^9, 3.536616880920181*^9}, {3.536616962586551*^9, 
   3.5366169644867926`*^9}, {3.5366170114052505`*^9, 3.536617012196851*^9}, {
   3.5366170653225965`*^9, 3.5366170670453157`*^9}, {3.536617132142582*^9, 
   3.536617134184841*^9}, {3.5366172324533195`*^9, 3.5366172326078396`*^9}, {
   3.536617365870762*^9, 3.5366174296103554`*^9}, {3.5366174649138384`*^9, 
   3.5366174669776006`*^9}, {3.536617550422697*^9, 3.5366175508862553`*^9}, {
   3.536617634413862*^9, 3.536617637104204*^9}, {3.5366176941164436`*^9, 
   3.5366178771866903`*^9}, {3.5366180427737174`*^9, 3.536618089855196*^9}, {
   3.5366181311709423`*^9, 3.536618160625683*^9}, {3.536618230638573*^9, 
   3.536618269531012*^9}, {3.5366183396534166`*^9, 3.5366183417101774`*^9}, {
   3.5366184294143143`*^9, 3.536618493047895*^9}, {3.536618699071557*^9, 
   3.536618835463376*^9}, {3.5366189414463344`*^9, 3.536618957744404*^9}, {
   3.5366190037992525`*^9, 3.5366190234907527`*^9}, {3.5366196231003933`*^9, 
   3.536619624239538*^9}, {3.5366196713860245`*^9, 3.5366197017883854`*^9}, {
   3.5366197332778845`*^9, 3.5366199151739817`*^9}, {3.536620780788401*^9, 
   3.536620944797228*^9}, {3.536620976118705*^9, 3.536620989945961*^9}, {
   3.536621028877404*^9, 3.5366210632462687`*^9}, {3.5366211023512344`*^9, 
   3.536621117640676*^9}, {3.536621176743181*^9, 3.5366212144439683`*^9}, {
   3.5366212635177*^9, 3.536621265391938*^9}, 3.536621658094805*^9, {
   3.536621760679332*^9, 3.53662211677855*^9}, {3.536622170514874*^9, 
   3.5366221735312567`*^9}, {3.536622269032384*^9, 3.5366223788103237`*^9}, {
   3.5366225263285565`*^9, 3.536622532570349*^9}, {3.5366226079004145`*^9, 
   3.53662260849049*^9}, {3.536622657405701*^9, 3.536622672253587*^9}, {
   3.536622717104282*^9, 3.536622758201501*^9}, {3.5366230736965637`*^9, 
   3.5366232439401817`*^9}, {3.5366245280857477`*^9, 
   3.5366245306115685`*^9}, {3.536624695043948*^9, 3.536624703332501*^9}, 
   3.5366247582184706`*^9, {3.536625458813935*^9, 3.5366254982229395`*^9}, {
   3.5366255289193373`*^9, 3.5366255363097754`*^9}, {3.53662558272667*^9, 
   3.5366255864256396`*^9}, {3.536625622984282*^9, 3.536625642978321*^9}, 
   3.536625713831818*^9, {3.5366264445941133`*^9, 3.536626660496029*^9}, {
   3.5366267063688545`*^9, 3.5366270745136027`*^9}, {3.5366271438954134`*^9, 
   3.536627917126601*^9}, {3.53662794925218*^9, 3.536628065459437*^9}, {
   3.536628164529517*^9, 3.536628356089842*^9}, {3.5366284433699255`*^9, 
   3.536628443757475*^9}, {3.536628502042376*^9, 3.536628529731892*^9}, {
   3.5366286751928635`*^9, 3.536628720655136*^9}, {3.5366287635130787`*^9, 
   3.53662876455171*^9}, {3.536628810072991*^9, 3.5366288228576145`*^9}, {
   3.5366288664121447`*^9, 3.5366288735120463`*^9}, 3.5366289158484225`*^9, {
   3.536628993825324*^9, 3.536629027565109*^9}, {3.5366403168501663`*^9, 
   3.536640441144949*^9}, {3.5366405041834545`*^9, 3.5366405157924285`*^9}, {
   3.5366434422265387`*^9, 3.5366435731211596`*^9}, {3.53664360958379*^9, 
   3.5366436121771193`*^9}, {3.5366437120893064`*^9, 3.536643812829599*^9}, {
   3.5366438843021746`*^9, 3.536643914061454*^9}, {3.536643976694907*^9, 
   3.5366440768175154`*^9}, {3.536644107215254*^9, 3.536644120470012*^9}, {
   3.5366442253420105`*^9, 3.5366443310780582`*^9}, {3.536644493997377*^9, 
   3.53664449527345*^9}, 3.536644673802661*^9, {3.5366447169781303`*^9, 
   3.536644804139116*^9}, {3.536644867572744*^9, 3.5366448914851117`*^9}, {
   3.5366449220618606`*^9, 3.5366449613461075`*^9}, {3.5366450168852844`*^9, 
   3.536645032459175*^9}, {3.5366451000030384`*^9, 3.536645100980094*^9}, {
   3.5366451372141666`*^9, 3.536645245834379*^9}, {3.536645280765377*^9, 
   3.536645673808858*^9}, {3.5366457302440863`*^9, 3.536645753162397*^9}, {
   3.536645798976017*^9, 3.536645812416786*^9}, {3.5366458736102858`*^9, 
   3.536645922875104*^9}, {3.536646054552635*^9, 3.5366460546336403`*^9}, {
   3.536646286782918*^9, 3.536646289364066*^9}, {3.536646360579139*^9, 
   3.536646370969733*^9}, {3.5366464139291906`*^9, 3.5366464142842107`*^9}, {
   3.53664652528356*^9, 3.5366465413824806`*^9}, 3.536646694065213*^9, 
   3.5366468953167243`*^9, {3.5366470475724325`*^9, 3.536647112332137*^9}, {
   3.536647205205449*^9, 3.5366472070605555`*^9}, {3.536647262363718*^9, 
   3.5366472624927254`*^9}, {3.5366473761172247`*^9, 
   3.5366474016776867`*^9}, {3.5366479228274946`*^9, 3.53664793201702*^9}, {
   3.5366479987358365`*^9, 3.5366480048391857`*^9}, {3.5366487557151327`*^9, 
   3.536648758318282*^9}, {3.5366489121560807`*^9, 3.5366489396286526`*^9}, {
   3.5366496083349*^9, 3.5366496563526464`*^9}, {3.5366497555153184`*^9, 
   3.5366498144586897`*^9}, {3.5366498899640083`*^9, 
   3.5366499805651903`*^9}, {3.536650016683256*^9, 3.536650035616339*^9}, {
   3.5366503261239552`*^9, 3.536650348746249*^9}, {3.536650459812602*^9, 
   3.5366504855120716`*^9}, {3.536650715425222*^9, 3.5366507519723125`*^9}, {
   3.536650808696557*^9, 3.536650873754278*^9}, {3.5366510487732887`*^9, 
   3.5366510491853123`*^9}, 3.5366510856293964`*^9, {3.536651212157634*^9, 
   3.536651212241638*^9}, {3.536651412235077*^9, 3.5366514875383844`*^9}, {
   3.5366515407774296`*^9, 3.536651548534873*^9}, {3.536651764781242*^9, 
   3.5366517667573547`*^9}, {3.5366520240590715`*^9, 
   3.5366521237157717`*^9}, {3.5366521619089565`*^9, 3.536652226948676*^9}, {
   3.5366523435553455`*^9, 3.536652391788104*^9}, {3.536652478937089*^9, 
   3.536652540888633*^9}, {3.5366526039462395`*^9, 3.5366526269745564`*^9}, {
   3.536652700932787*^9, 3.5366527594841356`*^9}, {3.536652809894019*^9, 
   3.536652810419049*^9}, {3.5366528971460094`*^9, 3.536652936078236*^9}, {
   3.5366534756270967`*^9, 3.536653507352911*^9}, {3.536653560888973*^9, 
   3.536653573856715*^9}, {3.5366536262457113`*^9, 3.536653708173397*^9}, {
   3.5366537432774053`*^9, 3.536653790066081*^9}, {3.5366538477403803`*^9, 
   3.5366539551125216`*^9}, {3.5366556158865128`*^9, 
   3.5366556446041546`*^9}, {3.536655678114072*^9, 3.5366557014834085`*^9}, {
   3.53665574819508*^9, 3.5366557611548214`*^9}, {3.53665592355611*^9, 
   3.5366559241801457`*^9}, {3.5366563804352417`*^9, 
   3.5366564053706684`*^9}, {3.536656479472907*^9, 3.536656491143574*^9}, {
   3.536686900814788*^9, 3.5366869098593054`*^9}, {3.536687105640504*^9, 
   3.5366871107337947`*^9}, {3.5366915963711634`*^9, 
   3.5366916269159107`*^9}, {3.5366987116631346`*^9, 3.536698805363494*^9}, {
   3.5366988544323006`*^9, 3.536698861219689*^9}, {3.5366991212455616`*^9, 
   3.53669915530151*^9}, {3.5366992513050003`*^9, 3.536699286725026*^9}, 
   3.5366993277923756`*^9, {3.5366995596246357`*^9, 3.536699560893708*^9}, 
   3.5366996600733805`*^9, {3.5367026588869033`*^9, 3.53670270009626*^9}, {
   3.5367044180865235`*^9, 3.53670461995807*^9}, {3.536704695753405*^9, 
   3.536704730213376*^9}, {3.5367047682415514`*^9, 3.5367047743809023`*^9}, {
   3.5367057446413984`*^9, 3.536705767555709*^9}, 3.536705838052741*^9, {
   3.536705944663839*^9, 3.5367059746435537`*^9}, {3.536706034121956*^9, 
   3.5367060391502433`*^9}, {3.536706076177361*^9, 3.536706124505125*^9}, {
   3.5367076374456606`*^9, 3.536707722723538*^9}, {3.536707761005728*^9, 
   3.5367077767796297`*^9}, 3.536707897441531*^9, 3.536707977121089*^9, 
   3.536708078009859*^9, {3.536708299420523*^9, 3.536708300204568*^9}, 
   3.536708355762746*^9, 3.5367087732596254`*^9, {3.536710262963832*^9, 
   3.5367103325518117`*^9}, {3.536710539955674*^9, 3.536710679479655*^9}, {
   3.5367107314436274`*^9, 3.536710823177874*^9}, 3.536710895541013*^9, {
   3.5367109480650167`*^9, 3.536710951755228*^9}, {3.5367134526932735`*^9, 
   3.536713531007753*^9}, {3.536713594110362*^9, 3.5367136051199923`*^9}, {
   3.5367136732148867`*^9, 3.536713741739806*^9}, {3.53671379705297*^9, 
   3.5367138216343756`*^9}, {3.536713948400626*^9, 3.536713972664014*^9}, {
   3.536714013761365*^9, 3.536714024675989*^9}, {3.5367141349452963`*^9, 
   3.53671415704156*^9}, {3.536714201289091*^9, 3.536714255885214*^9}, 
   3.536714319722865*^9, {3.5367143699447374`*^9, 3.536714545853799*^9}, {
   3.536714603338087*^9, 3.536714606683278*^9}, {3.536714661579418*^9, 
   3.5367146830266447`*^9}, {3.5367147130313606`*^9, 3.536714744150141*^9}, {
   3.5367147838904133`*^9, 3.536714785012478*^9}, {3.536714816922303*^9, 
   3.536714818935418*^9}, {3.536714877119746*^9, 3.5367149637427006`*^9}, {
   3.536715025499233*^9, 3.536715036706874*^9}, {3.5367150913049965`*^9, 
   3.53671510552181*^9}, {3.536717741581584*^9, 3.536717759813627*^9}, {
   3.536717807547357*^9, 3.5367178321937666`*^9}, {3.536717888324977*^9, 
   3.5367181234794273`*^9}, {3.5367181877411027`*^9, 
   3.5367182038980265`*^9}, {3.5367182608852863`*^9, 
   3.5367183210957303`*^9}, {3.536718393350863*^9, 3.5367184907514343`*^9}, {
   3.53671855852431*^9, 3.5367186364487677`*^9}, {3.536718675688012*^9, 
   3.536718766603212*^9}, {3.5367188103177123`*^9, 3.536718837049241*^9}, 
   3.53671888125377*^9, {3.5367189130225863`*^9, 3.5367189499626994`*^9}, {
   3.536719015112426*^9, 3.5367191010403404`*^9}, {3.536719150982197*^9, 
   3.5367192043992524`*^9}, {3.536719251806964*^9, 3.53671933042146*^9}, {
   3.5367194467561145`*^9, 3.5367194757347717`*^9}, {3.536719508637654*^9, 
   3.5367195448637257`*^9}, {3.5367196058442135`*^9, 3.536719616397817*^9}, {
   3.536719667298729*^9, 3.5367196938222456`*^9}, {3.5367197816592693`*^9, 
   3.53671978411541*^9}, {3.5367198710973854`*^9, 3.53671987975288*^9}, {
   3.5367199485858173`*^9, 3.5367199767174263`*^9}, {3.536720030817521*^9, 
   3.536720261743729*^9}, 3.5367203695588956`*^9, {3.5367205034785557`*^9, 
   3.536720510572961*^9}, {3.536721136024735*^9, 3.5367211990873423`*^9}, {
   3.53672123016912*^9, 3.536721231724209*^9}, {3.536721279323931*^9, 
   3.536721353295162*^9}, {3.536721425497292*^9, 3.536721437549981*^9}, 
   3.536721481445492*^9, {3.536721611087907*^9, 3.5367217300807133`*^9}, {
   3.536721777247411*^9, 3.5367218435912056`*^9}, {3.5367219491782446`*^9, 
   3.536721957099698*^9}, 3.5367220080396113`*^9, {3.536722062097703*^9, 
   3.5367220624837255`*^9}, 3.5367222174975915`*^9, {3.5367222596080008`*^9, 
   3.5367223472010107`*^9}, {3.536722396712842*^9, 3.536722396985858*^9}, {
   3.5367225177897673`*^9, 3.5367225194918647`*^9}, 3.5367225814024057`*^9, {
   3.536723044154874*^9, 3.536723055945548*^9}, 3.536723119881205*^9, {
   3.536723173792289*^9, 3.5367231785285597`*^9}, {3.5367232359458437`*^9, 
   3.536723392046772*^9}, {3.5367234603436785`*^9, 3.536723519495062*^9}, {
   3.5367238145239363`*^9, 3.5367239108244443`*^9}, {3.5367239701688385`*^9, 
   3.53672397910935*^9}, {3.5367257724089212`*^9, 3.53672583201733*^9}, {
   3.5367258658502655`*^9, 3.5367258873414946`*^9}, {3.536725954417331*^9, 
   3.5367259572894955`*^9}, {3.5367260218891907`*^9, 3.536726023032256*^9}, {
   3.5367264339407587`*^9, 3.5367264345317926`*^9}, {3.5367265105581408`*^9, 
   3.5367265274971094`*^9}, {3.536726611161895*^9, 3.5367266115219154`*^9}, 
   3.5367267244323735`*^9, {3.53672679745055*^9, 3.536726801664791*^9}, {
   3.536726868099591*^9, 3.5367268702847157`*^9}, {3.536726998756064*^9, 
   3.5367270032513213`*^9}, {3.536727148943654*^9, 3.5367271526228647`*^9}, {
   3.5367272556127553`*^9, 3.536727255933774*^9}, {3.536727346624961*^9, 
   3.536727347495011*^9}, {3.536727428711656*^9, 3.5367274292146845`*^9}, 
   3.5367275819144187`*^9, {3.536727703833392*^9, 3.5367278216771326`*^9}, {
   3.5367283576167865`*^9, 3.536728455271372*^9}, {3.5367287112650137`*^9, 
   3.536728862586669*^9}, {3.5367290965520515`*^9, 3.536729413824198*^9}, {
   3.536729484088217*^9, 3.536729495054844*^9}, {3.536729864999004*^9, 
   3.5367299092305336`*^9}, {3.5367300841145363`*^9, 
   3.5367301709605036`*^9}, {3.536730524898748*^9, 3.5367305326011887`*^9}, {
   3.536730565712082*^9, 3.5367305685132427`*^9}, {3.536730858103806*^9, 
   3.5367308894235973`*^9}, {3.5367309289558587`*^9, 
   3.5367309817178764`*^9}, {3.536731607012641*^9, 3.536731620557416*^9}, {
   3.536734335890724*^9, 3.536734734126502*^9}, {3.536734767398405*^9, 
   3.536734785888462*^9}, {3.5367521621353273`*^9, 3.5367522869454656`*^9}, {
   3.53675232006636*^9, 3.536752325406666*^9}, {3.536754434202282*^9, 
   3.5367544645120153`*^9}, 3.536755299729787*^9, 3.5367553384940042`*^9, {
   3.53675545607473*^9, 3.5367554610880165`*^9}, 3.5367555423896666`*^9, {
   3.5367800948059845`*^9, 3.536780123954652*^9}, {3.536780203177183*^9, 
   3.5367802049552846`*^9}, {3.5367891446256046`*^9, 3.536789161998598*^9}, 
   3.5367915492561417`*^9, 3.5367930070855246`*^9, {3.5367933743425303`*^9, 
   3.5367933904304504`*^9}, 3.5367971302623568`*^9, 3.536797326847601*^9, {
   3.536800509291626*^9, 3.536800509686649*^9}, 3.5368005839718976`*^9, {
   3.5368013945782614`*^9, 3.5368013947852736`*^9}, {3.536801464676271*^9, 
   3.536801467531434*^9}, {3.5368015291089563`*^9, 3.536801539685561*^9}, {
   3.53680260143929*^9, 3.536802644689764*^9}, {3.5368027279635267`*^9, 
   3.536802729545617*^9}, {3.536802762303491*^9, 3.536802812850382*^9}, {
   3.536802859299039*^9, 3.536802949625205*^9}, {3.536802988660438*^9, 
   3.5368029916566095`*^9}, {3.5368030245434904`*^9, 
   3.5368030389553146`*^9}, {3.536803098876742*^9, 3.5368031082482777`*^9}, {
   3.5368031886988797`*^9, 3.536803293330864*^9}, 3.536803333214145*^9, {
   3.5368033870802264`*^9, 3.5368034330878572`*^9}, {3.5368035272472434`*^9, 
   3.5368035292173557`*^9}, {3.5368035956911583`*^9, 3.536803667165246*^9}, {
   3.5368037278837194`*^9, 3.536803761406636*^9}, {3.536803855253004*^9, 
   3.536803893382185*^9}, {3.536809255257867*^9, 3.5368093066248045`*^9}, {
   3.5368095246602755`*^9, 3.5368098534260798`*^9}, 3.536809943919256*^9, {
   3.536810006698847*^9, 3.536810065256196*^9}, 3.5368101633708076`*^9, {
   3.536810207835351*^9, 3.536810226586424*^9}, {3.5368104882233887`*^9, 
   3.536810488584409*^9}, {3.536811204082333*^9, 3.5368112058574347`*^9}, {
   3.53681125682535*^9, 3.5368112581304245`*^9}, {3.536811332519679*^9, 
   3.536811534883254*^9}, {3.536811571619355*^9, 3.5368116513309145`*^9}, {
   3.536811720354862*^9, 3.53681172695424*^9}, {3.536811790786891*^9, 
   3.5368117957991776`*^9}, {3.536811839498677*^9, 3.536811885505308*^9}, {
   3.5368119272966986`*^9, 3.5368119778175883`*^9}, {3.5368120261763544`*^9, 
   3.5368121742208223`*^9}, {3.5368122473750057`*^9, 3.536812287373294*^9}, {
   3.5368123528620396`*^9, 3.5368123586483707`*^9}, {3.5368125309452257`*^9, 
   3.536812561563977*^9}, {3.5368125933477945`*^9, 3.536812809029131*^9}, {
   3.5368128544007263`*^9, 3.5368128875256205`*^9}, {3.5368129535013943`*^9, 
   3.5368129566055717`*^9}, {3.5368130549601974`*^9, 
   3.5368131100223465`*^9}, {3.536813141239132*^9, 3.5368131788692846`*^9}, {
   3.536813770346115*^9, 3.536813774389346*^9}, {3.5368138059691525`*^9, 
   3.536813810234397*^9}, {3.536813859513215*^9, 3.536813871159881*^9}, {
   3.536814167040805*^9, 3.536814211925372*^9}, {3.5368142522516785`*^9, 
   3.5368142527747087`*^9}, {3.5368142849465485`*^9, 3.536814287346686*^9}, {
   3.5368143215206404`*^9, 3.5368146308843355`*^9}, {3.536814695185013*^9, 
   3.536814844677563*^9}, {3.5368148872509985`*^9, 3.536814979883297*^9}, {
   3.5368150298061523`*^9, 3.536815051481392*^9}, {3.536815172194296*^9, 
   3.536815182115864*^9}, {3.5368152248623085`*^9, 3.5368152318777103`*^9}, {
   3.536815294420287*^9, 3.536815303747821*^9}, {3.5368154542174273`*^9, 
   3.5368154550604753`*^9}, {3.5368159459345517`*^9, 
   3.5368160783701267`*^9}, {3.536816133186262*^9, 3.5368161352813816`*^9}, {
   3.5368161694743376`*^9, 3.5368165019993567`*^9}, {3.536816549370066*^9, 
   3.5368165768246365`*^9}, {3.5368167670725183`*^9, 3.536816957562413*^9}, {
   3.536817058858207*^9, 3.536817070399867*^9}, {3.5368171384867616`*^9, 
   3.5368172227575817`*^9}, {3.536817282660008*^9, 3.5368172920785465`*^9}, {
   3.536818846739468*^9, 3.536818989397628*^9}, {3.536819105399263*^9, 
   3.5368191062513113`*^9}, {3.5368191466406217`*^9, 
   3.5368191558101463`*^9}, {3.5368192311744566`*^9, 3.536819239832952*^9}, 
   3.5368193000803976`*^9, {3.536819462418683*^9, 3.536819538211018*^9}, {
   3.5368196435840454`*^9, 3.5368196830353017`*^9}, {3.536819764408956*^9, 
   3.536819776334638*^9}, {3.5368198613585014`*^9, 3.5368199294863977`*^9}, {
   3.536820676149104*^9, 3.536820719885606*^9}, {3.536820827606767*^9, 
   3.536820831016962*^9}, {3.536822569228382*^9, 3.536822609470684*^9}, {
   3.536822650622038*^9, 3.536822663529776*^9}, {3.5368227503697433`*^9, 
   3.536822780423462*^9}, {3.536824111459593*^9, 3.5368241136387177`*^9}, {
   3.536824154090031*^9, 3.536824165835703*^9}, {3.5368243691933346`*^9, 
   3.5368243721015005`*^9}, {3.536826960086525*^9, 3.5368270120584974`*^9}, {
   3.5368279230206017`*^9, 3.536828459946312*^9}, {3.536828524142984*^9, 
   3.5368285574748907`*^9}, {3.536828592814912*^9, 3.536828709154566*^9}, 
   3.5368288301024837`*^9, 3.536828907419906*^9, {3.53682904735291*^9, 
   3.5368290539172854`*^9}, {3.5368291196410446`*^9, 3.53682914036523*^9}, {
   3.536829281879324*^9, 3.5368293097529182`*^9}, {3.536829375621686*^9, 
   3.536829387269352*^9}, {3.53682962465793*^9, 3.5368296418609138`*^9}, {
   3.536879303610471*^9, 3.536879303860485*^9}, {3.5368885004204984`*^9, 
   3.5368888664254327`*^9}, {3.5368889297530546`*^9, 3.536889062737661*^9}, {
   3.5368891943121867`*^9, 3.5368900527832885`*^9}, {3.5368900833270354`*^9, 
   3.5368902617242393`*^9}, 3.536890367669299*^9, 3.5368904395814123`*^9, {
   3.5368907694212775`*^9, 3.536890771854417*^9}, {3.536891067148307*^9, 
   3.5368910731706514`*^9}, {3.5368917977760963`*^9, 3.536891841257583*^9}, {
   3.5368918719623394`*^9, 3.5368920845454984`*^9}, {3.536892298419731*^9, 
   3.536892375710152*^9}, {3.5368924267550716`*^9, 3.5368924279371395`*^9}, {
   3.5368925274918337`*^9, 3.5368925346062403`*^9}, {3.536895040952595*^9, 
   3.536895041508627*^9}, {3.536895458344469*^9, 3.536895462786723*^9}, {
   3.536896010831069*^9, 3.536896063077058*^9}, 3.53689611330593*^9, {
   3.5368961696841555`*^9, 3.536896205070179*^9}, {3.536896346586273*^9, 
   3.536896473124511*^9}, 3.5368966424321947`*^9, {3.5368970126453695`*^9, 
   3.536897065398387*^9}, {3.536897230028803*^9, 3.5368972309088535`*^9}, {
   3.536897276690472*^9, 3.5368974135012975`*^9}, {3.536897459948954*^9, 
   3.5368974690444746`*^9}, {3.5368975320940804`*^9, 3.536897537692401*^9}, {
   3.536897614805811*^9, 3.5368976422093787`*^9}, {3.5368985164863844`*^9, 
   3.536898570971501*^9}, {3.536898671816269*^9, 3.536898685696063*^9}, 
   3.5368993709482565`*^9, {3.536900360731869*^9, 3.53690038137105*^9}, {
   3.53690044203852*^9, 3.5369004435306053`*^9}, 3.53690080080604*^9, {
   3.5369011034923525`*^9, 3.5369011178051715`*^9}, 3.536902047367339*^9, {
   3.53690213374428*^9, 3.5369021608728313`*^9}, {3.5369022676729403`*^9, 
   3.536902319179886*^9}, {3.5369024451840935`*^9, 3.5369024639831686`*^9}, {
   3.536902497740099*^9, 3.5369025122189274`*^9}, {3.5369026159048576`*^9, 
   3.5369027345376434`*^9}, {3.5369028192434883`*^9, 
   3.5369028618929276`*^9}, {3.536902954127203*^9, 3.536902965907877*^9}, {
   3.5369030339107666`*^9, 3.5369030432332993`*^9}, {3.536906588148057*^9, 
   3.5369067237948155`*^9}, {3.536906973462096*^9, 3.536906991059102*^9}, 
   3.536907031982443*^9, {3.536907459478894*^9, 3.5369074596249027`*^9}, {
   3.5369075880902505`*^9, 3.5369075979208126`*^9}, 3.5369076423343534`*^9, {
   3.5369353529403095`*^9, 3.5369354994956913`*^9}, {3.536973816634265*^9, 
   3.536973972112158*^9}, {3.536974106080821*^9, 3.536974132348323*^9}, {
   3.5369742477659245`*^9, 3.5369743369460254`*^9}, 3.5369744442891655`*^9, {
   3.5369745630689588`*^9, 3.536974573172537*^9}, {3.5369749636068687`*^9, 
   3.536974992111499*^9}, {3.5369757038932104`*^9, 3.5369757154678726`*^9}, 
   3.5369760940365252`*^9, {3.5369785152460103`*^9, 3.5369785622897015`*^9}, {
   3.536983402185528*^9, 3.536983451409343*^9}, {3.53698356902107*^9, 
   3.5369835696661067`*^9}, {3.536983752800582*^9, 3.536983828280899*^9}, {
   3.536983876600662*^9, 3.5369842292218313`*^9}, {3.5369852508332644`*^9, 
   3.5369853714491625`*^9}, {3.5369854398300743`*^9, 
   3.5369856475649557`*^9}, {3.5369857424813848`*^9, 3.536985752558961*^9}, {
   3.5369858230279913`*^9, 3.5369858384258723`*^9}, {3.5369858854895644`*^9, 
   3.536985888400731*^9}, {3.536986028092721*^9, 3.5369860287397575`*^9}, {
   3.5369860627737045`*^9, 3.536986240069845*^9}, {3.5369862956270227`*^9, 
   3.5369865173427043`*^9}, {3.536986808947383*^9, 3.536986811079505*^9}, {
   3.5369868926001678`*^9, 3.536986990570771*^9}, {3.536987121987288*^9, 
   3.536987122805335*^9}, {3.5369871827377625`*^9, 3.536987187198018*^9}, {
   3.53698723181857*^9, 3.536987232382602*^9}, {3.536987334881465*^9, 
   3.5369873403997803`*^9}, {3.536987554679036*^9, 3.53698757099997*^9}, {
   3.536987612592349*^9, 3.536987618050661*^9}, {3.536990664112886*^9, 
   3.5369907456635504`*^9}, {3.5369908725998106`*^9, 3.536990876071009*^9}, {
   3.536990914640215*^9, 3.536990915663274*^9}, {3.5369910455277014`*^9, 
   3.5369910779355555`*^9}, {3.536991158320153*^9, 3.5369911590071926`*^9}, {
   3.536991192293096*^9, 3.5369911996385164`*^9}, {3.5369912630481434`*^9, 
   3.5369914145538087`*^9}, {3.536991457985293*^9, 3.5369915545448155`*^9}, {
   3.5369916572286887`*^9, 3.536991730727893*^9}, {3.536991789615261*^9, 
   3.5369918359439106`*^9}, {3.536992747081025*^9, 3.536992755494506*^9}, {
   3.5369927903564997`*^9, 3.5369928141028585`*^9}, {3.536993256775178*^9, 
   3.5369932866828885`*^9}, {3.536993923899163*^9, 3.536994046318708*^9}, {
   3.536994164631732*^9, 3.536994169687374*^9}, {3.536994613048174*^9, 
   3.536994644132121*^9}, {3.5369947426431303`*^9, 3.536994750733157*^9}, {
   3.5370516714691725`*^9, 3.5370516920262833`*^9}, {3.537052258954774*^9, 
   3.5370522655521116`*^9}, {3.5370621764206324`*^9, 
   3.5370621792719946`*^9}, {3.5370625381810703`*^9, 
   3.5370625401923256`*^9}, {3.537062683186983*^9, 3.5370626841096*^9}, {
   3.5370743096993628`*^9, 3.537074313681369*^9}, {3.5370784930700836`*^9, 
   3.537078503026848*^9}, {3.5370785486366396`*^9, 3.5370785636670485`*^9}, {
   3.5370794851010556`*^9, 3.5370795435339756`*^9}, {3.5370798563842025`*^9, 
   3.5370798623004537`*^9}, {3.5371491685182257`*^9, 
   3.5371492501345897`*^9}, {3.53714938322649*^9, 3.537149389357769*^9}, {
   3.537149501705035*^9, 3.53714952773234*^9}, {3.537149738025544*^9, 
   3.537149760798936*^9}, {3.5371499891039267`*^9, 3.5371500035937667`*^9}, {
   3.5371501149379053`*^9, 3.537150181775393*^9}, {3.5371503403455286`*^9, 
   3.5371503733967257`*^9}, {3.5371504636346846`*^9, 
   3.5371504666450667`*^9}, {3.5371505805770345`*^9, 3.537150603006383*^9}, {
   3.5371507016904135`*^9, 3.5371507032056065`*^9}, {3.5371508429643536`*^9, 
   3.537150851974498*^9}, {3.53715091066295*^9, 3.537151043610832*^9}, {
   3.53715522766814*^9, 3.537155228670267*^9}, 3.5371574383718634`*^9, {
   3.537157548954906*^9, 3.537157579179744*^9}, 3.53716215634247*^9, {
   3.5371624335001645`*^9, 3.5371625346870136`*^9}, {3.537162570916114*^9, 
   3.537162582820626*^9}, {3.537162619909836*^9, 3.537162783672631*^9}, 
   3.537162976329595*^9, 3.5371658576054707`*^9, 3.5372196535851927`*^9, {
   3.537242264901965*^9, 3.5372423732882285`*^9}, {3.5372428182677336`*^9, 
   3.537242872208583*^9}, {3.5372429242766953`*^9, 3.537242929104808*^9}, {
   3.537242985730499*^9, 3.5372429971234455`*^9}, {3.537243124017559*^9, 
   3.537243229345934*^9}, {3.537243282330162*^9, 3.5372433704333496`*^9}, {
   3.537243412651211*^9, 3.5372435599079103`*^9}, 3.5372435943782873`*^9, {
   3.5372436888672857`*^9, 3.5372437175939336`*^9}, {3.537246849138589*^9, 
   3.537246849593147*^9}, {3.537247259714226*^9, 3.5372472633366857`*^9}, {
   3.53724753608132*^9, 3.5372477708881364`*^9}, {3.537247804163362*^9, 
   3.537247849795656*^9}, {3.5372479909785843`*^9, 3.5372479983050146`*^9}, {
   3.537249385491165*^9, 3.537249407839503*^9}, {3.5373209282729445`*^9, 
   3.5373209294035883`*^9}, {3.537320965155128*^9, 3.5373209857922487`*^9}, {
   3.5373210346719556`*^9, 3.537321043985638*^9}, 3.5374136578746085`*^9, {
   3.5375190771922507`*^9, 3.537519122263474*^9}, 3.5375194317502737`*^9, {
   3.53862339811789*^9, 3.5386233985884495`*^9}, {3.5386234629696255`*^9, 
   3.538623485034927*^9}, {3.538624037710108*^9, 3.538624038765242*^9}, {
   3.5386241679076405`*^9, 3.5386241884677515`*^9}, {3.5386242190796385`*^9, 
   3.5386242373849635`*^9}, {3.5386242742341423`*^9, 3.538624336530053*^9}, 
   3.538624667407069*^9, {3.538627676464671*^9, 3.5386279062788534`*^9}, {
   3.538627937686842*^9, 3.538627960342219*^9}, {3.5386280106951127`*^9, 
   3.5386280166303663`*^9}, {3.538628048509915*^9, 3.538628192715727*^9}, {
   3.5386283357103844`*^9, 3.538628420219616*^9}, {3.5386284613008327`*^9, 
   3.5386284890043507`*^9}, 3.5386285541556234`*^9, {3.5386285979321823`*^9, 
   3.538628681772829*^9}, {3.538628712322708*^9, 3.538628739072605*^9}, {
   3.538628807963853*^9, 3.538628983500143*^9}, {3.53862945833744*^9, 
   3.5386294697733927`*^9}, {3.538629597921665*^9, 3.5386296334726796`*^9}, {
   3.538629699634081*^9, 3.5386297698750005`*^9}, {3.538629805618539*^9, 
   3.5386298086034184`*^9}, {3.5386298963225574`*^9, 3.5386298970576506`*^9}, 
   3.5386299383463936`*^9, {3.5386369431733932`*^9, 3.5386369750764446`*^9}, {
   3.5386370238621397`*^9, 3.53863702787665*^9}, {3.5386370646293163`*^9, 
   3.538637104061324*^9}, {3.5386371341416435`*^9, 3.538637176597535*^9}, {
   3.5386372148378906`*^9, 3.538637217141183*^9}, {3.538637275566102*^9, 
   3.538637313996482*^9}, {3.5386373594227505`*^9, 3.538637393573087*^9}, {
   3.5386374374616604`*^9, 3.538637464261063*^9}, 3.538637518902002*^9, {
   3.5386378152766366`*^9, 3.5386378360762777`*^9}, {3.5386378807019444`*^9, 
   3.538637912316459*^9}, {3.5386381783887463`*^9, 3.538638205468685*^9}, {
   3.53863826181634*^9, 3.5386382635995665`*^9}, {3.538638356984925*^9, 
   3.538638383697317*^9}, {3.5386384598854914`*^9, 3.5386384640605216`*^9}, {
   3.538638496366624*^9, 3.5386385254843216`*^9}, {3.538638557356369*^9, 
   3.538638584126268*^9}, {3.538638625468018*^9, 3.538638628123355*^9}, {
   3.538638668941038*^9, 3.5386387516375394`*^9}, {3.5386388333189116`*^9, 
   3.538638835485687*^9}, {3.5386394065001965`*^9, 3.538639418682743*^9}, {
   3.5386396189301715`*^9, 3.5386396810255566`*^9}, 3.538639716082508*^9, {
   3.538639840005745*^9, 3.5386398653429623`*^9}, {3.538639921930648*^9, 
   3.53864003778786*^9}, {3.5386401257505293`*^9, 3.5386402507914076`*^9}, {
   3.5386402992130566`*^9, 3.538640299325571*^9}, {3.5386404397053967`*^9, 
   3.538640470058751*^9}, {3.5386405570898027`*^9, 3.5386406339010563`*^9}, {
   3.538641314298456*^9, 3.538641334142476*^9}, 3.538641389834048*^9, {
   3.5386414316708603`*^9, 3.53864144095704*^9}, {3.538642632129799*^9, 
   3.5386426435977554`*^9}, 3.539122376389637*^9, {3.539122687251111*^9, 
   3.5391226876076565`*^9}, {3.53912277079722*^9, 3.539122840382056*^9}, {
   3.5391228763091183`*^9, 3.539123180100695*^9}, {3.5391232102590246`*^9, 
   3.539123265675562*^9}, {3.5391233344697976`*^9, 3.5391233859243317`*^9}, 
   3.539123422399463*^9, {3.5391234858605213`*^9, 3.539123510154607*^9}, {
   3.539123564163965*^9, 3.539123580396026*^9}, {3.5391236681706724`*^9, 
   3.5391236862324657`*^9}, {3.5391237258504963`*^9, 
   3.5391237646339216`*^9}, {3.5391237962604375`*^9, 
   3.5391238065932493`*^9}, {3.539123838860347*^9, 3.539123839497428*^9}, {
   3.539123881925316*^9, 3.5391242835358133`*^9}, {3.539124315824914*^9, 
   3.5391243635924797`*^9}, {3.5391244258933907`*^9, 
   3.5391247339945145`*^9}, {3.5391252483693323`*^9, 3.539125248958907*^9}, {
   3.5391252855660553`*^9, 3.539125293580573*^9}, 3.5391253802190747`*^9, 
   3.5391254261719103`*^9, {3.539125458423005*^9, 3.5391255562079225`*^9}, {
   3.5391256047760897`*^9, 3.539125621521716*^9}, {3.539125655435523*^9, 
   3.539125657114236*^9}, {3.5391256873950815`*^9, 3.539125813425585*^9}, {
   3.53912585228852*^9, 3.53912599868211*^9}, {3.539126365557697*^9, 
   3.5391263886276264`*^9}, {3.539126429599829*^9, 3.5391264320191364`*^9}, {
   3.539126471304125*^9, 3.5391264975564585`*^9}, {3.539126553268033*^9, 
   3.5391265571780295`*^9}, {3.539127302125626*^9, 3.539127309183022*^9}, {
   3.539127357813197*^9, 3.539127447075032*^9}, 3.539127481581914*^9, {
   3.5391275140775404`*^9, 3.5391275750942883`*^9}, {3.5391276067748117`*^9, 
   3.5391276640360827`*^9}, {3.539127872847598*^9, 3.539127875374419*^9}, {
   3.5391279336028132`*^9, 3.5391281332866697`*^9}, {3.5391281673579965`*^9, 
   3.5391281680045786`*^9}, {3.5391281989795117`*^9, 
   3.5391284228689423`*^9}, {3.539128469748895*^9, 3.5391285341750765`*^9}, {
   3.5391287643178005`*^9, 3.539128766012016*^9}, {3.539128801309498*^9, 
   3.5391288302266703`*^9}, {3.539137321605438*^9, 3.5391373372929306`*^9}, {
   3.539137428003949*^9, 3.5391375291152887`*^9}, {3.53913760315219*^9, 
   3.53913761606783*^9}, {3.5391376550832844`*^9, 3.539137827179138*^9}, {
   3.5391378829802237`*^9, 3.539137971613979*^9}, {3.5391380033075037`*^9, 
   3.539138022118392*^9}, {3.539138069993471*^9, 3.5391380912866755`*^9}, {
   3.539138139572807*^9, 3.5391381538056145`*^9}, 3.5391382854403296`*^9, {
   3.5391383217474403`*^9, 3.539138360059305*^9}, {3.5391383970990086`*^9, 
   3.539138397962118*^9}, {3.5391407142202454`*^9, 3.539140769514767*^9}, {
   3.539140803484081*^9, 3.539140878699132*^9}, {3.539140911980358*^9, 
   3.539140933147546*^9}, {3.5391409666838045`*^9, 3.53914101689168*^9}, {
   3.539141142633647*^9, 3.5391412703703675`*^9}, {3.5391413055128303`*^9, 
   3.5391413738065023`*^9}, {3.5391414114872875`*^9, 
   3.5391414397298737`*^9}, {3.5391414739032135`*^9, 
   3.5391416693280287`*^9}, {3.5391417013896003`*^9, 3.539141714130718*^9}, {
   3.5391417591779385`*^9, 3.5391418609713645`*^9}, {3.5391418964338675`*^9, 
   3.539142045229762*^9}, {3.5391420893163605`*^9, 3.5391421243053036`*^9}, {
   3.539142160684923*^9, 3.5391422140501995`*^9}, {3.5391422613257027`*^9, 
   3.539142344834307*^9}, {3.5391423787556148`*^9, 3.5391424354438133`*^9}, {
   3.539142466832299*^9, 3.5391426139519806`*^9}, {3.539142649452489*^9, 
   3.5391431182835226`*^9}, {3.539143855820678*^9, 3.539143935499796*^9}, {
   3.5391483682526846`*^9, 3.5391484310516586`*^9}, {3.539148466596672*^9, 
   3.5391484794978104`*^9}, 3.5391485113888607`*^9, 3.53920164354745*^9, {
   3.539201676850919*^9, 3.5392016898101387`*^9}, {3.539201839081085*^9, 
   3.539201841507473*^9}, {3.5392063346459813`*^9, 3.5392063418168917`*^9}, {
   3.5392064079527903`*^9, 3.5392064152487164`*^9}, {3.539206613179351*^9, 
   3.5392066182839985`*^9}, {3.539206693449544*^9, 3.5392066950087414`*^9}, {
   3.5392067283054695`*^9, 3.539206748128487*^9}, 3.539206787417976*^9, {
   3.539206867435137*^9, 3.5392068736994324`*^9}, {3.5392069283703747`*^9, 
   3.5392070042195063`*^9}, 3.5392070842591705`*^9, 3.5392072905568666`*^9, {
   3.5392074095299745`*^9, 3.539207409921524*^9}, 3.5392075168501024`*^9, {
   3.5392075495627565`*^9, 3.5392075794340496`*^9}, {3.539207619490636*^9, 
   3.539207653177414*^9}, {3.539207689970586*^9, 3.5392076991127467`*^9}, 
   3.539208283199416*^9, {3.539208363501613*^9, 3.539208364317717*^9}, {
   3.5392085522980876`*^9, 3.5392085592244673`*^9}, {3.5392086228735495`*^9, 
   3.5392086481922646`*^9}, 3.539210594018353*^9, 3.5398373871995816`*^9, 
   3.539837452204336*^9, {3.5398382660156765`*^9, 3.5398382731485825`*^9}, {
   3.539838646648011*^9, 3.5398386585080175`*^9}, {3.539838690218044*^9, 
   3.5398387284173946`*^9}},
 CellID->172694284],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`b$$ = 
    0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
    2.220446049250313*^-16, $CellContext`eastbc$$ = 
    1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`finalDisplayImage$$ = Grid[{{
       Graphics[
        GraphicsComplex[CompressedData["
1:eJxdU2tIU1EANkUxC8J8zNQUNyklKcPKkPJbT4WMvEokOSmKLK1IRRA0VKbL
BN1mczk3ZMgGSdAgk1r5OJmiZU4r37WVm+lsPpFN+yGWd/f2pw8Ol3vPPd/r
nBN27V7KDVcXF5eYzUE//0eRry7BXFiLjFPt+ua7+YR51+L24NTQyyAR0YeI
5ii9Dhu7Cvzeh0jZ+Ra4eedxTDI5UdbTeA1H60nTuRdK9v8OZGXbzWFn1WSe
or90wkoZuCeqG9n13QgPb60YddUQrzFNznGvXmwrbqr7saJh+T4gsHCkporS
kkiB5J0joh8+1Vu/6QK0LP8Auq2Po/8kaIh2c/WY5hOy9Ps79043snqf0SYM
O8NbU5MYJ4aQVLplx1KsitUfxvZs2UzZKznpckRsKozAaL6SYUiWsH7G4AjX
jT4XCUmKU3AcT3eOdh3wy2T9TYDfI559MnEH5kKa8Cu4xpJB4+EyMH6N4Cpm
FHJPMXJpezkm6MUtccNaGRj/35Hulhg5TtWB2YVJRHlK0jm2ejB5JnGd6Cv9
L6mQyAgguEid5CpWgclnRm5mT+huqRK0mkBigb4per05WwEm7xSC7JaFR0fk
YOJMoa/Yw+LDqQGT/yc6utL2ZOQ+RChtJ2Qab5fdV2zHisD0MY2mN6tunHgK
NzNpzOA372KK0p7H9mOFkErft2YoJzSbr86K/Pt9JXaBhO1rFvHuC6flglqy
StM5ZnHr6IXUMr6C7e8XkmXBcc8Oqki8k9CGB1fPSxO9GwgT14aAysuV4o8N
xGlPNIcB/rpCmNbAnod5RJvGN/htKmLopzGPQystgV886gnT9wKMPDVVnion
fk6Di/Bor+IO9UrZ87OIdp1/rIFXQZx0giVURJW625QFhNmPZfy7H38B5sGR
bA==
         "], {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            
            Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51}]}}, {{
            Hue[0.67, 0.6, 0.6], 
            
            Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51}]}, {}, {}}}], {AspectRatio -> 1, Axes -> True, AxesLabel -> {
           Text[
            Style["x", Italic, 11]], 
           Text[
            Style[
             Row[{
               Style["u", Italic], "(", 
               Style["x", Italic], ")"}], 11]]}, AxesOrigin -> {0, 0}, 
         GridLines -> Automatic, ImagePadding -> {{45, 25}, {25, 20}}, 
         ImageSize -> {275, 395}, PlotLabel -> Text[
           Style["finite difference solution"]], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, TicksStyle -> 9}]}}, 
     Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, FrameStyle -> 
     Directive[
       Thickness[0.005], 
       GrayLevel[0.5]]], $CellContext`forceTermSelection$$ = 
    3, $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    0, $CellContext`h$$ = 0.02, $CellContext`kValue$$ = 
    10., $CellContext`n0$$ = 2., $CellContext`plotToShow$$ = 
    "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
    0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Grid[{{
              Grid[{{
                 Row[{
                   Text[
                    Style["k", Italic, 12]], 
                   Spacer[2], 
                   Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                   Spacer[2], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                 Row[{
                   Text[
                    Style["k h", Italic, 12]], " = ", 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                 Row[{
                   Text[
                    Style["PPW", 12]], " = ", 
                   Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
               Frame -> All, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}], 
           Grid[{{
              Framed[
               Text[
                Style[
                 Row[{"-", 
                   Style["u''", Italic], "(", 
                   Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                   Style["u", Italic], "(", 
                   Style["x", Italic], ") = ", 
                   Style["f", Italic], "(", 
                   Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]], 
              Grid[{{
                 Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                  Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None, 
                  FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
         Spacings -> {1, 0}]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                   Left]}, {
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                   Spacings -> {0, 0.15}]}, {
                  Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
             Style["source term", 11] -> Item[
               Grid[{{
                  PopupMenu[
                   
                   Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                   ContinuousAction -> False]}, {
                  Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                   FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                  Dynamic[
                   
                   Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                Center, Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`centerGrid$$], False}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`h$$], 0.02}, 0}, {{
       Hold[$CellContext`kValue$$], 10.}, 0}, {{
       Hold[$CellContext`n0$$], 2.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 3}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution"}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`showGridLines$$], True}, 0}}, Typeset`size$$ = {
    285., {200., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`b$$ = 
        0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = 
        "Dirichlet", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceTermSelection$$ = 3, $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        0.02, $CellContext`kValue$$ = 10., $CellContext`n0$$ = 
        2., $CellContext`plotToShow$$ = 
        "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
        0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; $CellContext`finalDisplayImage$$ = \
$CellContext`process[$CellContext`h$$, $CellContext`centerGrid$$, \
$CellContext`kValue$$, $CellContext`n0$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`x0$$, $CellContext`stdx$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, 
          
          Unevaluated[$CellContext`gstatusMessage$$], \
$CellContext`showGridLines$$]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray]]), "Specifications" :> {
        Item[
         Grid[{{
            Grid[{{
               Grid[{{
                  Row[{
                    Text[
                    Style["k", Italic, 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                  Row[{
                    Text[
                    Style["k h", Italic, 12]], " = ", 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                  Row[{
                    Text[
                    Style["PPW", 12]], " = ", 
                    Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
                Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}], 
            Grid[{{
               Framed[
                Text[
                 Style[
                  Row[{"-", 
                    Style["u''", Italic], "(", 
                    Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                    Style["u", Italic], "(", 
                    Style["x", Italic], ") = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], 
               Grid[{{
                  Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                   Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None,
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
          Spacings -> {1, 0}], ControlPlacement -> Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                    Left]}, {
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                    Spacings -> {0, 0.15}]}, {
                   Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                 Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
              Style["source term", 11] -> Item[
                Grid[{{
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                    ContinuousAction -> False]}, {
                   Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                   Dynamic[
                    
                    Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                 Center, Frame -> All, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}], 
         ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, False}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`h$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 10.}, 0, ControlType -> 
         None}, {{$CellContext`n0$$, 2.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution"}, 0, ControlType -> 
         None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`showGridLines$$, True}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousInitialization -> True, 
        SynchronousUpdating -> False, ContinuousAction -> False, Alignment -> 
        Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{616., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`Lx = 
          1, $CellContext`forceVector, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA}, \
{$CellContext`grid, $CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector} = $CellContext`initializeSystem[$CellContext`h, \
$CellContext`Lx, $CellContext`centerGrid, $CellContext`forceTermSelection, \
$CellContext`a, $CellContext`b, $CellContext`n0, $CellContext`x0, \
$CellContext`stdx, $CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue, $CellContext`kValue]; \
$CellContext`gstatusMessage = "ready.."; $CellContext`makeFinalPlot[
           $CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`forceVector, $CellContext`westBCtype, $CellContext`eastBCtype], \
$CellContext`AA, $CellContext`grid, $CellContext`plotToShow, \
$CellContext`showGridLines]], $CellContext`initializeSystem[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`length, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`forceVector}, $CellContext`grid = 
          N[
            $CellContext`generatePhysicalCoordinates1D[$CellContext`h, \
$CellContext`length, $CellContext`centerGrid]]; $CellContext`n = 
          Length[$CellContext`grid]; $CellContext`u = 
          Table[0, {$CellContext`n}]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a, $CellContext`b, $CellContext`n0, \
$CellContext`x0, $CellContext`stdx, $CellContext`n, \
$CellContext`forceTermSelection, $CellContext`grid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue]; {$CellContext`AA, \
$CellContext`forceVector} = \
$CellContext`makeSystemAndRightHandSideVector[$CellContext`n, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`kValue, \
$CellContext`h, $CellContext`forceGrid, $CellContext`u]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector}], $CellContext`generatePhysicalCoordinates1D[
         PatternTest[
          Pattern[$CellContext`h, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`len, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`centerGrid, 
           Blank[]], Element[#, Booleans]& ]] := 
       Module[{$CellContext`i, $CellContext`nodes, $CellContext`intervals}, \
$CellContext`intervals = 
          Floor[$CellContext`len/$CellContext`h]; $CellContext`nodes = \
$CellContext`intervals + 1; Which[$CellContext`centerGrid == True, 
           If[
            OddQ[$CellContext`nodes], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`intervals/2), $CellContext`intervals/2, 1}], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`nodes/2) + 1, $CellContext`nodes/2, 
              1}]], $CellContext`centerGrid == False, 
           
           Table[$CellContext`h $CellContext`i, {$CellContext`i, 
             0, $CellContext`intervals, 1}]]], $CellContext`makeForceGrid[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0$, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]]] := 
       Module[{$CellContext`n0 = $CellContext`checkTerm[$CellContext`n0$], \
$CellContext`i}, 
         Which[$CellContext`forceTermSelection == 1, 
          
          Table[$CellContext`a, {$CellContext`n}], \
$CellContext`forceTermSelection == 2, 
          If[$CellContext`n0 == 0, 
           Table[$CellContext`a, {$CellContext`i, $CellContext`n}], 
           
           Table[$CellContext`a 
            Part[$CellContext`grid, $CellContext`i]^$CellContext`n0, \
{$CellContext`i, $CellContext`n}]], $CellContext`forceTermSelection == 3, 
          
          Table[($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
           Exp[(-(Part[$CellContext`grid, $CellContext`i] - \
$CellContext`x0)^2)/(
             2 $CellContext`stdx^2)], {$CellContext`i, $CellContext`n}], \
$CellContext`forceTermSelection == 4, 
          
          Table[$CellContext`a 
           Cos[($CellContext`b Pi) 
             Part[$CellContext`grid, $CellContext`i]], {$CellContext`i, \
$CellContext`n}]]], 
       Attributes[$CellContext`n0$] = {Temporary}, $CellContext`checkTerm[
         PatternTest[
          Pattern[$CellContext`t, 
           Blank[]], NumberQ[#]& ]] := 
       If[Abs[$CellContext`t - 1] < $MachineEpsilon, 1, 
         If[
         Abs[$CellContext`t] < $MachineEpsilon, 
          0, $CellContext`t]], $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u}, 
         If[$CellContext`westBCtype == "Dirichlet", 
           Part[$CellContext`u, 
             1] = $CellContext`westBCconstantValue $CellContext`westbc[
              Part[$CellContext`grid, 1]]]; 
         If[$CellContext`eastBCtype == "Dirichlet", 
           Part[$CellContext`u, -1] = $CellContext`eastBCconstantValue \
$CellContext`eastbc[
              
              Part[$CellContext`grid, -1]]]; $CellContext`u], \
$CellContext`makeSystemAndRightHandSideVector[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`u, 
          Blank[]]] := 
       Module[{$CellContext`forceVector, $CellContext`AA, $CellContext`kh = \
$CellContext`kValue $CellContext`h, $CellContext`omega}, $CellContext`omega = 
          2. Cos[$CellContext`kh] + $CellContext`kh^2; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, 1, 1] = 1.; 
           Part[$CellContext`AA, 1, 2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, 1, 3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = 0; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[2, -3]]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, -1, -1] = 1.; 
           Part[$CellContext`AA, -1, -2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, -1, -3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[3, -2]]; Part[$CellContext`forceVector, -1] = 0, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               2, $CellContext`n - 2}]; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 2}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1]; Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[
               3, -3]]]; {$CellContext`AA, $CellContext`forceVector}], \
$CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`finalDisplayImage}, 
         Which[$CellContext`plotToShow == 
           "solution", $CellContext`finalDisplayImage = Grid[{{
               ListPlot[
                Thread[{$CellContext`grid, $CellContext`u}], 
                ImagePadding -> {{45, 25}, {25, 20}}, PlotRange -> All, 
                Joined -> True, Mesh -> All, AxesLabel -> {
                  Text[
                   Style["x", Italic, 11]], 
                  Text[
                   Style[
                    Row[{
                    Style["u", Italic], "(", 
                    Style["x", Italic], ")"}], 11]]}, PlotLabel -> Text[
                  Style["finite difference solution"]], 
                ImageSize -> {$CellContext`ContentSizeW - 
                  20, $CellContext`ContentSizeH - 20}, AspectRatio -> 1, 
                TicksStyle -> 9, 
                
                If[$CellContext`showGridLines, GridLines -> Automatic, 
                 GridLines -> None], AxesOrigin -> {0, 0}]}}, 
             Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, 
             FrameStyle -> Directive[
               Thickness[0.005], Gray]], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             350, $CellContext`ContentSizeW - 20], $CellContext`plotToShow == 
           "system matrix information", 
           
           Block[{$CellContext`tmp, $CellContext`dim, $CellContext`m, \
$CellContext`cond}, $CellContext`cond = Part[
               LUDecomposition[
                Normal[$CellContext`AA]], 3]; $CellContext`dim = Dimensions[
               Normal[$CellContext`AA]]; $CellContext`m = Min[20, 
               First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
             Grid[{{
                 Style[
                  Text[
                   Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                 Style[
                  Text[
                   Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                 Style[
                  Text["eigenvalues"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Re[
                   Transpose[
                    Partition[
                    Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`m], 1]]], 
                  45, $CellContext`ContentSizeW - 20]}, {
                 Style[
                  Text["A matrix"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`m], 
                   Span[1, $CellContext`m]], $CellContext`ContentSizeH - 
                  150, $CellContext`ContentSizeW - 
                  20]}}]]]; $CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       295, $CellContext`ContentSizeH = 415, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`forceVector, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[1, -2]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Sommerfeld"], 
           Part[$CellContext`u, 
             Span[2, -1]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[2, -2]] = 
           LinearSolve[$CellContext`AA, $CellContext`forceVector]]; \
$CellContext`u], $CellContext`padIt3[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := 
       AccountingForm[$CellContext`v, $CellContext`f, NumberSigns -> {"", ""},
          NumberPadding -> {"0", "0"}, SignPadding -> True, NumberPoint -> 
         If[Part[$CellContext`f, 2] == 0, "", "."]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`getNDsolveResult[
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`f, $CellContext`x, $CellContext`eq, \
$CellContext`y, $CellContext`sol, $CellContext`boundaryConditions, \
$CellContext`from, $CellContext`to, $CellContext`plotOptions}, \
$CellContext`plotOptions = {
           PlotRange -> All, AxesOrigin -> {0, 0}, 
            ImagePadding -> {{40, 20}, {25, 30}}, PlotLabel -> Text[
              Style[
               Row[{
                 Style["NDSolve", "MR"], " solution"}], 12]], AxesLabel -> {
              Text[
               Style["x", Italic, 11]], 
              Text[
               Style[
                Row[{
                  Style["u", Italic], "(", 
                  Style["x", Italic], ")"}], 11]]}, 
            ImageSize -> {$CellContext`ContentSizeW - 
              20, $CellContext`ContentSizeH - 250}, AspectRatio -> 0.5, 
            PlotStyle -> Red, ImageMargins -> 1}; 
         If[$CellContext`centerGrid, $CellContext`from = -0.5; \
$CellContext`to = 0.5, $CellContext`from = 0; $CellContext`to = 
            1.]; $CellContext`f = 
          Which[$CellContext`forceTermSelection == 
            1, $CellContext`a, $CellContext`forceTermSelection == 
            2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
            3, ($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
            Exp[(-($CellContext`x - $CellContext`x0)^2)/(
              2 $CellContext`stdx^2)], $CellContext`forceTermSelection == 
            4, $CellContext`a 
            Cos[($CellContext`b Pi) $CellContext`x]]; $CellContext`eq = -
             Derivative[
              2][$CellContext`y][$CellContext`x] - $CellContext`k^2 \
$CellContext`y[$CellContext`x] == $CellContext`f; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = {
            Derivative[1][$CellContext`y][$CellContext`from] - (
               I $CellContext`k) $CellContext`y[$CellContext`from] == 
             0, $CellContext`y[$CellContext`to] == \
$CellContext`eastBCconstantValue}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, 
             Derivative[1][$CellContext`y][$CellContext`to] - (
               I $CellContext`k) $CellContext`y[$CellContext`to] == 0}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, \
$CellContext`y[$CellContext`to] == $CellContext`eastBCconstantValue}]; \
$CellContext`sol = ReplaceAll[$CellContext`y, 
            First[
             Quiet[
              NDSolve[
               
               Flatten[{$CellContext`eq, $CellContext`boundaryConditions}], \
$CellContext`y, {$CellContext`x, $CellContext`from, $CellContext`to}, 
               MaxSteps -> Infinity]]]]; If[$CellContext`showGridLines, 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions], GridLines -> Automatic], 
            FrameStyle -> Directive[
              Thickness[0.005], Gray]], 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions]], FrameStyle -> Directive[
              Thickness[0.005], Gray]]]], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, 
       Attributes[Subscript] = {NHoldRest}, $CellContext`forceTermUsedFormat1D[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`aa, 
          Blank[]], 
         Pattern[$CellContext`bb, 
          Blank[]], 
         Pattern[$CellContext`sstdx, 
          Blank[]], 
         Pattern[$CellContext`xx0, 
          Blank[]], 
         Pattern[$CellContext`nn0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`a = $CellContext`checkTerm[$CellContext`aa], \
$CellContext`b = $CellContext`checkTerm[$CellContext`bb], $CellContext`stdx = \
$CellContext`checkTerm[$CellContext`sstdx], $CellContext`x0 = \
$CellContext`checkTerm[$CellContext`xx0], $CellContext`n0 = \
$CellContext`checkTerm[$CellContext`nn0]}, 
         Which[$CellContext`forceTermSelection == 
          1, $CellContext`a, $CellContext`forceTermSelection == 
          2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
          3, ($CellContext`a (1/($CellContext`stdx HoldForm[
              Sqrt[2 Pi]]))) 
          Exp[(-($CellContext`x - $CellContext`x0)^2)/(
            2 $CellContext`stdx^2)], $CellContext`forceTermSelection == 
          4, $CellContext`a 
          Cos[$CellContext`b HoldForm[Pi $CellContext`x]]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5395516594617667`*^9, 3.5395516949832773`*^9}, {
   3.5398375060651755`*^9, 3.5398375146382637`*^9}, {3.5398382745967665`*^9, 
   3.5398382818356857`*^9}, {3.539838731841329*^9, 3.539838791831447*^9}, {
   3.540099783013501*^9, 3.5400997849027414`*^9}, 3.547560997037467*^9},
 CellID->1954172264]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell[TextData[{
 "This Demonstration implements a recently published algorithm of an improved \
finite difference scheme for solving the Helmholtz differential equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["U", 
       RowBox[{"x", "\[InvisibleSpace]", "x"}]]}], "-", 
     RowBox[{
      SuperscriptBox["k", "2"], "U"}]}], "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]], "InlineMath"],
 " in one dimension. Dirichlet and Sommerfeld boundary conditions are \
supported. Different source functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]], "InlineMath"],
 " can be specified. Sommerfeld boundary conditions can be specified at \
either end of the domain but not at both ends at the same time. The current \
value of points per wavelength (PPW) is shown at the top of the display. You \
can also vary the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " value. You can view the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath"],
 " and its eigenvalues using the dropdown menu in the top row."
}], "ManipulateCaption",
 CellChangeTimes->{{3.533091155215701*^9, 3.5330911557807336`*^9}, {
   3.5372447161772375`*^9, 3.537244895165966*^9}, {3.5372455464636707`*^9, 
   3.537245587230347*^9}, {3.537245821744627*^9, 3.5372458229102745`*^9}, {
   3.5372465099340153`*^9, 3.5372465638943677`*^9}, 3.5372494617858534`*^9, {
   3.537413751255966*^9, 3.5374138422865257`*^9}, {3.537413881726534*^9, 
   3.5374139060466223`*^9}, 3.537414146193617*^9, {3.537418067272531*^9, 
   3.537418067471056*^9}, {3.5375191520442553`*^9, 3.5375191609378853`*^9}, {
   3.5386250246019273`*^9, 3.5386250282423897`*^9}, 3.538625063378851*^9, {
   3.538641501850772*^9, 3.5386415212742386`*^9}, {3.5386415556431026`*^9, 
   3.5386417195939217`*^9}, {3.5391435486896777`*^9, 
   3.5391435677856026`*^9}, {3.5392019457976437`*^9, 3.53920195591927*^9}, {
   3.5392020010661488`*^9, 3.539202091667321*^9}, {3.5394840670841246`*^9, 
   3.5394840670841246`*^9}, {3.5394841792223644`*^9, 3.5394841925155525`*^9}, 
   3.547561098730206*^9, {3.5475614828230333`*^9, 3.5475614844819517`*^9}, {
   3.54757983229641*^9, 3.547579833404776*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    3.5, $CellContext`b$$ = -10., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`finalDisplayImage$$ = Grid[{{
       Graphics[
        GraphicsComplex[CompressedData["
1:eJxVlX9MlHUcx29qqUTLKWTMSaJTcP2BmzpZjd7I3GKtLUVS50jRiYhbgOIc
QhLOXzMOriRTSdG8c+Mm0A6u8eBOPsfdcwh6KgoEol1ZOUKp4RRzWSrPfd9P
W9/tdnd77j7P5/P+vN+vJ25jfnr2OIvFkj32Mt7V+VnMT5k232hC5k/SUnVr
wa/zj0OL3X9/hRYSy1Xr8oo7tYhueO9OcVRIPoo/UlX5YSO2JUf02Qt+lPHW
uLYpgWZcCRrntsxK2XHqnsuD+eGCtyVwutBx91MvjGqx+2/JvNW58a+k+jBW
bKzigCScvPxNUo0f7xrlkgekMvFByolDOqqPG+em2I9NbR9+puNxglGwX6yT
8uoPPtWRHm6wX1zvu/PLPtMRbq+hT+pmTpx0usKPcLmIPuneGnkv4y0fcjYb
5wfxyVFPVZYX/lGjYK8cbkyMWpnvwZvhBnsls7i8x1LcjBKjveIeySiZNfTd
vy6oct1yd+f6t4MLa7EwfLrl89C8uMG2owjLZ7shZRU39+4OrpJhY9z716Uo
p8Y3VFUtaeGBr0vk3I83nfrSKQ6jnL1L+l9esuKgvZF76JJHlWmZ56ZpovS/
Kq1Pl7609G+PKL2viB63ZXvbSa8ofYOSsy6mKLDeJ0rPSzI1Yc6yHS1+Ufp1
yoPZrzXY7LoovTpkebt1+oGYgCh9Lkqn1lH49dh3pUdAClod135z6KLm18V2
aWRDqfhFzeuX87lfrPmgwMf52iR6tx585PVyHq+UV8S+vrLkAvtvlZ6/crI6
hzT265E/zunT4v9sYn8tMuP54EXfmnr20yzabMs/7xw5w/u7ZUZM/ciuPTbe
zyVdiyKcC7RC+rNBhmvP9uxKO0a/OGXRxLy6xyEH9+eQSEfvhn3Zdfx9jaR+
cn7tTrh4/St50tR8Y2NpE7/vEy11cHRdyA0zFx3XFkf/kvG9eR1uXuf/McL/
sz6S/1ffgcm8P/tDEvtj/xjnVP1zPmQtVvNxfmhvqPmpD6qpD/XDk2dKP+qL
AepL/eGl/twPirgf7g+vcn/cL9zcL/ePcu6f/kAe/UH/wPQP/YV0+ov+w0P6
j/5EFP1J/yKX/qW/0U5/0/9op/+ZD1hsKh/MD35nfpgvJDJfzB905o/5RNlh
lU/mF0nML/MND/PN/COF+ScfkEY+kB8oJT/IF2jkC/mDTvKHfMIZ8on8gpP8
It9wgHwj//At+Uc+wko+kp+IJz/JV5h8JX9h8pd8hsln8hsTyG/yHavId/If
Jv/5fID5fODz47+cvACPU0QG
         "], {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            
            Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
             66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
             82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
             98, 99, 100, 101}]}}, {{
            Hue[0.67, 0.6, 0.6], 
            
            Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
             66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
             82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
             98, 99, 100, 101}]}, {}, {}}}], {
        AspectRatio -> 1, Axes -> True, AxesLabel -> {
           Text[
            Style["x", Italic, 11]], 
           Text[
            Style[
             Row[{
               Style["u", Italic], "(", 
               Style["x", Italic], ")"}], 11]]}, AxesOrigin -> {0, 0}, 
         GridLines -> Automatic, ImagePadding -> {{45, 25}, {25, 20}}, 
         ImageSize -> {275, 395}, PlotLabel -> Text[
           Style["finite difference solution"]], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, TicksStyle -> 9}]}}, 
     Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, FrameStyle -> 
     Directive[
       Thickness[0.005], 
       GrayLevel[0.5]]], $CellContext`forceTermSelection$$ = 
    3, $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    7.993605777301127*^-15, $CellContext`h$$ = 0.01, $CellContext`kValue$$ = 
    15., $CellContext`n0$$ = 10., $CellContext`plotToShow$$ = 
    "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
    0.08, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Grid[{{
              Grid[{{
                 Row[{
                   Text[
                    Style["k", Italic, 12]], 
                   Spacer[2], 
                   Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                   Spacer[2], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                 Row[{
                   Text[
                    Style["k h", Italic, 12]], " = ", 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                 Row[{
                   Text[
                    Style["PPW", 12]], " = ", 
                   Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
               Frame -> All, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}], 
           Grid[{{
              Framed[
               Text[
                Style[
                 Row[{"-", 
                   Style["u''", Italic], "(", 
                   Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                   Style["u", Italic], "(", 
                   Style["x", Italic], ") = ", 
                   Style["f", Italic], "(", 
                   Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]], 
              Grid[{{
                 Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                  Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None, 
                  FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
         Spacings -> {1, 0}]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                   Left]}, {
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                   Spacings -> {0, 0.15}]}, {
                  Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
             Style["source term", 11] -> Item[
               Grid[{{
                  PopupMenu[
                   
                   Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                   ContinuousAction -> False]}, {
                  Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                   FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                  Dynamic[
                   
                   Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                Center, Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`centerGrid$$], False}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`h$$], 0.02}, 0}, {{
       Hold[$CellContext`kValue$$], 10.}, 0}, {{
       Hold[$CellContext`n0$$], 2.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 3}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution"}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`showGridLines$$], True}, 0}}, Typeset`size$$ = {
    285., {200., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`b$$ = 
        0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = 
        "Dirichlet", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceTermSelection$$ = 3, $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        0.02, $CellContext`kValue$$ = 10., $CellContext`n0$$ = 
        2., $CellContext`plotToShow$$ = 
        "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
        0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; $CellContext`finalDisplayImage$$ = \
$CellContext`process[$CellContext`h$$, $CellContext`centerGrid$$, \
$CellContext`kValue$$, $CellContext`n0$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`x0$$, $CellContext`stdx$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, 
          
          Unevaluated[$CellContext`gstatusMessage$$], \
$CellContext`showGridLines$$]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray]]), "Specifications" :> {
        Item[
         Grid[{{
            Grid[{{
               Grid[{{
                  Row[{
                    Text[
                    Style["k", Italic, 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                  Row[{
                    Text[
                    Style["k h", Italic, 12]], " = ", 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                  Row[{
                    Text[
                    Style["PPW", 12]], " = ", 
                    Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
                Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}], 
            Grid[{{
               Framed[
                Text[
                 Style[
                  Row[{"-", 
                    Style["u''", Italic], "(", 
                    Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                    Style["u", Italic], "(", 
                    Style["x", Italic], ") = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], 
               Grid[{{
                  Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                   Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None,
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
          Spacings -> {1, 0}], ControlPlacement -> Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                    Left]}, {
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                    Spacings -> {0, 0.15}]}, {
                   Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                 Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
              Style["source term", 11] -> Item[
                Grid[{{
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                    ContinuousAction -> False]}, {
                   Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                   Dynamic[
                    
                    Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                 Center, Frame -> All, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}], 
         ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, False}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`h$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 10.}, 0, ControlType -> 
         None}, {{$CellContext`n0$$, 2.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution"}, 0, ControlType -> 
         None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`showGridLines$$, True}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousInitialization -> True, 
        SynchronousUpdating -> False, ContinuousAction -> False, Alignment -> 
        Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{616., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`Lx = 
          1, $CellContext`forceVector, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA}, \
{$CellContext`grid, $CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector} = $CellContext`initializeSystem[$CellContext`h, \
$CellContext`Lx, $CellContext`centerGrid, $CellContext`forceTermSelection, \
$CellContext`a, $CellContext`b, $CellContext`n0, $CellContext`x0, \
$CellContext`stdx, $CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue, $CellContext`kValue]; \
$CellContext`gstatusMessage = "ready.."; $CellContext`makeFinalPlot[
           $CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`forceVector, $CellContext`westBCtype, $CellContext`eastBCtype], \
$CellContext`AA, $CellContext`grid, $CellContext`plotToShow, \
$CellContext`showGridLines]], $CellContext`initializeSystem[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`length, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`forceVector}, $CellContext`grid = 
          N[
            $CellContext`generatePhysicalCoordinates1D[$CellContext`h, \
$CellContext`length, $CellContext`centerGrid]]; $CellContext`n = 
          Length[$CellContext`grid]; $CellContext`u = 
          Table[0, {$CellContext`n}]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a, $CellContext`b, $CellContext`n0, \
$CellContext`x0, $CellContext`stdx, $CellContext`n, \
$CellContext`forceTermSelection, $CellContext`grid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue]; {$CellContext`AA, \
$CellContext`forceVector} = \
$CellContext`makeSystemAndRightHandSideVector[$CellContext`n, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`kValue, \
$CellContext`h, $CellContext`forceGrid, $CellContext`u]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector}], $CellContext`generatePhysicalCoordinates1D[
         PatternTest[
          Pattern[$CellContext`h, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`len, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`centerGrid, 
           Blank[]], Element[#, Booleans]& ]] := 
       Module[{$CellContext`i, $CellContext`nodes, $CellContext`intervals}, \
$CellContext`intervals = 
          Floor[$CellContext`len/$CellContext`h]; $CellContext`nodes = \
$CellContext`intervals + 1; Which[$CellContext`centerGrid == True, 
           If[
            OddQ[$CellContext`nodes], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`intervals/2), $CellContext`intervals/2, 1}], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`nodes/2) + 1, $CellContext`nodes/2, 
              1}]], $CellContext`centerGrid == False, 
           
           Table[$CellContext`h $CellContext`i, {$CellContext`i, 
             0, $CellContext`intervals, 1}]]], $CellContext`makeForceGrid[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0$, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]]] := 
       Module[{$CellContext`n0 = $CellContext`checkTerm[$CellContext`n0$], \
$CellContext`i}, 
         Which[$CellContext`forceTermSelection == 1, 
          
          Table[$CellContext`a, {$CellContext`n}], \
$CellContext`forceTermSelection == 2, 
          If[$CellContext`n0 == 0, 
           Table[$CellContext`a, {$CellContext`i, $CellContext`n}], 
           
           Table[$CellContext`a 
            Part[$CellContext`grid, $CellContext`i]^$CellContext`n0, \
{$CellContext`i, $CellContext`n}]], $CellContext`forceTermSelection == 3, 
          
          Table[($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
           Exp[-((Part[$CellContext`grid, $CellContext`i] - \
$CellContext`x0)^2/(
              2 $CellContext`stdx^2))], {$CellContext`i, $CellContext`n}], \
$CellContext`forceTermSelection == 4, 
          
          Table[$CellContext`a 
           Cos[($CellContext`b Pi) 
             Part[$CellContext`grid, $CellContext`i]], {$CellContext`i, \
$CellContext`n}]]], 
       Attributes[$CellContext`n0$] = {Temporary}, $CellContext`checkTerm[
         PatternTest[
          Pattern[$CellContext`t, 
           Blank[]], NumberQ[#]& ]] := 
       If[Abs[$CellContext`t - 1] < $MachineEpsilon, 1, 
         If[
         Abs[$CellContext`t] < $MachineEpsilon, 
          0, $CellContext`t]], $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u}, 
         If[$CellContext`westBCtype == "Dirichlet", 
           Part[$CellContext`u, 
             1] = $CellContext`westBCconstantValue $CellContext`westbc[
              Part[$CellContext`grid, 1]]]; 
         If[$CellContext`eastBCtype == "Dirichlet", 
           Part[$CellContext`u, -1] = $CellContext`eastBCconstantValue \
$CellContext`eastbc[
              
              Part[$CellContext`grid, -1]]]; $CellContext`u], \
$CellContext`makeSystemAndRightHandSideVector[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`u, 
          Blank[]]] := 
       Module[{$CellContext`forceVector, $CellContext`AA, $CellContext`kh = \
$CellContext`kValue $CellContext`h, $CellContext`omega}, $CellContext`omega = 
          2. Cos[$CellContext`kh] + $CellContext`kh^2; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, 1, 1] = 1.; 
           Part[$CellContext`AA, 1, 2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, 1, 3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = 0; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[2, -3]]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, -1, -1] = 1.; 
           Part[$CellContext`AA, -1, -2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, -1, -3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[3, -2]]; Part[$CellContext`forceVector, -1] = 0, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               2, $CellContext`n - 2}]; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 2}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1]; Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[
               3, -3]]]; {$CellContext`AA, $CellContext`forceVector}], \
$CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`finalDisplayImage}, 
         Which[$CellContext`plotToShow == 
           "solution", $CellContext`finalDisplayImage = Grid[{{
               ListPlot[
                Thread[{$CellContext`grid, $CellContext`u}], 
                ImagePadding -> {{45, 25}, {25, 20}}, PlotRange -> All, 
                Joined -> True, Mesh -> All, AxesLabel -> {
                  Text[
                   Style["x", Italic, 11]], 
                  Text[
                   Style[
                    Row[{
                    Style["u", Italic], "(", 
                    Style["x", Italic], ")"}], 11]]}, PlotLabel -> Text[
                  Style["finite difference solution"]], 
                ImageSize -> {$CellContext`ContentSizeW - 
                  20, $CellContext`ContentSizeH - 20}, AspectRatio -> 1, 
                TicksStyle -> 9, 
                
                If[$CellContext`showGridLines, GridLines -> Automatic, 
                 GridLines -> None], AxesOrigin -> {0, 0}]}}, 
             Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, 
             FrameStyle -> Directive[
               Thickness[0.005], Gray]], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             350, $CellContext`ContentSizeW - 20], $CellContext`plotToShow == 
           "system matrix information", 
           
           Block[{$CellContext`tmp, $CellContext`dim, $CellContext`m, \
$CellContext`cond}, $CellContext`cond = Part[
               LUDecomposition[
                Normal[$CellContext`AA]], 3]; $CellContext`dim = Dimensions[
               Normal[$CellContext`AA]]; $CellContext`m = Min[20, 
               First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
             Grid[{{
                 Style[
                  Text[
                   Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                 Style[
                  Text[
                   Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                 Style[
                  Text["eigenvalues"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Re[
                   Transpose[
                    Partition[
                    Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`m], 1]]], 
                  45, $CellContext`ContentSizeW - 20]}, {
                 Style[
                  Text["A matrix"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`m], 
                   Span[1, $CellContext`m]], $CellContext`ContentSizeH - 
                  150, $CellContext`ContentSizeW - 
                  20]}}]]]; $CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       295, $CellContext`ContentSizeH = 415, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`forceVector, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[1, -2]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Sommerfeld"], 
           Part[$CellContext`u, 
             Span[2, -1]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[2, -2]] = 
           LinearSolve[$CellContext`AA, $CellContext`forceVector]]; \
$CellContext`u], $CellContext`padIt3[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := 
       AccountingForm[$CellContext`v, $CellContext`f, NumberSigns -> {"", ""},
          NumberPadding -> {"0", "0"}, SignPadding -> True, NumberPoint -> 
         If[Part[$CellContext`f, 2] == 0, "", "."]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`getNDsolveResult[
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`f, $CellContext`x, $CellContext`eq, \
$CellContext`y, $CellContext`sol, $CellContext`boundaryConditions, \
$CellContext`from, $CellContext`to, $CellContext`plotOptions}, \
$CellContext`plotOptions = {
           PlotRange -> All, AxesOrigin -> {0, 0}, 
            ImagePadding -> {{40, 20}, {25, 30}}, PlotLabel -> Text[
              Style[
               Row[{
                 Style["NDSolve", "MR"], " solution"}], 12]], AxesLabel -> {
              Text[
               Style["x", Italic, 11]], 
              Text[
               Style[
                Row[{
                  Style["u", Italic], "(", 
                  Style["x", Italic], ")"}], 11]]}, 
            ImageSize -> {$CellContext`ContentSizeW - 
              20, $CellContext`ContentSizeH - 250}, AspectRatio -> 0.5, 
            PlotStyle -> Red, ImageMargins -> 1}; 
         If[$CellContext`centerGrid, $CellContext`from = -0.5; \
$CellContext`to = 0.5, $CellContext`from = 0; $CellContext`to = 
            1.]; $CellContext`f = 
          Which[$CellContext`forceTermSelection == 
            1, $CellContext`a, $CellContext`forceTermSelection == 
            2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
            3, ($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
               2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
            4, $CellContext`a 
            Cos[($CellContext`b Pi) $CellContext`x]]; $CellContext`eq = -
             Derivative[
              2][$CellContext`y][$CellContext`x] - $CellContext`k^2 \
$CellContext`y[$CellContext`x] == $CellContext`f; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = {
            Derivative[1][$CellContext`y][$CellContext`from] - (
               I $CellContext`k) $CellContext`y[$CellContext`from] == 
             0, $CellContext`y[$CellContext`to] == \
$CellContext`eastBCconstantValue}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, 
             Derivative[1][$CellContext`y][$CellContext`to] - (
               I $CellContext`k) $CellContext`y[$CellContext`to] == 0}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, \
$CellContext`y[$CellContext`to] == $CellContext`eastBCconstantValue}]; \
$CellContext`sol = ReplaceAll[$CellContext`y, 
            First[
             Quiet[
              NDSolve[
               
               Flatten[{$CellContext`eq, $CellContext`boundaryConditions}], \
$CellContext`y, {$CellContext`x, $CellContext`from, $CellContext`to}, 
               MaxSteps -> Infinity]]]]; If[$CellContext`showGridLines, 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions], GridLines -> Automatic], 
            FrameStyle -> Directive[
              Thickness[0.005], Gray]], 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions]], FrameStyle -> Directive[
              Thickness[0.005], Gray]]]], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, 
       Attributes[Subscript] = {NHoldRest}, $CellContext`forceTermUsedFormat1D[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`aa, 
          Blank[]], 
         Pattern[$CellContext`bb, 
          Blank[]], 
         Pattern[$CellContext`sstdx, 
          Blank[]], 
         Pattern[$CellContext`xx0, 
          Blank[]], 
         Pattern[$CellContext`nn0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`a = $CellContext`checkTerm[$CellContext`aa], \
$CellContext`b = $CellContext`checkTerm[$CellContext`bb], $CellContext`stdx = \
$CellContext`checkTerm[$CellContext`sstdx], $CellContext`x0 = \
$CellContext`checkTerm[$CellContext`xx0], $CellContext`n0 = \
$CellContext`checkTerm[$CellContext`nn0]}, 
         Which[$CellContext`forceTermSelection == 
          1, $CellContext`a, $CellContext`forceTermSelection == 
          2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
          3, ($CellContext`a (1/($CellContext`stdx HoldForm[
              Sqrt[2 Pi]]))) 
          Exp[-(($CellContext`x - $CellContext`x0)^2/(
             2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
          4, $CellContext`a 
          Cos[$CellContext`b HoldForm[Pi $CellContext`x]]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5395516594617667`*^9, 3.5395516949832773`*^9}, {
  3.5398375060651755`*^9, 3.5398375146382637`*^9}, {3.5398382745967665`*^9, 
  3.5398382818356857`*^9}, {3.539838731841329*^9, 3.539838791831447*^9}, {
  3.540099783013501*^9, 3.5400998303985186`*^9}},
 CellID->528674914]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    10., $CellContext`b$$ = -10., $CellContext`centerGrid$$ = 
    True, $CellContext`del$$ = 2.220446049250313*^-16, $CellContext`eastbc$$ =
     1& , $CellContext`eastBCconstantValue$$ = 0, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`finalDisplayImage$$ = Grid[{{
       Style[
        Text[
         Row[{"condition number = ", 15.165901562337693`}]], 12]}, {
       Style[
        Text[
         Row[{"matrix size = ", {9, 9}}]], 12]}, {
       Style[
        Text["eigenvalues"], 12]}, {
       Pane[
        Text[
         Style[
          NumberForm[
           
           Grid[{{2.7792076877390888`, 2.4951286438986755`, 
            2.0526651597337287`, 1.4951286438986748`, -1.0250183774415265`, 
            0.8770946551487817, -0.7409393336011137, -0.2984758494361653, 
            0.2590606663988862}}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All], {6, 5}, NumberSigns -> {"-", ""}, 
           NumberPadding -> {"", ""}, SignPadding -> True], LineBreakWithin -> 
          False]], ImageSize -> {275, 45}, Scrollbars -> True]}, {
       Style[
        Text["A matrix"], 12]}, {
       Pane[
        Text[
         Style[
          NumberForm[
           Grid[
           SparseArray[
            Automatic, {9, 9}, 0, {
             1, {{0, 2, 5, 8, 11, 14, 17, 20, 23, 25}, {{1}, {2}, {3}, {1}, {
               2}, {2}, {3}, {4}, {4}, {5}, {3}, {4}, {6}, {5}, {7}, {5}, {
               6}, {8}, {7}, {6}, {9}, {8}, {7}, {9}, {8}}}, {
              0.877094655148781, -1., -1., -1., 0.877094655148781, -1., 
              0.877094655148781, -1., 0.877094655148781, -1., -1., -1., -1., 
              0.877094655148781, -1., -1., 0.877094655148781, -1., 
              0.877094655148781, -1., -1., 0.877094655148781, -1., 
              0.877094655148781, -1.}}], Spacings -> {0.4, 0.4}, Alignment -> 
            Left, Frame -> All], {6, 5}, NumberSigns -> {"-", ""}, 
           NumberPadding -> {"", ""}, SignPadding -> True], LineBreakWithin -> 
          False]], ImageSize -> {275, 265}, Scrollbars -> 
        True]}}], $CellContext`forceTermSelection$$ = 
    2, $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    7.993605777301127*^-15, $CellContext`h$$ = 0.1, $CellContext`kValue$$ = 
    74., $CellContext`n0$$ = 10., $CellContext`plotToShow$$ = 
    "system matrix information", $CellContext`showGridLines$$ = 
    True, $CellContext`stdx$$ = 0.01, $CellContext`westbc$$ = 
    1& , $CellContext`westBCconstantValue$$ = 0, $CellContext`westBCtype$$ = 
    "Dirichlet", $CellContext`x0$$ = -0.52, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Grid[{{
              Grid[{{
                 Row[{
                   Text[
                    Style["k", Italic, 12]], 
                   Spacer[2], 
                   Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                   Spacer[2], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                 Row[{
                   Text[
                    Style["k h", Italic, 12]], " = ", 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                 Row[{
                   Text[
                    Style["PPW", 12]], " = ", 
                   Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
               Frame -> All, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}], 
           Grid[{{
              Framed[
               Text[
                Style[
                 Row[{"-", 
                   Style["u''", Italic], "(", 
                   Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                   Style["u", Italic], "(", 
                   Style["x", Italic], ") = ", 
                   Style["f", Italic], "(", 
                   Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]], 
              Grid[{{
                 Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                  Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None, 
                  FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
         Spacings -> {1, 0}]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                   Left]}, {
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                   Spacings -> {0, 0.15}]}, {
                  Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
             Style["source term", 11] -> Item[
               Grid[{{
                  PopupMenu[
                   
                   Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                   ContinuousAction -> False]}, {
                  Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                   FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                  Dynamic[
                   
                   Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                Center, Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`centerGrid$$], False}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`h$$], 0.02}, 0}, {{
       Hold[$CellContext`kValue$$], 10.}, 0}, {{
       Hold[$CellContext`n0$$], 2.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 3}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution"}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`showGridLines$$], True}, 0}}, Typeset`size$$ = {
    285., {194., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`b$$ = 
        0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = 
        "Dirichlet", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceTermSelection$$ = 3, $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        0.02, $CellContext`kValue$$ = 10., $CellContext`n0$$ = 
        2., $CellContext`plotToShow$$ = 
        "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
        0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; $CellContext`finalDisplayImage$$ = \
$CellContext`process[$CellContext`h$$, $CellContext`centerGrid$$, \
$CellContext`kValue$$, $CellContext`n0$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`x0$$, $CellContext`stdx$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, 
          
          Unevaluated[$CellContext`gstatusMessage$$], \
$CellContext`showGridLines$$]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray]]), "Specifications" :> {
        Item[
         Grid[{{
            Grid[{{
               Grid[{{
                  Row[{
                    Text[
                    Style["k", Italic, 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                  Row[{
                    Text[
                    Style["k h", Italic, 12]], " = ", 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                  Row[{
                    Text[
                    Style["PPW", 12]], " = ", 
                    Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
                Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}], 
            Grid[{{
               Framed[
                Text[
                 Style[
                  Row[{"-", 
                    Style["u''", Italic], "(", 
                    Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                    Style["u", Italic], "(", 
                    Style["x", Italic], ") = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], 
               Grid[{{
                  Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                   Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None,
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
          Spacings -> {1, 0}], ControlPlacement -> Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                    Left]}, {
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                    Spacings -> {0, 0.15}]}, {
                   Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                 Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
              Style["source term", 11] -> Item[
                Grid[{{
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                    ContinuousAction -> False]}, {
                   Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                   Dynamic[
                    
                    Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                 Center, Frame -> All, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}], 
         ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, False}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`h$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 10.}, 0, ControlType -> 
         None}, {{$CellContext`n0$$, 2.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution"}, 0, ControlType -> 
         None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`showGridLines$$, True}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousInitialization -> True, 
        SynchronousUpdating -> False, ContinuousAction -> False, Alignment -> 
        Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{616., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`Lx = 
          1, $CellContext`forceVector, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA}, \
{$CellContext`grid, $CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector} = $CellContext`initializeSystem[$CellContext`h, \
$CellContext`Lx, $CellContext`centerGrid, $CellContext`forceTermSelection, \
$CellContext`a, $CellContext`b, $CellContext`n0, $CellContext`x0, \
$CellContext`stdx, $CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue, $CellContext`kValue]; \
$CellContext`gstatusMessage = "ready.."; $CellContext`makeFinalPlot[
           $CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`forceVector, $CellContext`westBCtype, $CellContext`eastBCtype], \
$CellContext`AA, $CellContext`grid, $CellContext`plotToShow, \
$CellContext`showGridLines]], $CellContext`initializeSystem[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`length, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`forceVector}, $CellContext`grid = 
          N[
            $CellContext`generatePhysicalCoordinates1D[$CellContext`h, \
$CellContext`length, $CellContext`centerGrid]]; $CellContext`n = 
          Length[$CellContext`grid]; $CellContext`u = 
          Table[0, {$CellContext`n}]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a, $CellContext`b, $CellContext`n0, \
$CellContext`x0, $CellContext`stdx, $CellContext`n, \
$CellContext`forceTermSelection, $CellContext`grid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue]; {$CellContext`AA, \
$CellContext`forceVector} = \
$CellContext`makeSystemAndRightHandSideVector[$CellContext`n, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`kValue, \
$CellContext`h, $CellContext`forceGrid, $CellContext`u]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector}], $CellContext`generatePhysicalCoordinates1D[
         PatternTest[
          Pattern[$CellContext`h, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`len, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`centerGrid, 
           Blank[]], Element[#, Booleans]& ]] := 
       Module[{$CellContext`i, $CellContext`nodes, $CellContext`intervals}, \
$CellContext`intervals = 
          Floor[$CellContext`len/$CellContext`h]; $CellContext`nodes = \
$CellContext`intervals + 1; Which[$CellContext`centerGrid == True, 
           If[
            OddQ[$CellContext`nodes], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`intervals/2), $CellContext`intervals/2, 1}], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`nodes/2) + 1, $CellContext`nodes/2, 
              1}]], $CellContext`centerGrid == False, 
           
           Table[$CellContext`h $CellContext`i, {$CellContext`i, 
             0, $CellContext`intervals, 1}]]], $CellContext`makeForceGrid[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0$, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]]] := 
       Module[{$CellContext`n0 = $CellContext`checkTerm[$CellContext`n0$], \
$CellContext`i}, 
         Which[$CellContext`forceTermSelection == 1, 
          
          Table[$CellContext`a, {$CellContext`n}], \
$CellContext`forceTermSelection == 2, 
          If[$CellContext`n0 == 0, 
           Table[$CellContext`a, {$CellContext`i, $CellContext`n}], 
           Table[$CellContext`a 
            Part[$CellContext`grid, $CellContext`i]^$CellContext`n0, \
{$CellContext`i, $CellContext`n}]], $CellContext`forceTermSelection == 3, 
          
          Table[($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
           Exp[-((Part[$CellContext`grid, $CellContext`i] - \
$CellContext`x0)^2/(
              2 $CellContext`stdx^2))], {$CellContext`i, $CellContext`n}], \
$CellContext`forceTermSelection == 4, 
          
          Table[$CellContext`a 
           Cos[($CellContext`b Pi) 
             Part[$CellContext`grid, $CellContext`i]], {$CellContext`i, \
$CellContext`n}]]], 
       Attributes[$CellContext`n0$] = {Temporary}, $CellContext`checkTerm[
         PatternTest[
          Pattern[$CellContext`t, 
           Blank[]], NumberQ[#]& ]] := 
       If[Abs[$CellContext`t - 1] < $MachineEpsilon, 1, 
         If[
         Abs[$CellContext`t] < $MachineEpsilon, 
          0, $CellContext`t]], $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u}, 
         If[$CellContext`westBCtype == "Dirichlet", 
           Part[$CellContext`u, 
             1] = $CellContext`westBCconstantValue $CellContext`westbc[
              Part[$CellContext`grid, 1]]]; 
         If[$CellContext`eastBCtype == "Dirichlet", 
           Part[$CellContext`u, -1] = $CellContext`eastBCconstantValue \
$CellContext`eastbc[
              
              Part[$CellContext`grid, -1]]]; $CellContext`u], \
$CellContext`makeSystemAndRightHandSideVector[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`u, 
          Blank[]]] := 
       Module[{$CellContext`forceVector, $CellContext`AA, $CellContext`kh = \
$CellContext`kValue $CellContext`h, $CellContext`omega}, $CellContext`omega = 
          2. Cos[$CellContext`kh] + $CellContext`kh^2; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, 1, 1] = 1.; 
           Part[$CellContext`AA, 1, 2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, 1, 3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = 0; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[2, -3]]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, -1, -1] = 1.; 
           Part[$CellContext`AA, -1, -2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, -1, -3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[3, -2]]; Part[$CellContext`forceVector, -1] = 0, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               2, $CellContext`n - 2}]; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 2}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1]; Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[
               3, -3]]]; {$CellContext`AA, $CellContext`forceVector}], \
$CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`finalDisplayImage}, 
         Which[$CellContext`plotToShow == 
           "solution", $CellContext`finalDisplayImage = Grid[{{
               ListPlot[
                Thread[{$CellContext`grid, $CellContext`u}], 
                ImagePadding -> {{45, 25}, {25, 20}}, PlotRange -> All, 
                Joined -> True, Mesh -> All, AxesLabel -> {
                  Text[
                   Style["x", Italic, 11]], 
                  Text[
                   Style[
                    Row[{
                    Style["u", Italic], "(", 
                    Style["x", Italic], ")"}], 11]]}, PlotLabel -> Text[
                  Style["finite difference solution"]], 
                ImageSize -> {$CellContext`ContentSizeW - 
                  20, $CellContext`ContentSizeH - 20}, AspectRatio -> 1, 
                TicksStyle -> 9, 
                
                If[$CellContext`showGridLines, GridLines -> Automatic, 
                 GridLines -> None], AxesOrigin -> {0, 0}]}}, 
             Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, 
             FrameStyle -> Directive[
               Thickness[0.005], Gray]], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             350, $CellContext`ContentSizeW - 20], $CellContext`plotToShow == 
           "system matrix information", 
           
           Block[{$CellContext`tmp, $CellContext`dim, $CellContext`m, \
$CellContext`cond}, $CellContext`cond = Part[
               LUDecomposition[
                Normal[$CellContext`AA]], 3]; $CellContext`dim = Dimensions[
               Normal[$CellContext`AA]]; $CellContext`m = Min[20, 
               First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
             Grid[{{
                 Style[
                  Text[
                   Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                 Style[
                  Text[
                   Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                 Style[
                  Text["eigenvalues"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Re[
                   Transpose[
                    Partition[
                    Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`m], 1]]], 
                  45, $CellContext`ContentSizeW - 20]}, {
                 Style[
                  Text["A matrix"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`m], 
                   Span[1, $CellContext`m]], $CellContext`ContentSizeH - 
                  150, $CellContext`ContentSizeW - 
                  20]}}]]]; $CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       295, $CellContext`ContentSizeH = 415, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`forceVector, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[1, -2]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Sommerfeld"], 
           Part[$CellContext`u, 
             Span[2, -1]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[2, -2]] = 
           LinearSolve[$CellContext`AA, $CellContext`forceVector]]; \
$CellContext`u], $CellContext`padIt3[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := 
       AccountingForm[$CellContext`v, $CellContext`f, NumberSigns -> {"", ""},
          NumberPadding -> {"0", "0"}, SignPadding -> True, NumberPoint -> 
         If[Part[$CellContext`f, 2] == 0, "", "."]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`getNDsolveResult[
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`f, $CellContext`x, $CellContext`eq, \
$CellContext`y, $CellContext`sol, $CellContext`boundaryConditions, \
$CellContext`from, $CellContext`to, $CellContext`plotOptions}, \
$CellContext`plotOptions = {
           PlotRange -> All, AxesOrigin -> {0, 0}, 
            ImagePadding -> {{40, 20}, {25, 30}}, PlotLabel -> Text[
              Style[
               Row[{
                 Style["NDSolve", "MR"], " solution"}], 12]], AxesLabel -> {
              Text[
               Style["x", Italic, 11]], 
              Text[
               Style[
                Row[{
                  Style["u", Italic], "(", 
                  Style["x", Italic], ")"}], 11]]}, 
            ImageSize -> {$CellContext`ContentSizeW - 
              20, $CellContext`ContentSizeH - 250}, AspectRatio -> 0.5, 
            PlotStyle -> Red, ImageMargins -> 1}; 
         If[$CellContext`centerGrid, $CellContext`from = -0.5; \
$CellContext`to = 0.5, $CellContext`from = 0; $CellContext`to = 
            1.]; $CellContext`f = 
          Which[$CellContext`forceTermSelection == 
            1, $CellContext`a, $CellContext`forceTermSelection == 
            2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
            3, ($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
               2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
            4, $CellContext`a 
            Cos[($CellContext`b Pi) $CellContext`x]]; $CellContext`eq = -
             Derivative[
              2][$CellContext`y][$CellContext`x] - $CellContext`k^2 \
$CellContext`y[$CellContext`x] == $CellContext`f; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = {
            Derivative[1][$CellContext`y][$CellContext`from] - (
               I $CellContext`k) $CellContext`y[$CellContext`from] == 
             0, $CellContext`y[$CellContext`to] == \
$CellContext`eastBCconstantValue}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, 
             Derivative[1][$CellContext`y][$CellContext`to] - (
               I $CellContext`k) $CellContext`y[$CellContext`to] == 0}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, \
$CellContext`y[$CellContext`to] == $CellContext`eastBCconstantValue}]; \
$CellContext`sol = ReplaceAll[$CellContext`y, 
            First[
             Quiet[
              NDSolve[
               
               Flatten[{$CellContext`eq, $CellContext`boundaryConditions}], \
$CellContext`y, {$CellContext`x, $CellContext`from, $CellContext`to}, 
               MaxSteps -> Infinity]]]]; If[$CellContext`showGridLines, 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions], GridLines -> Automatic], 
            FrameStyle -> Directive[
              Thickness[0.005], Gray]], 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions]], FrameStyle -> Directive[
              Thickness[0.005], Gray]]]], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, 
       Attributes[Subscript] = {NHoldRest}, $CellContext`forceTermUsedFormat1D[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`aa, 
          Blank[]], 
         Pattern[$CellContext`bb, 
          Blank[]], 
         Pattern[$CellContext`sstdx, 
          Blank[]], 
         Pattern[$CellContext`xx0, 
          Blank[]], 
         Pattern[$CellContext`nn0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`a = $CellContext`checkTerm[$CellContext`aa], \
$CellContext`b = $CellContext`checkTerm[$CellContext`bb], $CellContext`stdx = \
$CellContext`checkTerm[$CellContext`sstdx], $CellContext`x0 = \
$CellContext`checkTerm[$CellContext`xx0], $CellContext`n0 = \
$CellContext`checkTerm[$CellContext`nn0]}, 
         Which[$CellContext`forceTermSelection == 
          1, $CellContext`a, $CellContext`forceTermSelection == 
          2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
          3, ($CellContext`a (1/($CellContext`stdx HoldForm[
              Sqrt[2 Pi]]))) 
          Exp[-(($CellContext`x - $CellContext`x0)^2/(
             2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
          4, $CellContext`a 
          Cos[$CellContext`b HoldForm[Pi $CellContext`x]]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5395516594617667`*^9, 3.5395516949832773`*^9}, {
  3.5398375060651755`*^9, 3.5398375146382637`*^9}, {3.5398382745967665`*^9, 
  3.5398382818356857`*^9}, {3.539838731841329*^9, 3.539838791831447*^9}, {
  3.540099783013501*^9, 3.5400997849027414`*^9}},
 CellID->558174611],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10., $CellContext`b$$ = 
    10., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
    2.220446049250313*^-16, $CellContext`eastbc$$ = 
    1& , $CellContext`eastBCconstantValue$$ = 
    11.5, $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`finalDisplayImage$$ = Grid[{{
       Graphics[
        GraphicsComplex[CompressedData["
1:eJw1mXdYE1kbxUGBuIqAEjVCMCRkBmzYC7p6xoZl7V1UdMVePkV0VUSKvSso
otgLtlUWO6KSAREBRXpvCTWhKooFRL8k9zL/8OQh3LnlvOd33ot02caZK1oZ
GBg0GBoY6H62PAGV/3izey24n3c+pU5ZthSdmsI2zrggpp83Yff+hU1L29px
jd5rX245tR3W7Ud+PSlg6e99UTPHeu/R3yy3Uxg6XuW5F5LsPgWBeQz9/kHA
Y/FOj6cyboeG7dfm3lEU9BMafntkTf/+JBqig82dVGbcn0XTjgX9LwCmojK+
qGc+yHinEXfQIvuXQxs+YqJpq54HzsD50F/9eiaLeDL+WXRMsm7/7zUpP+xx
3D+Rl4Oxa0FNt5FgePK+C1jj9Xi7kYblw7vtq5oRfgnFy+IN6rezPHn/FWxz
9zk+5YcdfyHGNmzz6qsoftthis9ECU/mcw1v0/GqOMqSz/uhe+F1ZN7dEZh4
54eCzO8G9uTfue1q9gvWfQrkJn4hOHmmOHBIlJAj872J4DCT6/HtbDmX5cO1
I97Cp7qqk9xIOd2f21hT4J+3LZDlgs/pnjv4WimUeeWyHFnPXZyRDdzww4Th
cj58m1US8i8Mnv8XmTROSvfzHjaNu988obAL19Vorlnvh/eR0uP64oGGJhxZ
byguGX9J/9ZYrpjvpBvwP1hXJj8q3WlB1x+Ged8WRa4OFPOThxwatbQsDD+z
hBNrBC378QArLv9n72LC8tUzdCM+gPOYse4PfrN0fx7iYsZIWacChj+yvqLp
zqeHsKieEtTzuYzu1yOknRK9X/jCmu95oLN2CY8QMXTFzNP1ZjzZv8fY3DvK
8WJkvuLd1XFPPzc/RtPe01fnd2nDkf18Alfb3ot940TcOu1uiYyewuC3ZE7M
ZSnd36fIduKlR0YwXNus65tGtH2GLxtvuoWqWbrfz6DZErm4lSfL3dUt1yIc
L23nLrvf1KLncMjnD+7kMV3CTdIN1/k54hf2jFufYEnP4zncjllVjE36gUrd
dosj8JBb4lyjblaQ84nA3I5jRz8IF/K63UuWvcDx6G83Z7Sx5cl5vcCaY+9M
VMPlfPdFJ6IbHF5ia9gjs+WnWarPl2g9oc+TuFyWj9eOZtXnFSZbXvYMbsPw
5DxfQTroypdzE6T8Gv8aLwyKxKAxBsOvlXWheo5E9ylmiYYdTXjt5LRLVuD+
/i+F2U/KQc5bgfTkS1k5Hhbc7JKQ8zG2PB6Ejh2kON5S3zxuZ9wYeNHYjruh
3b2s6zwk0+7WTDJmOaIHHh0GTM4wNLDnvjSnb9ewURiU0OXO60KGI/qIQrJX
2PXOL2XcWL0AotB3dPSJ3q+tOaKXKFjUDm2XZWTOnRbpFhSNM2+eGvycXwCi
n2i4zTq786FRG14/vbBohM/LGD6dF1E9RWO5uFfw2QtSfoD+eY0Q+X0r/+EM
1ddr7Ju47ay5muX38AlaBb3GuslDnsZ5slRvr9F0Uz46utmOT9Oe/nynGHzx
HpOSNFdC9ReD/ts85y1JteTt9APGIP5gzeAl9T+oHmNwcZChT8abZnis1h3A
G/QNda1UhAmpPt/g7+Mj+tkZ23KvGxy0J/wG53vvSIp3klO9xmJXB8seQadY
zlI/wVh8Xr85wCWPpfqNRfVbz1Y+bRlON7vHcbHYMD7veshfUqrntxgaatPa
s6YL9/Bi3a3Yv95iUKDr/Wg7E6rvt8BqblTnDeWKVvoFv8XNMunopesseKL3
OETWWva+f0DMz9QLJg4jvMZC3NqO+mccOieEeJgZsfw13XLT4xCnvJDnYGDP
k3qIh5Xdu/rJSoav1w03Px4fgs6/V0bKeFIf8Vi95cH12ARrfrRO/nnx8L5i
PORFZ3Oe1EsCstOHZhl8KlAE6OTrmoCiwfbfx9QLqL8l4F+Xynb9w0WcylN3
IAmoNf2h2XROypF6egfb44Z/nnFiuH56gb/D0yRr+3UVLPXDd0g8a/Z4706W
8wsco5XMOyzf7dIv7rcdR+rtPf41axVtvFjCpch0B/weToFeW2S5ltQ/36O1
+Lt9sLARUq2a/WveI7Vq4KNX15sVpB4TMX3OYe/Od4S8u648NiXCZLzxMXEr
W1qfifhg79izcIicj9LJ73Miev752+dHAEvr9QNklY6DJfks30FfkB/woveH
V+dMGVq/H9BRcyipcqqU12/fjw9Ynxxj8K6hC63nJASWRt3yG2zC66fnlYRD
OUMH9LVtqe8kJPuWrli8zIIjNE/GykGKS+19xbTek9F31uwXMw3suNuxf2kr
Ohm7IlJ/HGjVwu9kdAsZlWSkre/p2mrsuCcZgzSTtx1WMdQPkvHJKK/ANUrG
fZ+lGzAZqQe9L71Nsab+kAxTt4yoTfbm3BUrXUGkoOfP2+dv+RSC+EUK8nPN
2GalgJ+gP+AUJDzYIw0JE1G+pMBsduDsk2ek/MdbugmmwOJz23DlEIYnfpKC
u8MH2LStYPmz2tnxCSnIXr3yq59XC49SsP3qYGH7VnKeG+SqLalUTE2Ov/DY
TcITv0lF4HQz2wXFlry6SbfgVOyG7YKjQxsVxH9SsaxPwziBbzN0all0IhVL
MuYZml4VcsSPUqG0e/IupVnCkeWmoqJi7bj4QXKO+FMq+tdf9h8cwHL64Tqm
QWHi/z46n+WIX6XB/snO7CAzhtPb0aw0XOnT8LXLTClH/CsNrZa09W5o7sLp
7SQwDct+9uwhmGjCET9Lwwb17rvKtDKF3g6y0lB70MPVbYEF9bc05Iea1K3f
LuZ9dOUsSscbaVH4nmYZ9bt0XO9h1+ObAcvb6wsoHd1O8I9StPwm/peO58M6
zXtczPBJunI6n468fUx+zGsZ9cN0GBf8VJ/Itua36cqhIB0aG9edN4aY88Qf
0xG7tXJ81B9FColOzt0y4MH17z8vWcARv8yAy6jBzRvviLi3OvktzcCosSt6
FZ2SUv/MgLegXzvXwQy3UXe8VzNQfyRvQFE5S/00A52CvHzDd7FcF33BZ2DF
pu7ccaMWf83E78bxT1VrJZxCNz15Ju7+M3mWZZUl9dtMZCTYG1xxbcSqlbon
E7brl1h3c2lWEP/NxLW2t7q4nxXy2mLWOmwmWBuj75lfJTzx40wot85Ys2aA
nNctdrsmE8P8DbLs/Vme+HMWuv/tKbUqYHlX/YBZKC5VXZxowfDEr7OQHN+r
04/ZUt5Eb1BZiGoV4HTIWMQT/87CtfEfGDcXE153GsLQLHwZN3WC7GgZiJ9n
wVskmPx9ugU3Vz/BLPwbcHf3PHcxzTPZcLANHve9Ucb90pVbv2w07Um+fus3
wxG/z8ZEycYNBdp8flMn583ZuPKoZL1VaUs+z8a3rd/HL4+VcVP1C86GX8O3
Hm+KrDnCg2wIf/V4GDLBnPuqO46GbFwrn/mw4FwRCB9yMF1Wm/ArUsBf0i13
SA7mWzBf1VdFlBc5qH4UUt/GX8o76zcwB7sGPfs7YiBD+ZGDstFmQUHlLF+r
w0NEDlaL/0vJ9GYpT3IgE07NbTKR82d09t6Ug+evjo775C6hfMlFn2VHkp5/
tuRH6g8kF/5+saFH9zZS3uRi/A1F7ICBzSjX2at3LpIn3lO9OyGk/MmF8ZbW
n9/WSTi9/fG5UB73Dm7sK6c8ysXWo2GbjE+yxF5a5UF66pnTggKW8ikP3WK9
ogs7MJy+fMfkwXdJT9fn86SUV3n4sV8wJs1UxOnLY18e1tfGbBCvM6H8ysNm
pycduo8vU+jlF6v9rNydVj3Bgic8y4OT3+WZt9eK+Qzd8bbJx4JJz62uf5fR
PJkPv6Y+a/1/Mfwu3fZNzIfJnPQZjJbfhHf52H5H5qYoY3hGL8B8BE35ZDMu
XkbzZz4c59V/8quw5hPf6558OH0etCXSxZwnPMxHfqKd846uSsXWUzpDLUA7
yz2ffO8JOMLHAtyY9/Ta+3MizkYv6ALssNwmqTgm5QgvCxAx4syBhP4M90Zn
9/4FaPjBBbTW1jfhp3a8Y7Ky2z4st0FvpwWIdBRE2/wh5whPC/BQPn7Muu0S
rpO+QApxSRbKJTZZcoSvhfDyEpQ63W7EK50dzC1EQdnfeTssmhWEt4U4Gf3R
M/SAkF+hK7egQvTLn9I0XCOh/C3EtqWurxIc5TyRcyGGZOx3kpxgKY8LUZGS
F5iirW+9XKyK4L59rNVdS4byuQiXa66E3HOR8vrjWFSEw+UFQV5CEeV1EV67
P5y138uE1y/3YhHSckbzt36XUn4XoUvAzm9BnAVHhivCHj//Z8/cxJTnSlzq
Nnl5v68yWu9KbCx9+nNZM0P5rsRrjXT/Ai2/Sf0rMfrjhjlzKhjKeyWmTIuP
tH4vo36gxJG262UD61r6byVmP1Z9y1hvTv1BiU9bP6unrlSC5AEl/NsNmZp/
TkDzohIOj8e1PeUv4kk+UCK3fFfag8NSnviHdr55D/yi+zI8yQtKpCea5M4s
a8mXSmzeXl67wJel/aYSMf8M97FqJ+eJvygRe8266ylvCU/yhAoRu6zYA62F
NI+qcPTyeNMVCY0Kki9UEPNuIxbV/gTxHxVkTNOcXz5CjuQNFQ6ef9LFrkTC
ET9SoSbwuH1WLzntX1S40Nk4f9txliP+pALcg/sfKWQ5kkdU8L5kWh3eiaH9
oAoXma4byxZLab+jQrTE6dRjsYgj/qWC+7E5mZYnTDiSV1R4uO+8YM+jUgXx
MxXat5ty+94QC5pfVPgxKmhin0Vi6m8qPOpbuMHjs4zmmWKY9b46V93EUL8r
Ru9OKZpR2vom+aYYbRL7clfUDPW/Yhyw9vO9/UFG804xihucLsz5as0TPyxG
nZG/R9ouc9q/F2NHG8OywlClQi9372KcX7XBFQcFHMlDxZBfTGzIOiTi9HK9
XIy2jjc14QekNB8VY+qKx8mfHRnqn8Xg6v83OruUpXmpGOwbRfQIP5b6aTFe
jXhy0rl9S34qxvaiTxs77pNQfy3BPofbDv7thDRPaT/XS2we1jSC+G0Jpgzj
p/357qeC5KsSOEv+eNdpu5An/lsCrz5TxufmS3iSt0qw8dS8X0k95Dzx4xJ4
ehZ6RB1jaf9Ygg8nozcNK2J54s8lWn3Z94juwvAkj5XgeK3TQZu/pbSfL8HK
BLWwQS6i/WYJ/O6smhJ71YQn/l2CwVvN7HauLAWJByXwmLDQ/ryjBe1PSqBa
erHjttlijuS3EhieEVWf/SjjiL+X4llkp3uTGxmO5LlS3JEXGRlr65v4fSnC
h83IjtIwHMl3pdj1IFfWJkXGEf8vheHOfRGdmq05kvdKca9xRIPBcXPa/5TC
fWV8SPNnJb1fK4Vl0Pc+h7cJKB9K0dbnX4szu0U0D5ZCeWW/6e+9UsqLUqim
rnZf2Zuh+VC7zm7LO14tZSk/SjHXYlrpyt0szYul6OnS5cZzcznlSSkKb+Gt
7KiE5sdS2IdXPXAUCnnClzJEfDSdM8eyiebJMlzMEnvwIT9BeFOG0N3T3QM3
Cmm+LEOG82PfHxkSyp8yTBs2UbrLQU7zZhlMLgQ2K46ylEdlSPpv7c3LRSzN
n2WInB0Qs7trC5/KcHLwnUiz5VKaR8uw6skqw3u9RJRXZcgs2Dt84yMTmk/L
cGi9yuV/NqUKwq8yVA8516M1a8GTvFqGNfdshP2niGl/WIbNO2wffamR8SS/
luNmzsfkku8MT/hWjveGved+0+ZzkmfL8UfK3HqzKob2k+U40G6G54k0GU/y
bTl6tH/raWMk5gn/ynHBcMu7+5fMeZJ3y7X+22FN9jAV5WE5Ylf3jPpnpYDe
P2jf3y8gpPdOEaePo0HlyPWomDd4t5QjebgcAVmPYj70ZOh9YjkOJ0/7c7m2
vkk+LofScZr0xB6WI/wsx57NLnf6dpRzJC+XY7b994SxpyQc4Wk5wjfujagQ
C+n9RgUuvlwbesypCYSvFZgW/k/SQZ+fCpKnKzDTZvTD/JVCytsKbPdb2ivr
g4Tm6wq4+W4TGbNyyt8K+Ly3dww8wtK8XYHE+2tPZWnrm/C4AhFZn1d3tGZo
/q5Am5j6wHcrpZTPFfhj1IDyzwNENI9X4DWXG+AYY8ITXmv/3t+9bf/sEprP
K2DRZ5qg0qaF3xWIdkgdv8lZTPN6Bboe/PrH6SoZ5bka7lsqJ/DfGMpzNcaI
txzpq61vwnM1qv+0mHqjmqE8VyMo6NXwpZkyynM1OhiHVT9vJ6Y8V2OFi+bN
/jBzynM1foUUblm7XwXCczXSmjf/HjhbwBOeqxHs+9rD0aPl/lwNftLSOJmP
lPJcjV0XY2xrujOU52rkfx0XVljCUp6rEfHLc/ymvS08V8Po/fuAZUI55bka
f2l8/lSdk1Ceq/ExXqt4Rkh5rsGVvAUz8hc3KQjPNWgX/HutdOFPel+ggZ3K
ebC/q5AjPNdgvEP/eqs4CeW5Bme/5ix7aSenPNdgbOOA3MDDLOW5Br1WzTId
omzhuUarf6szb8QM5bkGeU9jVbfWSCnPNehW3GHd5uEiynPteBeEcyZlmFCe
a/BA8vZAnH+JgvBcgzlbHRoedbKg/YkGRuvubQzWphDCcw1q+1uV9NbIKM81
mPQqXXX+K0N5Xonmx69Pb9Dym/C8EkYFh0eNrmUozyvh2M3HbWSOjPK8Eu/u
az54Woopzytx5tDt5BfR5pTnlbB9uWhXeJqK3mdUInyi+oX7KAFH+p1KrHY5
dKRsrYg7qed5JXx2tbYs3yml/U8lPC8dGldoz1CeV+JqtJHYoYSlPK/E6KEe
ueJ9LTyvRM63EbcWdW7pjypxysCoU5srEsrzSixxnT2msJeQ8rwKgvkh6p6+
TSA8r8KXj5peCUN/KgjPq7D7lfeRxLlCer+r/X41n6OJklCeVyH9IRcaIZVT
nlfBsfuVqMJDLOV5FQ72FsYWKVt4XoXqGfVp0d0YyvMqFFVIMj+sl1Kea9/X
lPJ9/xgR5XkVrnnGng6oMKE8r8K9238n/udcAsLzKgi7b6xRm1pwhOdVGMD3
GtpvqJjyvAoxC584+pTLKM+r4FDlt6ZvA0N5Xo24e77LV2jrm/C8Gmuij/a+
WMdQnldDJmDa5+fJKM+rEeNxfB1vJaY8rwafdVVtkm5OeV6NPMH3kYE2xSA8
r0Z/vx3OXn0E9D6nGl0LvlQ2LRNRnlfj26+9phnbpZTn1diQflfwjWn5/1g1
mj66/zpdzFKeV2NO3c/76n0tPK9GiPBahLtITnleDcEy9zmLbkooz6sxfJ17
Ij9QSHlejY3BRwOrrjXRfrEGXjOcbdjOP0F4XoORMkHQ76lC2j/WYH9Ftvez
FxLK8xo0BadUvpTIKc9r8N3Mf1jfQyzleQ1uhUpfBapaeF6Dz54qw1RbhvK8
BrFjzf5nuklKeV6DRGMBm/qXiPK8BrdvZvq6NJpQntfg4zFD1+k/ihWE5zUY
EL/M5X1rC57wvAbt+syV/q+vmPK8BlL5heDLJTLK8xr0Nb/rdvIzQ3lei4B+
/qN0/TfheS2WjuXNXn1kKM9rwU1uXzK8UEZ5Xgv7DW4b9knFlOe1uDt2nNWE
UnPK81pcLlg+oZdbsYLwvBaKs3tCL3UTcITntXDrEVdzZaGIe6HneS2OZBRt
Mf1HypF+t1bLP0fxAjnDmesFXYslT04U/VXMUp7XIq/e/uuv/S08r8Wk4e5+
KVZyynPt+yrtBc73JZTntfgwec/8oSOElOe1GJ2etrnpbRMIz+twxmxp7ZBP
TQrC8zp0dZnpdNVZSO/H6uA32nnXt8cSyvM6JAxo087TRk55XofuwtKQkQdZ
yvM6THeStm9X3MLzOiz7LBh3XcZQntdB0DfPwdxDSnleh6urJk8KnSWiPK+D
9cu58TNNBZTndQhbdaVHfWgx7b/r4GBi+s78qzlHeF6HqrCL6Y0OYsrzOiwc
mhBSopRRntdBHdj9hnk9Q3n+EeSnPfd/9Fg35Q==
         "], {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Line[CompressedData["
1:eJwl1dOWGAoQBMBsbNu2bds2N+bGtm3btm3btu1cq3LuQ/V8QfckCwyq3ikg
WLBgP8TPG5wQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQR
iUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCF
KUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1p
QlOaEUhzWtCSVrSmDW1pR3s60JFOBNGZLnSlG93pQU960Zs+9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBL/zKb/zOH/zJX/zNP/zLz/IH
EJwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOaEUhz
WtCSVrSmDW1pR3s60JGf4x1EZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRh
DGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUs
ZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxzn
BCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcF
L3nFa97wlne85wMf+cRnvvCVb3wP+P+n/wco5/jX
             "]]}}, {{
            Hue[0.67, 0.6, 0.6], 
            Point[CompressedData["
1:eJwl1dOWGAoQBMBsbNu2bds2N+bGtm3btm3btu1cq3LuQ/V8QfckCwyq3ikg
WLBgP8TPG5wQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQR
iUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCF
KUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1p
QlOaEUhzWtCSVrSmDW1pR3s60JFOBNGZLnSlG93pQU960Zs+9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBL/zKb/zOH/zJX/zNP/zLz/IH
EJwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOaEUhz
WtCSVrSmDW1pR3s60JGf4x1EZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRh
DGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUs
ZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxzn
BCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcF
L3nFa97wlne85wMf+cRnvvCVb3wP+P+n/wco5/jX
             "]]}, {}, {}}}], {
        AspectRatio -> 1, Axes -> True, AxesLabel -> {
           Text[
            Style["x", Italic, 11]], 
           Text[
            Style[
             Row[{
               Style["u", Italic], "(", 
               Style["x", Italic], ")"}], 11]]}, AxesOrigin -> {0, 0}, 
         GridLines -> Automatic, ImagePadding -> {{45, 25}, {25, 20}}, 
         ImageSize -> {275, 395}, PlotLabel -> Text[
           Style["finite difference solution"]], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, TicksStyle -> 9}]}}, 
     Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, FrameStyle -> 
     Directive[
       Thickness[0.005], 
       GrayLevel[0.5]]], $CellContext`forceTermSelection$$ = 
    4, $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    9.103828801926284*^-15, $CellContext`h$$ = 0.002, $CellContext`kValue$$ = 
    152., $CellContext`n0$$ = 10., $CellContext`plotToShow$$ = 
    "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
    0.01, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    0, $CellContext`westBCtype$$ = "Sommerfeld", $CellContext`x0$$ = -0.52, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Grid[{{
              Grid[{{
                 Row[{
                   Text[
                    Style["k", Italic, 12]], 
                   Spacer[2], 
                   Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                   Spacer[2], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                 Row[{
                   Text[
                    Style["k h", Italic, 12]], " = ", 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                 Row[{
                   Text[
                    Style["PPW", 12]], " = ", 
                   Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
               Frame -> All, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}], 
           Grid[{{
              Framed[
               Text[
                Style[
                 Row[{"-", 
                   Style["u''", Italic], "(", 
                   Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                   Style["u", Italic], "(", 
                   Style["x", Italic], ") = ", 
                   Style["f", Italic], "(", 
                   Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]], 
              Grid[{{
                 Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                  Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None, 
                  FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
         Spacings -> {1, 0}]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                   Left]}, {
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                   Spacings -> {0, 0.15}]}, {
                  Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
             Style["source term", 11] -> Item[
               Grid[{{
                  PopupMenu[
                   
                   Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                   ContinuousAction -> False]}, {
                  Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                   FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                  Dynamic[
                   
                   Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                Center, Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`centerGrid$$], False}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`h$$], 0.02}, 0}, {{
       Hold[$CellContext`kValue$$], 10.}, 0}, {{
       Hold[$CellContext`n0$$], 2.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 3}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution"}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`showGridLines$$], True}, 0}}, Typeset`size$$ = {
    285., {200., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`b$$ = 
        0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = 
        "Dirichlet", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceTermSelection$$ = 3, $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        0.02, $CellContext`kValue$$ = 10., $CellContext`n0$$ = 
        2., $CellContext`plotToShow$$ = 
        "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
        0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; $CellContext`finalDisplayImage$$ = \
$CellContext`process[$CellContext`h$$, $CellContext`centerGrid$$, \
$CellContext`kValue$$, $CellContext`n0$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`x0$$, $CellContext`stdx$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, 
          
          Unevaluated[$CellContext`gstatusMessage$$], \
$CellContext`showGridLines$$]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray]]), "Specifications" :> {
        Item[
         Grid[{{
            Grid[{{
               Grid[{{
                  Row[{
                    Text[
                    Style["k", Italic, 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                  Row[{
                    Text[
                    Style["k h", Italic, 12]], " = ", 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                  Row[{
                    Text[
                    Style["PPW", 12]], " = ", 
                    Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
                Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}], 
            Grid[{{
               Framed[
                Text[
                 Style[
                  Row[{"-", 
                    Style["u''", Italic], "(", 
                    Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                    Style["u", Italic], "(", 
                    Style["x", Italic], ") = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], 
               Grid[{{
                  Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                   Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None,
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
          Spacings -> {1, 0}], ControlPlacement -> Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                    Left]}, {
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                    Spacings -> {0, 0.15}]}, {
                   Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                 Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
              Style["source term", 11] -> Item[
                Grid[{{
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                    ContinuousAction -> False]}, {
                   Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                   Dynamic[
                    
                    Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                 Center, Frame -> All, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}], 
         ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, False}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`h$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 10.}, 0, ControlType -> 
         None}, {{$CellContext`n0$$, 2.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution"}, 0, ControlType -> 
         None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`showGridLines$$, True}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousInitialization -> True, 
        SynchronousUpdating -> False, ContinuousAction -> False, Alignment -> 
        Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{616., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`Lx = 
          1, $CellContext`forceVector, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA}, \
{$CellContext`grid, $CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector} = $CellContext`initializeSystem[$CellContext`h, \
$CellContext`Lx, $CellContext`centerGrid, $CellContext`forceTermSelection, \
$CellContext`a, $CellContext`b, $CellContext`n0, $CellContext`x0, \
$CellContext`stdx, $CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue, $CellContext`kValue]; \
$CellContext`gstatusMessage = "ready.."; $CellContext`makeFinalPlot[
           $CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`forceVector, $CellContext`westBCtype, $CellContext`eastBCtype], \
$CellContext`AA, $CellContext`grid, $CellContext`plotToShow, \
$CellContext`showGridLines]], $CellContext`initializeSystem[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`length, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`forceVector}, $CellContext`grid = 
          N[
            $CellContext`generatePhysicalCoordinates1D[$CellContext`h, \
$CellContext`length, $CellContext`centerGrid]]; $CellContext`n = 
          Length[$CellContext`grid]; $CellContext`u = 
          Table[0, {$CellContext`n}]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a, $CellContext`b, $CellContext`n0, \
$CellContext`x0, $CellContext`stdx, $CellContext`n, \
$CellContext`forceTermSelection, $CellContext`grid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue]; {$CellContext`AA, \
$CellContext`forceVector} = \
$CellContext`makeSystemAndRightHandSideVector[$CellContext`n, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`kValue, \
$CellContext`h, $CellContext`forceGrid, $CellContext`u]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector}], $CellContext`generatePhysicalCoordinates1D[
         PatternTest[
          Pattern[$CellContext`h, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`len, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`centerGrid, 
           Blank[]], Element[#, Booleans]& ]] := 
       Module[{$CellContext`i, $CellContext`nodes, $CellContext`intervals}, \
$CellContext`intervals = 
          Floor[$CellContext`len/$CellContext`h]; $CellContext`nodes = \
$CellContext`intervals + 1; Which[$CellContext`centerGrid == True, 
           If[
            OddQ[$CellContext`nodes], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`intervals/2), $CellContext`intervals/2, 1}], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`nodes/2) + 1, $CellContext`nodes/2, 
              1}]], $CellContext`centerGrid == False, 
           
           Table[$CellContext`h $CellContext`i, {$CellContext`i, 
             0, $CellContext`intervals, 1}]]], $CellContext`makeForceGrid[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0$, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]]] := 
       Module[{$CellContext`n0 = $CellContext`checkTerm[$CellContext`n0$], \
$CellContext`i}, 
         Which[$CellContext`forceTermSelection == 1, 
          
          Table[$CellContext`a, {$CellContext`n}], \
$CellContext`forceTermSelection == 2, 
          If[$CellContext`n0 == 0, 
           Table[$CellContext`a, {$CellContext`i, $CellContext`n}], 
           Table[$CellContext`a 
            Part[$CellContext`grid, $CellContext`i]^$CellContext`n0, \
{$CellContext`i, $CellContext`n}]], $CellContext`forceTermSelection == 3, 
          
          Table[($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
           Exp[-((Part[$CellContext`grid, $CellContext`i] - \
$CellContext`x0)^2/(
              2 $CellContext`stdx^2))], {$CellContext`i, $CellContext`n}], \
$CellContext`forceTermSelection == 4, 
          
          Table[$CellContext`a 
           Cos[($CellContext`b Pi) 
             Part[$CellContext`grid, $CellContext`i]], {$CellContext`i, \
$CellContext`n}]]], 
       Attributes[$CellContext`n0$] = {Temporary}, $CellContext`checkTerm[
         PatternTest[
          Pattern[$CellContext`t, 
           Blank[]], NumberQ[#]& ]] := 
       If[Abs[$CellContext`t - 1] < $MachineEpsilon, 1, 
         If[
         Abs[$CellContext`t] < $MachineEpsilon, 
          0, $CellContext`t]], $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u}, 
         If[$CellContext`westBCtype == "Dirichlet", 
           Part[$CellContext`u, 
             1] = $CellContext`westBCconstantValue $CellContext`westbc[
              Part[$CellContext`grid, 1]]]; 
         If[$CellContext`eastBCtype == "Dirichlet", 
           Part[$CellContext`u, -1] = $CellContext`eastBCconstantValue \
$CellContext`eastbc[
              
              Part[$CellContext`grid, -1]]]; $CellContext`u], \
$CellContext`makeSystemAndRightHandSideVector[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`u, 
          Blank[]]] := 
       Module[{$CellContext`forceVector, $CellContext`AA, $CellContext`kh = \
$CellContext`kValue $CellContext`h, $CellContext`omega}, $CellContext`omega = 
          2. Cos[$CellContext`kh] + $CellContext`kh^2; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, 1, 1] = 1.; 
           Part[$CellContext`AA, 1, 2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, 1, 3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = 0; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[2, -3]]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, -1, -1] = 1.; 
           Part[$CellContext`AA, -1, -2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, -1, -3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[3, -2]]; Part[$CellContext`forceVector, -1] = 0, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               2, $CellContext`n - 2}]; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 2}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1]; Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[
               3, -3]]]; {$CellContext`AA, $CellContext`forceVector}], \
$CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`finalDisplayImage}, 
         Which[$CellContext`plotToShow == 
           "solution", $CellContext`finalDisplayImage = Grid[{{
               ListPlot[
                Thread[{$CellContext`grid, $CellContext`u}], 
                ImagePadding -> {{45, 25}, {25, 20}}, PlotRange -> All, 
                Joined -> True, Mesh -> All, AxesLabel -> {
                  Text[
                   Style["x", Italic, 11]], 
                  Text[
                   Style[
                    Row[{
                    Style["u", Italic], "(", 
                    Style["x", Italic], ")"}], 11]]}, PlotLabel -> Text[
                  Style["finite difference solution"]], 
                ImageSize -> {$CellContext`ContentSizeW - 
                  20, $CellContext`ContentSizeH - 20}, AspectRatio -> 1, 
                TicksStyle -> 9, 
                
                If[$CellContext`showGridLines, GridLines -> Automatic, 
                 GridLines -> None], AxesOrigin -> {0, 0}]}}, 
             Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, 
             FrameStyle -> Directive[
               Thickness[0.005], Gray]], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             350, $CellContext`ContentSizeW - 20], $CellContext`plotToShow == 
           "system matrix information", 
           
           Block[{$CellContext`tmp, $CellContext`dim, $CellContext`m, \
$CellContext`cond}, $CellContext`cond = Part[
               LUDecomposition[
                Normal[$CellContext`AA]], 3]; $CellContext`dim = Dimensions[
               Normal[$CellContext`AA]]; $CellContext`m = Min[20, 
               First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
             Grid[{{
                 Style[
                  Text[
                   Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                 Style[
                  Text[
                   Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                 Style[
                  Text["eigenvalues"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Re[
                   Transpose[
                    Partition[
                    Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`m], 1]]], 
                  45, $CellContext`ContentSizeW - 20]}, {
                 Style[
                  Text["A matrix"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`m], 
                   Span[1, $CellContext`m]], $CellContext`ContentSizeH - 
                  150, $CellContext`ContentSizeW - 
                  20]}}]]]; $CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       295, $CellContext`ContentSizeH = 415, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`forceVector, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[1, -2]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Sommerfeld"], 
           Part[$CellContext`u, 
             Span[2, -1]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[2, -2]] = 
           LinearSolve[$CellContext`AA, $CellContext`forceVector]]; \
$CellContext`u], $CellContext`padIt3[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := 
       AccountingForm[$CellContext`v, $CellContext`f, NumberSigns -> {"", ""},
          NumberPadding -> {"0", "0"}, SignPadding -> True, NumberPoint -> 
         If[Part[$CellContext`f, 2] == 0, "", "."]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`getNDsolveResult[
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`f, $CellContext`x, $CellContext`eq, \
$CellContext`y, $CellContext`sol, $CellContext`boundaryConditions, \
$CellContext`from, $CellContext`to, $CellContext`plotOptions}, \
$CellContext`plotOptions = {
           PlotRange -> All, AxesOrigin -> {0, 0}, 
            ImagePadding -> {{40, 20}, {25, 30}}, PlotLabel -> Text[
              Style[
               Row[{
                 Style["NDSolve", "MR"], " solution"}], 12]], AxesLabel -> {
              Text[
               Style["x", Italic, 11]], 
              Text[
               Style[
                Row[{
                  Style["u", Italic], "(", 
                  Style["x", Italic], ")"}], 11]]}, 
            ImageSize -> {$CellContext`ContentSizeW - 
              20, $CellContext`ContentSizeH - 250}, AspectRatio -> 0.5, 
            PlotStyle -> Red, ImageMargins -> 1}; 
         If[$CellContext`centerGrid, $CellContext`from = -0.5; \
$CellContext`to = 0.5, $CellContext`from = 0; $CellContext`to = 
            1.]; $CellContext`f = 
          Which[$CellContext`forceTermSelection == 
            1, $CellContext`a, $CellContext`forceTermSelection == 
            2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
            3, ($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
               2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
            4, $CellContext`a 
            Cos[($CellContext`b Pi) $CellContext`x]]; $CellContext`eq = -
             Derivative[
              2][$CellContext`y][$CellContext`x] - $CellContext`k^2 \
$CellContext`y[$CellContext`x] == $CellContext`f; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = {
            Derivative[1][$CellContext`y][$CellContext`from] - (
               I $CellContext`k) $CellContext`y[$CellContext`from] == 
             0, $CellContext`y[$CellContext`to] == \
$CellContext`eastBCconstantValue}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, 
             Derivative[1][$CellContext`y][$CellContext`to] - (
               I $CellContext`k) $CellContext`y[$CellContext`to] == 0}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, \
$CellContext`y[$CellContext`to] == $CellContext`eastBCconstantValue}]; \
$CellContext`sol = ReplaceAll[$CellContext`y, 
            First[
             Quiet[
              NDSolve[
               
               Flatten[{$CellContext`eq, $CellContext`boundaryConditions}], \
$CellContext`y, {$CellContext`x, $CellContext`from, $CellContext`to}, 
               MaxSteps -> Infinity]]]]; If[$CellContext`showGridLines, 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions], GridLines -> Automatic], 
            FrameStyle -> Directive[
              Thickness[0.005], Gray]], 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions]], FrameStyle -> Directive[
              Thickness[0.005], Gray]]]], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, 
       Attributes[Subscript] = {NHoldRest}, $CellContext`forceTermUsedFormat1D[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`aa, 
          Blank[]], 
         Pattern[$CellContext`bb, 
          Blank[]], 
         Pattern[$CellContext`sstdx, 
          Blank[]], 
         Pattern[$CellContext`xx0, 
          Blank[]], 
         Pattern[$CellContext`nn0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`a = $CellContext`checkTerm[$CellContext`aa], \
$CellContext`b = $CellContext`checkTerm[$CellContext`bb], $CellContext`stdx = \
$CellContext`checkTerm[$CellContext`sstdx], $CellContext`x0 = \
$CellContext`checkTerm[$CellContext`xx0], $CellContext`n0 = \
$CellContext`checkTerm[$CellContext`nn0]}, 
         Which[$CellContext`forceTermSelection == 
          1, $CellContext`a, $CellContext`forceTermSelection == 
          2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
          3, ($CellContext`a (1/($CellContext`stdx HoldForm[
              Sqrt[2 Pi]]))) 
          Exp[-(($CellContext`x - $CellContext`x0)^2/(
             2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
          4, $CellContext`a 
          Cos[$CellContext`b HoldForm[Pi $CellContext`x]]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5395516594617667`*^9, 3.5395516949832773`*^9}, {
  3.5398375060651755`*^9, 3.5398375146382637`*^9}, {3.5398382745967665`*^9, 
  3.5398382818356857`*^9}, {3.539838731841329*^9, 3.539838791831447*^9}, {
  3.540099783013501*^9, 3.5400997849027414`*^9}, {3.5400998979335947`*^9, 
  3.540099933458606*^9}},
 CellID->649159203],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    0.8000000000000007, $CellContext`b$$ = -10., $CellContext`centerGrid$$ = 
    False, $CellContext`del$$ = 
    2.220446049250313*^-16, $CellContext`eastbc$$ = 
    1& , $CellContext`eastBCconstantValue$$ = 1., $CellContext`eastBCtype$$ = 
    "Dirichlet", $CellContext`finalDisplayImage$$ = Grid[{{
       Graphics[
        GraphicsComplex[CompressedData["
1:eJxVlQtMU2cYhgmTjuB0DiVuMGtZwOg2xxJhczh9nQZBMyJg5rxQM0TQyYSi
BIM4RblEhw5EnNymEeqQcZmbjpbLPDJBi6OscisWKbSVa0svB4pmitvf/qcm
+5PmpM35v8v7fN9b790JETHOTk5OMeRje/7/mJG6oCZYcyQDG9XrOqY7tQz9
no+43nMxgf5mRsrP1IdLL6FAcDk6XqDl3hcjKHrb7cWxZhQV2k4FSspXWc7G
abj3a+Bc+fFU6g9mxhBu++VXJInHv2m4McjdvwlhtseBuGYz3JRlotVuEgx0
5UuvWQcYGq8OW3ZdOtRhNjPLInP+tC5txI28sUb+MTVo/FuoClHNr/W0QExu
K8tuY9X+itHJWf1cvibUJSb85r7ewqywnzuoaDmRsTKrj8vfjDWLui707LPg
jnUpydCCtDTT4T08FUPruQfn4VM7PM5amAh7QhlcPCSBfid6uX5b4eN+vr68
xgLNEVvA+/hDOsXb96yHq7cNLvN+nCVptzCJtvJEcki89B8kibq5+tuR4z22
1tVgAeWgAP9r6ZKDQ50M7UeB8lbept5XWSbEnuABooLrPzv2RQdofw8Qlquc
UAlY2LJF5nTAx9mz8lmLguu3E9vb6rqEK1nG3o6yEy2b0yPzotu5/rsQw5wv
5IWyWGwrh9+Ns6GfW19Z/RdD9eiGcOtHBz78imX2xtpOD4Ldfy6tmCPjeCkx
IakJTBaxsEVbUKPE+w1XJK9pmjm9enHm3X281cdZZtoWztqL+ZvT1SFVTZx+
DzHSut/0ZjaLNfaAKnRGtbzwn25kqJ4qpBXsvJd0gWXs5WX24Vpuq/ZJRi2o
vo+Q4brRRVvCQt5mO4+wQZe2LPnt65ze/UhLkLjLS1nGw16gGgvyhlI2hZZx
+qshj+9+IbvKwh4ucgBOM7t8nylPM5THILxgzkY5y/UziO9Cxbfmak9zfAZR
H33zYiu5T/sbRENyn+yNsDJQXhroSv0875P8tF8NZu+wzr+46Do3nxocqjHd
1ZU4+tfCvyggKDWrluOpRe6MeTSe9E/DaVG9+9PlAU8aOb468DYcZbyIflQf
HSa/3+vzVnUTKB4dFu7ZGetP9Kd6PYYiQiz8lvCh/B/j6VajMUXk0O8x1CcL
arPmyrh5GELVTAx8CX+q5xDW61uyY1/OxxB+6Q/9x43MD9V3GEUBz+ce2dMO
Oi/DSPmyd3sYmT+q9zBy/QTtS+4quP0awfHq59IBgUP/ESQL+O9Nk/mm8zSC
REVgm4zMP+Uxir+3TXkXkP2gPEaRqbq0fI7Bsf+jEMVeURjJflEeowj6pK3z
Ktk/ymMMwyUyw2myn5THGHzXPj1aRfaX8hhDvi56RSXZb8pjHCW+52TOZP9z
7TzGkbHlnjCd+APlMQ7jwt+1KuIflIceufzJwzeJv1AeeghTcl7/d52F2z89
LktcH85z6ed4GNBhXCiuI/5FeRhQXBwZVUj8jfIw4KAqaPYt4n+UxwS2plp/
aib+SHlMABFnnOKJf1IeEyhQnTrxhPgr5WHETHic217iv5SHETm75Iril/5s
RFLHOwLvWIf/mhCWd1Jyjfg75WFCE88pwJf4P+VhwuYquWlWl5Zx/G84nv8B
VmdGPg==
         "], {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            
            Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
             66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
             82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
             98, 99, 100, 101}]}}, {{
            Hue[0.67, 0.6, 0.6], 
            
            Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
             50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
             66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
             82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
             98, 99, 100, 101}]}, {}, {}}}], {
        AspectRatio -> 1, Axes -> True, AxesLabel -> {
           Text[
            Style["x", Italic, 11]], 
           Text[
            Style[
             Row[{
               Style["u", Italic], "(", 
               Style["x", Italic], ")"}], 11]]}, AxesOrigin -> {0, 0}, 
         GridLines -> Automatic, ImagePadding -> {{45, 25}, {25, 20}}, 
         ImageSize -> {275, 395}, PlotLabel -> Text[
           Style["finite difference solution"]], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, TicksStyle -> 9}]}}, 
     Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, FrameStyle -> 
     Directive[
       Thickness[0.005], 
       GrayLevel[0.5]]], $CellContext`forceTermSelection$$ = 
    3, $CellContext`gstatusMessage$$ = "ready..", $CellContext`gtick$$ = 
    1.176836406102666*^-14, $CellContext`h$$ = 0.01, $CellContext`kValue$$ = 
    156., $CellContext`n0$$ = 9.3, $CellContext`plotToShow$$ = 
    "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
    0.37, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
    1., $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 
    0.41999999999999993`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item[
        Grid[{{
           Grid[{{
              Grid[{{
                 Row[{
                   Text[
                    Style["k", Italic, 12]], 
                   Spacer[2], 
                   Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                   Spacer[2], 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                 Row[{
                   Text[
                    Style["k h", Italic, 12]], " = ", 
                   Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                 Row[{
                   Text[
                    Style["PPW", 12]], " = ", 
                   Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
               Frame -> All, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}], 
           Grid[{{
              Framed[
               Text[
                Style[
                 Row[{"-", 
                   Style["u''", Italic], "(", 
                   Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                   Style["u", Italic], "(", 
                   Style["x", Italic], ") = ", 
                   Style["f", Italic], "(", 
                   Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]], 
              Grid[{{
                 Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                  Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None, 
                  FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
         Spacings -> {1, 0}]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Item[
        Grid[{{
           TabView[{Style["geometry/boundary conditions", 11] -> Item[
               Grid[{{
                  Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                   Left]}, {
                  Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                   Spacings -> {0, 0.15}]}, {
                  Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
             Style["source term", 11] -> Item[
               Grid[{{
                  PopupMenu[
                   
                   Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                   1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                   ContinuousAction -> False]}, {
                  Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                   FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                  Dynamic[
                   
                   Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                Center, Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
            ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`gstatusMessage$$], "reseting..."}, 0}, {{
       Hold[$CellContext`gtick$$], 0}, 0}, {{
       Hold[$CellContext`del$$], 2.220446049250313*^-16}, 0}, {{
       Hold[$CellContext`centerGrid$$], False}, 0}, {{
       Hold[$CellContext`finalDisplayImage$$], {}}, 0}, {{
       Hold[$CellContext`h$$], 0.02}, 0}, {{
       Hold[$CellContext`kValue$$], 10.}, 0}, {{
       Hold[$CellContext`n0$$], 2.}, 0}, {{
       Hold[$CellContext`a$$], 1.}, 0}, {{
       Hold[$CellContext`b$$], 0.}, 0}, {{
       Hold[$CellContext`x0$$], 0.}, 0}, {{
       Hold[$CellContext`stdx$$], 0.3}, 0}, {{
       Hold[$CellContext`forceTermSelection$$], 3}, 0}, {{
       Hold[$CellContext`plotToShow$$], "solution"}, 0}, {{
       Hold[$CellContext`westBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`westbc$$], 1& }, 0}, {{
       Hold[$CellContext`westBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`eastBCtype$$], "Dirichlet"}, 0}, {{
       Hold[$CellContext`eastbc$$], 1& }, 0}, {{
       Hold[$CellContext`eastBCconstantValue$$], 0}, 0}, {{
       Hold[$CellContext`showGridLines$$], True}, 0}}, Typeset`size$$ = {
    285., {200., 206.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1., $CellContext`b$$ = 
        0., $CellContext`centerGrid$$ = False, $CellContext`del$$ = 
        2.220446049250313*^-16, $CellContext`eastbc$$ = 
        1& , $CellContext`eastBCconstantValue$$ = 
        0, $CellContext`eastBCtype$$ = 
        "Dirichlet", $CellContext`finalDisplayImage$$ = {}, \
$CellContext`forceTermSelection$$ = 3, $CellContext`gstatusMessage$$ = 
        "reseting...", $CellContext`gtick$$ = 0, $CellContext`h$$ = 
        0.02, $CellContext`kValue$$ = 10., $CellContext`n0$$ = 
        2., $CellContext`plotToShow$$ = 
        "solution", $CellContext`showGridLines$$ = True, $CellContext`stdx$$ = 
        0.3, $CellContext`westbc$$ = 1& , $CellContext`westBCconstantValue$$ = 
        0, $CellContext`westBCtype$$ = "Dirichlet", $CellContext`x0$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`gtick$$; $CellContext`finalDisplayImage$$ = \
$CellContext`process[$CellContext`h$$, $CellContext`centerGrid$$, \
$CellContext`kValue$$, $CellContext`n0$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`x0$$, $CellContext`stdx$$, $CellContext`forceTermSelection$$, \
$CellContext`plotToShow$$, $CellContext`westBCtype$$, $CellContext`westbc$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCtype$$, \
$CellContext`eastbc$$, $CellContext`eastBCconstantValue$$, 
          
          Unevaluated[$CellContext`gstatusMessage$$], \
$CellContext`showGridLines$$]; FinishDynamic[]; 
       Framed[$CellContext`finalDisplayImage$$, FrameStyle -> Directive[
           Thickness[0.005], Gray]]), "Specifications" :> {
        Item[
         Grid[{{
            Grid[{{
               Grid[{{
                  Row[{
                    Text[
                    Style["k", Italic, 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`kValue$$, {$CellContext`kValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0., 200, 1.}, ImageSize -> Tiny, ContinuousAction -> 
                    False], 
                    Spacer[2], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt3[$CellContext`kValue$$, {5, 0}]], 
                    12]]}], 
                  Row[{
                    Text[
                    Style["k h", Italic, 12]], " = ", 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`kValue$$ \
$CellContext`h$$, {5, 3}]], 12]]}], 
                  Row[{
                    Text[
                    Style["PPW", 12]], " = ", 
                    Dynamic[
                    If[$CellContext`kValue$$ == 0., 
                    Text[
                    Style[
                    Row[{"N/A", 
                    Spacer[19]}], 11]], 
                    Text[
                    Style[
                    $CellContext`padIt2[
                    2. (Pi/($CellContext`kValue$$ $CellContext`h$$)), {6, 3}],
                     11]]]]}]}}, Alignment -> Left, Spacings -> {0.6, 1}, 
                Frame -> All, FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]]}}], 
            Grid[{{
               Framed[
                Text[
                 Style[
                  Row[{"-", 
                    Style["u''", Italic], "(", 
                    Style["x", Italic], ") - ", Style["k", Italic]^2, " ", 
                    Style["u", Italic], "(", 
                    Style["x", Italic], ") = ", 
                    Style["f", Italic], "(", 
                    Style["x", Italic], ")"}], 12]], FrameStyle -> Directive[
                  Thickness[0.005], 
                  GrayLevel[0.5]]], 
               Grid[{{
                  Grid[{{
                    PopupMenu[
                    
                    Dynamic[$CellContext`plotToShow$$, \
{$CellContext`plotToShow$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    "solution" -> Style["solution", 12], "solution data" -> 
                    Style["solution data", 12], "system matrix information" -> 
                    Style["system matrix", 12]}, ImageSize -> All]}}, 
                   Alignment -> Center, Spacings -> {0.7, 0.2}, Frame -> None,
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}]}}]}}, Alignment -> Center, 
          Spacings -> {1, 0}], ControlPlacement -> Top], 
        Item[
         Grid[{{
            TabView[{Style["geometry/boundary conditions", 11] -> Item[
                Grid[{{
                   Grid[{{
                    Row[{
                    Text[
                    Style["grid size", 12]], 
                    Spacer[2], 
                    SetterBar[
                    
                    Dynamic[$CellContext`h$$, {$CellContext`h$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.1 -> Style[0.1, 11], 0.05 -> Style[0.05, 11], 0.02 -> 
                    Style[0.02, 11], 0.01 -> Style[0.01, 11], 0.005 -> 
                    Style[0.005, 11], 0.002 -> Style[0.002, 11], 0.001 -> 
                    Style[0.001, 11]}]}]}, {
                    Grid[{{
                    Row[{
                    Text[
                    Style["centered grid ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`centerGrid$$, \
{$CellContext`centerGrid$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}], 
                    Row[{
                    Text[
                    Style["grid lines ", 12]], 
                    Checkbox[
                    
                    Dynamic[$CellContext`showGridLines$$, \
{$CellContext`showGridLines$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ]]}]}}, 
                    Alignment -> Left, Spacings -> {2, 0}, Frame -> None, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Spacings -> {0, 1}, Alignment -> 
                    Left]}, {
                   Grid[{{
                    Grid[{{
                    Text[
                    Style["left side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`westBCtype$$, \
{$CellContext`westBCtype$$ = #; If[
                    
                    And[$CellContext`westBCtype$$ == 
                    "Sommerfeld", $CellContext`eastBCtype$$ == 
                    "Sommerfeld"], $CellContext`westBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Alpha], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`westBCconstantValue$$, \
{$CellContext`westBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`westBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`westBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`westBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`westBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`westBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]], 
                    Spacer[5], 
                    Grid[{{
                    Text[
                    Style["right side", 12]]}, {
                    RadioButtonBar[
                    
                    Dynamic[$CellContext`eastBCtype$$, \
{$CellContext`eastBCtype$$ = #; If[
                    
                    And[$CellContext`eastBCtype$$ == 
                    "Sommerfeld", $CellContext`westBCtype$$ == 
                    "Sommerfeld"], $CellContext`eastBCtype$$ = "Dirichlet", 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]]}& ], {
                    "Dirichlet" -> Text[
                    Style["Dirichlet", 10]], "Sommerfeld" -> Text[
                    Style["Sommerfeld", 10]]}, Appearance -> "Vertical"]}, {
                    Grid[{{
                    Spacer[2], 
                    Text[
                    Style[$CellContext`\[Beta], 12]], 
                    Spacer[2], 
                    Manipulator[
                    
                    Dynamic[$CellContext`eastBCconstantValue$$, \
{$CellContext`eastBCconstantValue$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-20,
                     20, 0.1}, ImageSize -> Tiny, ContinuousAction -> False, 
                    Enabled -> Dynamic[$CellContext`eastBCtype$$ == 
                    "Dirichlet"]], 
                    Spacer[1], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`eastBCconstantValue$$, {
                    3, 1}]], 10]], 
                    Spacer[2]}, {
                    Row[{
                    Button[
                    Text[
                    Style[
                    "zero", 11]], {$CellContext`eastBCconstantValue$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]], 
                    Spacer[2], 
                    Button[
                    Text[
                    Style[
                    "one", 11]], {$CellContext`eastBCconstantValue$$ = 1.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Enabled -> 
                    Dynamic[$CellContext`eastBCtype$$ == "Dirichlet"]]}], 
                    SpanFromLeft}}, Alignment -> Center, 
                    Spacings -> {0, 0}]}}, Dividers -> {True, {True, {2 -> {
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]}}}}, Spacings -> {0.1, 0.4}, Alignment -> 
                    Center, Dividers -> True, FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}}, Alignment -> Center, 
                    Spacings -> {0, 0.15}]}, {
                   Grid[{{
                    Dynamic[
                    $CellContext`getNDsolveResult[$CellContext`kValue$$, \
$CellContext`westBCtype$$, $CellContext`eastBCtype$$, \
$CellContext`westBCconstantValue$$, $CellContext`eastBCconstantValue$$, \
$CellContext`forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, \
$CellContext`centerGrid$$, $CellContext`showGridLines$$]]}}]}}, Alignment -> 
                 Center, Spacings -> {0, 0.3}], Alignment -> {Center, Top}], 
              Style["source term", 11] -> Item[
                Grid[{{
                   PopupMenu[
                    
                    Dynamic[$CellContext`forceTermSelection$$, \
{$CellContext`forceTermSelection$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    1 -> Style["a", Italic, 12], 2 -> Style[
                    Row[{
                    Style["a", Italic], Style["x", Italic]^Subscript[
                    Style["n", Italic], 0]}], 12], 3 -> Style[
                    
                    Row[{((2 Pi)^Rational[-1, 2]/$CellContext`\[Sigma]) 
                    Style["a", Italic], 
                    "exp (", (Rational[1, 2] $CellContext`\[Sigma]^(-2)) 
                    Row[{"( ", 
                    Style["x", Italic], " - ", 
                    Subscript[
                    Style["x", Italic], 0], " )"^2}], " )"}], 12], 4 -> 
                    Style[
                    Row[{
                    Style["a", Italic], " ", "cos ( ", 
                    Style["b", Italic], " ", Pi, " ", 
                    Style["x", Italic], " )"}], 12]}, ImageSize -> {260, 45}, 
                    ContinuousAction -> False]}, {
                   Grid[{{
                    Text[
                    Style["a", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`a$$, {$CellContext`a$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`a$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`a$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Center]}, {
                    Text[
                    Style["b", Italic, 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`b$$, {$CellContext`b$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {-10,
                     10, 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 4]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`b$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`b$$ = 0; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["n", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`n0$$, {$CellContext`n0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {0., 
                    10., 0.1}, ImageSize -> Small, ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 2]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`n0$$, {3, 1}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`n0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[
                    Subscript[
                    Style["x", Italic], 0], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`x0$$, {$CellContext`x0$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], \
{-1.5, 1.5, 0.01}, ImageSize -> Small, ContinuousAction -> False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt1[$CellContext`x0$$, {3, 2}]], 11]], 
                    Button[
                    Text[
                    Style["zero", 10]], {$CellContext`x0$$ = 0.; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}, 
                    ImageSize -> {45, 20}, Alignment -> Bottom, 
                    BaselinePosition -> Center]}, {
                    Text[
                    Style[$CellContext`\[Sigma], 12]], 
                    Manipulator[
                    
                    Dynamic[$CellContext`stdx$$, {$CellContext`stdx$$ = #; 
                    AddTo[$CellContext`gtick$$, $CellContext`del$$]}& ], {
                    0.01, 1, 0.01}, ImageSize -> Small, ContinuousAction -> 
                    False, Enabled -> 
                    Dynamic[$CellContext`forceTermSelection$$ == 3]], 
                    Text[
                    Style[
                    Dynamic[
                    $CellContext`padIt2[$CellContext`stdx$$, {3, 2}]], 11]], 
                    ""}}, Spacings -> {0.4, 0.1}, Alignment -> Center, 
                    FrameStyle -> Directive[
                    Thickness[0.005], 
                    GrayLevel[0.5]]]}, {
                   Dynamic[
                    
                    Block[{$CellContext`grid, $CellContext`forceGrid}, \
$CellContext`grid = N[
                    $CellContext`generatePhysicalCoordinates1D[$CellContext`h$\
$, 1, $CellContext`centerGrid$$]]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a$$, $CellContext`b$$, \
$CellContext`n0$$, $CellContext`x0$$, $CellContext`stdx$$, 
                    
                    Length[$CellContext`grid], \
$CellContext`forceTermSelection$$, $CellContext`grid]; ListPlot[
                    Thread[{$CellContext`grid, $CellContext`forceGrid}], 
                    ImagePadding -> {{40, 15}, {40, 65}}, ImageMargins -> 1, 
                    PlotRange -> All, Mesh -> All, Axes -> None, 
                    
                    If[$CellContext`showGridLines$$, GridLines -> Automatic, 
                    GridLines -> None], PlotStyle -> Red, Joined -> True, 
                    Frame -> True, FrameLabel -> {{None, None}, {
                    Text[
                    Style["x", Italic, 11]], 
                    Text[
                    Style[
                    Row[{
                    $CellContext`f[$CellContext`x], " = ", 
                    $CellContext`forceTermUsedFormat1D[$CellContext`\
forceTermSelection$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`stdx$$, $CellContext`x0$$, $CellContext`n0$$, $CellContext`x]}], 
                    12]]}}, 
                    ImageSize -> {$CellContext`ContentSizeW - 
                    10, $CellContext`ContentSizeH - 240}, AspectRatio -> 0.3, 
                    TicksStyle -> 9]]]}}, Spacings -> {0, 0.4}, Alignment -> 
                 Center, Frame -> All, FrameStyle -> Directive[
                   Thickness[0.005], 
                   GrayLevel[0.5]]], Alignment -> {Center, Top}]}, 
             ImageSize -> {305, 410}]}}, Spacings -> {0.2, 0.9}], 
         ControlPlacement -> 
         Left], {{$CellContext`gstatusMessage$$, "reseting..."}, 0, 
         ControlType -> None}, {{$CellContext`gtick$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`del$$, 2.220446049250313*^-16}, 0, ControlType -> 
         None}, {{$CellContext`centerGrid$$, False}, 0, ControlType -> 
         None}, {{$CellContext`finalDisplayImage$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`h$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kValue$$, 10.}, 0, ControlType -> 
         None}, {{$CellContext`n0$$, 2.}, 0, ControlType -> 
         None}, {{$CellContext`a$$, 1.}, 0, ControlType -> 
         None}, {{$CellContext`b$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`x0$$, 0.}, 0, ControlType -> 
         None}, {{$CellContext`stdx$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`forceTermSelection$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`plotToShow$$, "solution"}, 0, ControlType -> 
         None}, {{$CellContext`westBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`westbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`westBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`eastBCtype$$, "Dirichlet"}, 0, ControlType -> 
         None}, {{$CellContext`eastbc$$, 1& }, 0, ControlType -> 
         None}, {{$CellContext`eastBCconstantValue$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`showGridLines$$, True}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousInitialization -> True, 
        SynchronousUpdating -> False, ContinuousAction -> False, Alignment -> 
        Center, ImageMargins -> 0, FrameMargins -> 0, 
        TrackedSymbols :> {$CellContext`gtick$$}, Paneled -> True, Frame -> 
        False}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{616., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`process[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`gstatusMessage, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`Lx = 
          1, $CellContext`forceVector, $CellContext`u, \
$CellContext`forceGrid, $CellContext`grid, $CellContext`AA}, \
{$CellContext`grid, $CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector} = $CellContext`initializeSystem[$CellContext`h, \
$CellContext`Lx, $CellContext`centerGrid, $CellContext`forceTermSelection, \
$CellContext`a, $CellContext`b, $CellContext`n0, $CellContext`x0, \
$CellContext`stdx, $CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue, $CellContext`kValue]; \
$CellContext`gstatusMessage = "ready.."; $CellContext`makeFinalPlot[
           $CellContext`solve[$CellContext`u, $CellContext`AA, \
$CellContext`forceVector, $CellContext`westBCtype, $CellContext`eastBCtype], \
$CellContext`AA, $CellContext`grid, $CellContext`plotToShow, \
$CellContext`showGridLines]], $CellContext`initializeSystem[
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`length, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`grid, $CellContext`forceGrid, \
$CellContext`u, $CellContext`AA, $CellContext`forceVector}, $CellContext`grid = 
          N[
            $CellContext`generatePhysicalCoordinates1D[$CellContext`h, \
$CellContext`length, $CellContext`centerGrid]]; $CellContext`n = 
          Length[$CellContext`grid]; $CellContext`u = 
          Table[0, {$CellContext`n}]; $CellContext`forceGrid = \
$CellContext`makeForceGrid[$CellContext`a, $CellContext`b, $CellContext`n0, \
$CellContext`x0, $CellContext`stdx, $CellContext`n, \
$CellContext`forceTermSelection, $CellContext`grid]; $CellContext`u = \
$CellContext`setBoundaryConditions[$CellContext`u, $CellContext`grid, \
$CellContext`westBCtype, $CellContext`westbc, \
$CellContext`westBCconstantValue, $CellContext`eastBCtype, \
$CellContext`eastbc, $CellContext`eastBCconstantValue]; {$CellContext`AA, \
$CellContext`forceVector} = \
$CellContext`makeSystemAndRightHandSideVector[$CellContext`n, \
$CellContext`westBCtype, $CellContext`eastBCtype, $CellContext`kValue, \
$CellContext`h, $CellContext`forceGrid, $CellContext`u]; {$CellContext`grid, \
$CellContext`forceGrid, $CellContext`u, $CellContext`AA, \
$CellContext`forceVector}], $CellContext`generatePhysicalCoordinates1D[
         PatternTest[
          Pattern[$CellContext`h, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`len, 
           Blank[]], And[
           Element[#, Reals], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`centerGrid, 
           Blank[]], Element[#, Booleans]& ]] := 
       Module[{$CellContext`i, $CellContext`nodes, $CellContext`intervals}, \
$CellContext`intervals = 
          Floor[$CellContext`len/$CellContext`h]; $CellContext`nodes = \
$CellContext`intervals + 1; Which[$CellContext`centerGrid == True, 
           If[
            OddQ[$CellContext`nodes], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`intervals/2), $CellContext`intervals/2, 1}], 
            
            Table[$CellContext`h $CellContext`i, {$CellContext`i, \
-($CellContext`nodes/2) + 1, $CellContext`nodes/2, 
              1}]], $CellContext`centerGrid == False, 
           
           Table[$CellContext`h $CellContext`i, {$CellContext`i, 
             0, $CellContext`intervals, 1}]]], $CellContext`makeForceGrid[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0$, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]]] := 
       Module[{$CellContext`n0 = $CellContext`checkTerm[$CellContext`n0$], \
$CellContext`i}, 
         Which[$CellContext`forceTermSelection == 1, 
          
          Table[$CellContext`a, {$CellContext`n}], \
$CellContext`forceTermSelection == 2, 
          If[$CellContext`n0 == 0, 
           Table[$CellContext`a, {$CellContext`i, $CellContext`n}], 
           
           Table[$CellContext`a 
            Part[$CellContext`grid, $CellContext`i]^$CellContext`n0, \
{$CellContext`i, $CellContext`n}]], $CellContext`forceTermSelection == 3, 
          
          Table[($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
           Exp[-((Part[$CellContext`grid, $CellContext`i] - \
$CellContext`x0)^2/(
              2 $CellContext`stdx^2))], {$CellContext`i, $CellContext`n}], \
$CellContext`forceTermSelection == 4, 
          
          Table[$CellContext`a 
           Cos[($CellContext`b Pi) 
             Part[$CellContext`grid, $CellContext`i]], {$CellContext`i, \
$CellContext`n}]]], 
       Attributes[$CellContext`n0$] = {Temporary}, $CellContext`checkTerm[
         PatternTest[
          Pattern[$CellContext`t, 
           Blank[]], NumberQ[#]& ]] := 
       If[Abs[$CellContext`t - 1] < $MachineEpsilon, 1, 
         If[
         Abs[$CellContext`t] < $MachineEpsilon, 
          0, $CellContext`t]], $CellContext`setBoundaryConditions[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`westbc, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastbc, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]]] := 
       Module[{$CellContext`u = $CellContext`$u}, 
         If[$CellContext`westBCtype == "Dirichlet", 
           Part[$CellContext`u, 
             1] = $CellContext`westBCconstantValue $CellContext`westbc[
              Part[$CellContext`grid, 1]]]; 
         If[$CellContext`eastBCtype == "Dirichlet", 
           Part[$CellContext`u, -1] = $CellContext`eastBCconstantValue \
$CellContext`eastbc[
              
              Part[$CellContext`grid, -1]]]; $CellContext`u], \
$CellContext`makeSystemAndRightHandSideVector[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`kValue, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]], 
         Pattern[$CellContext`forceGrid, 
          Blank[]], 
         Pattern[$CellContext`u, 
          Blank[]]] := 
       Module[{$CellContext`forceVector, $CellContext`AA, $CellContext`kh = \
$CellContext`kValue $CellContext`h, $CellContext`omega}, $CellContext`omega = 
          2. Cos[$CellContext`kh] + $CellContext`kh^2; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, 1, 1] = 1.; 
           Part[$CellContext`AA, 1, 2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, 1, 3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = 0; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[2, -3]]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               1, $CellContext`n - 1}]; Part[$CellContext`AA, -1, -1] = 1.; 
           Part[$CellContext`AA, -1, -2] = ((-2.) I) Sin[$CellContext`kh]; 
           Part[$CellContext`AA, -1, -3] = -1.; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 1}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[3, -2]]; Part[$CellContext`forceVector, -1] = 0, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`AA = 
            SparseArray[{
              Band[{1, 1}] -> $CellContext`omega - $CellContext`kh^2, 
               Band[{2, 1}] -> -1., Band[{1, 2}] -> -1.}, {$CellContext`n - 
               2, $CellContext`n - 2}]; $CellContext`forceVector = 
            Table[0, {$CellContext`n - 2}]; 
           Part[$CellContext`forceVector, 1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, 2] + Part[$CellContext`u, 1]; 
           Part[$CellContext`forceVector, -1] = $CellContext`h^2 
              Part[$CellContext`forceGrid, $CellContext`n - 1] + 
             Part[$CellContext`u, -1]; Part[$CellContext`forceVector, 
              Span[2, -2]] = $CellContext`h^2 Part[$CellContext`forceGrid, 
               Span[
               3, -3]]]; {$CellContext`AA, $CellContext`forceVector}], \
$CellContext`makeFinalPlot[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`grid, 
          Blank[]], 
         Pattern[$CellContext`plotToShow, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`finalDisplayImage}, 
         Which[$CellContext`plotToShow == 
           "solution", $CellContext`finalDisplayImage = Grid[{{
               ListPlot[
                Thread[{$CellContext`grid, $CellContext`u}], 
                ImagePadding -> {{45, 25}, {25, 20}}, PlotRange -> All, 
                Joined -> True, Mesh -> All, AxesLabel -> {
                  Text[
                   Style["x", Italic, 11]], 
                  Text[
                   Style[
                    Row[{
                    Style["u", Italic], "(", 
                    Style["x", Italic], ")"}], 11]]}, PlotLabel -> Text[
                  Style["finite difference solution"]], 
                ImageSize -> {$CellContext`ContentSizeW - 
                  20, $CellContext`ContentSizeH - 20}, AspectRatio -> 1, 
                TicksStyle -> 9, 
                
                If[$CellContext`showGridLines, GridLines -> Automatic, 
                 GridLines -> None], AxesOrigin -> {0, 0}]}}, 
             Spacings -> {0, 0.5}, Alignment -> Center, Frame -> None, 
             FrameStyle -> Directive[
               Thickness[0.005], Gray]], $CellContext`plotToShow == 
           "solution data", $CellContext`finalDisplayImage = \
$CellContext`makeScrolledPane[
             Normal[$CellContext`u], $CellContext`ContentSizeH - 
             350, $CellContext`ContentSizeW - 20], $CellContext`plotToShow == 
           "system matrix information", 
           
           Block[{$CellContext`tmp, $CellContext`dim, $CellContext`m, \
$CellContext`cond}, $CellContext`cond = Part[
               LUDecomposition[
                Normal[$CellContext`AA]], 3]; $CellContext`dim = Dimensions[
               Normal[$CellContext`AA]]; $CellContext`m = Min[20, 
               First[$CellContext`dim]]; $CellContext`finalDisplayImage = 
             Grid[{{
                 Style[
                  Text[
                   Row[{"condition number = ", $CellContext`cond}]], 12]}, {
                 Style[
                  Text[
                   Row[{"matrix size = ", $CellContext`dim}]], 12]}, {
                 Style[
                  Text["eigenvalues"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Re[
                   Transpose[
                    Partition[
                    Eigenvalues[
                    Normal[$CellContext`AA], $CellContext`m], 1]]], 
                  45, $CellContext`ContentSizeW - 20]}, {
                 Style[
                  Text["A matrix"], 12]}, {
                 $CellContext`makeScrolledPane[
                  Part[$CellContext`AA, 
                   Span[1, $CellContext`m], 
                   Span[1, $CellContext`m]], $CellContext`ContentSizeH - 
                  150, $CellContext`ContentSizeW - 
                  20]}}]]]; $CellContext`finalDisplayImage], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`ContentSizeW = 
       295, $CellContext`ContentSizeH = 415, $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`mat, 
           Blank[]], MatrixQ[#, NumberQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[$CellContext`mat, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             NumberForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`makeScrolledPane[
         PatternTest[
          Pattern[$CellContext`lst, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[$CellContext`nRow, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ], 
         PatternTest[
          Pattern[$CellContext`nCol, 
           Blank[]], And[
           IntegerQ[#], 
           Positive[#]]& ]] := 
       Module[{$CellContext`t}, $CellContext`t = 
          Grid[{$CellContext`lst}, Spacings -> {0.4, 0.4}, Alignment -> Left, 
            Frame -> All]; $CellContext`t = Text[
            Style[
             AccountingForm[
              Chop[
               N[$CellContext`t]], {6, 5}, NumberSigns -> {"-", ""}, 
              NumberPadding -> {"", ""}, SignPadding -> True], 
             LineBreakWithin -> False]]; 
         Pane[$CellContext`t, 
           ImageSize -> {$CellContext`nCol, $CellContext`nRow}, Scrollbars -> 
           True]], $CellContext`solve[
         Pattern[$CellContext`$u, 
          Blank[]], 
         Pattern[$CellContext`AA, 
          Blank[]], 
         Pattern[$CellContext`forceVector, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]]] := Module[{$CellContext`u = $CellContext`$u}, Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[1, -2]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Sommerfeld"], 
           Part[$CellContext`u, 
             Span[2, -1]] = Re[
             LinearSolve[$CellContext`AA, $CellContext`forceVector]], 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == "Dirichlet"], 
           Part[$CellContext`u, 
             Span[2, -2]] = 
           LinearSolve[$CellContext`AA, $CellContext`forceVector]]; \
$CellContext`u], $CellContext`padIt3[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := 
       AccountingForm[$CellContext`v, $CellContext`f, NumberSigns -> {"", ""},
          NumberPadding -> {"0", "0"}, SignPadding -> True, NumberPoint -> 
         If[Part[$CellContext`f, 2] == 0, "", "."]], $CellContext`padIt2[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"", ""}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`padIt1[
         PatternTest[
          Pattern[$CellContext`v, 
           Blank[]], And[
           NumericQ[#], Im[#] == 0]& ], 
         Pattern[$CellContext`f, 
          Blank[List]]] := AccountingForm[
         Chop[
          N[$CellContext`v]], $CellContext`f, NumberSigns -> {"-", "+"}, 
         NumberPadding -> {"0", "0"}, SignPadding -> 
         True], $CellContext`getNDsolveResult[
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`westBCtype, 
          Blank[]], 
         Pattern[$CellContext`eastBCtype, 
          Blank[]], 
         Pattern[$CellContext`westBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`eastBCconstantValue, 
          Blank[]], 
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`n0, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`stdx, 
          Blank[]], 
         Pattern[$CellContext`centerGrid, 
          Blank[]], 
         Pattern[$CellContext`showGridLines, 
          Blank[]]] := 
       Module[{$CellContext`f, $CellContext`x, $CellContext`eq, \
$CellContext`y, $CellContext`sol, $CellContext`boundaryConditions, \
$CellContext`from, $CellContext`to, $CellContext`plotOptions}, \
$CellContext`plotOptions = {
           PlotRange -> All, AxesOrigin -> {0, 0}, 
            ImagePadding -> {{40, 20}, {25, 30}}, PlotLabel -> Text[
              Style[
               Row[{
                 Style["NDSolve", "MR"], " solution"}], 12]], AxesLabel -> {
              Text[
               Style["x", Italic, 11]], 
              Text[
               Style[
                Row[{
                  Style["u", Italic], "(", 
                  Style["x", Italic], ")"}], 11]]}, 
            ImageSize -> {$CellContext`ContentSizeW - 
              20, $CellContext`ContentSizeH - 250}, AspectRatio -> 0.5, 
            PlotStyle -> Red, ImageMargins -> 1}; 
         If[$CellContext`centerGrid, $CellContext`from = -0.5; \
$CellContext`to = 0.5, $CellContext`from = 0; $CellContext`to = 
            1.]; $CellContext`f = 
          Which[$CellContext`forceTermSelection == 
            1, $CellContext`a, $CellContext`forceTermSelection == 
            2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
            3, ($CellContext`a/($CellContext`stdx Sqrt[2 Pi])) 
            Exp[-(($CellContext`x - $CellContext`x0)^2/(
               2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
            4, $CellContext`a 
            Cos[($CellContext`b Pi) $CellContext`x]]; $CellContext`eq = -
             Derivative[
              2][$CellContext`y][$CellContext`x] - $CellContext`k^2 \
$CellContext`y[$CellContext`x] == $CellContext`f; Which[
           
           And[$CellContext`westBCtype == 
            "Sommerfeld", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = {
            Derivative[1][$CellContext`y][$CellContext`from] - (
               I $CellContext`k) $CellContext`y[$CellContext`from] == 
             0, $CellContext`y[$CellContext`to] == \
$CellContext`eastBCconstantValue}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Sommerfeld"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, 
             Derivative[1][$CellContext`y][$CellContext`to] - (
               I $CellContext`k) $CellContext`y[$CellContext`to] == 0}, 
           
           And[$CellContext`westBCtype == 
            "Dirichlet", $CellContext`eastBCtype == 
            "Dirichlet"], $CellContext`boundaryConditions = \
{$CellContext`y[$CellContext`from] == $CellContext`westBCconstantValue, \
$CellContext`y[$CellContext`to] == $CellContext`eastBCconstantValue}]; \
$CellContext`sol = ReplaceAll[$CellContext`y, 
            First[
             Quiet[
              NDSolve[
               
               Flatten[{$CellContext`eq, $CellContext`boundaryConditions}], \
$CellContext`y, {$CellContext`x, $CellContext`from, $CellContext`to}, 
               MaxSteps -> Infinity]]]]; If[$CellContext`showGridLines, 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions], GridLines -> Automatic], 
            FrameStyle -> Directive[
              Thickness[0.005], Gray]], 
           Framed[
            Plot[
             Re[
              $CellContext`sol[$CellContext`x]], {$CellContext`x, \
$CellContext`from, $CellContext`to}, 
             Evaluate[$CellContext`plotOptions]], FrameStyle -> Directive[
              Thickness[0.005], Gray]]]], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, 
       Attributes[Subscript] = {NHoldRest}, $CellContext`forceTermUsedFormat1D[
         Pattern[$CellContext`forceTermSelection, 
          Blank[]], 
         Pattern[$CellContext`aa, 
          Blank[]], 
         Pattern[$CellContext`bb, 
          Blank[]], 
         Pattern[$CellContext`sstdx, 
          Blank[]], 
         Pattern[$CellContext`xx0, 
          Blank[]], 
         Pattern[$CellContext`nn0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`a = $CellContext`checkTerm[$CellContext`aa], \
$CellContext`b = $CellContext`checkTerm[$CellContext`bb], $CellContext`stdx = \
$CellContext`checkTerm[$CellContext`sstdx], $CellContext`x0 = \
$CellContext`checkTerm[$CellContext`xx0], $CellContext`n0 = \
$CellContext`checkTerm[$CellContext`nn0]}, 
         Which[$CellContext`forceTermSelection == 
          1, $CellContext`a, $CellContext`forceTermSelection == 
          2, $CellContext`a $CellContext`x^$CellContext`n0, \
$CellContext`forceTermSelection == 
          3, ($CellContext`a (1/($CellContext`stdx HoldForm[
              Sqrt[2 Pi]]))) 
          Exp[-(($CellContext`x - $CellContext`x0)^2/(
             2 $CellContext`stdx^2))], $CellContext`forceTermSelection == 
          4, $CellContext`a 
          Cos[$CellContext`b HoldForm[Pi $CellContext`x]]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5395516594617667`*^9, 3.5395516949832773`*^9}, {
  3.5398375060651755`*^9, 3.5398375146382637`*^9}, {3.5398382745967665`*^9, 
  3.5398382818356857`*^9}, {3.539838731841329*^9, 3.539838791831447*^9}, {
  3.540099783013501*^9, 3.5400997849027414`*^9}, {3.540099953803689*^9, 
  3.5401000092112246`*^9}},
 CellID->97385778]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "Details of the algorithm are described in [1]. This implementation converts \
the finite difference scheme to the standard ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "u"}], "=", "b"}], TraditionalForm]], "InlineMath"],
 " form and uses the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["LinearSolve", "MR"],
 " to obtain the solution. Sparse matrices are used. The matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath"],
 " and its eigenvalues and the numerical solution vector ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " can be viewed using the dropdown menu. The table below summarizes the \
boundary conditions, with ",
 Cell[BoxData[
  FormBox[Cell["\[Alpha]", "InlineMath"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath"],
 " the values at the left and right boundaries, ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]], "InlineMath"],
 " the length of the domain, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "0"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "N"], TraditionalForm]], "InlineMath"],
 " the solution at the left and right edge of the domain, respectively."
}], "DetailNotes",
 CellChangeTimes->{{3.5285606128337684`*^9, 3.528560613823394*^9}, {
   3.528672974705914*^9, 3.528672977151224*^9}, {3.528697660256581*^9, 
   3.528697660258081*^9}, {3.5372458706783404`*^9, 3.537245900134081*^9}, {
   3.5372485854080677`*^9, 3.5372486244380236`*^9}, {3.5372486600865507`*^9, 
   3.5372487035425687`*^9}, {3.537248772375809*^9, 3.53724882333428*^9}, 
   3.537249472937269*^9, {3.537413942855797*^9, 3.5374139872309313`*^9}, {
   3.5375192031132407`*^9, 3.537519203809329*^9}, {3.53862511093789*^9, 
   3.538625129340227*^9}, {3.5386255382821565`*^9, 3.5386256885702405`*^9}, {
   3.538641738339302*^9, 3.5386417952985353`*^9}, {3.5391436265850687`*^9, 
   3.5391437240329432`*^9}, {3.539202098852714*^9, 3.539202124219997*^9}, {
   3.539202156204236*^9, 3.539202248530676*^9}, {3.547561352167026*^9, 
   3.547561367187771*^9}, {3.547561416219275*^9, 3.5475614351584272`*^9}, {
   3.5475798677618313`*^9, 3.547579894110293*^9}},
 CellID->232398131],

Cell[TextData[Cell[BoxData[GridBox[{
   {"edge", "Dirichlet", "Sommerfeld"},
   {"west", Cell[TextData[{
     Cell[BoxData[
      FormBox[
       SubscriptBox["U", "0"], TraditionalForm]], "InlineMath"],
     " = \[Alpha]"
    }], "InlineMath"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{"\[Alpha]", "=", 
       RowBox[{
        SubscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"d", "\[InvisibleSpace]", "U"}], 
           RowBox[{"d", "\[InvisibleSpace]", "x"}]], ")"}], 
         RowBox[{"x", "=", "0"}]], "=", 
        RowBox[{"i", " ", "k", " ", 
         SubscriptBox["U", "0"]}]}]}], TraditionalForm]], "InlineMath"]], 
     "InlineMath"]},
   {"east", Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["U", "N"], "=", "\[Beta]"}], TraditionalForm]], 
     "InlineMath"]], "InlineMath"], Cell[TextData[{
     "\[Beta] = ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"d", "\[InvisibleSpace]", "U"}], 
           RowBox[{"d", "\[InvisibleSpace]", "x"}]], ")"}], 
         RowBox[{"x", "=", "L"}]], "=", 
        RowBox[{"i", " ", "k", " ", 
         SubscriptBox["U", "N"]}]}], TraditionalForm]], "InlineMath"]
    }], "InlineMath"]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]]]], "DetailNotes",
 CellChangeTimes->{{3.5386251627644715`*^9, 3.5386255066166353`*^9}, {
  3.538625729090386*^9, 3.5386257290948863`*^9}, {3.5392022600407133`*^9, 
  3.539202292075726*^9}},
 TextAlignment->Center,
 CellID->99152329],

Cell[TextData[{
 "The PDE ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["U", 
       RowBox[{"x", "\[InvisibleComma]", "x"}]]}], "-", 
     RowBox[{
      SuperscriptBox["k", "2"], "U"}]}], "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]], "InlineMath"],
 " is discretized using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"i", "-", "1"}]], "-", 
        RowBox[{"\[Omega]", " ", 
         SubscriptBox["U", "i"]}], "+", 
        SubscriptBox["U", 
         RowBox[{"i", "+", "1"}]]}], 
       SuperscriptBox["h", "2"]]}], "-", 
     RowBox[{
      SuperscriptBox["k", "2"], 
      SubscriptBox["U", "i"]}]}], "=", 
    SubscriptBox["f", "i"]}], TraditionalForm]], "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"cos", "(", 
       RowBox[{"k", " ", "h"}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k", " ", "h"}], ")"}], "2"]}]}], TraditionalForm]], 
  "InlineMath"],
 ". The points per wavelength (PPW) number is calculated using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Lambda]", "h"], "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], 
     RowBox[{"k", " ", "h"}]]}], TraditionalForm]], "InlineMath"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.538625743761749*^9, 3.538625951172587*^9}, {
  3.539143754266282*^9, 3.539143777898283*^9}, {3.539202306891673*^9, 
  3.539202341075142*^9}},
 CellID->282786142],

Cell["Reference", "DetailNotes",
 CellChangeTimes->{{3.547579907810671*^9, 3.5475799087495623`*^9}},
 CellID->2133992110],

Cell[TextData[{
 "[1] Y. S. Wong and G. Li, \"Exact Finite Difference Schemes for Solving \
Helmholtz Equations at Any Wavenumber,\" ",
 StyleBox["International Journal of Numerical Analysis and Modeling B",
  FontSlant->"Italic"],
 ", ",
 StyleBox["2",
  FontWeight->"Bold"],
 "(1), 2010 pp. 91\[Dash]108."
}], "DetailNotes",
 CellChangeTimes->{{3.528697670351863*^9, 3.5286976716395264`*^9}, {
   3.528698121511653*^9, 3.5286981228733253`*^9}, {3.5289799301067996`*^9, 
   3.5289799301083*^9}, {3.5300483635570464`*^9, 3.5300483635580463`*^9}, {
   3.537245656686667*^9, 3.537245691534592*^9}, 3.537245726288005*^9, {
   3.537245763824272*^9, 3.5372457947581997`*^9}, {3.537246095775424*^9, 
   3.537246119437929*^9}, {3.537320985836254*^9, 3.5373209980703077`*^9}, {
   3.538641892093827*^9, 3.53864191212237*^9}, {3.5392023445170107`*^9, 
   3.539202357240045*^9}, {3.547579922630414*^9, 3.5475799832440453`*^9}},
 CellID->239642231]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5392019282094917`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.540153535737166*^9, 3.540153608270999*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5392019244067497`*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.5401535309858*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.540153529985931*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["Helmholtz", "SearchTerms",
 CellChangeTimes->{{3.5372460748777704`*^9, 3.5372460753498306`*^9}, {
  3.5386427228818235`*^9, 3.5386427228843236`*^9}},
 CellID->761883869],

Cell["finite difference method", "SearchTerms",
 CellChangeTimes->{{3.538642730817831*^9, 3.5386427369861145`*^9}},
 CellID->402120]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Helmholtz Differential Equation",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/HelmholtzDifferentialEquation.html"], 
   None},
 ButtonNote->
  "http://mathworld.wolfram.com/HelmholtzDifferentialEquation.html"]], \
"RelatedLinks",
 CellChangeTimes->{{3.5372460021435347`*^9, 3.537246028764915*^9}, {
  3.540153520531001*^9, 3.540153524930091*^9}},
 CellID->140929062]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Nasser M. Abbasi",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%\
20Abbasi"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%20Abbasi"]
}], "Author",
 CellChangeTimes->{{3.5330089422493887`*^9, 3.533008945984602*^9}, {
  3.539567852767555*^9, 3.5395678527685556`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{859, 596},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[742257, 14649, 355, 9, 29, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[742615, 14660, 742, 17, 29, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[743360, 14679, 340, 11, 29, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[743703, 14692, 637, 15, 29, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[744343, 14709, 887, 22, 29, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[745233, 14733, 391, 10, 29, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[745627, 14745, 1505, 32, 29, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[747135, 14779, 908, 21, 29, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 749840, 14866},
 {"RotateAndZoomIn3D", 749951, 14869},
 {"DragLocators", 750063, 14872},
 {"CreateAndDeleteLocators", 750181, 14875},
 {"SliderZoom", 750297, 14878},
 {"GamepadControls", 750405, 14881},
 {"AutomaticAnimation", 750521, 14884},
 {"BookmarkAnimation", 750640, 14887}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 526, 11, 104, "DemoTitle"],
Cell[CellGroupData[{
Cell[1130, 37, 33, 0, 261, "InitializationSection"],
Cell[1166, 39, 81824, 2060, 4694, "Input",
 InitializationCell->True,
 CellID->645220723]
}, Open  ]],
Cell[CellGroupData[{
Cell[83027, 2104, 29, 0, 231, "ManipulateSection"],
Cell[CellGroupData[{
Cell[83081, 2108, 281024, 4391, 5328, "Input",
 CellID->172694284],
Cell[364108, 6501, 71663, 1541, 494, "Output",
 CellID->1954172264]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[435820, 8048, 36, 0, 171, "ManipulateCaptionSection"],
Cell[435859, 8050, 2254, 43, 97, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438150, 8098, 28, 0, 173, "ThumbnailSection"],
Cell[438181, 8100, 72569, 1555, 494, "Output",
 CellID->528674914]
}, Open  ]],
Cell[CellGroupData[{
Cell[510787, 9660, 28, 0, 143, "SnapshotsSection"],
Cell[510818, 9662, 71141, 1536, 494, "Output",
 CellID->558174611],
Cell[581962, 11200, 80462, 1688, 494, "Output",
 CellID->649159203],
Cell[662427, 12890, 73032, 1564, 494, "Output",
 CellID->97385778]
}, Open  ]],
Cell[CellGroupData[{
Cell[735496, 14459, 26, 0, 337, "DetailsSection"],
Cell[735525, 14461, 2308, 51, 82, "DetailNotes",
 CellID->232398131],
Cell[737836, 14514, 1660, 46, 88, "DetailNotes",
 CellID->99152329],
Cell[739499, 14562, 1617, 56, 55, "DetailNotes",
 CellID->282786142],
Cell[741119, 14620, 121, 2, 21, "DetailNotes",
 CellID->2133992110],
Cell[741243, 14624, 937, 18, 36, "DetailNotes",
 CellID->239642231]
}, Open  ]],
Cell[CellGroupData[{
Cell[742217, 14647, 37, 0, 127, "ControlSuggestionsSection"],
Cell[742257, 14649, 355, 9, 29, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[742615, 14660, 742, 17, 29, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[743360, 14679, 340, 11, 29, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[743703, 14692, 637, 15, 29, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[744343, 14709, 887, 22, 29, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[745233, 14733, 391, 10, 29, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[745627, 14745, 1505, 32, 29, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[747135, 14779, 908, 21, 29, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748080, 14805, 30, 0, 155, "SearchTermsSection"],
Cell[748113, 14807, 175, 3, 21, "SearchTerms",
 CellID->761883869],
Cell[748291, 14812, 132, 2, 21, "SearchTerms",
 CellID->402120]
}, Open  ]],
Cell[CellGroupData[{
Cell[748460, 14819, 31, 0, 141, "RelatedLinksSection"],
Cell[748494, 14821, 424, 10, 21, "RelatedLinks",
 CellID->140929062]
}, Open  ]],
Cell[CellGroupData[{
Cell[748955, 14836, 25, 0, 141, "AuthorSection"],
Cell[748983, 14838, 432, 11, 21, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
